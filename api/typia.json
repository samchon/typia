{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "typia",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1783,
			"name": "default",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 1815,
					"name": "AssertionGuard",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/AssertionGuard.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/AssertionGuard.ts#L39"
						}
					],
					"target": 234
				},
				{
					"id": 1821,
					"name": "CamelCase",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/CamelCase.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/CamelCase.ts#L16"
						}
					],
					"target": 386
				},
				{
					"id": 1802,
					"name": "functional",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L11"
						}
					],
					"target": 393
				},
				{
					"id": 1803,
					"name": "http",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 12,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L12"
						}
					],
					"target": 652
				},
				{
					"id": 1811,
					"name": "IJsDocTagInfo",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
							"line": 1,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L1"
						},
						{
							"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L5"
						}
					],
					"target": 191
				},
				{
					"id": 1812,
					"name": "IJsonApplication",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonApplication.ts",
							"line": 13,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L13"
						},
						{
							"fileName": "src/schemas/json/IJsonApplication.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L14"
						}
					],
					"target": 198
				},
				{
					"id": 1813,
					"name": "IJsonSchemaCollection",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L39"
						},
						{
							"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
							"line": 46,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L46"
						}
					],
					"target": 202
				},
				{
					"id": 1814,
					"name": "IJsonSchemaUnit",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
							"line": 56,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L56"
						},
						{
							"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
							"line": 63,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L63"
						}
					],
					"target": 218
				},
				{
					"id": 1816,
					"name": "IRandomGenerator",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 29,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L29"
						},
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 260,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L260"
						}
					],
					"target": 239
				},
				{
					"id": 1824,
					"name": "IReadableURLSearchParams",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IReadableURLSearchParams.ts",
							"line": 9,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IReadableURLSearchParams.ts#L9"
						}
					],
					"target": 392
				},
				{
					"id": 1817,
					"name": "IValidation",
					"variant": "reference",
					"kind": 4194304,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "src/IValidation.ts",
							"line": 1,
							"character": 9,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IValidation.ts#L1"
						}
					],
					"target": 1767
				},
				{
					"id": 1805,
					"name": "json",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L14"
						}
					],
					"target": 876
				},
				{
					"id": 1804,
					"name": "llm",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 13,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L13"
						}
					],
					"target": 832
				},
				{
					"id": 1806,
					"name": "misc",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 15,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L15"
						}
					],
					"target": 1011
				},
				{
					"id": 1807,
					"name": "notations",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L16"
						}
					],
					"target": 1154
				},
				{
					"id": 1822,
					"name": "PascalCase",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/PascalCase.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/PascalCase.ts#L16"
						}
					],
					"target": 388
				},
				{
					"id": 1819,
					"name": "Primitive",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/Primitive.ts",
							"line": 42,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/Primitive.ts#L42"
						}
					],
					"target": 382
				},
				{
					"id": 1808,
					"name": "protobuf",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L17"
						}
					],
					"target": 1362
				},
				{
					"id": 1809,
					"name": "reflect",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L18"
						}
					],
					"target": 1504
				},
				{
					"id": 1820,
					"name": "Resolved",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/Resolved.ts",
							"line": 34,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/Resolved.ts#L34"
						}
					],
					"target": 384
				},
				{
					"id": 1823,
					"name": "SnakeCase",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/SnakeCase.ts",
							"line": 15,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/SnakeCase.ts#L15"
						}
					],
					"target": 390
				},
				{
					"id": 1810,
					"name": "tags",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/module.ts",
							"line": 19,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L19"
						}
					],
					"target": 1514
				},
				{
					"id": 1818,
					"name": "TypeGuardError",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 31,
							"character": 13,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L31"
						},
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 130,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L130"
						}
					],
					"target": 352
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						1815,
						1821,
						1802,
						1803,
						1811,
						1812,
						1813,
						1814,
						1816,
						1824,
						1817,
						1805,
						1804,
						1806,
						1807,
						1822,
						1819,
						1808,
						1809,
						1820,
						1823,
						1810,
						1818
					]
				}
			],
			"sources": [
				{
					"fileName": "src/module.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/module.ts#L1"
				}
			]
		},
		{
			"id": 393,
			"name": "functional",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/functional.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/functional.ts#L1"
				}
			]
		},
		{
			"id": 652,
			"name": "http",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/http.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/http.ts#L1"
				}
			]
		},
		{
			"id": 194,
			"name": "IJsDocTagInfo",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 195,
					"name": "IText",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 197,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 196,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								197,
								196
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
							"line": 6,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L6"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L1"
				},
				{
					"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L5"
				}
			]
		},
		{
			"id": 199,
			"name": "IJsonApplication",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 200,
					"name": "IV3_0",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonApplication.ts",
							"line": 15,
							"character": 14,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L15"
						}
					],
					"type": {
						"type": "reference",
						"target": 206,
						"name": "IJsonSchemaCollection.IV3_0",
						"package": "typia"
					}
				},
				{
					"id": 201,
					"name": "IV3_1",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonApplication.ts",
							"line": 16,
							"character": 14,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 212,
						"name": "IJsonSchemaCollection.IV3_1",
						"package": "typia"
					}
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						200,
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonApplication.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L13"
				},
				{
					"fileName": "src/schemas/json/IJsonApplication.ts",
					"line": 14,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L14"
				}
			]
		},
		{
			"id": 205,
			"name": "IJsonSchemaCollection",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 206,
					"name": "IV3_0",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "JSON Schema collection formatted for OpenAPI v3.0 specification.\n\nThis interface represents a collection of JSON schemas that comply with\nOpenAPI v3.0 standards, which are compatible with Swagger tools and\nlegacy OpenAPI implementations. OpenAPI v3.0 has some limitations\ncompared to v3.1, particularly around tuple types and pattern properties.\n\nKey characteristics of v3.0:\n- Cannot express tuple types natively (falls back to array representations)\n- Cannot express pattern properties in object schemas\n- Uses nullable property instead of union with null type\n- Limited JSON Schema Draft compatibility (based on Draft 4)"
							}
						]
					},
					"children": [
						{
							"id": 210,
							"name": "__types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type metadata for compile-time type tracking.\n\nThis optional property stores the original TypeScript types that were\nused to generate the JSON schemas. It's primarily used for type safety\nand doesn't affect runtime behavior. The property is marked as optional\nand undefined to prevent it from appearing in serialized JSON output.\n\nThis enables:\n- Compile-time type checking against the original types\n- IDE intellisense and autocompletion\n- Type-safe schema validation and usage"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 117,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": 211,
								"name": "Types",
								"package": "typia",
								"qualifiedName": "IJsonSchemaCollection.IV3_0.Types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 209,
							"name": "components",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reusable schema components for OpenAPI v3.0.\n\nContains reusable schema definitions, security schemes, and other components\nthat can be referenced from the main schemas. This follows the OpenAPI v3.0\ncomponents structure and enables schema reuse and modularity.\n\nComponents include:\n- schemas: Named type definitions that can be referenced via $ref\n- securitySchemes: Authentication and authorization schemes\n- parameters: Reusable parameter definitions\n- requestBodies: Reusable request body definitions\n- responses: Reusable response definitions\n- headers: Reusable header definitions\n- examples: Reusable example definitions"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 102,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L102"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApiV3.d.ts",
									"qualifiedName": "OpenApiV3.IComponents"
								},
								"name": "IComponents",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApiV3.IComponents"
							}
						},
						{
							"id": 208,
							"name": "schemas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of generated JSON schemas.\n\nContains the actual JSON schema definitions generated from the input TypeScript types.\nEach schema in this array corresponds to one of the types specified in the "
									},
									{
										"kind": "code",
										"text": "`Types`"
									},
									{
										"kind": "text",
										"text": "\ntemplate parameter. The schemas follow OpenAPI v3.0 format and may contain\nreferences to components defined in the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "components",
										"target": 209
									},
									{
										"kind": "text",
										"text": " property.\n\nSchema references typically use the format: "
									},
									{
										"kind": "code",
										"text": "`{ \"$ref\": \"#/components/schemas/TypeName\" }`"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L84"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"packageName": "@samchon/openapi",
										"packagePath": "lib/OpenApiV3.d.ts",
										"qualifiedName": "OpenApiV3.IJsonSchema"
									},
									"name": "IJsonSchema",
									"package": "@samchon/openapi",
									"qualifiedName": "OpenApiV3.IJsonSchema"
								}
							}
						},
						{
							"id": 207,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "OpenAPI specification version identifier.\n\nAlways set to \"3.0\" to indicate this collection uses OpenAPI v3.0\nschema format and constraints."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 72,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L72"
								}
							],
							"type": {
								"type": "literal",
								"value": "3.0"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								210,
								209,
								208,
								207
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
							"line": 65,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L65"
						}
					],
					"typeParameters": [
						{
							"id": 211,
							"name": "Types",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of original TypeScript types used to generate the schemas.\n                This provides compile-time type information about what types\n                were analyzed during schema generation."
									}
								]
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					]
				},
				{
					"id": 212,
					"name": "IV3_1",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "JSON Schema collection formatted for OpenAPI v3.1 specification.\n\nThis interface represents a collection of JSON schemas that comply with\nOpenAPI v3.1 standards, which provide enhanced JSON Schema compatibility\nand support for modern JSON Schema features. OpenAPI v3.1 is based on\nJSON Schema Draft 2020-12 and offers significant improvements over v3.0.\n\nKey advantages of v3.1:\n- Full tuple type support with prefixItems\n- Pattern properties support for dynamic object keys\n- Proper null type handling via union types\n- Enhanced JSON Schema Draft 2020-12 compatibility\n- Better const, enum, and validation support"
							}
						]
					},
					"children": [
						{
							"id": 216,
							"name": "__types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type metadata for compile-time type tracking.\n\nThis optional property stores the original TypeScript types that were\nused to generate the JSON schemas. It provides compile-time type safety\nand enables better development experience without affecting runtime behavior.\n\nBenefits include:\n- Strong typing connection to original TypeScript definitions\n- Enhanced IDE support and autocompletion\n- Compile-time validation of schema usage\n- Type-safe integration with validation libraries"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 193,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L193"
								}
							],
							"type": {
								"type": "reference",
								"target": 217,
								"name": "Types",
								"package": "typia",
								"qualifiedName": "IJsonSchemaCollection.IV3_1.Types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 214,
							"name": "components",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reusable schema components for OpenAPI v3.1.\n\nContains reusable schema definitions and other components following the\nOpenAPI v3.1 specification. This structure is similar to v3.0 but supports\nenhanced JSON Schema features and improved type definitions.\n\nComponents include:\n- schemas: Named type definitions with enhanced JSON Schema support\n- securitySchemes: Authentication and authorization schemes\n\nThe emended OpenAPI v3.1 format used here removes ambiguous expressions\nand standardizes certain patterns for better tooling compatibility."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 162,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L162"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApi.d.ts",
									"qualifiedName": "OpenApi.IComponents"
								},
								"name": "IComponents",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApi.IComponents"
							}
						},
						{
							"id": 215,
							"name": "schemas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of generated JSON schemas with v3.1 enhancements.\n\nContains JSON schema definitions that take advantage of OpenAPI v3.1's\nenhanced capabilities. These schemas can express more complex TypeScript\ntypes accurately, including:\n- Tuple types using prefixItems\n- Union types with proper null handling\n- Complex nested object structures\n- Pattern-based property definitions\n\nEach schema corresponds to one of the input TypeScript types and may\nreference components defined in the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "components",
										"target": 214
									},
									{
										"kind": "text",
										"text": " property."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 178,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L178"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"packageName": "@samchon/openapi",
										"packagePath": "lib/OpenApi.d.ts",
										"qualifiedName": "OpenApi.IJsonSchema"
									},
									"name": "IJsonSchema",
									"package": "@samchon/openapi",
									"qualifiedName": "OpenApi.IJsonSchema"
								}
							}
						},
						{
							"id": 213,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "OpenAPI specification version identifier.\n\nAlways set to \"3.1\" to indicate this collection uses OpenAPI v3.1\nschema format with enhanced JSON Schema compatibility."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
									"line": 146,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L146"
								}
							],
							"type": {
								"type": "literal",
								"value": "3.1"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								216,
								214,
								215,
								213
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
							"line": 139,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L139"
						}
					],
					"typeParameters": [
						{
							"id": 217,
							"name": "Types",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of original TypeScript types used to generate the schemas.\n                This provides compile-time type information about what types\n                were analyzed during schema generation."
									}
								]
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						206,
						212
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L39"
				},
				{
					"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L46"
				}
			]
		},
		{
			"id": 221,
			"name": "IJsonSchemaUnit",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 222,
					"name": "IV3_0",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "JSON Schema unit formatted for OpenAPI v3.0 specification.\n\nThis interface represents a single JSON schema unit that complies with\nOpenAPI v3.0 standards. It contains one schema definition along with\nany reusable components that the schema references, formatted according\nto OpenAPI v3.0 constraints and limitations.\n\nOpenAPI v3.0 characteristics affecting this unit:\n- Schema follows OpenAPI v3.0 JSON Schema subset\n- Limited support for advanced JSON Schema features\n- Uses nullable property for optional null values\n- Cannot natively express tuple types or pattern properties\n- Based on JSON Schema Draft 4 with OpenAPI-specific extensions\n\nUse cases for v3.0:\n- Integration with legacy Swagger tooling\n- Compatibility with older OpenAPI implementations\n- Systems that specifically require OpenAPI v3.0 format\n- Code generation tools that expect v3.0 schemas"
							}
						]
					},
					"children": [
						{
							"id": 226,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type metadata for compile-time type safety.\n\nThis optional property maintains a reference to the original TypeScript\ntype that was used to generate this schema unit. It provides compile-time\ntype information without affecting the runtime JSON representation.\n\nBenefits of type metadata:\n- Enables type-safe schema validation and usage\n- Provides IDE intellisense and autocompletion\n- Allows compile-time checking of schema operations\n- Maintains traceability to original TypeScript definitions\n\nThe property is intentionally marked as optional and undefined to ensure\nit doesn't appear in serialized JSON output while preserving type information\nat compile time."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 154,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L154"
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "Type",
								"package": "typia",
								"qualifiedName": "IJsonSchemaUnit.IV3_0.Type",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 225,
							"name": "components",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reusable schema components for OpenAPI v3.0.\n\nContains all reusable schema definitions and components that may be\nreferenced by the main schema. This enables schema modularity and\nprevents duplication when the same types are used in multiple places\nwithin the schema definition.\n\nComponent categories include:\n- schemas: Named type definitions for complex objects, arrays, and unions\n- securitySchemes: Authentication and authorization definitions\n- parameters: Reusable parameter specifications\n- requestBodies: Reusable request body definitions\n- responses: Reusable response specifications\n- headers: Reusable header definitions\n- examples: Reusable example values\n\nAll components follow OpenAPI v3.0 format restrictions and capabilities."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 135,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L135"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApiV3.d.ts",
									"qualifiedName": "OpenApiV3.IComponents"
								},
								"name": "IComponents",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApiV3.IComponents"
							}
						},
						{
							"id": 224,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The primary JSON schema definition.\n\nContains the main JSON schema that represents the TypeScript type specified\nin the "
									},
									{
										"kind": "code",
										"text": "`Type`"
									},
									{
										"kind": "text",
										"text": " template parameter. This schema follows OpenAPI v3.0 format\nand may contain references to reusable components defined in the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "components",
										"target": 225
									},
									{
										"kind": "text",
										"text": " property.\n\nThe schema structure includes:\n- Type definitions following OpenAPI v3.0 constraints\n- Property definitions with v3.0-compatible validation rules\n- References to shared components using $ref syntax\n- Nullable properties for optional fields that can be null\n\nExample schema reference: "
									},
									{
										"kind": "code",
										"text": "`{ \"$ref\": \"#/components/schemas/NestedType\" }`"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 114,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L114"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApiV3.d.ts",
									"qualifiedName": "OpenApiV3.IJsonSchema"
								},
								"name": "IJsonSchema",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApiV3.IJsonSchema"
							}
						},
						{
							"id": 223,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "OpenAPI specification version identifier.\n\nAlways set to \"3.0\" to indicate this schema unit uses OpenAPI v3.0\nformat and adheres to its specific constraints and limitations."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 96,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L96"
								}
							],
							"type": {
								"type": "literal",
								"value": "3.0"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								226,
								225,
								224,
								223
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
							"line": 89,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L89"
						}
					],
					"typeParameters": [
						{
							"id": 227,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original TypeScript type represented by this schema unit.\n               Provides compile-time type information and enables type-safe\n               operations on the schema."
									}
								]
							}
						}
					]
				},
				{
					"id": 228,
					"name": "IV3_1",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "JSON Schema unit formatted for OpenAPI v3.1 specification.\n\nThis interface represents a single JSON schema unit that takes advantage\nof OpenAPI v3.1's enhanced capabilities and improved JSON Schema compatibility.\nIt provides a more feature-rich and accurate representation of TypeScript\ntypes compared to the v3.0 format.\n\nOpenAPI v3.1 advantages for this unit:\n- Full JSON Schema Draft 2020-12 compatibility\n- Native tuple type support using prefixItems\n- Proper null type handling via union types\n- Pattern properties for dynamic object keys\n- Enhanced const, enum, and validation capabilities\n- Better support for complex nested structures\n\nUse cases for v3.1:\n- Modern OpenAPI implementations and tooling\n- Systems requiring accurate TypeScript type representation\n- Applications needing advanced JSON Schema features\n- New projects without legacy compatibility requirements"
							}
						]
					},
					"children": [
						{
							"id": 232,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type metadata for enhanced compile-time type safety.\n\nThis optional property preserves the original TypeScript type information\nfor compile-time type checking and enhanced development experience. It\nenables type-safe operations and better IDE support without affecting\nthe runtime JSON schema representation.\n\nEnhanced type safety features:\n- Strong typing connection to original TypeScript definitions\n- Better IDE intellisense and error detection\n- Compile-time validation of schema usage patterns\n- Type-safe integration with validation and serialization libraries\n- Enhanced debugging and development experience\n\nThe property remains optional and undefined to maintain clean JSON\nserialization while preserving valuable compile-time information."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 248,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L248"
								}
							],
							"type": {
								"type": "reference",
								"target": 233,
								"name": "Type",
								"package": "typia",
								"qualifiedName": "IJsonSchemaUnit.IV3_1.Type",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 231,
							"name": "components",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reusable schema components for OpenAPI v3.1.\n\nContains reusable schema definitions and components that leverage\nOpenAPI v3.1's enhanced capabilities. These components provide better\ntype representation and more accurate schema definitions compared to v3.0.\n\nEnhanced component features:\n- schemas: More accurate type definitions with v3.1 JSON Schema features\n- securitySchemes: Enhanced authentication scheme definitions\n- Better support for complex nested references\n- Improved handling of recursive and circular type dependencies\n\nThe components structure follows the emended OpenAPI v3.1 specification\nthat simplifies certain patterns while maintaining full expressiveness."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 228,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L228"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApi.d.ts",
									"qualifiedName": "OpenApi.IComponents"
								},
								"name": "IComponents",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApi.IComponents"
							}
						},
						{
							"id": 230,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The primary JSON schema definition with v3.1 enhancements.\n\nContains the main JSON schema that accurately represents the TypeScript\ntype using OpenAPI v3.1's enhanced capabilities. This schema can express\ncomplex TypeScript constructs that were not possible or accurate in v3.0.\n\nEnhanced schema features include:\n- Tuple types using prefixItems for exact array structure\n- Union types with proper null handling via oneOf\n- Const values for literal types\n- Pattern properties for Record<string, T> types\n- Advanced validation constraints and metadata\n- Recursive type definitions with proper $ref handling\n\nThe schema follows the emended OpenAPI v3.1 format used by typia,\nwhich removes ambiguous expressions while maintaining full compatibility."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 210,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L210"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@samchon/openapi",
									"packagePath": "lib/OpenApi.d.ts",
									"qualifiedName": "OpenApi.IJsonSchema"
								},
								"name": "IJsonSchema",
								"package": "@samchon/openapi",
								"qualifiedName": "OpenApi.IJsonSchema"
							}
						},
						{
							"id": 229,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "OpenAPI specification version identifier.\n\nAlways set to \"3.1\" to indicate this schema unit uses OpenAPI v3.1\nformat with enhanced JSON Schema compatibility and modern features."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
									"line": 190,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L190"
								}
							],
							"type": {
								"type": "literal",
								"value": "3.1"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								232,
								231,
								230,
								229
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
							"line": 183,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L183"
						}
					],
					"typeParameters": [
						{
							"id": 233,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original TypeScript type represented by this schema unit.\n               Enables compile-time type safety and provides enhanced\n               development experience with better IDE support."
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						222,
						228
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L56"
				},
				{
					"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
					"line": 63,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L63"
				}
			]
		},
		{
			"id": 319,
			"name": "IRandomGenerator",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 320,
					"name": "CustomMap",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Map of custom generators for different data types.\n\nThis interface allows customization of random generation for specific\ntypes when they have certain schema properties or constraints."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst generator: Partial<IRandomGenerator> = {\n  string: (schema) => {\n    if ((schema as any)[\"x-typia-monetary\"] === \"dollar\") {\n      return \"$\" + Math.floor(Math.random() * 1000);\n    }\n    return \"default-string\";\n  },\n  number: (schema) => {\n    if ((schema as any)[\"x-typia-powerOf\"] !== undefined) {\n      const powerOf = (schema as any)[\"x-typia-powerOf\"];\n      return Math.pow(powerOf, Math.random() * 10 + 1);\n    }\n    return Math.random() * 100;\n  }\n};\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 341,
							"name": "array",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom array generator that can handle special array constraints\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 321,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L321"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 342,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 321,
											"character": 12,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L321"
										}
									],
									"signatures": [
										{
											"id": 343,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 321,
													"character": 12,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L321"
												}
											],
											"typeParameters": [
												{
													"id": 344,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 345,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "@samchon/openapi",
																			"packagePath": "lib/OpenApi.d.ts",
																			"qualifiedName": "OpenApi.IJsonSchema.IArray"
																		},
																		"name": "IArray",
																		"package": "@samchon/openapi",
																		"qualifiedName": "OpenApi.IJsonSchema.IArray"
																	},
																	{
																		"type": "literal",
																		"value": "items"
																	}
																],
																"name": "Omit",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 346,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 347,
																			"name": "element",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/IRandomGenerator.ts",
																					"line": 323,
																					"character": 8,
																					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L323"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 348,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/IRandomGenerator.ts",
																							"line": 323,
																							"character": 17,
																							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L323"
																						}
																					],
																					"signatures": [
																						{
																							"id": 349,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/IRandomGenerator.ts",
																									"line": 323,
																									"character": 17,
																									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L323"
																								}
																							],
																							"parameters": [
																								{
																									"id": 350,
																									"name": "index",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								},
																								{
																									"id": 351,
																									"name": "count",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": 344,
																								"name": "T",
																								"package": "typia",
																								"refersToTypeParameter": true
																							}
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				347
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/IRandomGenerator.ts",
																			"line": 322,
																			"character": 58,
																			"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L322"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 344,
													"name": "T",
													"package": "typia",
													"refersToTypeParameter": true
												}
											}
										}
									]
								}
							}
						},
						{
							"id": 333,
							"name": "bigint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom bigint generator that can handle special bigint constraints\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 309,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L309"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 334,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 309,
											"character": 13,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L309"
										}
									],
									"signatures": [
										{
											"id": 335,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 309,
													"character": 13,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L309"
												}
											],
											"parameters": [
												{
													"id": 336,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@samchon/openapi",
																	"packagePath": "lib/OpenApi.d.ts",
																	"qualifiedName": "OpenApi.IJsonSchema.IInteger"
																},
																"name": "IInteger",
																"package": "@samchon/openapi",
																"qualifiedName": "OpenApi.IJsonSchema.IInteger"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "bigint"
											}
										}
									]
								}
							}
						},
						{
							"id": 337,
							"name": "boolean",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom boolean generator that can handle special boolean constraints\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 315,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L315"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 338,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 315,
											"character": 14,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L315"
										}
									],
									"signatures": [
										{
											"id": 339,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 315,
													"character": 14,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L315"
												}
											],
											"parameters": [
												{
													"id": 340,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 329,
							"name": "integer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom integer generator that can handle special integer constraints\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 303,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L303"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 330,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 303,
											"character": 14,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L303"
										}
									],
									"signatures": [
										{
											"id": 331,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 303,
													"character": 14,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L303"
												}
											],
											"parameters": [
												{
													"id": 332,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@samchon/openapi",
																	"packagePath": "lib/OpenApi.d.ts",
																	"qualifiedName": "OpenApi.IJsonSchema.IInteger"
																},
																"name": "IInteger",
																"package": "@samchon/openapi",
																"qualifiedName": "OpenApi.IJsonSchema.IInteger"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						},
						{
							"id": 325,
							"name": "number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom number generator that can handle special number constraints\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 297,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L297"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 297,
											"character": 13,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L297"
										}
									],
									"signatures": [
										{
											"id": 327,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 297,
													"character": 13,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L297"
												}
											],
											"parameters": [
												{
													"id": 328,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@samchon/openapi",
																	"packagePath": "lib/OpenApi.d.ts",
																	"qualifiedName": "OpenApi.IJsonSchema.INumber"
																},
																"name": "INumber",
																"package": "@samchon/openapi",
																"qualifiedName": "OpenApi.IJsonSchema.INumber"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						},
						{
							"id": 321,
							"name": "string",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom string generator that can handle special string formats\nbased on schema properties."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 291,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L291"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 322,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/IRandomGenerator.ts",
											"line": 291,
											"character": 13,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L291"
										}
									],
									"signatures": [
										{
											"id": 323,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 291,
													"character": 13,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L291"
												}
											],
											"parameters": [
												{
													"id": 324,
													"name": "schema",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@samchon/openapi",
																	"packagePath": "lib/OpenApi.d.ts",
																	"qualifiedName": "OpenApi.IJsonSchema.IString"
																},
																"name": "IString",
																"package": "@samchon/openapi",
																"qualifiedName": "OpenApi.IJsonSchema.IString"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								341,
								333,
								337,
								329,
								325,
								321
							]
						}
					],
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 286,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L286"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						320
					]
				}
			],
			"sources": [
				{
					"fileName": "src/IRandomGenerator.ts",
					"line": 29,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L29"
				},
				{
					"fileName": "src/IRandomGenerator.ts",
					"line": 260,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L260"
				}
			]
		},
		{
			"id": 1769,
			"name": "IValidation",
			"variant": "declaration",
			"kind": 4,
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1778,
					"name": "IError",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Detailed information about a specific validation error\n\nEach error provides granular, actionable information about validation\nfailures, designed to be immediately useful for both human developers and\nAI systems. The error structure follows a consistent format that enables\nprecise identification and correction of type mismatches.\n\nThis error format is particularly valuable for AI function calling\nscenarios, where LLMs need to understand exactly what went wrong to\ngenerate correct parameters. The combination of path, expected type name,\nactual value, and optional human-readable description provides the AI with\ncomprehensive context to make accurate corrections, which is why\nILlmFunction.validate() can achieve such high success rates in validation\nfeedback loops.\n\nThe value field can contain any type of data, including "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " when\ndealing with missing required properties or null/undefined validation\nscenarios. This allows for precise error reporting in cases where the AI\nagent omits required fields or provides null/undefined values\ninappropriately.\n\nReal-world examples from AI function calling:\n\n    {\n      path: \"$input.member.age\",\n      expected: \"number\",\n      value: \"25\"  // AI provided string instead of number\n    }\n\n    {\n      path: \"$input.count\",\n      expected: \"number & Type<'uint32'>\",\n      value: 20.75  // AI provided float instead of uint32\n    }\n\n    {\n      path: \"$input.categories\",\n      expected: \"Array<string>\",\n      value: \"technology\"  // AI provided string instead of array\n    }\n\n    {\n      path: \"$input.id\",\n      expected: \"string & Format<'uuid'>\",\n      value: \"invalid-uuid-format\"  // AI provided malformed UUID\n    }\n\n    {\n      path: \"$input.user.name\",\n      expected: \"string\",\n      value: undefined  // AI omitted required property\n    }"
							}
						]
					},
					"children": [
						{
							"id": 1782,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional human-readable description of the validation error\n\nThis field is rarely populated in standard typia validation and is\nprimarily intended for specialized AI agent libraries or custom\nvalidation scenarios that require additional context beyond the technical\ntype information. Most validation errors rely solely on the path,\nexpected, and value fields for comprehensive error reporting."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 178,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1780,
							"name": "expected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The expected type name or type expression\n\nTechnical type specification that describes what type was expected at\nthis path. This follows TypeScript-like syntax with embedded constraint\ninformation, such as \"string\", \"number & Type<'uint32'>\",\n\"Array<string>\", \"string & Format<'uuid'> & MinLength<8>\", etc."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1779,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the property that failed validation\n\nDot-notation path using $input prefix indicating the exact location of\nthe validation failure within the input object structure. Examples\ninclude \"$input.member.age\", \"$input.categories[0]\",\n\"$input.user.profile.email\""
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 150,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1781,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actual value that caused the validation failure\n\nThis field contains the actual value that was provided but failed\nvalidation. Note that this value can be "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " in cases where a\nrequired property is missing or when validating against undefined\nvalues."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 168,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1782,
								1780,
								1779,
								1781
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
							"line": 141,
							"character": 14
						}
					]
				},
				{
					"id": 1774,
					"name": "IFailure",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface returned when type validation fails\n\nReturned when the input value does not conform to the expected type.\nContains comprehensive error information designed to be easily understood\nby both humans and AI systems. Each error in the errors array provides\nprecise details about validation failures, including the exact path to the\nproblematic property, what type was expected, and what value was actually\nprovided.\n\nThis detailed error structure is specifically optimized for AI function\ncalling validation feedback. When LLMs make type errors during function\ncalling, these granular error reports enable the AI to understand exactly\nwhat went wrong and how to fix it, improving success rates in subsequent\nattempts.\n\nExample error scenarios:\n\n- Type mismatch: expected \"string\" but got number 5\n- Format violation: expected \"string & Format<'uuid'>\" but got\n  \"invalid-format\"\n- Missing properties: expected \"required property 'name'\" but got undefined\n- Array type errors: expected \"Array<string>\" but got single string value\n\nThe errors are used by ILlmFunction.validate() to provide structured\nfeedback to AI agents, enabling them to correct their parameter generation\nand achieve improved function calling accuracy."
							}
						]
					},
					"children": [
						{
							"id": 1776,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original input data that failed validation"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 83,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1777,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of detailed validation errors"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 85,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1778,
									"name": "IError",
									"package": "@samchon/openapi",
									"qualifiedName": "IValidation.IError"
								}
							}
						},
						{
							"id": 1775,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates validation failure"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 81,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1776,
								1777,
								1775
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
							"line": 79,
							"character": 14
						}
					]
				},
				{
					"id": 1770,
					"name": "ISuccess",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface returned when type validation succeeds\n\nReturned when the input value perfectly conforms to the specified type T.\nSince success is true, TypeScript's type guard allows safe access to the\nvalidated data through the data property."
							}
						]
					},
					"children": [
						{
							"id": 1772,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The validated data of type T"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1773,
								"name": "T",
								"package": "@samchon/openapi",
								"qualifiedName": "IValidation.ISuccess.T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1771,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates validation success"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1772,
								1771
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
							"line": 45,
							"character": 14
						}
					],
					"typeParameters": [
						{
							"id": 1773,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The validated type"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						1778,
						1774,
						1770
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
					"line": 34,
					"character": 12
				},
				{
					"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
					"line": 35,
					"character": 25
				}
			]
		},
		{
			"id": 876,
			"name": "json",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/json.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/json.ts#L1"
				}
			]
		},
		{
			"id": 832,
			"name": "llm",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/llm.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/llm.ts#L1"
				}
			]
		},
		{
			"id": 1011,
			"name": "misc",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/misc.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/misc.ts#L1"
				}
			]
		},
		{
			"id": 1154,
			"name": "notations",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/notations.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/notations.ts#L1"
				}
			]
		},
		{
			"id": 1362,
			"name": "protobuf",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"sources": [
				{
					"fileName": "src/protobuf.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/protobuf.ts#L1"
				}
			]
		},
		{
			"id": 1504,
			"name": "reflect",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 1509,
					"name": "name",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/reflect.ts",
							"line": 46,
							"character": 16,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L46"
						},
						{
							"fileName": "src/reflect.ts",
							"line": 47,
							"character": 16,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L47"
						},
						{
							"fileName": "src/reflect.ts",
							"line": 48,
							"character": 16,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 1510,
							"name": "name",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/reflect.ts",
									"line": 46,
									"character": 16,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L46"
								}
							],
							"typeParameters": [
								{
									"id": 1511,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 1512,
									"name": "Regular",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"default": {
										"type": "literal",
										"value": false
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1513,
							"name": "name",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/reflect.ts",
									"line": 47,
									"character": 16,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						1509
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reflect.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/reflect.ts#L1"
				}
			]
		},
		{
			"id": 1514,
			"name": "tags",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 1606,
					"name": "Format",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1607,
							"name": "Value",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "src/tags/Format.ts",
									"line": 14,
									"character": 14,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L14"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "byte"
									},
									{
										"type": "literal",
										"value": "password"
									},
									{
										"type": "literal",
										"value": "regex"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "hostname"
									},
									{
										"type": "literal",
										"value": "idn-email"
									},
									{
										"type": "literal",
										"value": "idn-hostname"
									},
									{
										"type": "literal",
										"value": "iri"
									},
									{
										"type": "literal",
										"value": "iri-reference"
									},
									{
										"type": "literal",
										"value": "ipv4"
									},
									{
										"type": "literal",
										"value": "ipv6"
									},
									{
										"type": "literal",
										"value": "uri"
									},
									{
										"type": "literal",
										"value": "uri-reference"
									},
									{
										"type": "literal",
										"value": "uri-template"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "date-time"
									},
									{
										"type": "literal",
										"value": "date"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "duration"
									},
									{
										"type": "literal",
										"value": "json-pointer"
									},
									{
										"type": "literal",
										"value": "relative-json-pointer"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Type Aliases",
							"children": [
								1607
							]
						}
					],
					"sources": [
						{
							"fileName": "src/tags/Format.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L3"
						},
						{
							"fileName": "src/tags/Format.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L13"
						}
					]
				},
				{
					"id": 1722,
					"name": "TagBase",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1723,
							"name": "IProps",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1728,
									"name": "exclusive",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Exclusive option.\n\nIf this property configured as "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", same "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "kind",
												"target": 1725
											},
											{
												"kind": "text",
												"text": " tag cannot be\nduplicated in the target type. Otherwise, if you've configured this\nproperty as string array, all of the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "kind",
												"target": 1725
											},
											{
												"kind": "text",
												"text": " value assigned\ntags cannot be compatible in the target type."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 75,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L75"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1734,
												"name": "Exclusive",
												"package": "typia",
												"qualifiedName": "TagBase.IProps.Exclusive",
												"refersToTypeParameter": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 1725,
									"name": "kind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "What kind of tag is this?"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 45,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L45"
										}
									],
									"type": {
										"type": "reference",
										"target": 1731,
										"name": "Kind",
										"package": "typia",
										"qualifiedName": "TagBase.IProps.Kind",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1729,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional schema info assigned to the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "IJsonSchema"
											},
											{
												"kind": "text",
												"text": " object."
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 80,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L80"
										}
									],
									"type": {
										"type": "reference",
										"target": 1735,
										"name": "Schema",
										"package": "typia",
										"qualifiedName": "TagBase.IProps.Schema",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1724,
									"name": "target",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Target type.\n\nIf user tries to adapt this tag to a different type, it would be a compile\nerror.\n\nFor example, you've configured target type as "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": ", but user adapted it\nonto a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " type ("
											},
											{
												"kind": "code",
												"text": "`number & YourCustomTag<Value>`"
											},
											{
												"kind": "text",
												"text": "), then it would be\nblocked by TypeScript compiler."
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 40,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L40"
										}
									],
									"type": {
										"type": "reference",
										"target": 1730,
										"name": "Target",
										"package": "typia",
										"qualifiedName": "TagBase.IProps.Target",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1727,
									"name": "validate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validation script.\n\nThis script would be inserted into the generated validation function.\nIn here script, target variable name must be "
											},
											{
												"kind": "code",
												"text": "`$input`"
											},
											{
												"kind": "text",
												"text": ". The variable name\n"
											},
											{
												"kind": "code",
												"text": "`$input`"
											},
											{
												"kind": "text",
												"text": " would be transformed to the suitable when compilation.\n\nAlso, If you've take a mistake on this script, compile error would be\noccurred. So, define it with confidence. Compiler will block all your\nmistakes."
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 63,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L63"
										}
									],
									"type": {
										"type": "reference",
										"target": 1733,
										"name": "Validate",
										"package": "typia",
										"qualifiedName": "TagBase.IProps.Validate",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 1726,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be configured by user."
											}
										]
									},
									"sources": [
										{
											"fileName": "src/tags/TagBase.ts",
											"line": 50,
											"character": 4,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L50"
										}
									],
									"type": {
										"type": "reference",
										"target": 1732,
										"name": "Value",
										"package": "typia",
										"qualifiedName": "TagBase.IProps.Value",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1728,
										1725,
										1729,
										1724,
										1727,
										1726
									]
								}
							],
							"sources": [
								{
									"fileName": "src/tags/TagBase.ts",
									"line": 12,
									"character": 19,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L12"
								}
							],
							"typeParameters": [
								{
									"id": 1730,
									"name": "Target",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "number"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "object"
											}
										]
									}
								},
								{
									"id": 1731,
									"name": "Kind",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1732,
									"name": "Value",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "bigint"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 1733,
									"name": "Validate",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "mapped",
												"parameter": "key",
												"parameterType": {
													"type": "reference",
													"target": 1730,
													"name": "Target",
													"package": "typia",
													"qualifiedName": "TagBase.IProps.Target",
													"refersToTypeParameter": true
												},
												"templateType": {
													"type": "intrinsic",
													"name": "string"
												},
												"optionalModifier": "+"
											}
										]
									}
								},
								{
									"id": 1734,
									"name": "Exclusive",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 1735,
									"name": "Schema",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								1723
							]
						}
					],
					"sources": [
						{
							"fileName": "src/tags/TagBase.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L1"
						},
						{
							"fileName": "src/tags/TagBase.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L11"
						}
					]
				},
				{
					"id": 1515,
					"name": "Constant",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Constant.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1521,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 1522,
							"name": "Content",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1523,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1525,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/tags/Constant.ts",
													"line": 7,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L7"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1524,
											"name": "title",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/tags/Constant.ts",
													"line": 6,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1525,
												1524
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Constant.ts",
											"line": 5,
											"character": 18,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L5"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 1521,
								"name": "Value",
								"package": "typia",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 1718,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1516,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1518,
													"name": "kind",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/tags/Constant.ts",
															"line": 12,
															"character": 4,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L12"
														}
													],
													"type": {
														"type": "literal",
														"value": "constant"
													}
												},
												{
													"id": 1520,
													"name": "schema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/tags/Constant.ts",
															"line": 14,
															"character": 4,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L14"
														}
													],
													"type": {
														"type": "reference",
														"target": 1522,
														"name": "Content",
														"package": "typia",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1517,
													"name": "target",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/tags/Constant.ts",
															"line": 11,
															"character": 4,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L11"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "string"
															},
															{
																"type": "literal",
																"value": "boolean"
															},
															{
																"type": "literal",
																"value": "number"
															},
															{
																"type": "literal",
																"value": "bigint"
															}
														]
													}
												},
												{
													"id": 1519,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/tags/Constant.ts",
															"line": 13,
															"character": 4,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L13"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1518,
														1520,
														1517,
														1519
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tags/Constant.ts",
													"line": 10,
													"character": 10,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Constant.ts#L10"
												}
											]
										}
									}
								],
								"name": "TagBase",
								"package": "typia"
							}
						]
					}
				},
				{
					"id": 1526,
					"name": "ContentMediaType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/ContentMediaType.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1534,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1527,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1529,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ContentMediaType.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "contentMediaType"
											}
										},
										{
											"id": 1531,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ContentMediaType.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L7"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1532,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1533,
															"name": "contentMediaType",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/ContentMediaType.ts",
																	"line": 8,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L8"
																}
															],
															"type": {
																"type": "reference",
																"target": 1534,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1533
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/ContentMediaType.ts",
															"line": 7,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L7"
														}
													]
												}
											}
										},
										{
											"id": 1528,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ContentMediaType.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 1530,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ContentMediaType.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1529,
												1531,
												1528,
												1530
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/ContentMediaType.ts",
											"line": 3,
											"character": 61,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ContentMediaType.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1535,
					"name": "Default",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Default.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1546,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1536,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1540,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Default.ts",
													"line": 14,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L14"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1538,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Default.ts",
													"line": 12,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L12"
												}
											],
											"type": {
												"type": "literal",
												"value": "default"
											}
										},
										{
											"id": 1541,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Default.ts",
													"line": 15,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L15"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1546,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1542,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1543,
																"name": "default",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Default.ts",
																		"line": 16,
																		"character": 10,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L16"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/Default.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1546,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1543
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Default.ts",
																"line": 16,
																"character": 8,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L16"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1544,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1545,
																"name": "default",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Default.ts",
																		"line": 17,
																		"character": 10,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L17"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1546,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1545
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Default.ts",
																"line": 17,
																"character": 8,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L17"
															}
														]
													}
												}
											}
										},
										{
											"id": 1537,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Default.ts",
													"line": 5,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L5"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1546,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "boolean"
												},
												"trueType": {
													"type": "literal",
													"value": "boolean"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 1546,
														"name": "Value",
														"package": "typia",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "intrinsic",
														"name": "bigint"
													},
													"trueType": {
														"type": "literal",
														"value": "bigint"
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 1546,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "number"
														},
														"trueType": {
															"type": "literal",
															"value": "number"
														},
														"falseType": {
															"type": "literal",
															"value": "string"
														}
													}
												}
											}
										},
										{
											"id": 1539,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Default.ts",
													"line": 13,
													"character": 4,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L13"
												}
											],
											"type": {
												"type": "reference",
												"target": 1546,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1540,
												1538,
												1541,
												1537,
												1539
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Default.ts",
											"line": 4,
											"character": 10,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Default.ts#L4"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1547,
					"name": "Example",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Example.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1558,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1548,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1552,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Example.ts",
													"line": 16,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L16"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1550,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Example.ts",
													"line": 14,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L14"
												}
											],
											"type": {
												"type": "literal",
												"value": "example"
											}
										},
										{
											"id": 1553,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Example.ts",
													"line": 17,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L17"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1558,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1554,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1555,
																"name": "example",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Example.ts",
																		"line": 18,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L18"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/Example.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1558,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1555
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Example.ts",
																"line": 18,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L18"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1556,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1557,
																"name": "example",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Example.ts",
																		"line": 19,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L19"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1558,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1557
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Example.ts",
																"line": 19,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L19"
															}
														]
													}
												}
											}
										},
										{
											"id": 1549,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Example.ts",
													"line": 13,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L13"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "number"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "object"
													}
												]
											}
										},
										{
											"id": 1551,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Example.ts",
													"line": 15,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L15"
												}
											],
											"type": {
												"type": "reference",
												"target": 1558,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1552,
												1550,
												1553,
												1549,
												1551
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Example.ts",
											"line": 12,
											"character": 12,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Example.ts#L12"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1559,
					"name": "Examples",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Examples.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1568,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "bigint"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1560,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1564,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Examples.ts",
													"line": 12,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L12"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1562,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Examples.ts",
													"line": 10,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L10"
												}
											],
											"type": {
												"type": "literal",
												"value": "examples"
											}
										},
										{
											"id": 1565,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Examples.ts",
													"line": 13,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L13"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1566,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1567,
															"name": "examples",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/Examples.ts",
																	"line": 14,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L14"
																}
															],
															"type": {
																"type": "reference",
																"target": 1568,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1567
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/Examples.ts",
															"line": 13,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L13"
														}
													]
												}
											}
										},
										{
											"id": 1561,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Examples.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L9"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "number"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "object"
													}
												]
											}
										},
										{
											"id": 1563,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Examples.ts",
													"line": 11,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L11"
												}
											],
											"type": {
												"type": "reference",
												"target": 1568,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1564,
												1562,
												1565,
												1561,
												1563
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Examples.ts",
											"line": 8,
											"character": 12,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Examples.ts#L8"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1569,
					"name": "ExclusiveMaximum",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/ExclusiveMaximum.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1581,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1570,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1575,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "exclusiveMaximum"
													},
													{
														"type": "literal",
														"value": "maximum"
													}
												]
											}
										},
										{
											"id": 1572,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "exclusiveMaximum"
											}
										},
										{
											"id": 1576,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L9"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1581,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1577,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1578,
																"name": "exclusiveMaximum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/ExclusiveMaximum.ts",
																		"line": 11,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L11"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/ExclusiveMaximum.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1581,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1578
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/ExclusiveMaximum.ts",
																"line": 10,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L10"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1579,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1580,
																"name": "exclusiveMaximum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/ExclusiveMaximum.ts",
																		"line": 14,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L14"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1581,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1580
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/ExclusiveMaximum.ts",
																"line": 13,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L13"
															}
														]
													}
												}
											}
										},
										{
											"id": 1571,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L4"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1581,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "literal",
													"value": "bigint"
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1574,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$input < ",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/ExclusiveMaximum.ts",
																"qualifiedName": "Cast"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1581,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Cast",
															"package": "typia"
														},
														""
													]
												]
											}
										},
										{
											"id": 1573,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMaximum.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1581,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1575,
												1572,
												1576,
												1571,
												1574,
												1573
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/ExclusiveMaximum.ts",
											"line": 3,
											"character": 70,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMaximum.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1582,
					"name": "ExclusiveMinimum",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/ExclusiveMinimum.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1594,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1583,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1588,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "exclusiveMinimum"
													},
													{
														"type": "literal",
														"value": "minimum"
													}
												]
											}
										},
										{
											"id": 1585,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "exclusiveMinimum"
											}
										},
										{
											"id": 1589,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L9"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1594,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1590,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1591,
																"name": "exclusiveMinimum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/ExclusiveMinimum.ts",
																		"line": 11,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L11"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/ExclusiveMinimum.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1594,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1591
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/ExclusiveMinimum.ts",
																"line": 10,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L10"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1592,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1593,
																"name": "exclusiveMinimum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/ExclusiveMinimum.ts",
																		"line": 14,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L14"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1594,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1593
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/ExclusiveMinimum.ts",
																"line": 13,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L13"
															}
														]
													}
												}
											}
										},
										{
											"id": 1584,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L4"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1594,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "literal",
													"value": "bigint"
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1587,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/ExclusiveMinimum.ts",
																"qualifiedName": "Cast"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1594,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Cast",
															"package": "typia"
														},
														" < $input"
													]
												]
											}
										},
										{
											"id": 1586,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/ExclusiveMinimum.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1594,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1588,
												1585,
												1589,
												1584,
												1587,
												1586
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/ExclusiveMinimum.ts",
											"line": 3,
											"character": 70,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/ExclusiveMinimum.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1595,
					"name": "Format",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Format.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L3"
						},
						{
							"fileName": "src/tags/Format.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L13"
						}
					],
					"typeParameters": [
						{
							"id": 1605,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1607,
								"name": "Format.Value",
								"package": "typia"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1596,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1601,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "format"
													},
													{
														"type": "literal",
														"value": "pattern"
													}
												]
											}
										},
										{
											"id": 1598,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "format"
											}
										},
										{
											"id": 1602,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1603,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1604,
															"name": "format",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/Format.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1605,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1604
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/Format.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1597,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 1600,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$importInternal(\"isFormat",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/Format.ts",
																"qualifiedName": "PascalizeString"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1605,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "PascalizeString",
															"package": "typia"
														},
														"\")($input)"
													]
												]
											}
										},
										{
											"id": 1599,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Format.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1605,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1601,
												1598,
												1602,
												1597,
												1600,
												1599
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Format.ts",
											"line": 3,
											"character": 57,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Format.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1608,
					"name": "JsonSchemaPlugin",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/JsonSchemaPlugin.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1614,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1609,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1611,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/JsonSchemaPlugin.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "jsonPlugin"
											}
										},
										{
											"id": 1613,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/JsonSchemaPlugin.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L7"
												}
											],
											"type": {
												"type": "reference",
												"target": 1614,
												"name": "Schema",
												"package": "typia",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1610,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/JsonSchemaPlugin.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L4"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "number"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "object"
													}
												]
											}
										},
										{
											"id": 1612,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/JsonSchemaPlugin.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1611,
												1613,
												1610,
												1612
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/JsonSchemaPlugin.ts",
											"line": 3,
											"character": 62,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/JsonSchemaPlugin.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1615,
					"name": "Maximum",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Maximum.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1627,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1616,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1621,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "maximum"
													},
													{
														"type": "literal",
														"value": "exclusiveMaximum"
													}
												]
											}
										},
										{
											"id": 1618,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "maximum"
											}
										},
										{
											"id": 1622,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L9"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1627,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1623,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1624,
																"name": "maximum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Maximum.ts",
																		"line": 10,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L10"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/Maximum.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1627,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1624
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Maximum.ts",
																"line": 10,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L10"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1625,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1626,
																"name": "maximum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Maximum.ts",
																		"line": 11,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L11"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1627,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1626
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Maximum.ts",
																"line": 11,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L11"
															}
														]
													}
												}
											}
										},
										{
											"id": 1617,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L4"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1627,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "literal",
													"value": "bigint"
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1620,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$input <= ",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/Maximum.ts",
																"qualifiedName": "Cast"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1627,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Cast",
															"package": "typia"
														},
														""
													]
												]
											}
										},
										{
											"id": 1619,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Maximum.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1627,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1621,
												1618,
												1622,
												1617,
												1620,
												1619
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Maximum.ts",
											"line": 3,
											"character": 61,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Maximum.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1628,
					"name": "MaxItems",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/MaxItems.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1638,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1629,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1634,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L8"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1631,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "maxItems"
											}
										},
										{
											"id": 1635,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1636,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1637,
															"name": "maxItems",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/MaxItems.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1638,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1637
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/MaxItems.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1630,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "array"
											}
										},
										{
											"id": 1633,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$input.length <= ",
												"tail": [
													[
														{
															"type": "reference",
															"target": 1638,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														""
													]
												]
											}
										},
										{
											"id": 1632,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxItems.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1638,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1634,
												1631,
												1635,
												1630,
												1633,
												1632
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/MaxItems.ts",
											"line": 3,
											"character": 53,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxItems.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1639,
					"name": "MaxLength",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/MaxLength.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1649,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1640,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1645,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L8"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1642,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "maxLength"
											}
										},
										{
											"id": 1646,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1647,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1648,
															"name": "maxLength",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/MaxLength.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1649,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1648
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/MaxLength.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1641,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 1644,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$input.length <= ",
												"tail": [
													[
														{
															"type": "reference",
															"target": 1649,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														""
													]
												]
											}
										},
										{
											"id": 1643,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MaxLength.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1649,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1645,
												1642,
												1646,
												1641,
												1644,
												1643
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/MaxLength.ts",
											"line": 3,
											"character": 54,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MaxLength.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1650,
					"name": "Minimum",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Minimum.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1662,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1651,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1656,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "minimum"
													},
													{
														"type": "literal",
														"value": "exclusiveMinimum"
													}
												]
											}
										},
										{
											"id": 1653,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "minimum"
											}
										},
										{
											"id": 1657,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L9"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1662,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1658,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1659,
																"name": "minimum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Minimum.ts",
																		"line": 10,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L10"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/Minimum.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1662,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1659
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Minimum.ts",
																"line": 10,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L10"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1660,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1661,
																"name": "minimum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Minimum.ts",
																		"line": 11,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L11"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1662,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1661
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Minimum.ts",
																"line": 11,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L11"
															}
														]
													}
												}
											}
										},
										{
											"id": 1652,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L4"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1662,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "literal",
													"value": "bigint"
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1655,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/Minimum.ts",
																"qualifiedName": "Cast"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1662,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Cast",
															"package": "typia"
														},
														" <= $input"
													]
												]
											}
										},
										{
											"id": 1654,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Minimum.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1662,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1656,
												1653,
												1657,
												1652,
												1655,
												1654
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Minimum.ts",
											"line": 3,
											"character": 61,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Minimum.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1663,
					"name": "MinItems",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/MinItems.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1673,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1664,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1669,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L8"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1666,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "minItems"
											}
										},
										{
											"id": 1670,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1671,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1672,
															"name": "minItems",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/MinItems.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1673,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1672
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/MinItems.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1665,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "array"
											}
										},
										{
											"id": 1668,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "",
												"tail": [
													[
														{
															"type": "reference",
															"target": 1673,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														" <= $input.length"
													]
												]
											}
										},
										{
											"id": 1667,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinItems.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1673,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1669,
												1666,
												1670,
												1665,
												1668,
												1667
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/MinItems.ts",
											"line": 3,
											"character": 53,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinItems.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1674,
					"name": "MinLength",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/MinLength.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1684,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1675,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1680,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L8"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1677,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "minLength"
											}
										},
										{
											"id": 1681,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1682,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1683,
															"name": "minLength",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/MinLength.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1684,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1683
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/MinLength.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1676,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 1679,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "",
												"tail": [
													[
														{
															"type": "reference",
															"target": 1684,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														" <= $input.length"
													]
												]
											}
										},
										{
											"id": 1678,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MinLength.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1684,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1680,
												1677,
												1681,
												1676,
												1679,
												1678
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/MinLength.ts",
											"line": 3,
											"character": 54,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MinLength.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1685,
					"name": "MultipleOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/MultipleOf.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1697,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1686,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1691,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 10,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L10"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1688,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "multipleOf"
											}
										},
										{
											"id": 1692,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 11,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L11"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1697,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1693,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1694,
																"name": "multipleOf",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/MultipleOf.ts",
																		"line": 12,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L12"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": {
																		"packageName": "typia",
																		"packagePath": "src/tags/MultipleOf.ts",
																		"qualifiedName": "Numeric"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 1697,
																			"name": "Value",
																			"package": "typia",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Numeric",
																	"package": "typia"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1694
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/MultipleOf.ts",
																"line": 12,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L12"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1695,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1696,
																"name": "multipleOf",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/MultipleOf.ts",
																		"line": 13,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L13"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1697,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1696
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/MultipleOf.ts",
																"line": 13,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L13"
															}
														]
													}
												}
											}
										},
										{
											"id": 1687,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L4"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1697,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "bigint"
												},
												"trueType": {
													"type": "literal",
													"value": "bigint"
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1690,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "$input % ",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/MultipleOf.ts",
																"qualifiedName": "Cast"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1697,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Cast",
															"package": "typia"
														},
														" === "
													],
													[
														{
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 1697,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "bigint"
															},
															"trueType": {
																"type": "reference",
																"target": {
																	"packageName": "typia",
																	"packagePath": "src/tags/MultipleOf.ts",
																	"qualifiedName": "Cast"
																},
																"typeArguments": [
																	{
																		"type": "literal",
																		"value": {
																			"value": "0",
																			"negative": false
																		}
																	}
																],
																"name": "Cast",
																"package": "typia"
															},
															"falseType": {
																"type": "literal",
																"value": 0
															}
														},
														""
													]
												]
											}
										},
										{
											"id": 1689,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/MultipleOf.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1697,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1691,
												1688,
												1692,
												1687,
												1690,
												1689
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/MultipleOf.ts",
											"line": 3,
											"character": 64,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/MultipleOf.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1698,
					"name": "Pattern",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Pattern.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1708,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1699,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1704,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L8"
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "format"
													},
													{
														"type": "literal",
														"value": "pattern"
													}
												]
											}
										},
										{
											"id": 1701,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "pattern"
											}
										},
										{
											"id": 1705,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L9"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1706,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1707,
															"name": "pattern",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/Pattern.ts",
																	"line": 10,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": 1708,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1707
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/Pattern.ts",
															"line": 9,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L9"
														}
													]
												}
											}
										},
										{
											"id": 1700,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 1703,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L7"
												}
											],
											"type": {
												"type": "templateLiteral",
												"head": "RegExp(\"",
												"tail": [
													[
														{
															"type": "reference",
															"target": {
																"packageName": "typia",
																"packagePath": "src/tags/Pattern.ts",
																"qualifiedName": "Serialize"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 1708,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																}
															],
															"name": "Serialize",
															"package": "typia"
														},
														"\").test($input)"
													]
												]
											}
										},
										{
											"id": 1702,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Pattern.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1708,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1704,
												1701,
												1705,
												1700,
												1703,
												1702
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Pattern.ts",
											"line": 3,
											"character": 52,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Pattern.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1709,
					"name": "Sequence",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Sequence.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1717,
							"name": "N",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1710,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1712,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Sequence.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "sequence"
											}
										},
										{
											"id": 1714,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Sequence.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L7"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1715,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1716,
															"name": "x-protobuf-sequence",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/Sequence.ts",
																	"line": 8,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L8"
																}
															],
															"type": {
																"type": "reference",
																"target": 1717,
																"name": "N",
																"package": "typia",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1716
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/Sequence.ts",
															"line": 7,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L7"
														}
													]
												}
											}
										},
										{
											"id": 1711,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Sequence.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L4"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "number"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "object"
													}
												]
											}
										},
										{
											"id": 1713,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Sequence.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1717,
												"name": "N",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1712,
												1714,
												1711,
												1713
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Sequence.ts",
											"line": 3,
											"character": 49,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Sequence.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1718,
					"name": "TagBase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"children": [
						{
							"id": 1720,
							"name": "typia.tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This is a dummy property for compilation.\n\nIt does not mean anything in runtime."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/tags/TagBase.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L9"
								}
							],
							"type": {
								"type": "reference",
								"target": 1721,
								"name": "Props",
								"package": "typia",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1720
							]
						}
					],
					"sources": [
						{
							"fileName": "src/tags/TagBase.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L1"
						},
						{
							"fileName": "src/tags/TagBase.ts",
							"line": 11,
							"character": 17,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/TagBase.ts#L11"
						}
					],
					"typeParameters": [
						{
							"id": 1721,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1723,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "TagBase.IProps",
								"package": "typia"
							}
						}
					]
				},
				{
					"id": 1736,
					"name": "Type",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/Type.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1755,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "int32"
									},
									{
										"type": "literal",
										"value": "uint32"
									},
									{
										"type": "literal",
										"value": "int64"
									},
									{
										"type": "literal",
										"value": "uint64"
									},
									{
										"type": "literal",
										"value": "float"
									},
									{
										"type": "literal",
										"value": "double"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1737,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1748,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 26,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L26"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1739,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L7"
												}
											],
											"type": {
												"type": "literal",
												"value": "type"
											}
										},
										{
											"id": 1749,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 27,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L27"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1755,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "uint32"
														},
														{
															"type": "literal",
															"value": "uint64"
														}
													]
												},
												"trueType": {
													"type": "reflection",
													"declaration": {
														"id": 1750,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1752,
																"name": "minimum",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Type.ts",
																		"line": 30,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L30"
																	}
																],
																"type": {
																	"type": "literal",
																	"value": 0
																}
															},
															{
																"id": 1751,
																"name": "type",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Type.ts",
																		"line": 29,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L29"
																	}
																],
																"type": {
																	"type": "literal",
																	"value": "integer"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1752,
																	1751
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Type.ts",
																"line": 28,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L28"
															}
														]
													}
												},
												"falseType": {
													"type": "reflection",
													"declaration": {
														"id": 1753,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1754,
																"name": "type",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/tags/Type.ts",
																		"line": 33,
																		"character": 8,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L33"
																	}
																],
																"type": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": 1755,
																		"name": "Value",
																		"package": "typia",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "int32"
																			},
																			{
																				"type": "literal",
																				"value": "uint32"
																			},
																			{
																				"type": "literal",
																				"value": "int64"
																			},
																			{
																				"type": "literal",
																				"value": "uint64"
																			}
																		]
																	},
																	"trueType": {
																		"type": "literal",
																		"value": "integer"
																	},
																	"falseType": {
																		"type": "literal",
																		"value": "number"
																	}
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1754
																]
															}
														],
														"sources": [
															{
																"fileName": "src/tags/Type.ts",
																"line": 32,
																"character": 6,
																"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L32"
															}
														]
													}
												}
											}
										},
										{
											"id": 1738,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L6"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1755,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "int64"
														},
														{
															"type": "literal",
															"value": "uint64"
														}
													]
												},
												"trueType": {
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "bigint"
														},
														{
															"type": "literal",
															"value": "number"
														}
													]
												},
												"falseType": {
													"type": "literal",
													"value": "number"
												}
											}
										},
										{
											"id": 1741,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 9,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L9"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1755,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "literal",
													"value": "int32"
												},
												"trueType": {
													"type": "literal",
													"value": "$importInternal(\"isTypeInt32\")($input)"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 1755,
														"name": "Value",
														"package": "typia",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "literal",
														"value": "uint32"
													},
													"trueType": {
														"type": "literal",
														"value": "$importInternal(\"isTypeUint32\")($input)"
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 1755,
															"name": "Value",
															"package": "typia",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "literal",
															"value": "int64"
														},
														"trueType": {
															"type": "reflection",
															"declaration": {
																"id": 1742,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 1744,
																		"name": "bigint",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "src/tags/Type.ts",
																				"line": 16,
																				"character": 12,
																				"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L16"
																			}
																		],
																		"type": {
																			"type": "literal",
																			"value": "true"
																		}
																	},
																	{
																		"id": 1743,
																		"name": "number",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "src/tags/Type.ts",
																				"line": 15,
																				"character": 12,
																				"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L15"
																			}
																		],
																		"type": {
																			"type": "literal",
																			"value": "$importInternal(\"isTypeInt64\")($input)"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			1744,
																			1743
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "src/tags/Type.ts",
																		"line": 14,
																		"character": 10,
																		"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L14"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 1755,
																"name": "Value",
																"package": "typia",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "literal",
																"value": "uint64"
															},
															"trueType": {
																"type": "reflection",
																"declaration": {
																	"id": 1745,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 1747,
																			"name": "bigint",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/tags/Type.ts",
																					"line": 21,
																					"character": 14,
																					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L21"
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": "BigInt(0) <= $input"
																			}
																		},
																		{
																			"id": 1746,
																			"name": "number",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/tags/Type.ts",
																					"line": 20,
																					"character": 14,
																					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L20"
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": "$importInternal(\"isTypeUint64\")($input)"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				1747,
																				1746
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/tags/Type.ts",
																			"line": 19,
																			"character": 12,
																			"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L19"
																		}
																	]
																}
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 1755,
																	"name": "Value",
																	"package": "typia",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "literal",
																	"value": "float"
																},
																"trueType": {
																	"type": "literal",
																	"value": "$importInternal(\"isTypeFloat\")($input)"
																},
																"falseType": {
																	"type": "literal",
																	"value": "true"
																}
															}
														}
													}
												}
											}
										},
										{
											"id": 1740,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/Type.ts",
													"line": 8,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L8"
												}
											],
											"type": {
												"type": "reference",
												"target": 1755,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1748,
												1739,
												1749,
												1738,
												1741,
												1740
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/Type.ts",
											"line": 5,
											"character": 12,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/Type.ts#L5"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				},
				{
					"id": 1756,
					"name": "UniqueItems",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "src/tags/UniqueItems.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L3"
						}
					],
					"typeParameters": [
						{
							"id": 1766,
							"name": "Value",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"default": {
								"type": "literal",
								"value": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1718,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1757,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1762,
											"name": "exclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 10,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L10"
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 1759,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 5,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L5"
												}
											],
											"type": {
												"type": "literal",
												"value": "uniqueItems"
											}
										},
										{
											"id": 1763,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 11,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L11"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1764,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1765,
															"name": "uniqueItems",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tags/UniqueItems.ts",
																	"line": 12,
																	"character": 4,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L12"
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1765
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tags/UniqueItems.ts",
															"line": 11,
															"character": 10,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L11"
														}
													]
												}
											}
										},
										{
											"id": 1758,
											"name": "target",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 4,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L4"
												}
											],
											"type": {
												"type": "literal",
												"value": "array"
											}
										},
										{
											"id": 1761,
											"name": "validate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 7,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L7"
												}
											],
											"type": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1766,
													"name": "Value",
													"package": "typia",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "literal",
													"value": true
												},
												"trueType": {
													"type": "literal",
													"value": "$importInternal(\"isUniqueItems\")($input)"
												},
												"falseType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											}
										},
										{
											"id": 1760,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/tags/UniqueItems.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 1766,
												"name": "Value",
												"package": "typia",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1762,
												1759,
												1763,
												1758,
												1761,
												1760
											]
										}
									],
									"sources": [
										{
											"fileName": "src/tags/UniqueItems.ts",
											"line": 3,
											"character": 64,
											"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/UniqueItems.ts#L3"
										}
									]
								}
							}
						],
						"name": "TagBase",
						"package": "typia"
					}
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						1606,
						1722
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						1515,
						1526,
						1535,
						1547,
						1559,
						1569,
						1582,
						1595,
						1608,
						1615,
						1628,
						1639,
						1650,
						1663,
						1674,
						1685,
						1698,
						1709,
						1718,
						1736,
						1756
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tags/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/tags/index.ts#L1"
				}
			]
		},
		{
			"id": 375,
			"name": "TypeGuardError",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 376,
					"name": "IProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface for properties passed to the TypeGuardError constructor."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\nconst props: TypeGuardError.IProps = {\n  method: \"typia.assertEquals\",\n  path: \"input.sex\",\n  expected: \"undefined\",\n  value: 1,\n  message: \"Custom error message\" // optional\n};\n```"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 379,
							"name": "expected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "String representation of the expected type at the error location."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"string\", \"number & ExclusiveMinimum<19>\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 165,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L165"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 381,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom error message (optional).\n\nIf not provided, a default format message will be automatically generated."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 177,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L177"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 377,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the typia method that threw the error."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"typia.assert\", \"typia.assertEquals\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 151,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L151"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 378,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access path to the property where the assertion error occurred (optional)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"input.age\", \"input.profile.email\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 158,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L158"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 380,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actual value that failed assertion."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 170,
									"character": 4,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L170"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								379,
								381,
								377,
								378,
								380
							]
						}
					],
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 145,
							"character": 19,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L145"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						376
					]
				}
			],
			"sources": [
				{
					"fileName": "src/TypeGuardError.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L31"
				},
				{
					"fileName": "src/TypeGuardError.ts",
					"line": 130,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L130"
				}
			]
		},
		{
			"id": 352,
			"name": "TypeGuardError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom error class thrown when runtime assertion fails in "
					},
					{
						"kind": "code",
						"text": "`typia.assert<T>()`"
					},
					{
						"kind": "text",
						"text": " function.\n\nThis error is thrown by the "
					},
					{
						"kind": "code",
						"text": "`typia.assert<T>()`"
					},
					{
						"kind": "text",
						"text": " function when the input value\ndoesn't match the expected type.\n\nThe error provides detailed information about the first assertion failure encountered,\nincluding the access path where the error occurred, the expected type, and the actual value."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\ninterface IMember {\n  name: string;\n  age: number & ExclusiveMinimum<19>;\n}\n\ntry {\n  typia.assert<IMember>({ name: \"John\", age: 18 });\n} catch (error) {\n  if (error instanceof TypeGuardError) {\n    console.log(error.method);   // \"typia.assert\"\n    console.log(error.path);     // \"input.age\"\n    console.log(error.expected); // \"number & ExclusiveMinimum<19>\"\n    console.log(error.value);    // 18\n  }\n}\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 362,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 106,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L106"
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "TypeGuardError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new TypeGuardError instance."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nconst error = new TypeGuardError({\n  method: \"typia.assert\",\n  path: \"input.age\",\n  expected: \"number & ExclusiveMinimum<19>\",\n  value: 18\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/TypeGuardError.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L106"
								}
							],
							"typeParameters": [
								{
									"id": 364,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 365,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object containing the properties needed to create the error"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 376,
										"name": "IProps",
										"package": "typia",
										"qualifiedName": "TypeGuardError.IProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 352,
								"typeArguments": [
									{
										"type": "reference",
										"target": 364,
										"name": "T",
										"package": "typia",
										"qualifiedName": "TypeGuardError.T",
										"refersToTypeParameter": true
									}
								],
								"name": "TypeGuardError",
								"package": "typia"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 368,
					"name": "expected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String representation of the expected type at the error location.\n\nRepresents TypeScript types as strings, including detailed type information\nfor complex types."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n- `\"string\"` - Expected string type\n- `\"number & ExclusiveMinimum<19>\"` - Expected number greater than 19\n- `\"undefined\"` - Expected undefined (when superfluous property found in assertion)\n- `\"{ name: string; age: number }\"` - Expected object type\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 65,
							"character": 18,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 372,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1077,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 366,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the typia method that threw this error."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n\"typia.assert\"\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 37,
							"character": 18,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 371,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1076,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.name"
					}
				},
				{
					"id": 367,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The access path to the property where the assertion error occurred.\n\nUses dot notation to indicate the path for nested object properties.\nMay be "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if the error occurred at the root level."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n- `\"input.age\"` - Error in the age property of the object\n- `\"input.profile.email\"` - Error in the email property of a nested object\n- `\"input[0].name\"` - Error in the name property of the first array element\n- `undefined` - Error occurred at the root level\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 51,
							"character": 18,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L51"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 373,
					"name": "stack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1078,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stack"
					}
				},
				{
					"id": 369,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actual value that failed assertion.\n\nStores the actual value at the error path as-is.\nUseful for debugging by comparing the expected type with the actual value."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n- `18` - Numeric value\n- `\"invalid\"` - String value\n- `{ name: \"John\", age: 18, sex: 1 }` - Object value\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/TypeGuardError.ts",
							"line": 78,
							"character": 18,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 361,
					"name": "stackTraceLimit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`Error.stackTraceLimit`"
							},
							{
								"kind": "text",
								"text": " property specifies the number of stack frames\ncollected by a stack trace (whether generated by "
							},
							{
								"kind": "code",
								"text": "`new Error().stack`"
							},
							{
								"kind": "text",
								"text": " or\n"
							},
							{
								"kind": "code",
								"text": "`Error.captureStackTrace(obj)`"
							},
							{
								"kind": "text",
								"text": ").\n\nThe default value is "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " but may be set to any valid JavaScript number. Changes\nwill affect any stack trace captured _after_ the value has been changed.\n\nIf set to a non-number value, or set to a negative number, stack traces will\nnot capture any frames."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@18.19.121/node_modules/@types/node/globals.d.ts",
							"line": 148,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 353,
					"name": "captureStackTrace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@18.19.121/node_modules/@types/node/globals.d.ts",
							"line": 132,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "captureStackTrace",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`.stack`"
									},
									{
										"kind": "text",
										"text": " property on "
									},
									{
										"kind": "code",
										"text": "`targetObject`"
									},
									{
										"kind": "text",
										"text": ", which when accessed returns\na string representing the location in the code at which\n"
									},
									{
										"kind": "code",
										"text": "`Error.captureStackTrace()`"
									},
									{
										"kind": "text",
										"text": " was called.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst myObject = {};\nError.captureStackTrace(myObject);\nmyObject.stack;  // Similar to `new Error().stack`\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe first line of the trace will be prefixed with\n"
									},
									{
										"kind": "code",
										"text": "`${myObject.name}: ${myObject.message}`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`constructorOpt`"
									},
									{
										"kind": "text",
										"text": " argument accepts a function. If given, all frames\nabove "
									},
									{
										"kind": "code",
										"text": "`constructorOpt`"
									},
									{
										"kind": "text",
										"text": ", including "
									},
									{
										"kind": "code",
										"text": "`constructorOpt`"
									},
									{
										"kind": "text",
										"text": ", will be omitted from the\ngenerated stack trace.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`constructorOpt`"
									},
									{
										"kind": "text",
										"text": " argument is useful for hiding implementation\ndetails of error generation from the user. For instance:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nfunction a() {\n  b();\n}\n\nfunction b() {\n  c();\n}\n\nfunction c() {\n  // Create an error without stack trace to avoid calculating the stack trace twice.\n  const { stackTraceLimit } = Error;\n  Error.stackTraceLimit = 0;\n  const error = new Error();\n  Error.stackTraceLimit = stackTraceLimit;\n\n  // Capture the stack trace above function b\n  Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace\n  throw error;\n}\n\na();\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@18.19.121/node_modules/@types/node/globals.d.ts",
									"line": 132,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 355,
									"name": "targetObject",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 356,
									"name": "constructorOpt",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.captureStackTrace"
					}
				},
				{
					"id": 357,
					"name": "prepareStackTrace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@18.19.121/node_modules/@types/node/globals.d.ts",
							"line": 136,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 358,
							"name": "prepareStackTrace",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@18.19.121/node_modules/@types/node/globals.d.ts",
									"line": 136,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 359,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 360,
									"name": "stackTraces",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "@types/node",
												"packagePath": "globals.d.ts",
												"qualifiedName": "__global.NodeJS.CallSite"
											},
											"name": "CallSite",
											"package": "@types/node",
											"qualifiedName": "__global.NodeJS.CallSite"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.prepareStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.prepareStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						362
					]
				},
				{
					"title": "Properties",
					"children": [
						368,
						372,
						366,
						371,
						367,
						373,
						369,
						361
					]
				},
				{
					"title": "Methods",
					"children": [
						353,
						357
					]
				}
			],
			"sources": [
				{
					"fileName": "src/TypeGuardError.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L31"
				},
				{
					"fileName": "src/TypeGuardError.ts",
					"line": 130,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/TypeGuardError.ts#L130"
				}
			],
			"typeParameters": [
				{
					"id": 374,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The expected type (generic for type safety)"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typescript",
						"packagePath": "lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 191,
			"name": "IJsDocTagInfo",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 192,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
							"line": 2,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 193,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
							"line": 3,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L3"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 195,
							"name": "IText",
							"package": "typia",
							"qualifiedName": "IJsDocTagInfo.IText"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						192,
						193
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L1"
				},
				{
					"fileName": "src/schemas/metadata/IJsDocTagInfo.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/metadata/IJsDocTagInfo.ts#L5"
				}
			]
		},
		{
			"id": 239,
			"name": "IRandomGenerator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface for generating random values for various data types.\n\n"
					},
					{
						"kind": "code",
						"text": "`IRandomGenerator`"
					},
					{
						"kind": "text",
						"text": " defines the contract for generating random values\nthat can be used by typia for creating mock data, testing scenarios,\nand random value generation based on JSON schema constraints.\n\nThis interface supports generating random values for:\n- Basic types (boolean, number, integer, bigint, string, array)\n- String format patterns (email, URL, UUID, etc.)\n- Date and time formats\n- Various address and identifier formats"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\nconst generator: IRandomGenerator = {\n  boolean: () => Math.random() > 0.5,\n  number: (schema) => Math.random() * (schema.maximum ?? 100),\n  string: (schema) => \"example-string\",\n  email: () => \"test@example.com\",\n  // ... implement other methods\n};\n```"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 254,
					"name": "array",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 77,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "array",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random array with elements created by the provided generator function."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random array with generated elements"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L77"
								}
							],
							"typeParameters": [
								{
									"id": 256,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 257,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array schema with element generator function"
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "@samchon/openapi",
															"packagePath": "lib/OpenApi.d.ts",
															"qualifiedName": "OpenApi.IJsonSchema.IArray"
														},
														"name": "IArray",
														"package": "@samchon/openapi",
														"qualifiedName": "OpenApi.IJsonSchema.IArray"
													},
													{
														"type": "literal",
														"value": "items"
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 258,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 259,
															"name": "element",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/IRandomGenerator.ts",
																	"line": 79,
																	"character": 6,
																	"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L79"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 260,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/IRandomGenerator.ts",
																			"line": 79,
																			"character": 15,
																			"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L79"
																		}
																	],
																	"signatures": [
																		{
																			"id": 261,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/IRandomGenerator.ts",
																					"line": 79,
																					"character": 15,
																					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L79"
																				}
																			],
																			"parameters": [
																				{
																					"id": 262,
																					"name": "index",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 263,
																					"name": "count",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 256,
																				"name": "T",
																				"package": "typia",
																				"refersToTypeParameter": true
																			}
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																259
															]
														}
													],
													"sources": [
														{
															"fileName": "src/IRandomGenerator.ts",
															"line": 78,
															"character": 56,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L78"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 256,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							}
						}
					]
				},
				{
					"id": 248,
					"name": "bigint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "bigint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random bigint based on JSON schema constraints."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random bigint within the specified constraints"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L61"
								}
							],
							"parameters": [
								{
									"id": 250,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON schema with integer constraints (min, max, etc.)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@samchon/openapi",
											"packagePath": "lib/OpenApi.d.ts",
											"qualifiedName": "OpenApi.IJsonSchema.IInteger"
										},
										"name": "IInteger",
										"package": "@samchon/openapi",
										"qualifiedName": "OpenApi.IJsonSchema.IInteger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "boolean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "boolean",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random boolean value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random boolean value or undefined"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					]
				},
				{
					"id": 267,
					"name": "byte",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 102,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "byte",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random base64-encoded byte string."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random base64 string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 102,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L102"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "date",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 227,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L227"
						}
					],
					"signatures": [
						{
							"id": 306,
							"name": "date",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random date string in ISO 8601 format (YYYY-MM-DD)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random date string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 227,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L227"
								}
							],
							"parameters": [
								{
									"id": 307,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional constraints for minimum and maximum timestamp values"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 308,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 310,
													"name": "maximum",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/IRandomGenerator.ts",
															"line": 227,
															"character": 35,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L227"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 309,
													"name": "minimum",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/IRandomGenerator.ts",
															"line": 227,
															"character": 17,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L227"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														310,
														309
													]
												}
											],
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 227,
													"character": 15,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L227"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 299,
					"name": "datetime",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 219,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L219"
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "datetime",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random datetime string in ISO 8601 format."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random datetime string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 219,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L219"
								}
							],
							"parameters": [
								{
									"id": 301,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional constraints for minimum and maximum timestamp values"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 302,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 304,
													"name": "maximum",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/IRandomGenerator.ts",
															"line": 219,
															"character": 39,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L219"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 303,
													"name": "minimum",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/IRandomGenerator.ts",
															"line": 219,
															"character": 21,
															"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L219"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														304,
														303
													]
												}
											],
											"sources": [
												{
													"fileName": "src/IRandomGenerator.ts",
													"line": 219,
													"character": 19,
													"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L219"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 313,
					"name": "duration",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "duration",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random duration string in ISO 8601 format."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random duration string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 241,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L241"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "email",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 132,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L132"
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "email",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random email address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random email address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 132,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L132"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "hostname",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "hostname",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random hostname."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random hostname"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 139,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L139"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 279,
					"name": "idnEmail",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 146,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 280,
							"name": "idnEmail",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random internationalized email address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IDN email address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L146"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "idnHostname",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 153,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "idnHostname",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random internationalized hostname."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IDN hostname"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 153,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L153"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "integer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "integer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random integer based on JSON schema constraints."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random integer within the specified constraints"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 247,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON schema with integer constraints (min, max, etc.)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@samchon/openapi",
											"packagePath": "lib/OpenApi.d.ts",
											"qualifiedName": "OpenApi.IJsonSchema.IInteger"
										},
										"name": "IInteger",
										"package": "@samchon/openapi",
										"qualifiedName": "OpenApi.IJsonSchema.IInteger"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 287,
					"name": "ipv4",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 174,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L174"
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "ipv4",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random IPv4 address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IPv4 address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 174,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L174"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "ipv6",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "ipv6",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random IPv6 address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IPv6 address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 181,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L181"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 283,
					"name": "iri",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 160,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 284,
							"name": "iri",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random IRI (Internationalized Resource Identifier)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IRI"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 160,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L160"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 285,
					"name": "iriReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 167,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "iriReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random IRI reference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random IRI reference"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 167,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L167"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 315,
					"name": "jsonPointer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 250,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L250"
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "jsonPointer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random JSON pointer string."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random JSON pointer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 250,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L250"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "number",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "number",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random number based on JSON schema constraints."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random number within the specified constraints"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L45"
								}
							],
							"parameters": [
								{
									"id": 244,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON schema with number constraints (min, max, etc.)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@samchon/openapi",
											"packagePath": "lib/OpenApi.d.ts",
											"qualifiedName": "OpenApi.IJsonSchema.INumber"
										},
										"name": "INumber",
										"package": "@samchon/openapi",
										"qualifiedName": "OpenApi.IJsonSchema.INumber"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 269,
					"name": "password",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 109,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "password",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random password string."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random password"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L109"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "pattern",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "pattern",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random string matching the given regular expression pattern."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random string matching the pattern"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L89"
								}
							],
							"parameters": [
								{
									"id": 266,
									"name": "regex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Regular expression pattern to match"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 271,
					"name": "regex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 116,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L116"
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "regex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random regular expression pattern string."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random regex pattern"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L116"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 317,
					"name": "relativeJsonPointer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 257,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L257"
						}
					],
					"signatures": [
						{
							"id": 318,
							"name": "relativeJsonPointer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random relative JSON pointer string."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random relative JSON pointer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 257,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L257"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 251,
					"name": "string",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 252,
							"name": "string",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random string based on JSON schema constraints."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random string matching the specified constraints"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L69"
								}
							],
							"parameters": [
								{
									"id": 253,
									"name": "schema",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "JSON schema with string constraints (minLength, maxLength, pattern, etc.)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@samchon/openapi",
											"packagePath": "lib/OpenApi.d.ts",
											"qualifiedName": "OpenApi.IJsonSchema.IString"
										},
										"name": "IString",
										"package": "@samchon/openapi",
										"qualifiedName": "OpenApi.IJsonSchema.IString"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 311,
					"name": "time",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 234,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "time",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random time string in ISO 8601 format (HH:MM:SS)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random time string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L234"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 291,
					"name": "uri",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 188,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L188"
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "uri",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random URI (Uniform Resource Identifier)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random URI"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L188"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 293,
					"name": "uriReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 195,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L195"
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "uriReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random URI reference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random URI reference"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L195"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 295,
					"name": "uriTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 202,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L202"
						}
					],
					"signatures": [
						{
							"id": 296,
							"name": "uriTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random URI template."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random URI template"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 202,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L202"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "url",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 209,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "url",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random URL (Uniform Resource Locator)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random URL"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 209,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L209"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 273,
					"name": "uuid",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/IRandomGenerator.ts",
							"line": 123,
							"character": 2,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "uuid",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates a random UUID (Universally Unique Identifier)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Random UUID string in standard format"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/IRandomGenerator.ts",
									"line": 123,
									"character": 2,
									"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						254,
						248,
						240,
						267,
						305,
						299,
						313,
						275,
						277,
						279,
						281,
						245,
						287,
						289,
						283,
						285,
						315,
						242,
						269,
						264,
						271,
						317,
						251,
						311,
						291,
						293,
						295,
						297,
						273
					]
				}
			],
			"sources": [
				{
					"fileName": "src/IRandomGenerator.ts",
					"line": 29,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L29"
				},
				{
					"fileName": "src/IRandomGenerator.ts",
					"line": 260,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IRandomGenerator.ts#L260"
				}
			]
		},
		{
			"id": 234,
			"name": "AssertionGuard",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Type definition for assertion guard functions in "
					},
					{
						"kind": "code",
						"text": "`typia`"
					},
					{
						"kind": "text",
						"text": ".\n\nAn assertion guard is a function that asserts an input value's type at runtime\nand performs a TypeScript type assertion if validation passes. Unlike regular\nassertion functions that return the validated value, assertion guards return\nnothing but automatically cast the input parameter to the expected type "
					},
					{
						"kind": "code",
						"text": "`T`"
					},
					{
						"kind": "text",
						"text": ".\n\nThis type is used by "
					},
					{
						"kind": "code",
						"text": "`typia.createAssertGuard<T>()`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`typia.createAssertGuardEquals<T>()`"
					},
					{
						"kind": "text",
						"text": "\nto generate reusable assertion guard functions."
					}
				],
				"blockTags": [
					{
						"tag": "@throws",
						"content": [
							{
								"kind": "text",
								"text": "When the input value doesn't match the expected type T"
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\ninterface IMember {\n  name: string;\n  age: number;\n}\n\n// Create reusable assertion guard\nconst assertMember: AssertionGuard<IMember> = typia.createAssertGuard<IMember>();\n\n// Usage - input will be automatically cast to IMember if validation passes\nconst unknownData: unknown = { name: \"John\", age: 25 };\n\nassertMember(unknownData);\n// After this line, unknownData is automatically treated as IMember type\nconsole.log(unknownData.name); // TypeScript knows this is safe\n```"
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "https://github.com/samchon/typia#assertguard-functions",
								"target": "https://github.com/samchon/typia#assertguard-functions"
							},
							{
								"kind": "text",
								"text": " Typia assertion guards documentation"
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "TypeGuardError",
								"target": 375
							},
							{
								"kind": "text",
								"text": " Error thrown when assertion fails"
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/AssertionGuard.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/AssertionGuard.ts#L39"
				}
			],
			"typeParameters": [
				{
					"id": 238,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The expected type to validate and assert against"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 235,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "src/AssertionGuard.ts",
							"line": 39,
							"character": 32,
							"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/AssertionGuard.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void - Returns nothing, but asserts that input is type T"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 237,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to validate (type unknown)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "input",
								"asserts": true,
								"targetType": {
									"type": "reference",
									"target": 238,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							}
						}
					]
				}
			}
		},
		{
			"id": 386,
			"name": "CamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Camel case type.\n\n"
					},
					{
						"kind": "code",
						"text": "`CamelCase`"
					},
					{
						"kind": "text",
						"text": " type is a type that all keys of an object are camelized.\n\nIt also erases every method property like "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Resolved",
						"target": 384
					},
					{
						"kind": "text",
						"text": " type."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/CamelCase.ts",
					"line": 16,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/CamelCase.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 387,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target type to be camelized"
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/typings/Equal.ts",
						"qualifiedName": "Equal"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 387,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						},
						{
							"type": "reference",
							"target": {
								"packageName": "typia",
								"packagePath": "src/CamelCase.ts",
								"qualifiedName": "CamelizeMain"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 387,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelizeMain",
							"package": "typia"
						}
					],
					"name": "Equal",
					"package": "typia"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 387,
					"name": "T",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/CamelCase.ts",
						"qualifiedName": "CamelizeMain"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 387,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "CamelizeMain",
					"package": "typia"
				}
			}
		},
		{
			"id": 198,
			"name": "IJsonApplication",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of JSON schemas."
					}
				],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "Use "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "IJsonSchemaCollection",
								"target": 202
							},
							{
								"kind": "text",
								"text": " instead please.\n            This interface type would be changed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ILlmApplication"
							},
							{
								"kind": "text",
								"text": " like\n            structure in the future version (maybe next v8 major update)."
							}
						]
					},
					{
						"tag": "@template",
						"name": "Version",
						"content": [
							{
								"kind": "text",
								"text": "Version of the OpenAPI specification."
							}
						]
					},
					{
						"tag": "@template",
						"name": "Types",
						"content": [
							{
								"kind": "text",
								"text": "Original TypeScript types used in the JSON schemas."
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonApplication.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L13"
				},
				{
					"fileName": "src/schemas/json/IJsonApplication.ts",
					"line": 14,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonApplication.ts#L14"
				}
			],
			"type": {
				"type": "reference",
				"target": 202,
				"name": "IJsonSchemaCollection",
				"package": "typia"
			}
		},
		{
			"id": 202,
			"name": "IJsonSchemaCollection",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collection of JSON schemas with OpenAPI specification support.\n\n"
					},
					{
						"kind": "code",
						"text": "`IJsonSchemaCollection`"
					},
					{
						"kind": "text",
						"text": " represents a comprehensive collection of JSON schemas\nthat can be generated from TypeScript types using the "
					},
					{
						"kind": "code",
						"text": "`typia.json.schemas()`"
					},
					{
						"kind": "text",
						"text": " function.\nThis interface supports both OpenAPI v3.0 and v3.1 specifications, with the ability\nto automatically generate appropriate schema definitions based on the specified version.\n\nThe collection includes:\n- Generated JSON schemas array containing schema definitions for the specified types\n- Reusable components that can be referenced across different schemas\n- Version-specific formatting that adheres to either OpenAPI v3.0 or v3.1 standards\n\nKey differences between versions:\n- OpenAPI v3.0: Uses "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "OpenApiV3.IJsonSchema",
						"target": {
							"packageName": "@samchon/openapi",
							"packagePath": "lib/OpenApiV3.d.ts",
							"qualifiedName": "OpenApiV3.IJsonSchema"
						}
					},
					{
						"kind": "text",
						"text": " format with limited tuple support\n- OpenAPI v3.1: Uses "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "OpenApi.IJsonSchema",
						"target": {
							"packageName": "@samchon/openapi",
							"packagePath": "lib/OpenApi.d.ts",
							"qualifiedName": "OpenApi.IJsonSchema"
						}
					},
					{
						"kind": "text",
						"text": " format with full JSON Schema Draft 2020-12 compatibility"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\n// Generate schemas for OpenAPI v3.1 (default)\nconst schemas = typia.json.schemas<[User, Product]>();\n// Type: IJsonSchemaCollection<\"3.1\", [User, Product]>\n\n// Generate schemas for OpenAPI v3.0 (Swagger compatibility)\nconst swaggerSchemas = typia.json.schemas<[User, Product], \"3.0\">();\n// Type: IJsonSchemaCollection<\"3.0\", [User, Product]>\n```"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L39"
				},
				{
					"fileName": "src/schemas/json/IJsonSchemaCollection.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaCollection.ts#L46"
				}
			],
			"typeParameters": [
				{
					"id": 203,
					"name": "Version",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OpenAPI specification version to target (\"3.0\" or \"3.1\").\n                  Defaults to \"3.1\" for enhanced JSON Schema compatibility."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "3.0"
							},
							{
								"type": "literal",
								"value": "3.1"
							}
						]
					},
					"default": {
						"type": "literal",
						"value": "3.1"
					}
				},
				{
					"id": 204,
					"name": "Types",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of original TypeScript types that were analyzed to generate\n                  the JSON schemas. This provides type safety and traceability\n                  back to the source TypeScript definitions."
							}
						]
					},
					"default": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 203,
					"name": "Version",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": "3.0"
				},
				"trueType": {
					"type": "reference",
					"target": 206,
					"typeArguments": [
						{
							"type": "reference",
							"target": 204,
							"name": "Types",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "IJsonSchemaCollection.IV3_0",
					"package": "typia"
				},
				"falseType": {
					"type": "reference",
					"target": 212,
					"typeArguments": [
						{
							"type": "reference",
							"target": 204,
							"name": "Types",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "IJsonSchemaCollection.IV3_1",
					"package": "typia"
				}
			}
		},
		{
			"id": 218,
			"name": "IJsonSchemaUnit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Single unit of JSON schema representation.\n\n"
					},
					{
						"kind": "code",
						"text": "`IJsonSchemaUnit`"
					},
					{
						"kind": "text",
						"text": " represents a self-contained JSON schema unit that encapsulates\na single schema definition along with its associated reusable components. This is\ntypically used when generating a JSON schema for a single TypeScript type, as\nopposed to a collection of multiple types.\n\nUnlike "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "IJsonSchemaCollection",
						"target": 205
					},
					{
						"kind": "text",
						"text": " which handles multiple schemas, "
					},
					{
						"kind": "code",
						"text": "`IJsonSchemaUnit`"
					},
					{
						"kind": "text",
						"text": "\nfocuses on representing a single schema with its dependencies. This makes it ideal\nfor scenarios where you need to work with individual type definitions or when\nintegrating with systems that expect single schema documents.\n\nThe unit contains:\n- A single JSON schema definition for the specified TypeScript type\n- All necessary reusable components that the schema may reference\n- Version-specific formatting for either OpenAPI v3.0 or v3.1 compatibility\n- Optional type metadata for compile-time type safety\n\nKey differences from collection:\n- Contains only one schema instead of an array of schemas\n- More lightweight for single-type use cases\n- Simpler structure for direct schema consumption\n- Still maintains full component reference support"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```typescript\ninterface User {\n  id: string;\n  name: string;\n  email?: string;\n}\n\n// Generate a single schema unit for OpenAPI v3.1 (default)\nconst userSchema = typia.json.schema<User>();\n// Type: IJsonSchemaUnit<\"3.1\", User>\n\n// Generate a single schema unit for OpenAPI v3.0 (Swagger compatibility)\nconst swaggerUserSchema = typia.json.schema<User, \"3.0\">();\n// Type: IJsonSchemaUnit<\"3.0\", User>\n```"
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "IJsonSchemaCollection",
								"target": 205
							},
							{
								"kind": "text",
								"text": " For handling multiple schemas at once"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L56"
				},
				{
					"fileName": "src/schemas/json/IJsonSchemaUnit.ts",
					"line": 63,
					"character": 17,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/schemas/json/IJsonSchemaUnit.ts#L63"
				}
			],
			"typeParameters": [
				{
					"id": 219,
					"name": "Version",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OpenAPI specification version to target (\"3.0\" or \"3.1\").\n                  Defaults to \"3.1\" for enhanced JSON Schema Draft 2020-12 compatibility.\n                  This determines the schema format, validation capabilities, and\n                  available features like tuple support and null type handling."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "3.0"
							},
							{
								"type": "literal",
								"value": "3.1"
							}
						]
					},
					"default": {
						"type": "literal",
						"value": "3.1"
					}
				},
				{
					"id": 220,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original TypeScript type that was analyzed to generate this\n                  JSON schema unit. This provides compile-time type safety and\n                  enables IDEs to provide better intellisense and validation."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 219,
					"name": "Version",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": "3.0"
				},
				"trueType": {
					"type": "reference",
					"target": 222,
					"typeArguments": [
						{
							"type": "reference",
							"target": 220,
							"name": "Type",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "IJsonSchemaUnit.IV3_0",
					"package": "typia"
				},
				"falseType": {
					"type": "reference",
					"target": 228,
					"typeArguments": [
						{
							"type": "reference",
							"target": 220,
							"name": "Type",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "IJsonSchemaUnit.IV3_1",
					"package": "typia"
				}
			}
		},
		{
			"id": 392,
			"name": "IReadableURLSearchParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface for a readable URLSearchParams object.\n\nThis interface is a subset of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "URLSearchParams",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "URLSearchParams"
						}
					},
					{
						"kind": "text",
						"text": " interface,\ndesigned especially for the [Hono.JS](https://hono.dev/) library."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "https://github.com/miyaji255"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/IReadableURLSearchParams.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/IReadableURLSearchParams.ts#L9"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "URLSearchParams"
						},
						"name": "URLSearchParams",
						"package": "typescript"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "get"
							},
							{
								"type": "literal",
								"value": "getAll"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 1767,
			"name": "IValidation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {
				"isExternal": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Union type representing the result of type validation\n\nThis is the return type of "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "typia.validate"
					},
					{
						"kind": "text",
						"text": " functions, returning\n"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "IValidation.ISuccess",
						"target": 1770
					},
					{
						"kind": "text",
						"text": " on validation success and\n"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "IValidation.IFailure",
						"target": 1774
					},
					{
						"kind": "text",
						"text": " on validation failure. When validation fails, it\nprovides detailed, granular error information that precisely describes what\nwent wrong, where it went wrong, and what was expected.\n\nThis comprehensive error reporting makes "
					},
					{
						"kind": "code",
						"text": "`IValidation`"
					},
					{
						"kind": "text",
						"text": " particularly valuable\nfor AI function calling scenarios, where Large Language Models (LLMs) need\nspecific feedback to correct their parameter generation. The detailed error\ninformation is used by ILlmFunction.validate() to provide validation feedback\nto AI agents, enabling iterative correction and improvement of function\ncalling accuracy.\n\nThis type uses the Discriminated Union pattern, allowing type specification\nthrough the success property:\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nconst result = typia.validate<string>(input);\nif (result.success) {\n  // IValidation.ISuccess<string> type\n  console.log(result.data); // validated data accessible\n} else {\n  // IValidation.IFailure type\n  console.log(result.errors); // detailed error information accessible\n}\n```"
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
					"line": 34,
					"character": 12
				},
				{
					"fileName": "node_modules/.pnpm/@samchon+openapi@4.7.1/node_modules/@samchon/openapi/lib/structures/IValidation.d.ts",
					"line": 35,
					"character": 25
				}
			],
			"typeParameters": [
				{
					"id": 1768,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type to validate"
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1770,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1768,
								"name": "T",
								"package": "@samchon/openapi",
								"refersToTypeParameter": true
							}
						],
						"name": "IValidation.ISuccess",
						"package": "@samchon/openapi"
					},
					{
						"type": "reference",
						"target": 1774,
						"name": "IValidation.IFailure",
						"package": "@samchon/openapi"
					}
				]
			}
		},
		{
			"id": 388,
			"name": "PascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pascal case type.\n\n"
					},
					{
						"kind": "code",
						"text": "`PascalCase`"
					},
					{
						"kind": "text",
						"text": " type is a type that all keys of an object are pascalized.\n\nIt also erases every method property like "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Resolved",
						"target": 384
					},
					{
						"kind": "text",
						"text": " type."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/PascalCase.ts",
					"line": 16,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/PascalCase.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 389,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target type to be pascalized"
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/typings/Equal.ts",
						"qualifiedName": "Equal"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 389,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						},
						{
							"type": "reference",
							"target": {
								"packageName": "typia",
								"packagePath": "src/PascalCase.ts",
								"qualifiedName": "PascalizeMain"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 389,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							],
							"name": "PascalizeMain",
							"package": "typia"
						}
					],
					"name": "Equal",
					"package": "typia"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 389,
					"name": "T",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/PascalCase.ts",
						"qualifiedName": "PascalizeMain"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 389,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "PascalizeMain",
					"package": "typia"
				}
			}
		},
		{
			"id": 382,
			"name": "Primitive",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Primitive type of JSON.\n\n"
					},
					{
						"kind": "code",
						"text": "`Primitive<T>`"
					},
					{
						"kind": "text",
						"text": " is a TMP (Type Meta Programming) type which converts\nits argument as a primitive type within the framework JSON.\n\nIf the target argument is a built-in class which returns its origin primitive type\nthrough the "
					},
					{
						"kind": "code",
						"text": "`valueOf()`"
					},
					{
						"kind": "text",
						"text": " method like the "
					},
					{
						"kind": "code",
						"text": "`String`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`Number`"
					},
					{
						"kind": "text",
						"text": ", its return type will\nbe the "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`number`"
					},
					{
						"kind": "text",
						"text": ". Otherwise, if the built-in class does not have the\n"
					},
					{
						"kind": "code",
						"text": "`valueOf()`"
					},
					{
						"kind": "text",
						"text": " method, the return type will be an empty object ("
					},
					{
						"kind": "code",
						"text": "`{}`"
					},
					{
						"kind": "text",
						"text": ").\n\nOtherwise, if the target argument is a type of custom class, all of its custom methods\nwill be erased and its prototype will be changed to the primitive "
					},
					{
						"kind": "code",
						"text": "`object`"
					},
					{
						"kind": "text",
						"text": ".\nTherefore, the return type of the TMP type will finally be the primitive object.\n\nIn addition, if the target argument is a type of custom class and it has a special\nmethod "
					},
					{
						"kind": "code",
						"text": "`toJSON()`"
					},
					{
						"kind": "text",
						"text": ", the return type of this "
					},
					{
						"kind": "code",
						"text": "`Primitive`"
					},
					{
						"kind": "text",
						"text": " will be not "
					},
					{
						"kind": "code",
						"text": "`Primitive<Instance>`"
					},
					{
						"kind": "text",
						"text": "\nbut "
					},
					{
						"kind": "code",
						"text": "`Primitive<ReturnType<Instance.toJSON>>`"
					},
					{
						"kind": "text",
						"text": ".\n\nBefore                  | After\n------------------------|----------------------------------------\n"
					},
					{
						"kind": "code",
						"text": "`Boolean`"
					},
					{
						"kind": "text",
						"text": "               | "
					},
					{
						"kind": "code",
						"text": "`boolean`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`Number`"
					},
					{
						"kind": "text",
						"text": "                | "
					},
					{
						"kind": "code",
						"text": "`number`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`String`"
					},
					{
						"kind": "text",
						"text": "                | "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`Class`"
					},
					{
						"kind": "text",
						"text": "                 | "
					},
					{
						"kind": "code",
						"text": "`object`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`Class`"
					},
					{
						"kind": "text",
						"text": " with "
					},
					{
						"kind": "code",
						"text": "`toJSON()`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`Primitive<ReturnType<Class.toJSON>>`"
					},
					{
						"kind": "text",
						"text": "\nNative Class            | never\nOthers                  | No change"
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Kyungsu Kang - https://github.com/kakasoo"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Michael - https://github.com/8471919"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/Primitive.ts",
					"line": 42,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/Primitive.ts#L42"
				}
			],
			"typeParameters": [
				{
					"id": 383,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target argument type."
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/typings/Equal.ts",
						"qualifiedName": "Equal"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 383,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						},
						{
							"type": "reference",
							"target": {
								"packageName": "typia",
								"packagePath": "src/Primitive.ts",
								"qualifiedName": "PrimitiveMain"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 383,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							],
							"name": "PrimitiveMain",
							"package": "typia"
						}
					],
					"name": "Equal",
					"package": "typia"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 383,
					"name": "T",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/Primitive.ts",
						"qualifiedName": "PrimitiveMain"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 383,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "PrimitiveMain",
					"package": "typia"
				}
			}
		},
		{
			"id": 384,
			"name": "Resolved",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Resolved type that erases every method.\n\n"
					},
					{
						"kind": "code",
						"text": "`Resolved`"
					},
					{
						"kind": "text",
						"text": " is a TMP (Type Meta Programming) type which converts\nits argument as a resolved type that erases every method property.\n\nIf the target argument is a built-in class which returns its origin primitive type\nthrough the "
					},
					{
						"kind": "code",
						"text": "`valueOf()`"
					},
					{
						"kind": "text",
						"text": " method like the "
					},
					{
						"kind": "code",
						"text": "`String`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`Number`"
					},
					{
						"kind": "text",
						"text": ", its return type will\nbe the "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`number`"
					},
					{
						"kind": "text",
						"text": ". Otherwise, if the built-in class does not have the\n"
					},
					{
						"kind": "code",
						"text": "`valueOf()`"
					},
					{
						"kind": "text",
						"text": " method, the return type will be the same as the target argument.\n\nOtherwise, if the target argument is a type of custom class, all of its custom methods\nwill be erased and its prototype will be changed to the primitive "
					},
					{
						"kind": "code",
						"text": "`object`"
					},
					{
						"kind": "text",
						"text": ".\nTherefore, the return type of the TMP type will finally be the resolved object.\n\nBefore                  | After\n------------------------|----------------------------------------\n"
					},
					{
						"kind": "code",
						"text": "`Boolean`"
					},
					{
						"kind": "text",
						"text": "               | "
					},
					{
						"kind": "code",
						"text": "`boolean`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`Number`"
					},
					{
						"kind": "text",
						"text": "                | "
					},
					{
						"kind": "code",
						"text": "`number`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`BigInt`"
					},
					{
						"kind": "text",
						"text": "                | "
					},
					{
						"kind": "code",
						"text": "`bigint`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`String`"
					},
					{
						"kind": "text",
						"text": "                | "
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`Class`"
					},
					{
						"kind": "text",
						"text": "                 | "
					},
					{
						"kind": "code",
						"text": "`interface`"
					},
					{
						"kind": "text",
						"text": "\nNative Class or Others  | No change"
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Kyungsu Kang - https://github.com/kakasoo"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/Resolved.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/Resolved.ts#L34"
				}
			],
			"typeParameters": [
				{
					"id": 385,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target argument type."
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/typings/Equal.ts",
						"qualifiedName": "Equal"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 385,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						},
						{
							"type": "reference",
							"target": {
								"packageName": "typia",
								"packagePath": "src/Resolved.ts",
								"qualifiedName": "ResolvedMain"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 385,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							],
							"name": "ResolvedMain",
							"package": "typia"
						}
					],
					"name": "Equal",
					"package": "typia"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 385,
					"name": "T",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/Resolved.ts",
						"qualifiedName": "ResolvedMain"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 385,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "ResolvedMain",
					"package": "typia"
				}
			}
		},
		{
			"id": 390,
			"name": "SnakeCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Snake case type.\n\n"
					},
					{
						"kind": "code",
						"text": "`SnakeCase`"
					},
					{
						"kind": "text",
						"text": " type is a type that all keys of an object are converted to snake case.\n\nIt also erases every method property like "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Resolved",
						"target": 384
					},
					{
						"kind": "text",
						"text": " type."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Jeongho Nam - https://github.com/samchon"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "src/SnakeCase.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/samchon/typia/blob/cccb9cba634e630d9e73d792f622a6eefcaff010/src/SnakeCase.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 391,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target type to be snake cased"
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/typings/Equal.ts",
						"qualifiedName": "Equal"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 391,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						},
						{
							"type": "reference",
							"target": {
								"packageName": "typia",
								"packagePath": "src/SnakeCase.ts",
								"qualifiedName": "SnakageMain"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 391,
									"name": "T",
									"package": "typia",
									"refersToTypeParameter": true
								}
							],
							"name": "SnakageMain",
							"package": "typia"
						}
					],
					"name": "Equal",
					"package": "typia"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 391,
					"name": "T",
					"package": "typia",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "reference",
					"target": {
						"packageName": "typia",
						"packagePath": "src/SnakeCase.ts",
						"qualifiedName": "SnakageMain"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 391,
							"name": "T",
							"package": "typia",
							"refersToTypeParameter": true
						}
					],
					"name": "SnakageMain",
					"package": "typia"
				}
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				1783,
				393,
				652,
				194,
				199,
				205,
				221,
				319,
				1769,
				876,
				832,
				1011,
				1154,
				1362,
				1504,
				1514,
				375
			]
		},
		{
			"title": "Classes",
			"children": [
				352
			]
		},
		{
			"title": "Interfaces",
			"children": [
				191,
				239
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				234,
				386,
				198,
				202,
				218,
				392,
				1767,
				388,
				382,
				384,
				390
			]
		}
	],
	"packageName": "typia",
	"readme": [
		{
			"kind": "text",
			"text": "# Typia\n![Typia Logo](https://typia.io/logo.png)\n\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/samchon/typia/blob/master/LICENSE)\n[![NPM Version](https://img.shields.io/npm/v/typia.svg)](https://www.npmjs.com/package/typia)\n[![NPM Downloads](https://img.shields.io/npm/dm/typia.svg)](https://www.npmjs.com/package/typia)\n[![Build Status](https://github.com/samchon/typia/workflows/build/badge.svg)](https://github.com/samchon/typia/actions?query=workflow%3Abuild)\n[![Guide Documents](https://img.shields.io/badge/Guide-Documents-forestgreen)](https://typia.io/docs/)\n[![Gurubase](https://img.shields.io/badge/Gurubase-Document%20Chatbot-006BFF)](https://gurubase.io/g/typia)\n[![Discord Badge](https://img.shields.io/badge/discord-samchon-d91965?style=flat&labelColor=5866f2&logo=discord&logoColor=white&link=https://discord.gg/E94XhzrUCZ)](https://discord.gg/E94XhzrUCZ)\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\n// RUNTIME VALIDATORS\nexport function is<T>(input: unknown): input is T; // returns boolean\nexport function assert<T>(input: unknown): T; // throws TypeGuardError\nexport function assertGuard<T>(input: unknown): asserts input is T;\nexport function validate<T>(input: unknown): IValidation<T>; // detailed\n\n// JSON FUNCTIONS\nexport namespace json {\n  export function application<T>(): IJsonApplication; // JSON schema\n  export function assertParse<T>(input: string): T; // type safe parser\n  export function assertStringify<T>(input: T): string; // safe and faster\n}\n\n// AI FUNCTION CALLING SCHEMA\nexport namespace llm {\n  // collection of function calling schemas\n  export function application<Class, Model>(): ILlmApplication<Class>;\n  export function controller<Class, Model>(\n    name: string,\n    execute: Class,\n  ): ILlmController<Model>; // +executor\n  // structured output\n  export function parameters<P, Model>(): ILlmSchema.IParameters<Model>; \n  export function schema<T, Model>(): ILlmSchema<Model>; // type schema\n}\n\n// PROTOCOL BUFFER\nexport namespace protobuf {\n  export function message<T>(): string; // Protocol Buffer message\n  export function assertDecode<T>(buffer: Uint8Array): T; // safe decoder\n  export function assertEncode<T>(input: T): Uint8Array; // safe encoder\n}\n\n// RANDOM GENERATOR\nexport function random<T>(g?: Partial<IRandomGenerator>): T;\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": " is a transformer library supporting below features:\n\n  - Super-fast Runtime Validators\n  - Enhanced JSON schema and serde functions\n  - LLM function calling schema and structured output\n  - Protocol Buffer encoder and decoder\n  - Random data generator\n\n> [!NOTE]\n>\n> - **Only one line** required, with pure TypeScript type\n> - Runtime validator is **20,000x faster** than "
		},
		{
			"kind": "code",
			"text": "`class-validator`"
		},
		{
			"kind": "text",
			"text": "\n> - JSON serialization is **200x faster** than "
		},
		{
			"kind": "code",
			"text": "`class-transformer`"
		},
		{
			"kind": "text",
			"text": "\n\n\n\n\n## Transformation\nIf you call "
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": " function, it would be compiled like below.\n\nThis is the key concept of "
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": ", transforming TypeScript type to a runtime function. The "
		},
		{
			"kind": "code",
			"text": "`typia.is<T>()`"
		},
		{
			"kind": "text",
			"text": " function is transformed to a dedicated type checker by analyzing the target type "
		},
		{
			"kind": "code",
			"text": "`T`"
		},
		{
			"kind": "text",
			"text": " in the compilation level.\n\nThis feature enables developers to ensure type safety in their applications, leveraging TypeScript's static typing while also providing runtime validation. Instead of defining additional schemas, you can simply utilize the pure TypeScript type itself.\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\n//----\n// examples/checkString.ts\n//----\nimport typia, { tags } from \"typia\";\nexport const checkString = typia.createIs<string>();\n\n//----\n// examples/checkString.js\n//----\nimport typia from \"typia\";\nexport const checkString = (() => {\n  return (input) => \"string\" === typeof input;\n})();\n```"
		},
		{
			"kind": "text",
			"text": "\n\n\n\n## Sponsors\nThanks for your support.\n\nYour donation encourages "
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": " development.\n\nAlso, "
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": " is re-distributing half of donations to core contributors of "
		},
		{
			"kind": "code",
			"text": "`typia`"
		},
		{
			"kind": "text",
			"text": ".\n\n  - ["
		},
		{
			"kind": "code",
			"text": "`nonara/ts-patch`"
		},
		{
			"kind": "text",
			"text": "](https://github.com/nonara/ts-patch)\n  - ["
		},
		{
			"kind": "code",
			"text": "`ryoppippi/unplugin-typia`"
		},
		{
			"kind": "text",
			"text": "](https://github.com/ryoppippi/unplugin-typia)\n\n[![Sponsors](https://opencollective.com/typia/badge.svg?avatarHeight=75&width=600)](https://opencollective.com/typia)\n\n\n\n\n## Playground\nYou can experience how typia works by [playground website](https://typia.io/playground):\n\n  - 💻 https://typia.io/playground\n\n\n\n\n## Guide Documents\nCheck out the document in the [website](https://typia.io/docs/):\n\n### 🏠 Home\n  - [Introduction](https://typia.io/docs/)\n  - [Setup](https://typia.io/docs/setup/)\n  - [Pure TypeScript](https://typia.io/docs/pure/)\n  \n### 📖 Features\n  - Runtime Validators\n    - ["
		},
		{
			"kind": "code",
			"text": "`assert()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/validators/assert/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`is()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/validators/is/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`validate()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/validators/validate/)\n    - [Functional Module](https://typia.io/docs/validators/functional)\n    - [Special Tags](https://typia.io/docs/validators/tags/)\n  - Enhanced JSON\n    - [JSON Schema](https://typia.io/docs/json/schema/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`stringify()`"
		},
		{
			"kind": "text",
			"text": " functions](https://typia.io/docs/json/stringify/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`parse()`"
		},
		{
			"kind": "text",
			"text": " functions](https://typia.io/docs/json/parse/)\n  - LLM Function Calling\n    - ["
		},
		{
			"kind": "code",
			"text": "`application()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/llm/application/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`parameters()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/llm/parameters/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`schema()`"
		},
		{
			"kind": "text",
			"text": " function](https://typia.io/docs/llm/schema/)\n    - [AI Chatbot Development](https://typia.io/docs/llm/chat/)\n    - [Documentation Strategy](https://typia.io/docs/llm/strategy/)\n  - Protocol Buffer\n    - [Message Schema](https://typia.io/docs/protobuf/message)\n    - ["
		},
		{
			"kind": "code",
			"text": "`decode()`"
		},
		{
			"kind": "text",
			"text": " functions](https://typia.io/docs/protobuf/decode/)\n    - ["
		},
		{
			"kind": "code",
			"text": "`encode()`"
		},
		{
			"kind": "text",
			"text": " functions](https://typia.io/docs/protobuf/encode/)\n  - [Random Generator](https://typia.io/docs/random/)\n  - [Miscellaneous](https://typia.io/docs/misc/)\n\n### 🔗 Appendix\n  - [API Documents](https://typia.io/api)\n  - Utillization Cases\n    - [NestJS](https://typia.io/docs/utilization/nestjs/)\n    - [tRPC](https://typia.io/docs/utilization/trpc/)\n  - [⇲ Benchmark Result](https://github.com/samchon/typia/tree/master/benchmark/results/11th%20Gen%20Intel(R)%20Core(TM)%20i5-1135G7%20%40%202.40GHz)\n  - [⇲ "
		},
		{
			"kind": "code",
			"text": "`dev.to`"
		},
		{
			"kind": "text",
			"text": " Articles](https://dev.to/samchon/series/22474)"
		}
	],
	"symbolIdMap": {
		"0": {
			"packageName": "typia",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"191": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo"
		},
		"192": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo.name"
		},
		"193": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo.text"
		},
		"194": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo"
		},
		"195": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo.IText"
		},
		"196": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo.IText.text"
		},
		"197": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo.IText.kind"
		},
		"198": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonApplication.ts",
			"qualifiedName": "IJsonApplication"
		},
		"199": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonApplication.ts",
			"qualifiedName": "IJsonApplication"
		},
		"200": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonApplication.ts",
			"qualifiedName": "IJsonApplication.IV3_0"
		},
		"201": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonApplication.ts",
			"qualifiedName": "IJsonApplication.IV3_1"
		},
		"202": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection"
		},
		"203": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "Version"
		},
		"204": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "Types"
		},
		"205": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection"
		},
		"206": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0"
		},
		"207": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0.version"
		},
		"208": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0.schemas"
		},
		"209": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0.components"
		},
		"210": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0.__types"
		},
		"211": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_0.Types"
		},
		"212": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1"
		},
		"213": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1.version"
		},
		"214": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1.components"
		},
		"215": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1.schemas"
		},
		"216": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1.__types"
		},
		"217": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection.IV3_1.Types"
		},
		"218": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit"
		},
		"219": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "Version"
		},
		"220": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "Type"
		},
		"221": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit"
		},
		"222": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0"
		},
		"223": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0.version"
		},
		"224": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0.schema"
		},
		"225": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0.components"
		},
		"226": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0.__type"
		},
		"227": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_0.Type"
		},
		"228": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1"
		},
		"229": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1.version"
		},
		"230": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1.schema"
		},
		"231": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1.components"
		},
		"232": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1.__type"
		},
		"233": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit.IV3_1.Type"
		},
		"234": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "AssertionGuard"
		},
		"235": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "input"
		},
		"238": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "T"
		},
		"239": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator"
		},
		"240": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.boolean"
		},
		"241": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.boolean"
		},
		"242": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.number"
		},
		"243": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.number"
		},
		"244": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"245": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.integer"
		},
		"246": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.integer"
		},
		"247": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"248": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.bigint"
		},
		"249": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.bigint"
		},
		"250": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"251": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.string"
		},
		"252": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.string"
		},
		"253": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"254": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.array"
		},
		"255": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.array"
		},
		"256": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "T"
		},
		"257": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"258": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"259": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.element"
		},
		"260": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"261": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "index"
		},
		"263": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "count"
		},
		"264": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.pattern"
		},
		"265": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.pattern"
		},
		"266": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "regex"
		},
		"267": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.byte"
		},
		"268": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.byte"
		},
		"269": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.password"
		},
		"270": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.password"
		},
		"271": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.regex"
		},
		"272": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.regex"
		},
		"273": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uuid"
		},
		"274": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uuid"
		},
		"275": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.email"
		},
		"276": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.email"
		},
		"277": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.hostname"
		},
		"278": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.hostname"
		},
		"279": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.idnEmail"
		},
		"280": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.idnEmail"
		},
		"281": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.idnHostname"
		},
		"282": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.idnHostname"
		},
		"283": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.iri"
		},
		"284": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.iri"
		},
		"285": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.iriReference"
		},
		"286": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.iriReference"
		},
		"287": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.ipv4"
		},
		"288": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.ipv4"
		},
		"289": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.ipv6"
		},
		"290": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.ipv6"
		},
		"291": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uri"
		},
		"292": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uri"
		},
		"293": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uriReference"
		},
		"294": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uriReference"
		},
		"295": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uriTemplate"
		},
		"296": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.uriTemplate"
		},
		"297": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.url"
		},
		"298": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.url"
		},
		"299": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.datetime"
		},
		"300": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.datetime"
		},
		"301": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "props"
		},
		"302": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.minimum"
		},
		"304": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.maximum"
		},
		"305": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.date"
		},
		"306": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.date"
		},
		"307": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "props"
		},
		"308": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"309": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.minimum"
		},
		"310": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.maximum"
		},
		"311": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.time"
		},
		"312": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.time"
		},
		"313": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.duration"
		},
		"314": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.duration"
		},
		"315": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.jsonPointer"
		},
		"316": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.jsonPointer"
		},
		"317": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.relativeJsonPointer"
		},
		"318": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.relativeJsonPointer"
		},
		"319": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator"
		},
		"320": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap"
		},
		"321": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.string"
		},
		"322": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"323": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"324": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"325": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.number"
		},
		"326": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"329": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.integer"
		},
		"330": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"332": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"333": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.bigint"
		},
		"334": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"335": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"337": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.boolean"
		},
		"338": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"339": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"340": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"341": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator.CustomMap.array"
		},
		"342": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"343": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"344": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "T"
		},
		"345": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "schema"
		},
		"346": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"347": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type.element"
		},
		"348": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "__type"
		},
		"350": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "index"
		},
		"351": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "count"
		},
		"352": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError"
		},
		"353": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"354": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"355": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "targetObject"
		},
		"356": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "constructorOpt"
		},
		"357": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
		},
		"358": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
		},
		"359": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "err"
		},
		"360": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "stackTraces"
		},
		"361": {
			"packageName": "@types/node",
			"packagePath": "globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
		},
		"362": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.__constructor"
		},
		"363": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError"
		},
		"364": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.T"
		},
		"365": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "props"
		},
		"366": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.method"
		},
		"367": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.path"
		},
		"368": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.expected"
		},
		"369": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.value"
		},
		"371": {
			"packageName": "typescript",
			"packagePath": "lib/lib.es5.d.ts",
			"qualifiedName": "Error.name"
		},
		"372": {
			"packageName": "typescript",
			"packagePath": "lib/lib.es5.d.ts",
			"qualifiedName": "Error.message"
		},
		"373": {
			"packageName": "typescript",
			"packagePath": "lib/lib.es5.d.ts",
			"qualifiedName": "Error.stack"
		},
		"374": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.T"
		},
		"375": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError"
		},
		"376": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps"
		},
		"377": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps.method"
		},
		"378": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps.path"
		},
		"379": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps.expected"
		},
		"380": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps.value"
		},
		"381": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError.IProps.message"
		},
		"382": {
			"packageName": "typia",
			"packagePath": "src/Primitive.ts",
			"qualifiedName": "Primitive"
		},
		"383": {
			"packageName": "typia",
			"packagePath": "src/Primitive.ts",
			"qualifiedName": "T"
		},
		"384": {
			"packageName": "typia",
			"packagePath": "src/Resolved.ts",
			"qualifiedName": "Resolved"
		},
		"385": {
			"packageName": "typia",
			"packagePath": "src/Resolved.ts",
			"qualifiedName": "T"
		},
		"386": {
			"packageName": "typia",
			"packagePath": "src/CamelCase.ts",
			"qualifiedName": "CamelCase"
		},
		"387": {
			"packageName": "typia",
			"packagePath": "src/CamelCase.ts",
			"qualifiedName": "T"
		},
		"388": {
			"packageName": "typia",
			"packagePath": "src/PascalCase.ts",
			"qualifiedName": "PascalCase"
		},
		"389": {
			"packageName": "typia",
			"packagePath": "src/PascalCase.ts",
			"qualifiedName": "T"
		},
		"390": {
			"packageName": "typia",
			"packagePath": "src/SnakeCase.ts",
			"qualifiedName": "SnakeCase"
		},
		"391": {
			"packageName": "typia",
			"packagePath": "src/SnakeCase.ts",
			"qualifiedName": "T"
		},
		"392": {
			"packageName": "typia",
			"packagePath": "src/IReadableURLSearchParams.ts",
			"qualifiedName": "IReadableURLSearchParams"
		},
		"393": {
			"packageName": "typia",
			"packagePath": "src/functional.ts",
			"qualifiedName": ""
		},
		"652": {
			"packageName": "typia",
			"packagePath": "src/http.ts",
			"qualifiedName": ""
		},
		"832": {
			"packageName": "typia",
			"packagePath": "src/llm.ts",
			"qualifiedName": ""
		},
		"876": {
			"packageName": "typia",
			"packagePath": "src/json.ts",
			"qualifiedName": ""
		},
		"1011": {
			"packageName": "typia",
			"packagePath": "src/misc.ts",
			"qualifiedName": ""
		},
		"1154": {
			"packageName": "typia",
			"packagePath": "src/notations.ts",
			"qualifiedName": ""
		},
		"1362": {
			"packageName": "typia",
			"packagePath": "src/protobuf.ts",
			"qualifiedName": ""
		},
		"1504": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": ""
		},
		"1509": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": "name"
		},
		"1510": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": "name"
		},
		"1511": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": "T"
		},
		"1512": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": "Regular"
		},
		"1513": {
			"packageName": "typia",
			"packagePath": "src/reflect.ts",
			"qualifiedName": "name"
		},
		"1514": {
			"packageName": "typia",
			"packagePath": "src/tags/index.ts",
			"qualifiedName": ""
		},
		"1515": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "Constant"
		},
		"1516": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type"
		},
		"1517": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.target"
		},
		"1518": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.kind"
		},
		"1519": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.value"
		},
		"1520": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.schema"
		},
		"1521": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "Value"
		},
		"1522": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "Content"
		},
		"1523": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type"
		},
		"1524": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.title"
		},
		"1525": {
			"packageName": "typia",
			"packagePath": "src/tags/Constant.ts",
			"qualifiedName": "__type.description"
		},
		"1526": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "ContentMediaType"
		},
		"1527": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type"
		},
		"1528": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type.target"
		},
		"1529": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type.kind"
		},
		"1530": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type.value"
		},
		"1531": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type.schema"
		},
		"1532": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type"
		},
		"1533": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "__type.contentMediaType"
		},
		"1534": {
			"packageName": "typia",
			"packagePath": "src/tags/ContentMediaType.ts",
			"qualifiedName": "Value"
		},
		"1535": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "Default"
		},
		"1536": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type"
		},
		"1537": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.target"
		},
		"1538": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.kind"
		},
		"1539": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.value"
		},
		"1540": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1541": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.schema"
		},
		"1542": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type"
		},
		"1543": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.default"
		},
		"1544": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type"
		},
		"1545": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "__type.default"
		},
		"1546": {
			"packageName": "typia",
			"packagePath": "src/tags/Default.ts",
			"qualifiedName": "Value"
		},
		"1547": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "Example"
		},
		"1548": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type"
		},
		"1549": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.target"
		},
		"1550": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.kind"
		},
		"1551": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.value"
		},
		"1552": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1553": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.schema"
		},
		"1554": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type"
		},
		"1555": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.example"
		},
		"1556": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type"
		},
		"1557": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "__type.example"
		},
		"1558": {
			"packageName": "typia",
			"packagePath": "src/tags/Example.ts",
			"qualifiedName": "Value"
		},
		"1559": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "Examples"
		},
		"1560": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type"
		},
		"1561": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.target"
		},
		"1562": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.kind"
		},
		"1563": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.value"
		},
		"1564": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1565": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.schema"
		},
		"1566": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type"
		},
		"1567": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "__type.examples"
		},
		"1568": {
			"packageName": "typia",
			"packagePath": "src/tags/Examples.ts",
			"qualifiedName": "Value"
		},
		"1569": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "ExclusiveMaximum"
		},
		"1570": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type"
		},
		"1571": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.target"
		},
		"1572": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.kind"
		},
		"1573": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.value"
		},
		"1574": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.validate"
		},
		"1575": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1576": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.schema"
		},
		"1577": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type"
		},
		"1578": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.exclusiveMaximum"
		},
		"1579": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type"
		},
		"1580": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "__type.exclusiveMaximum"
		},
		"1581": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMaximum.ts",
			"qualifiedName": "Value"
		},
		"1582": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "ExclusiveMinimum"
		},
		"1583": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type"
		},
		"1584": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.target"
		},
		"1585": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.kind"
		},
		"1586": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.value"
		},
		"1587": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.validate"
		},
		"1588": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1589": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.schema"
		},
		"1590": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type"
		},
		"1591": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.exclusiveMinimum"
		},
		"1592": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type"
		},
		"1593": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "__type.exclusiveMinimum"
		},
		"1594": {
			"packageName": "typia",
			"packagePath": "src/tags/ExclusiveMinimum.ts",
			"qualifiedName": "Value"
		},
		"1595": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "Format"
		},
		"1596": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type"
		},
		"1597": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.target"
		},
		"1598": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.kind"
		},
		"1599": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.value"
		},
		"1600": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.validate"
		},
		"1601": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1602": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.schema"
		},
		"1603": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type"
		},
		"1604": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "__type.format"
		},
		"1605": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "Value"
		},
		"1606": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "Format"
		},
		"1607": {
			"packageName": "typia",
			"packagePath": "src/tags/Format.ts",
			"qualifiedName": "Format.Value"
		},
		"1608": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "JsonSchemaPlugin"
		},
		"1609": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "__type"
		},
		"1610": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "__type.target"
		},
		"1611": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "__type.kind"
		},
		"1612": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "__type.value"
		},
		"1613": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "__type.schema"
		},
		"1614": {
			"packageName": "typia",
			"packagePath": "src/tags/JsonSchemaPlugin.ts",
			"qualifiedName": "Schema"
		},
		"1615": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "Maximum"
		},
		"1616": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type"
		},
		"1617": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.target"
		},
		"1618": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.kind"
		},
		"1619": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.value"
		},
		"1620": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.validate"
		},
		"1621": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1622": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.schema"
		},
		"1623": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type"
		},
		"1624": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.maximum"
		},
		"1625": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type"
		},
		"1626": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "__type.maximum"
		},
		"1627": {
			"packageName": "typia",
			"packagePath": "src/tags/Maximum.ts",
			"qualifiedName": "Value"
		},
		"1628": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "MaxItems"
		},
		"1629": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type"
		},
		"1630": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.target"
		},
		"1631": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.kind"
		},
		"1632": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.value"
		},
		"1633": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.validate"
		},
		"1634": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1635": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.schema"
		},
		"1636": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type"
		},
		"1637": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "__type.maxItems"
		},
		"1638": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxItems.ts",
			"qualifiedName": "Value"
		},
		"1639": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "MaxLength"
		},
		"1640": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type"
		},
		"1641": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.target"
		},
		"1642": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.kind"
		},
		"1643": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.value"
		},
		"1644": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.validate"
		},
		"1645": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1646": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.schema"
		},
		"1647": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type"
		},
		"1648": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "__type.maxLength"
		},
		"1649": {
			"packageName": "typia",
			"packagePath": "src/tags/MaxLength.ts",
			"qualifiedName": "Value"
		},
		"1650": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "Minimum"
		},
		"1651": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type"
		},
		"1652": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.target"
		},
		"1653": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.kind"
		},
		"1654": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.value"
		},
		"1655": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.validate"
		},
		"1656": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1657": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.schema"
		},
		"1658": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type"
		},
		"1659": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.minimum"
		},
		"1660": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type"
		},
		"1661": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "__type.minimum"
		},
		"1662": {
			"packageName": "typia",
			"packagePath": "src/tags/Minimum.ts",
			"qualifiedName": "Value"
		},
		"1663": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "MinItems"
		},
		"1664": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type"
		},
		"1665": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.target"
		},
		"1666": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.kind"
		},
		"1667": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.value"
		},
		"1668": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.validate"
		},
		"1669": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1670": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.schema"
		},
		"1671": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type"
		},
		"1672": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "__type.minItems"
		},
		"1673": {
			"packageName": "typia",
			"packagePath": "src/tags/MinItems.ts",
			"qualifiedName": "Value"
		},
		"1674": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "MinLength"
		},
		"1675": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type"
		},
		"1676": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.target"
		},
		"1677": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.kind"
		},
		"1678": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.value"
		},
		"1679": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.validate"
		},
		"1680": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1681": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.schema"
		},
		"1682": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type"
		},
		"1683": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "__type.minLength"
		},
		"1684": {
			"packageName": "typia",
			"packagePath": "src/tags/MinLength.ts",
			"qualifiedName": "Value"
		},
		"1685": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "MultipleOf"
		},
		"1686": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type"
		},
		"1687": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.target"
		},
		"1688": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.kind"
		},
		"1689": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.value"
		},
		"1690": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.validate"
		},
		"1691": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1692": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.schema"
		},
		"1693": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type"
		},
		"1694": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.multipleOf"
		},
		"1695": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type"
		},
		"1696": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "__type.multipleOf"
		},
		"1697": {
			"packageName": "typia",
			"packagePath": "src/tags/MultipleOf.ts",
			"qualifiedName": "Value"
		},
		"1698": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "Pattern"
		},
		"1699": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type"
		},
		"1700": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.target"
		},
		"1701": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.kind"
		},
		"1702": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.value"
		},
		"1703": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.validate"
		},
		"1704": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1705": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.schema"
		},
		"1706": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type"
		},
		"1707": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "__type.pattern"
		},
		"1708": {
			"packageName": "typia",
			"packagePath": "src/tags/Pattern.ts",
			"qualifiedName": "Value"
		},
		"1709": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "Sequence"
		},
		"1710": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type"
		},
		"1711": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type.target"
		},
		"1712": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type.kind"
		},
		"1713": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type.value"
		},
		"1714": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type.schema"
		},
		"1715": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type"
		},
		"1716": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "__type.x-protobuf-sequence"
		},
		"1717": {
			"packageName": "typia",
			"packagePath": "src/tags/Sequence.ts",
			"qualifiedName": "N"
		},
		"1718": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase"
		},
		"1720": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "__type.typia.tag"
		},
		"1721": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "Props"
		},
		"1722": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase"
		},
		"1723": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps"
		},
		"1724": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.target"
		},
		"1725": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.kind"
		},
		"1726": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.value"
		},
		"1727": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.validate"
		},
		"1728": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.exclusive"
		},
		"1729": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.schema"
		},
		"1730": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Target"
		},
		"1731": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Kind"
		},
		"1732": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Value"
		},
		"1733": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Validate"
		},
		"1734": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Exclusive"
		},
		"1735": {
			"packageName": "typia",
			"packagePath": "src/tags/TagBase.ts",
			"qualifiedName": "TagBase.IProps.Schema"
		},
		"1736": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "Type"
		},
		"1737": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type"
		},
		"1738": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.target"
		},
		"1739": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.kind"
		},
		"1740": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.value"
		},
		"1741": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.validate"
		},
		"1742": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type"
		},
		"1743": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.number"
		},
		"1744": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.bigint"
		},
		"1745": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type"
		},
		"1746": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.number"
		},
		"1747": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.bigint"
		},
		"1748": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1749": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.schema"
		},
		"1750": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type"
		},
		"1751": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.type"
		},
		"1752": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.minimum"
		},
		"1753": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type"
		},
		"1754": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "__type.type"
		},
		"1755": {
			"packageName": "typia",
			"packagePath": "src/tags/Type.ts",
			"qualifiedName": "Value"
		},
		"1756": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "UniqueItems"
		},
		"1757": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type"
		},
		"1758": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.target"
		},
		"1759": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.kind"
		},
		"1760": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.value"
		},
		"1761": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.validate"
		},
		"1762": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.exclusive"
		},
		"1763": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.schema"
		},
		"1764": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type"
		},
		"1765": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "__type.uniqueItems"
		},
		"1766": {
			"packageName": "typia",
			"packagePath": "src/tags/UniqueItems.ts",
			"qualifiedName": "Value"
		},
		"1767": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation"
		},
		"1768": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "T"
		},
		"1769": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation"
		},
		"1770": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.ISuccess"
		},
		"1771": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.ISuccess.success"
		},
		"1772": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.ISuccess.data"
		},
		"1773": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.ISuccess.T"
		},
		"1774": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IFailure"
		},
		"1775": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IFailure.success"
		},
		"1776": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IFailure.data"
		},
		"1777": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IFailure.errors"
		},
		"1778": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IError"
		},
		"1779": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IError.path"
		},
		"1780": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IError.expected"
		},
		"1781": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IError.value"
		},
		"1782": {
			"packageName": "@samchon/openapi",
			"packagePath": "lib/structures/IValidation.d.ts",
			"qualifiedName": "IValidation.IError.description"
		},
		"1783": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": ""
		},
		"1802": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "functional"
		},
		"1803": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "http"
		},
		"1804": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "llm"
		},
		"1805": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "json"
		},
		"1806": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "misc"
		},
		"1807": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "notations"
		},
		"1808": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "protobuf"
		},
		"1809": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "reflect"
		},
		"1810": {
			"packageName": "typia",
			"packagePath": "src/module.ts",
			"qualifiedName": "tags"
		},
		"1811": {
			"packageName": "typia",
			"packagePath": "src/schemas/metadata/IJsDocTagInfo.ts",
			"qualifiedName": "IJsDocTagInfo"
		},
		"1812": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonApplication.ts",
			"qualifiedName": "IJsonApplication"
		},
		"1813": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaCollection.ts",
			"qualifiedName": "IJsonSchemaCollection"
		},
		"1814": {
			"packageName": "typia",
			"packagePath": "src/schemas/json/IJsonSchemaUnit.ts",
			"qualifiedName": "IJsonSchemaUnit"
		},
		"1815": {
			"packageName": "typia",
			"packagePath": "src/AssertionGuard.ts",
			"qualifiedName": "AssertionGuard"
		},
		"1816": {
			"packageName": "typia",
			"packagePath": "src/IRandomGenerator.ts",
			"qualifiedName": "IRandomGenerator"
		},
		"1817": {
			"packageName": "typia",
			"packagePath": "src/IValidation.ts",
			"qualifiedName": "IValidation"
		},
		"1818": {
			"packageName": "typia",
			"packagePath": "src/TypeGuardError.ts",
			"qualifiedName": "TypeGuardError"
		},
		"1819": {
			"packageName": "typia",
			"packagePath": "src/Primitive.ts",
			"qualifiedName": "Primitive"
		},
		"1820": {
			"packageName": "typia",
			"packagePath": "src/Resolved.ts",
			"qualifiedName": "Resolved"
		},
		"1821": {
			"packageName": "typia",
			"packagePath": "src/CamelCase.ts",
			"qualifiedName": "CamelCase"
		},
		"1822": {
			"packageName": "typia",
			"packagePath": "src/PascalCase.ts",
			"qualifiedName": "PascalCase"
		},
		"1823": {
			"packageName": "typia",
			"packagePath": "src/SnakeCase.ts",
			"qualifiedName": "SnakeCase"
		},
		"1824": {
			"packageName": "typia",
			"packagePath": "src/IReadableURLSearchParams.ts",
			"qualifiedName": "IReadableURLSearchParams"
		}
	},
	"files": {
		"entries": {
			"1": "../src/index.ts",
			"2": "../src/functional.ts",
			"3": "../src/http.ts",
			"4": "../src/llm.ts",
			"5": "../src/json.ts",
			"6": "../src/misc.ts",
			"7": "../src/notations.ts",
			"8": "../src/protobuf.ts",
			"9": "../src/reflect.ts",
			"10": "../src/tags/index.ts",
			"11": "../src/module.ts",
			"12": "../README.md",
			"13": ".."
		},
		"reflections": {
			"1": 0,
			"2": 393,
			"3": 652,
			"4": 832,
			"5": 876,
			"6": 1011,
			"7": 1154,
			"8": 1362,
			"9": 1504,
			"10": 1514,
			"11": 1783,
			"12": 0,
			"13": 0
		}
	}
}
