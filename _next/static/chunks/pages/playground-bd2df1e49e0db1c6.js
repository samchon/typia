(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1591],{530:()=>{},6732:()=>{},9129:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>W,useTOC:()=>w});var r=t(37876),o=t(71807),a=t(19407),i=t(2870),s=t(8566),l=t(70640),d=t(77345),c=t(35773),p=t(14232),m=t(11887),u=t.n(m),f=t(2487),h=t(45027);let g={rE:"9.3.1"},y=e=>(0,r.jsx)("div",{style:{marginTop:10,marginLeft:20,marginRight:10,width:50},children:(0,r.jsx)("img",{src:"/images/playground/".concat(e.language,".png"),title:e.title,onClick:e.onClick,style:{width:50,height:50,border:e.selected?"2px solid white":"1px solid #666666",borderRadius:"5px"}})});var b=t(10850);let v=e=>(0,r.jsx)(b.Ay,{width:e.width,height:e.height,theme:"vs-dark",options:{minimap:{enabled:!1},padding:{top:15,bottom:15},readOnly:!0},language:e.language,path:"output.".concat("typescript"===e.language?"ts":"js"),value:e.content}),I=e=>{let n={value:Date.now()},t=t=>{n.value=Date.now(),setTimeout(()=>{Date.now()-n.value<500||e.setScript(t)},500)};return(0,r.jsx)(b.Ay,{height:"100%",theme:"vs-dark",options:{tabSize:2,minimap:{enabled:!1},padding:{top:15,bottom:15}},onMount:(n,t)=>{for(let[n,r]of(t.languages.typescript.typescriptDefaults.setCompilerOptions(e.options),e.imports))t.languages.typescript.typescriptDefaults.addExtraLib(r,n);let r=t.editor.createModel(e.script,"typescript",t.Uri.parse("file:///main.ts"));n.setModel(r)},onChange:e=>t(null!=e?e:""),defaultValue:e.script})},E=e=>{let[n,t]=(0,p.useState)(!1),[o,a]=(0,p.useState)(!1),[i,s]=(0,p.useState)(50),l={container:{borderTop:"2px solid skyblue",height:"calc(100vh - 100px)",display:"flex",width:"100%",position:"relative",flexDirection:"row",overflow:"hidden"},left:{height:"100%",width:"calc(".concat(i,"% - ").concat(50,"px)"),position:"relative",zIndex:1},right:{height:"100%",width:"calc(".concat(100-i,"% + ").concat(50,"px)"),position:"relative",zIndex:1},gutter:{height:"100%",position:"absolute",top:0,bottom:0,left:"calc(".concat(i,"% - ").concat(50,"px)"),width:"10px",cursor:"col-resize",zIndex:2,background:"gray",border:o||n?"2px solid skyblue":void 0,borderRadius:o||n?"4px":void 0}};return(0,r.jsxs)("div",{style:l.container,onMouseMove:n=>{var t;if(!1===o)return;let r=(n.clientX+50)/window.innerWidth*100,a=null!=(t=e.minWidth)?t:10;s(Math.min(Math.max(r,a),100-a))},onMouseUp:()=>a(!1),children:[(0,r.jsx)("div",{style:l.left,children:e.children[0]}),(0,r.jsx)("div",{className:"gutter",style:l.gutter,onMouseDown:()=>a(!0),onMouseOver:()=>t(!0),onMouseOut:()=>t(!1)}),(0,r.jsx)("div",{style:l.right,children:e.children[1]})]})};var T=t(67336),A=t.n(T);let S=(e,n,t,o)=>(0,r.jsxs)("span",{className:A().code,children:[(0,r.jsx)("span",{className:A().classNameIdent,children:n.constructor&&n.constructor.name&&"Object"!==n.constructor.name&&n.constructor.name+" "||""}),null!=o?o:"","{",(0,r.jsx)("br",{}),(0,r.jsx)("span",{children:e.map((e,n)=>{let[o,a]=e;return(0,r.jsxs)("span",{children:[!!n&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("span",{className:A().comma,children:", "}),(0,r.jsx)("br",{})]}),(0,r.jsxs)("span",{children:["  ".repeat(t||2),o.toString(),": ",R(a,(t||2)+1)]})]},n)})}),(0,r.jsx)("br",{}),"  ".repeat(t?t-1:1)+"}"]}),R=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if("string"==typeof e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().string),children:JSON.stringify(e)});{if("number"==typeof e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().number),children:e});if("function"==typeof e)return(0,r.jsx)("span",{className:A().code,children:"[Function]"});if(void 0===e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().keyword),children:"undefined"});if(null===e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().keyword),children:"null"});if(!0===e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().keyword),children:"true"});if(!1===e)return(0,r.jsx)("span",{className:"".concat(A().code," ").concat(A().keyword),children:"false"});if(Array.isArray(e))return(0,r.jsxs)("span",{className:A().code,children:["[",e.map((e,t)=>(0,r.jsxs)("span",{children:[!!t&&(0,r.jsx)("span",{className:A().comma,children:", "}),R(e,n+1)]},t)),"]"]});if(e instanceof Map)return S([...e.entries()],e,n,"(".concat(e.size,") "));if(e instanceof Set)return(0,r.jsxs)("span",{className:A().code,children:[(0,r.jsx)("span",{className:A().classNameIdent,children:"Set "}),"(",e.size,")"," {",[...e.values()].map((e,t)=>(0,r.jsxs)("span",{children:[!!t&&(0,r.jsx)("span",{className:A().comma,children:", "}),R(e,n+1)]},t)),"}"]});let t=Object.entries(e);return 0===t.length?(0,r.jsx)(r.Fragment,{children:"{}"}):S(t,e,n)}},M=e=>(0,r.jsx)("div",{style:{width:"100%",height:"calc(100% - 40px)",overflowX:"hidden",overflowY:"auto",padding:15,backgroundColor:"#171717"},children:e.messages.map((n,t)=>[(0,r.jsxs)("p",{style:{fontSize:10},children:[(0,r.jsxs)("span",{className:A().code,children:["[",(0,r.jsx)("span",{style:{color:"error"===n.type?"red":"warn"===n.type?"yellow":"info"===n.type?"skyblue":"lightgreen",fontWeight:"bold"},children:n.type.toUpperCase()}),"]: "]}),(0,r.jsx)("span",{className:A().code,children:R(n.value)})]}),...t===e.messages.length-1?[]:[(0,r.jsx)("div",{className:A().logSeparator})]]).flat()});var x=t(10833),D=t(61590);let N={target:u().ScriptTarget.ESNext,module:u().ModuleKind.ESNext,esModuleInterop:!0,downlevelIteration:!0,forceConsistentCasingInFileNames:!0,moduleResolution:u().ModuleResolutionKind.Bundler,strict:!0,skipLibCheck:!0},L='import typia, { tags } from "typia";\n\ninterface IMember {\n  id: string & tags.Format<"uuid">;\n  name: string;\n  age: number &\n    tags.Type<"uint32"> &\n    tags.Minimum<20> &\n    tags.ExclusiveMaximum<100>;\n}\n\nconst member: IMember = typia.random<IMember>();\nconst check: boolean = typia.is(member);\nconst json: string = typia.json.stringify(member);\nconst binary: Uint8Array = typia.protobuf.encode(member);\n\nconsole.log({\n  member,\n  check,\n  json,\n  binary,\n}); \n',P=[["file:///node_modules/@samchon/openapi/package.json",'{\n  "name": "@samchon/openapi",\n  "version": "4.3.3",\n  "description": "OpenAPI definitions and converters for \'typia\' and \'nestia\'.",\n  "main": "./lib/index.js",\n  "module": "./lib/index.mjs",\n  "typings": "./lib/index.d.ts",\n  "scripts": {\n    "prepare": "ts-patch install",\n    "build": "rimraf lib && tsc && rollup -c && ts-node build/post.ts",\n    "dev": "rimraf lib && tsc --watch",\n    "typedoc": "typedoc --plugin typedoc-github-theme --theme typedoc-github-theme"\n  },\n  "keywords": [\n    "swagger",\n    "openapi",\n    "openapi-generator",\n    "openapi-validator",\n    "converter",\n    "migrate",\n    "typia",\n    "nestia",\n    "llm",\n    "llm-function-calling",\n    "structured-output",\n    "openai",\n    "chatgpt",\n    "claude",\n    "gemini",\n    "llama"\n  ],\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/samchon/openapi"\n  },\n  "author": "Jeongho Nam",\n  "license": "MIT",\n  "bugs": {\n    "url": "https://github.com/samchon/openapi/issues"\n  },\n  "homepage": "https://samchon.github.io/openapi/api",\n  "devDependencies": {\n    "@modelcontextprotocol/sdk": "^1.11.4",\n    "@rollup/plugin-terser": "^0.4.4",\n    "@rollup/plugin-typescript": "^12.1.2",\n    "@trivago/prettier-plugin-sort-imports": "^5.2.2",\n    "@types/node": "^20.12.7",\n    "gh-pages": "^6.3.0",\n    "prettier": "^3.5.3",\n    "rimraf": "^5.0.5",\n    "rollup": "^4.18.1",\n    "rollup-plugin-auto-external": "^2.0.0",\n    "tinyglobby": "^0.2.10",\n    "ts-node": "^10.9.2",\n    "ts-patch": "^3.3.0",\n    "typedoc": "^0.27.6",\n    "typedoc-github-theme": "^0.2.1",\n    "typescript": "~5.8.3"\n  },\n  "sideEffects": false,\n  "files": [\n    "lib",\n    "src",\n    "README.md",\n    "LICENSE"\n  ],\n  "packageManager": "pnpm@10.5.2",\n  "pnpm": {\n    "executionEnv": {\n      "nodeVersion": "22.14.0"\n    },\n    "onlyBuiltDependencies": [\n      "@nestjs/core"\n    ]\n  }\n}\n'],["file:///node_modules/@samchon/openapi/index.d.ts",'import * as _at_samchon_slash_openapi from "./lib";\nexport * from "./lib";\nexport default _at_samchon_slash_openapi;'],["file:///node_modules/@samchon/openapi/lib/HttpLlm.d.ts",'import { OpenApi } from "./OpenApi";\nimport { OpenApiV3 } from "./OpenApiV3";\nimport { OpenApiV3_1 } from "./OpenApiV3_1";\nimport { SwaggerV2 } from "./SwaggerV2";\nimport { IHttpConnection } from "./structures/IHttpConnection";\nimport { IHttpLlmApplication } from "./structures/IHttpLlmApplication";\nimport { IHttpLlmFunction } from "./structures/IHttpLlmFunction";\nimport { IHttpResponse } from "./structures/IHttpResponse";\nimport { ILlmFunction } from "./structures/ILlmFunction";\nimport { ILlmSchema } from "./structures/ILlmSchema";\n/**\n * LLM function calling application composer from OpenAPI document.\n *\n * `HttpLlm` is a module for composing LLM (Large Language Model) function calling\n * application from the {@link OpenApi.IDocument OpenAPI document}, and also for\n * LLM function call execution and parameter merging.\n *\n * At first, you can construct the LLM function calling application by the\n * {@link HttpLlm.application HttpLlm.application()} function. And then the LLM\n * has selected a {@link IHttpLlmFunction function} to call and composes its\n * arguments, you can execute the function by\n * {@link HttpLlm.execute HttpLlm.execute()} or\n * {@link HttpLlm.propagate HttpLlm.propagate()}.\n *\n * By the way, if you have configured the {@link IHttpLlmApplication.IOptions.separate}\n * option to separate the parameters into human and LLM sides, you can merge these\n * human and LLM sides\' parameters into one through\n * {@link HttpLlm.mergeParameters HttpLlm.mergeParameters()} before the actual LLM\n * function call execution.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace HttpLlm {\n    /**\n     * Properties for the LLM function calling application composer.\n     *\n     * @template Model Target LLM model\n     */\n    interface IApplicationProps<Model extends ILlmSchema.Model> {\n        /**\n         * Target LLM model.\n         */\n        model: Model;\n        /**\n         * OpenAPI document to convert.\n         */\n        document: OpenApi.IDocument | SwaggerV2.IDocument | OpenApiV3.IDocument | OpenApiV3_1.IDocument;\n        /**\n         * Options for the LLM function calling schema conversion.\n         */\n        options?: Partial<IHttpLlmApplication.IOptions<Model>>;\n    }\n    /**\n     * Convert OpenAPI document to LLM function calling application.\n     *\n     * Converts {@link OpenApi.IDocument OpenAPI document} or\n     * {@link IHttpMigrateApplication migrated application} to the\n     * {@link IHttpLlmApplication LLM function calling application}. Every\n     * {@link OpenApi.IOperation API operations} in the OpenAPI document are converted\n     * to the {@link IHttpLlmFunction LLM function} type, and they would be used for\n     * the LLM function calling.\n     *\n     * If you have configured the {@link IHttpLlmApplication.IOptions.separate} option,\n     * every parameters in the {@link IHttpLlmFunction} would be separated into both\n     * human and LLM sides. In that case, you can merge these human and LLM sides\'\n     * parameters into one through {@link HttpLlm.mergeParameters} before the actual\n     * LLM function call execution.\n     *\n     * Additionally, if you have configured the {@link IHttpLlmApplication.IOptions.keyword}\n     * as `true`, the number of {@link IHttpLlmFunction.parameters} are always 1 and the\n     * first parameter type is always {@link ILlmSchemaV3.IObject}. I recommend this option\n     * because LLM can understand the keyword arguments more easily.\n     *\n     * @param props Properties for composition\n     * @returns LLM function calling application\n     */\n    const application: <Model extends ILlmSchema.Model>(props: IApplicationProps<Model>) => IHttpLlmApplication<Model>;\n    /**\n     * Properties for the LLM function call.\n     */\n    interface IFetchProps<Model extends ILlmSchema.Model> {\n        /**\n         * Application of the LLM function calling.\n         */\n        application: IHttpLlmApplication<Model>;\n        /**\n         * LLM function schema to call.\n         */\n        function: IHttpLlmFunction<ILlmSchema.Model>;\n        /**\n         * Connection info to the HTTP server.\n         */\n        connection: IHttpConnection;\n        /**\n         * Input arguments for the function call.\n         */\n        input: object;\n    }\n    /**\n     * Execute the LLM function call.\n     *\n     * `HttmLlm.execute()` is a function executing the target\n     * {@link OpenApi.IOperation API endpoint} with with the connection information\n     * and arguments composed by Large Language Model like OpenAI (+human sometimes).\n     *\n     * By the way, if you\'ve configured the {@link IHttpLlmApplication.IOptions.separate},\n     * so that the parameters are separated to human and LLM sides, you have to merge\n     * these humand and LLM sides\' parameters into one through\n     * {@link HttpLlm.mergeParameters} function.\n     *\n     * About the {@link IHttpLlmApplication.IOptions.keyword} option, don\'t worry anything.\n     * This `HttmLlm.execute()` function will automatically recognize the keyword arguments\n     * and convert them to the proper sequence.\n     *\n     * For reference, if the target API endpoinnt responds none 200/201 status, this\n     * would be considered as an error and the {@link HttpError} would be thrown.\n     * Otherwise you don\'t want such rule, you can use the {@link HttpLlm.propagate}\n     * function instead.\n     *\n     * @param props Properties for the LLM function call\n     * @returns Return value (response body) from the API endpoint\n     * @throws HttpError when the API endpoint responds none 200/201 status\n     */\n    const execute: <Model extends ILlmSchema.Model>(props: IFetchProps<Model>) => Promise<unknown>;\n    /**\n     * Propagate the LLM function call.\n     *\n     * `HttmLlm.propagate()` is a function propagating the target\n     * {@link OpenApi.IOperation API endpoint} with with the connection information\n     * and arguments composed by Large Language Model like OpenAI (+human sometimes).\n     *\n     * By the way, if you\'ve configured the {@link IHttpLlmApplication.IOptions.separate},\n     * so that the parameters are separated to human and LLM sides, you have to merge\n     * these humand and LLM sides\' parameters into one through\n     * {@link HttpLlm.mergeParameters} function.\n     *\n     * About the {@link IHttpLlmApplication.IOptions.keyword} option, don\'t worry anything.\n     * This `HttmLlm.propagate()` function will automatically recognize the keyword arguments\n     * and convert them to the proper sequence.\n     *\n     * For reference, the propagation means always returning the response from the API\n     * endpoint, even if the status is not 200/201. This is useful when you want to\n     * handle the response by yourself.\n     *\n     * @param props Properties for the LLM function call\n     * @returns Response from the API endpoint\n     * @throws Error only when the connection is failed\n     */\n    const propagate: <Model extends ILlmSchema.Model>(props: IFetchProps<Model>) => Promise<IHttpResponse>;\n    /**\n     * Properties for the parameters\' merging.\n     */\n    interface IMergeProps<Model extends ILlmSchema.Model> {\n        /**\n         * Metadata of the target function.\n         */\n        function: ILlmFunction<Model>;\n        /**\n         * Arguments composed by the LLM.\n         */\n        llm: object | null;\n        /**\n         * Arguments composed by the human.\n         */\n        human: object | null;\n    }\n    /**\n     * Merge the parameters.\n     *\n     * If you\'ve configured the {@link IHttpLlmApplication.IOptions.separate} option,\n     * so that the parameters are separated to human and LLM sides, you can merge these\n     * humand and LLM sides\' parameters into one through this `HttpLlm.mergeParameters()`\n     * function before the actual LLM function call wexecution.\n     *\n     * On contrary, if you\'ve not configured the\n     * {@link IHttpLlmApplication.IOptions.separate} option, this function would throw\n     * an error.\n     *\n     * @param props Properties for the parameters\' merging\n     * @returns Merged parameter values\n     */\n    const mergeParameters: <Model extends ILlmSchema.Model>(props: IMergeProps<Model>) => object;\n    /**\n     * Merge two values.\n     *\n     * If both values are objects, then combines them in the properties level.\n     *\n     * Otherwise, returns the latter value if it\'s not null, otherwise the former value.\n     *\n     * - `return (y ?? x)`\n     *\n     * @param x Value X to merge\n     * @param y Value Y to merge\n     * @returns Merged value\n     */\n    const mergeValue: (x: unknown, y: unknown) => unknown;\n}\n'],["file:///node_modules/@samchon/openapi/lib/HttpMigration.d.ts",'import { OpenApi } from "./OpenApi";\nimport { OpenApiV3 } from "./OpenApiV3";\nimport { OpenApiV3_1 } from "./OpenApiV3_1";\nimport { SwaggerV2 } from "./SwaggerV2";\nimport { IHttpConnection } from "./structures/IHttpConnection";\nimport { IHttpMigrateApplication } from "./structures/IHttpMigrateApplication";\nimport { IHttpMigrateRoute } from "./structures/IHttpMigrateRoute";\nimport { IHttpResponse } from "./structures/IHttpResponse";\n/**\n * HTTP migration application composer from OpenAPI document.\n *\n * `HttpMigration` is a module for composing HTTP migration application from the\n * {@link OpenApi.IDocument OpenAPI document}. It is designed for helping the OpenAPI\n * generator libraries, which converts {@link OpenApi.IOperation OpenAPI operations} to\n * an RPC (Remote Procedure Call) function.\n *\n * The key feature of the `HttpModule` is the {@link HttpMigration.application} function.\n * It converts the {@link OpenApi.IOperation OpenAPI operations} to the\n * {@link IHttpMigrateRoute HTTP migration route}, and it normalizes the OpenAPI operations\n * to the RPC function calling suitable route structure.\n *\n * The other functions, {@link HttpMigration.execute} and {@link HttpMigration.propagate},\n * are for executing the HTTP request to the HTTP server. The {@link HttpMigration.execute}\n * function returns the response body from the API endpoint when the status code is `200`\n * or `201`. Otherwise, it throws an {@link HttpError} when the status code is not `200`\n * or `201`. The {@link HttpMigration.propagate} function returns the response information\n * from the API endpoint, including the status code, headers, and response body.\n *\n * The {@link HttpLlm} module is a good example utilizing this `HttpMigration` module\n * for composing RPC function calling application. The {@link HttpLlm} module composes\n * LLM (Large Language Model) function calling application from the OpenAPI document\n * bypassing through the {@link IHttpLlmApplication} type.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace HttpMigration {\n    /**\n     * Convert HTTP migration application from OpenAPI document.\n     *\n     * `HttpMigration.application()` is a function converting the\n     * {@link OpenApi.IDocument OpenAPI document} and its {@link OpenApi.IOperation operations}\n     * to the {@link IHttpMigrateApplication HTTP migration application}.\n     *\n     * The HTTP migration application is designed for helping the OpenAPI generator\n     * libraries, which converts OpenAPI operations to an RPC (Remote Procedure Call)\n     * function. To support the OpenAPI generator libraries, {@link IHttpMigrateRoute}\n     * takes below normalization rules:\n     *\n     * - Path parameters are separated to atomic level.\n     * - Query parameters are binded into one object.\n     * - Header parameters are binded into one object.\n     * - Allow only below HTTP methods\n     *   - `head`\n     *   - `get`\n     *   - `post`\n     *   - `put`\n     *   - `patch`\n     *   - `delete`\n     * - Allow only below content media types\n     *   - `application/json`\n     *   - `application/x-www-form-urlencoded`\n     *   - `multipart/form-data`\n     *   - `text/plain`\n     *\n     * If there\'re some {@link OpenApi.IOperation API operations} which canont adjust\n     * the above rules or there\'re some logically insensible, these operation would be\n     * failed to migrate and registered into the {@link IHttpMigrateApplication.errors}.\n     *\n     * @param document OpenAPI document to migrate.\n     * @returns Migrated application.\n     */\n    const application: (document: OpenApi.IDocument | SwaggerV2.IDocument | OpenApiV3.IDocument | OpenApiV3_1.IDocument) => IHttpMigrateApplication;\n    /**\n     * Properties for the request to the HTTP server.\n     */\n    interface IFetchProps {\n        /**\n         * Connection info to the HTTP server.\n         */\n        connection: IHttpConnection;\n        /**\n         * Route information for the migration.\n         */\n        route: IHttpMigrateRoute;\n        /**\n         * Path parameters.\n         *\n         * Path parameters with sequenced array or key-value paired object.\n         */\n        parameters: Array<string | number | boolean | bigint | null> | Record<string, string | number | boolean | bigint | null>;\n        /**\n         * Query parameters as a key-value paired object.\n         */\n        query?: object | undefined;\n        /**\n         * Request body data.\n         */\n        body?: object | undefined;\n    }\n    /**\n     * Execute the HTTP request.\n     *\n     * `HttpMigration.execute()` is a function executing the HTTP request to the HTTP server.\n     *\n     * It returns the response body from the API endpoint when the status code is `200`\n     * or `201`. Otherwise, it throws an {@link HttpError} when the status code is not\n     * `200` or `201`.\n     *\n     * If you want to get more information than the response body, or get the detailed\n     * response information even when the status code is `200` or `201`, use the\n     * {@link HttpMigration.propagate} function instead.\n     *\n     * @param props Properties for the request.\n     * @returns Return value  (response body) from the API endpoint.\n     * @throws HttpError when the API endpoint responds none 200/201 status.\n     */\n    const execute: (props: IFetchProps) => Promise<unknown>;\n    /**\n     * Propagate the HTTP request.\n     *\n     * `HttpMigration.propagate()` is a function propagating the request to the HTTP server.\n     *\n     * It returns the response information from the API endpoint, including the status code,\n     * headers, and response body.\n     *\n     * Even if the status code is not `200` or `201`, this function\n     * would return the response information. By the way, if the connection to the HTTP server\n     * is failed, this function would throw an {@link Error}.\n     *\n     * @param props Properties for the request.\n     * @returns Response from the API endpoint.\n     * @throws Error when the connection is failed.\n     */\n    const propagate: (props: IFetchProps) => Promise<IHttpResponse>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/McpLlm.d.ts",'import { ILlmSchema } from "./structures/ILlmSchema";\nimport { IMcpLlmApplication } from "./structures/IMcpLlmApplication";\nimport { IMcpTool } from "./structures/IMcpTool";\n/**\n * Application of LLM function calling from MCP document.\n *\n * `McpLlm` is a module for composing LLM (Large Language Model) function\n * calling application from MCP (Model Context Protocol) document.\n *\n * The reasons why `@samchon/openapi` recommends to use the function calling\n * feature instead of directly using the\n * [`mcp_servers`](https://openai.github.io/openai-agents-python/mcp/#using-mcp-servers)\n * property of LLM API are:\n *\n * - Model Specification: {@link ILlmSchema}\n * - Validation Feedback: {@link IMcpLlmFunction.validate}\n * - Selector agent for reducing context: [Agentica > Orchestration Strategy](https://wrtnlabs.io/agentica/docs/concepts/function-calling/#orchestration-strategy)\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace McpLlm {\n    /**\n     * Properties for the LLM function calling application composer.\n     *\n     * @template Model Target LLM model\n     */\n    interface IApplicationProps<Model extends ILlmSchema.Model> {\n        /**\n         * Target LLM model.\n         */\n        model: Model;\n        /**\n         * List of tools.\n         *\n         * A list of tools defined in the MCP (Model Context Protocol) document.\n         *\n         * It would better to validate the tools by\n         * [`typia.assert<T>()`](https://typia.io/docs/validate/assert) function\n         * for the type safety.\n         */\n        tools: Array<IMcpTool>;\n        /**\n         * Options for the LLM function calling schema conversion.\n         */\n        options?: Partial<IMcpLlmApplication.IOptions<Model>>;\n    }\n    /**\n     * Convert MCP document to LLM function calling application.\n     *\n     * Converts MCP (Model Context Protocol) to LLM (Large Language Model)\n     * function calling application.\n     *\n     * The reasons why `@samchon/openapi` recommends to use the function calling\n     * feature instead of directly using the\n     * [`mcp_servers`](https://openai.github.io/openai-agents-python/mcp/#using-mcp-servers)\n     * property of LLM API are:\n     *\n     * - Model Specification: {@link ILlmSchema}\n     * - Validation Feedback: {@link IMcpLlmFunction.validate}\n     * - Selector agent for reducing context: [Agentica > Orchestration Strategy](https://wrtnlabs.io/agentica/docs/concepts/function-calling/#orchestration-strategy)\n     *\n     * @param props Properties for composition\n     * @returns LLM function calling application\n     */\n    const application: <Model extends ILlmSchema.Model>(props: IApplicationProps<Model>) => IMcpLlmApplication<Model>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/OpenApi.d.ts",'import { OpenApiV3 } from "./OpenApiV3";\nimport { OpenApiV3_1 } from "./OpenApiV3_1";\nimport { SwaggerV2 } from "./SwaggerV2";\nimport { IJsonSchemaAttribute } from "./structures/IJsonSchemaAttribute";\n/**\n * Emended OpenAPI v3.1 definition used by `typia` and `nestia`.\n *\n * `OpenApi` is a namespace containing functions and interfaces for emended\n * OpenAPI v3.1 specification. The keyword "emended" means that `OpenApi` is\n * not a direct OpenAPI v3.1 specification ({@link OpenApiV3_1}), but a little\n * bit shrunk to remove ambiguous and duplicated expressions of OpenAPI v3.1\n * for the convenience of `typia` and `nestia`.\n *\n * For example, when representing nullable type, OpenAPI v3.1 supports three ways.\n * In that case, `OpenApi` remains only the third way, so that makes `typia` and\n * `nestia` (especially `@nestia/editor`) to be simple and easy to implement.\n *\n * 1. `{ type: ["string", "null"] }`\n * 2. `{ type: "string", nullable: true }`\n * 3. `{ oneOf: [{ type: "string" }, { type: "null" }] }`\n *\n * Here is the entire list of differences between OpenAPI v3.1 and emended `OpenApi`.\n *\n * - Operation\n *   - Merge {@link OpenApiV3_1.IPath.parameters} to {@link OpenApi.IOperation.parameters}\n *   - Resolve {@link OpenApi.IJsonSchema.IReference references} of {@link OpenApiV3_1.IOperation} members\n *   - Escape references of {@link OpenApiV3_1.IComponents.examples}\n * - JSON Schema\n *   - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n *   - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n *   - Array type utilizes only single {@link OpenApi.IJsonSchema.IArray.items}\n *   - Tuple type utilizes only {@link OpenApi.IJsonSchema.ITuple.prefixItems}\n *   - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link OpenApi.IJsonSchema.IObject}\n *   - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link OpenApi.IJsonSchema.IOneOf}\n *   - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link OpenApi.IJsonSchema.IReference}\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace OpenApi {\n    /**\n     * Method of the operation.\n     */\n    type Method = "get" | "post" | "put" | "delete" | "options" | "head" | "patch" | "trace";\n    /**\n     * Convert Swagger or OpenAPI document into emended OpenAPI v3.1 document.\n     *\n     * @param input Swagger or OpenAPI document to convert\n     * @returns Emended OpenAPI v3.1 document\n     */\n    function convert(input: SwaggerV2.IDocument | OpenApiV3.IDocument | OpenApiV3_1.IDocument | OpenApi.IDocument): IDocument;\n    /**\n     * Downgrade to Swagger v2.0 document.\n     *\n     * Downgrade the given document (emeneded OpenAPI v3.1) into Swagger v2.0.\n     *\n     * @param document Emended OpenAPI v3.1 document to downgrade\n     * @param version Version to downgrade\n     * @returns Swagger v2.0 document\n     */\n    function downgrade(document: IDocument, version: "2.0"): SwaggerV2.IDocument;\n    /**\n     * Downgrade to OpenAPI v3.0 document.\n     *\n     * Downgrade the given document (emeneded OpenAPI v3.1) into OpenAPI v3.0.\n     *\n     * @param document Emended OpenAPI v3.1 document to downgrade\n     * @param version Version to downgrade\n     * @returns OpenAPI v3.0 document\n     */\n    function downgrade(document: IDocument, version: "3.0"): OpenApiV3.IDocument;\n    /**\n     * OpenAPI document.\n     *\n     * `OpenApi.IDocument` represents an OpenAPI document of emended OpenAPI v3.1.\n     *\n     * In other words, `OpenApi.IDocument` is a structure of `swagger.json` file of\n     * OpenAPI v3.1 specification, but a little bit shrunk to remove ambiguous and\n     * duplicated expressions of OpenAPI v3.1 for the convenience and clarity.\n     */\n    interface IDocument {\n        /**\n         * OpenAPI version number.\n         */\n        openapi: `3.1.${number}`;\n        /**\n         * List of servers that provide the API.\n         */\n        servers?: IServer[];\n        /**\n         * Information about the API.\n         */\n        info?: IDocument.IInfo;\n        /**\n         * An object to hold reusable data structures.\n         *\n         * It stores both DTO schemas and security schemes.\n         *\n         * For reference, `nestia` defines every object and alias types as reusable DTO\n         * schemas. The alias type means that defined by `type` keyword in TypeScript.\n         */\n        components: IComponents;\n        /**\n         * The available paths and operations for the API.\n         *\n         * The 1st key is the path, and the 2nd key is the HTTP method.\n         */\n        paths?: Record<string, IPath>;\n        /**\n         * An object to hold Webhooks.\n         *\n         * Its structure is same with {@link paths}, so that the 1st key is the path,\n         * and the 2nd key is the HTTP method.\n         */\n        webhooks?: Record<string, IPath>;\n        /**\n         * A declaration of which security mechanisms can be used across the API.\n         *\n         * When this property be configured, it would be overwritten in every API routes.\n         *\n         * For reference, key means the name of security scheme and value means the `scopes`.\n         * The `scopes` can be used only when target security scheme is `oauth2` type,\n         * especially for {@link ISwaggerSecurityScheme.IOAuth2.IFlow.scopes} property.\n         */\n        security?: Record<string, string[]>[];\n        /**\n         * List of tag names with description.\n         *\n         * It is possible to omit this property or skip some tag name even if\n         * the tag name is used in the API routes. In that case, the tag name\n         * would be displayed (in Swagger-UI) without description.\n         */\n        tags?: IDocument.ITag[];\n        /**\n         * Flag for indicating this document is emended by `@samchon/openapi` v4.\n         */\n        "x-samchon-emended-v4": true;\n    }\n    namespace IDocument {\n        /**\n         * Information about the API.\n         */\n        interface IInfo {\n            /**\n             * The title of the API.\n             */\n            title: string;\n            /**\n             * A short summary of the API.\n             */\n            summary?: string;\n            /**\n             * A full description of the API.\n             */\n            description?: string;\n            /**\n             * A URL to the Terms of Service for the API.\n             */\n            termsOfService?: string;\n            /**\n             * The contact information for the exposed API.\n             */\n            contact?: IContact;\n            /**\n             * The license information for the exposed API.\n             */\n            license?: ILicense;\n            /**\n             * Version of the API.\n             */\n            version: string;\n        }\n        /**\n         * OpenAPI tag information.\n         *\n         * It is possible to skip composing this structure, even if some\n         * tag names are registered in the API routes ({@link OpenApi.IOperation.tags}).\n         * In that case, the tag name would be displayed in Swagger-UI without\n         * description.\n         *\n         * However, if you want to describe the tag name, you can compose this\n         * structure and describe the tag name in the {@link description} property.\n         */\n        interface ITag {\n            /**\n             * The name of the tag.\n             */\n            name: string;\n            /**\n             * An optional string describing the tag.\n             */\n            description?: string;\n        }\n        /**\n         * Contact information for the exposed API.\n         */\n        interface IContact {\n            /**\n             * The identifying name of the contact person/organization.\n             */\n            name?: string;\n            /**\n             * The URL pointing to the contact information.\n             */\n            url?: string;\n            /**\n             * The email address of the contact person/organization.\n             *\n             * @format email\n             */\n            email?: string;\n        }\n        /**\n         * License information for the exposed API.\n         */\n        interface ILicense {\n            /**\n             * The license name used for the API.\n             */\n            name: string;\n            /**\n             * Identifier for the license used for the API.\n             *\n             * example: MIT\n             */\n            identifier?: string;\n            /**\n             * A URL to the license used for the API.\n             */\n            url?: string;\n        }\n    }\n    /**\n     * The remote server that provides the API.\n     */\n    interface IServer {\n        /**\n         * A URL to the target host.\n         */\n        url: string;\n        /**\n         * An optional string describing the target server.\n         */\n        description?: string;\n        /**\n         * A map between a variable name and its value.\n         *\n         * When the server {@link url} is a type of template, this property\n         * would be utilized to fill the template with actual values.\n         */\n        variables?: Record<string, IServer.IVariable>;\n    }\n    namespace IServer {\n        /**\n         * A variable for the server URL template.\n         */\n        interface IVariable {\n            /**\n             * Default value to use for substitution.\n             */\n            default: string;\n            /**\n             * List of available values for the variable.\n             */\n            enum?: string[];\n            /**\n             * An optional description for the server variable.\n             */\n            description?: string;\n        }\n    }\n    /**\n     * Path item.\n     *\n     * `OpenApi.IPath` represents a path item of emended OpenAPI v3.1,\n     * collecting multiple method operations in a single path.\n     */\n    interface IPath extends Partial<Record<Method, IOperation>> {\n        /**\n         * Servers that provide the path operations.\n         */\n        servers?: IServer[];\n        /**\n         * Summary of the path.\n         */\n        summary?: string;\n        /**\n         * Description of the path.\n         */\n        description?: string;\n    }\n    /**\n     * Remote operation info.\n     *\n     * `OpenApi.IOperation` represents an Restful API operation provided by the\n     * remote server.\n     */\n    interface IOperation {\n        /**\n         * Unique string used to identify the operation.\n         */\n        operationId?: string;\n        /**\n         * List of parameters that are applicable for this operation.\n         */\n        parameters?: IOperation.IParameter[];\n        /**\n         * The request body applicable for this operation.\n         */\n        requestBody?: IOperation.IRequestBody;\n        /**\n         * The list of possible responses as they are returned from executing this\n         * operation. Its key is the HTTP status code, and the value is the metadata of\n         * the response in the HTTP status code.\n         */\n        responses?: Record<string, IOperation.IResponse>;\n        /**\n         * A list of servers providing this API operation.\n         */\n        servers?: IServer[];\n        /**\n         * A short summary of what the operation does.\n         */\n        summary?: string;\n        /**\n         * A verbose explanation of the operation behavior.\n         */\n        description?: string;\n        /**\n         * List of securities and their scopes that are required for execution.\n         *\n         * When this property be configured, the Restful API operation requires\n         * the matched security value for execution. Its key means security key\n         * matched with {@link OpenApi.IDocument.security}.\n         *\n         * The value means scopes required for the security key when the security\n         * type is {@link OpenApi.ISecurityScheme.IOAuth2}. Otherwise the target\n         * security type is not {@link OpenApi.ISecurityScheme.IOAuth2}, the value\n         * would be empty array.\n         */\n        security?: Record<string, string[]>[];\n        /**\n         * Tags for API documentation control.\n         */\n        tags?: string[];\n        /**\n         * Flag for indicating this operation is deprecated.\n         */\n        deprecated?: boolean;\n        /**\n         * Flag for indicating this operation is human-only.\n         *\n         * If this property value is `true`, {@link HttpLlm.application}\n         * function will not convert this operation schema into the LLM function\n         * calling schema that is represented by the {@link IHttpLlmFunction}\n         * interface.\n         */\n        "x-samchon-human"?: boolean;\n        /**\n         * Accessor of the operation.\n         *\n         * If you configure this property, the assigned value would be used as\n         * {@link IHttpMigrateRoute.accessor}. Also, it also can be used as the\n         * {@link IHttpLlmFunction.name} by joininig with `.` character in the\n         * LLM function calling application.\n         *\n         * Note that, the `x-samchon-accessor` value must be unique in the entire\n         * OpenAPI document operations. If there\'re duplicated `x-samchon-accessor`\n         * values, {@link IHttpMigrateRoute.accessor} will ignore every duplicated\n         * `x-samchon-accessor` values and generate the\n         * {@link IHttpMigrateRoute.accessor} by itself.\n         */\n        "x-samchon-accessor"?: string[];\n        /**\n         * Controller of the operation.\n         *\n         * If you configure this property, the assigned value would be utilized\n         * as the controller name in the OpenAPI generator library like\n         * [`@nestia/editor`](https://nestia.io/docs/editor/) and\n         * [`@nestia/migrate`](https://nestia.io/docs/migrate/).\n         *\n         * Also, if {@link x-samchon-accessor} has been configured, its last\n         * element would be used as the controller method (function) name.\n         * Of course, the OpenAPI document generator `@nestia/sdk` fills both of\n         * them.\n         */\n        "x-samchon-controller"?: string;\n    }\n    namespace IOperation {\n        /**\n         * Parameter of the operation.\n         */\n        interface IParameter {\n            /**\n             * Representative name of the parameter.\n             *\n             * In the most case, the `name` is equivalent to parameter variable name.\n             * Therefore, the `name` must be filled with the significant variable name\n             * of the parameter.\n             *\n             * By the way, only when the {@link in} property is `path`, the `name`\n             * can be omitted. In that case, the `name` is automatically deduced from\n             * the URL path\'s positional template argument analyzing.\n             */\n            name?: string;\n            /**\n             * Location of the parameter.\n             *\n             * The `in` property is a string that determines the location of the parameter.\n             *\n             * - `path`: parameter is part of the path of the URL.\n             * - `query`: parameter is part of the query string.\n             * - `header`: parameter is part of the header.\n             * - `cookie`: parameter is part of the cookie.\n             */\n            in: "path" | "query" | "header" | "cookie";\n            /**\n             * Type info of the parameter.\n             */\n            schema: IJsonSchema;\n            /**\n             * Whether the parameter is required for execution or not.\n             *\n             * If the parameter is required, the value must be filled. Otherwise,\n             * it is possible to skip the parameter when executing the APi operation.\n             *\n             * For reference, the `required` property must be always `true` when the\n             * {@link in} property is `path`. Otherwise, the `required` property can\n             * be anything of them; `true`, `false` and `undefined`.\n             */\n            required?: boolean;\n            /**\n             * Short title of the parameter.\n             */\n            title?: string;\n            /**\n             * Verbose explanation of the parameter.\n             */\n            description?: string;\n            /**\n             * Example value of the parameter.\n             */\n            example?: any;\n            /**\n             * Collection of example values of the parameter with keys.\n             */\n            examples?: Record<string, IExample>;\n        }\n        /**\n         * Request body of the operation.\n         */\n        interface IRequestBody {\n            content?: IContent;\n            description?: string;\n            required?: boolean;\n            "x-nestia-encrypted"?: boolean;\n        }\n        /**\n         * Response of the operation.\n         */\n        interface IResponse {\n            headers?: Record<string, IOperation.IParameter>;\n            content?: IContent;\n            description?: string;\n            "x-nestia-encrypted"?: boolean;\n        }\n        /**\n         * List of content types supported in request/response body.\n         */\n        interface IContent extends Partial<Record<ContentType, IMediaType>> {\n        }\n        /**\n         * Media type of a request/response body.\n         */\n        interface IMediaType {\n            schema?: IJsonSchema;\n            example?: any;\n            examples?: Record<string, IExample>;\n        }\n        /**\n         * List of supported content media types.\n         */\n        type ContentType = "text/plain" | "application/json" | "application/x-www-form-url-encoded" | "multipart/form-data" | "*/*" | (string & {});\n    }\n    /**\n     * Example of the operation parameter or response.\n     */\n    interface IExample {\n        summary?: string;\n        description?: string;\n        value?: any;\n        externalValue?: string;\n    }\n    /**\n     * Reusable components in OpenAPI.\n     *\n     * A storage of reusable components in OpenAPI document.\n     *\n     * In other words, it is a storage of named DTO schemas and security schemes.\n     */\n    interface IComponents {\n        /**\n         * An object to hold reusable DTO schemas.\n         *\n         * In other words, a collection of named JSON schemas.\n         */\n        schemas?: Record<string, IJsonSchema>;\n        /**\n         * An object to hold reusable security schemes.\n         *\n         * In other words, a collection of named security schemes.\n         */\n        securitySchemes?: Record<string, ISecurityScheme>;\n    }\n    /**\n     * Type schema info.\n     *\n     * `OpenApi.IJsonSchema` is a type schema info of the OpenAPI.\n     *\n     * `OpenApi.IJsonSchema` basically follows the JSON schema definition of\n     * OpenAPI v3.1, but a little bit shrunk to remove ambiguous and duplicated\n     * expressions of OpenAPI v3.1 for the convenience and clarity.\n     *\n     * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n     * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n     * - Array type utilizes only single {@link OpenAPI.IJsonSchema.IArray.items}\n     * - Tuple type utilizes only {@link OpenApi.IJsonSchema.ITuple.prefixItems}\n     * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link OpenApi.IJsonSchema.IObject}\n     * - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link OpenApi.IJsonSchema.IOneOf}\n     * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link OpenApi.IJsonSchema.IReference}\n     */\n    type IJsonSchema = IJsonSchema.IConstant | IJsonSchema.IBoolean | IJsonSchema.IInteger | IJsonSchema.INumber | IJsonSchema.IString | IJsonSchema.IArray | IJsonSchema.ITuple | IJsonSchema.IObject | IJsonSchema.IReference | IJsonSchema.IOneOf | IJsonSchema.INull | IJsonSchema.IUnknown;\n    namespace IJsonSchema {\n        /**\n         * Constant value type.\n         */\n        interface IConstant extends IJsonSchemaAttribute {\n            /**\n             * The constant value.\n             */\n            const: boolean | number | string;\n        }\n        /**\n         * Boolean type info.\n         */\n        interface IBoolean extends IJsonSchemaAttribute.IBoolean {\n            /**\n             * The default value of the boolean type.\n             */\n            default?: boolean;\n        }\n        /**\n         * Integer type info.\n         */\n        interface IInteger extends IJsonSchemaAttribute.IInteger {\n            /**\n             * Default value of the integer type.\n             *\n             * @type int64\n             */\n            default?: number;\n            /**\n             * Minimum value restriction.\n             *\n             * @type int64\n             */\n            minimum?: number;\n            /**\n             * Maximum value restriction.\n             *\n             * @type int64\n             */\n            maximum?: number;\n            /**\n             * Exclusive minimum value restriction.\n             */\n            exclusiveMinimum?: number;\n            /**\n             * Exclusive maximum value restriction.\n             */\n            exclusiveMaximum?: number;\n            /**\n             * Multiple of value restriction.\n             *\n             * @type uint64\n             * @exclusiveMinimum 0\n             */\n            multipleOf?: number;\n        }\n        /**\n         * Number (double) type info.\n         */\n        interface INumber extends IJsonSchemaAttribute.INumber {\n            /**\n             * Default value of the number type.\n             */\n            default?: number;\n            /**\n             * Minimum value restriction.\n             */\n            minimum?: number;\n            /**\n             * Maximum value restriction.\n             */\n            maximum?: number;\n            /**\n             * Exclusive minimum value restriction.\n             */\n            exclusiveMinimum?: number;\n            /**\n             * Exclusive maximum value restriction.\n             */\n            exclusiveMaximum?: number;\n            /**\n             * Multiple of value restriction.\n             *\n             * @exclusiveMinimum 0\n             */\n            multipleOf?: number;\n        }\n        /**\n         * String type info.\n         */\n        interface IString extends IJsonSchemaAttribute.IString {\n            /**\n             * Default value of the string type.\n             */\n            default?: string;\n            /**\n             * Format restriction.\n             */\n            format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n            /**\n             * Pattern restriction.\n             */\n            pattern?: string;\n            /**\n             * Content media type restriction.\n             */\n            contentMediaType?: string;\n            /**\n             * Minimum length restriction.\n             *\n             * @type uint64\n             */\n            minLength?: number;\n            /**\n             * Maximum length restriction.\n             *\n             * @type uint64\n             */\n            maxLength?: number;\n        }\n        /**\n         * Array type info.\n         */\n        interface IArray extends IJsonSchemaAttribute.IArray {\n            /**\n             * Items type info.\n             *\n             * The `items` means the type of the array elements. In other words, it is\n             * the type schema info of the `T` in the TypeScript array type `Array<T>`.\n             */\n            items: IJsonSchema;\n            /**\n             * Unique items restriction.\n             *\n             * If this property value is `true`, target array must have unique items.\n             */\n            uniqueItems?: boolean;\n            /**\n             * Minimum items restriction.\n             *\n             * Restriction of minimum number of items in the array.\n             *\n             * @type uint64\n             */\n            minItems?: number;\n            /**\n             * Maximum items restriction.\n             *\n             * Restriction of maximum number of items in the array.\n             *\n             * @type uint64\n             */\n            maxItems?: number;\n        }\n        /**\n         * Tuple type info.\n         */\n        interface ITuple extends IJsonSchemaAttribute {\n            /**\n             * Discriminator value of the type.\n             *\n             * Note that, the tuple type cannot be distinguished with\n             * {@link IArray} type just by this `discriminator` property.\n             *\n             * To check whether the type is tuple or array, you have to check\n             * the existence of {@link IArray.items} or {@link ITuple.prefixItems}\n             * properties.\n             */\n            type: "array";\n            /**\n             * Prefix items.\n             *\n             * The `prefixItems` means the type schema info of the prefix items in the\n             * tuple type. In the TypeScript, it is expressed as `[T1, T2]`.\n             *\n             * If you want to express `[T1, T2, ...TO[]]` type, you can configure the\n             * `...TO[]` through the {@link additionalItems} property.\n             */\n            prefixItems: IJsonSchema[];\n            /**\n             * Additional items.\n             *\n             * The `additionalItems` means the type schema info of the additional items\n             * after the {@link prefixItems}. In the TypeScript, if there\'s a type\n             * `[T1, T2, ...TO[]]`, the `...TO[]` is represented by the `additionalItems`.\n             *\n             * By the way, if you configure the `additionalItems` as `true`, it means\n             * the additional items are not restricted. They can be any type, so that\n             * it is equivalent to the TypeScript type `[T1, T2, ...any[]]`.\n             *\n             * Otherwise configure the `additionalItems` as the {@link IJsonSchema},\n             * it means the additional items must follow the type schema info.\n             * Therefore, it is equivalent to the TypeScript type `[T1, T2, ...TO[]]`.\n             */\n            additionalItems?: boolean | IJsonSchema;\n            /**\n             * Unique items restriction.\n             *\n             * If this property value is `true`, target tuple must have unique items.\n             */\n            uniqueItems?: boolean;\n            /**\n             * Minimum items restriction.\n             *\n             * Restriction of minimum number of items in the tuple.\n             *\n             * @type uint64\n             */\n            minItems?: number;\n            /**\n             * Maximum items restriction.\n             *\n             * Restriction of maximum number of items in the tuple.\n             *\n             * @type uint64\n             */\n            maxItems?: number;\n        }\n        /**\n         * Object type info.\n         */\n        interface IObject extends IJsonSchemaAttribute.IObject {\n            /**\n             * Properties of the object.\n             *\n             * The `properties` means a list of key-value pairs of the object\'s\n             * regular properties. The key is the name of the regular property,\n             * and the value is the type schema info.\n             *\n             * If you need additional properties that is represented by dynamic key,\n             * you can use the {@link additionalProperties} instead.\n             */\n            properties?: Record<string, IJsonSchema>;\n            /**\n             * Additional properties\' info.\n             *\n             * The `additionalProperties` means the type schema info of the additional\n             * properties that are not listed in the {@link properties}.\n             *\n             * If the value is `true`, it means that the additional properties are not\n             * restricted. They can be any type. Otherwise, if the value is\n             * {@link IJsonSchema} type, it means that the additional properties must\n             * follow the type schema info.\n             *\n             * - `true`: `Record<string, any>`\n             * - `IJsonSchema`: `Record<string, T>`\n             */\n            additionalProperties?: boolean | IJsonSchema;\n            /**\n             * List of key values of the required properties.\n             *\n             * The `required` means a list of the key values of the required\n             * {@link properties}. If some property key is not listed in the `required`\n             * list, it means that property is optional. Otherwise some property key\n             * exists in the `required` list, it means that the property must be filled.\n             *\n             * Below is an example of the {@link properties} and `required`.\n             *\n             * ```typescript\n             * interface SomeObject {\n             *   id: string;\n             *   email: string;\n             *   name?: string;\n             * }\n             * ```\n             *\n             * As you can see, `id` and `email` {@link properties} are {@link required},\n             * so that they are listed in the `required` list.\n             *\n             * ```json\n             * {\n             *   "type": "object",\n             *   "properties": {\n             *     "id": { "type": "string" },\n             *     "email": { "type": "string" },\n             *     "name": { "type": "string" }\n             *   },\n             *   "required": ["id", "email"]\n             * }\n             * ```\n             */\n            required?: string[];\n        }\n        /**\n         * Reference type directing named schema.\n         */\n        interface IReference<Key = string> extends IJsonSchemaAttribute {\n            /**\n             * Reference to the named schema.\n             *\n             * The `ref` is a reference to the named schema. Format of the `$ref` is\n             * following the JSON Pointer specification. In the OpenAPI, the `$ref`\n             * starts with `#/components/schemas/` which means the type is stored in\n             * the {@link OpenApi.IComponents.schemas} object.\n             *\n             * - `#/components/schemas/SomeObject`\n             * - `#/components/schemas/AnotherObject`\n             */\n            $ref: Key;\n        }\n        /**\n         * Union type.\n         *\n         * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n         *\n         * For reference, even though your Swagger (or OpenAPI) document has\n         * defined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\n         * converts it to `oneOf` type.\n         */\n        interface IOneOf extends IJsonSchemaAttribute {\n            /**\n             * List of the union types.\n             */\n            oneOf: Exclude<IJsonSchema, IJsonSchema.IOneOf>[];\n            /**\n             * Discriminator info of the union type.\n             */\n            discriminator?: IOneOf.IDiscriminator;\n        }\n        namespace IOneOf {\n            /**\n             * Discriminator info of the union type.\n             */\n            interface IDiscriminator {\n                /**\n                 * Property name for the discriminator.\n                 */\n                propertyName: string;\n                /**\n                 * Mapping of the discriminator value to the schema name.\n                 *\n                 * This property is valid only for {@link IReference} typed\n                 * {@link IOneOf.oneof} elements. Therefore, `key` of `mapping` is\n                 * the discriminator value, and `value` of `mapping` is the\n                 * schema name like `#/components/schemas/SomeObject`.\n                 */\n                mapping?: Record<string, string>;\n            }\n        }\n        /**\n         * Null type.\n         */\n        interface INull extends IJsonSchemaAttribute.INull {\n            /**\n             * Default value of the `null` type.\n             */\n            default?: null;\n        }\n        /**\n         * Unknown, the `any` type.\n         */\n        interface IUnknown extends IJsonSchemaAttribute.IUnknown {\n            /**\n             * Default value of the `any` type.\n             */\n            default?: any;\n        }\n        /**\n         * Significant attributes that can be applied to the most types.\n         *\n         * @deprecated\n         * @hidden\n         */\n        interface __ISignificant<Type extends string> extends IJsonSchemaAttribute {\n            /**\n             * Discriminator value of the type.\n             */\n            type: Type;\n        }\n        /**\n         * Common attributes that can be applied to all types.\n         *\n         * @deprecated\n         * @hidden\n         */\n        type __IAttribute = IJsonSchemaAttribute;\n    }\n    /**\n     * Security scheme of Swagger Documents.\n     *\n     * `OpenApi.ISecurityScheme` is a data structure representing content of\n     * `securitySchemes` in `swagger.json` file. It is composed with 5 types of\n     * security schemes as an union type like below.\n     *\n     * @reference https://swagger.io/specification/#security-scheme-object\n     */\n    type ISecurityScheme = ISecurityScheme.IApiKey | ISecurityScheme.IHttpBasic | ISecurityScheme.IHttpBearer | ISecurityScheme.IOAuth2 | ISecurityScheme.IOpenId;\n    namespace ISecurityScheme {\n        /**\n         * Normal API key type.\n         */\n        interface IApiKey {\n            type: "apiKey";\n            in?: "header" | "query" | "cookie";\n            name?: string;\n            description?: string;\n        }\n        /**\n         * HTTP basic authentication type.\n         */\n        interface IHttpBasic {\n            type: "http";\n            scheme: "basic";\n            description?: string;\n        }\n        /**\n         * HTTP bearer authentication type.\n         */\n        interface IHttpBearer {\n            type: "http";\n            scheme: "bearer";\n            bearerFormat?: string;\n            description?: string;\n        }\n        /**\n         * OAuth2 authentication type.\n         */\n        interface IOAuth2 {\n            type: "oauth2";\n            flows: IOAuth2.IFlowSet;\n            description?: string;\n        }\n        interface IOpenId {\n            type: "openIdConnect";\n            openIdConnectUrl: string;\n            description?: string;\n        }\n        namespace IOAuth2 {\n            interface IFlowSet {\n                authorizationCode?: IFlow;\n                implicit?: Omit<IFlow, "tokenUrl">;\n                password?: Omit<IFlow, "authorizationUrl">;\n                clientCredentials?: Omit<IFlow, "authorizationUrl">;\n            }\n            interface IFlow {\n                authorizationUrl?: string;\n                tokenUrl?: string;\n                refreshUrl?: string;\n                scopes?: Record<string, string>;\n            }\n        }\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/OpenApiV3.d.ts",'import { IJsonSchemaAttribute } from "./structures/IJsonSchemaAttribute";\n/**\n * OpenAPI 3.0 definition.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace OpenApiV3 {\n    type Method = "get" | "post" | "put" | "delete" | "options" | "head" | "patch" | "trace";\n    interface IDocument {\n        openapi: "3.0" | `3.0.${number}`;\n        servers?: IServer[];\n        info?: IDocument.IInfo;\n        components?: IComponents;\n        paths?: Record<string, IPath>;\n        security?: Record<string, string[]>[];\n        tags?: IDocument.ITag[];\n    }\n    namespace IDocument {\n        interface IInfo {\n            title: string;\n            description?: string;\n            termsOfService?: string;\n            contact?: IContact;\n            license?: ILicense;\n            version: string;\n        }\n        interface ITag {\n            name: string;\n            description?: string;\n        }\n        interface IContact {\n            name?: string;\n            url?: string;\n            email?: string;\n        }\n        interface ILicense {\n            name: string;\n            url?: string;\n        }\n    }\n    interface IServer {\n        url: string;\n        description?: string;\n        variables?: Record<string, IServer.IVariable>;\n    }\n    namespace IServer {\n        interface IVariable {\n            default: string;\n            enum?: string[];\n            description?: string;\n        }\n    }\n    interface IPath extends Partial<Record<Method, IOperation | undefined>> {\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/components/headers/${string}`> | IJsonSchema.IReference<`#/components/parameters/${string}`>>;\n        servers?: IServer[];\n        summary?: string;\n        description?: string;\n    }\n    interface IOperation {\n        operationId?: string;\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/components/headers/${string}`> | IJsonSchema.IReference<`#/components/parameters/${string}`>>;\n        requestBody?: IOperation.IRequestBody | IJsonSchema.IReference<`#/components/requestBodies/${string}`>;\n        responses?: Record<string, IOperation.IResponse | IJsonSchema.IReference<`#/components/responses/${string}`>>;\n        servers?: IServer[];\n        summary?: string;\n        description?: string;\n        security?: Record<string, string[]>[];\n        tags?: string[];\n        deprecated?: boolean;\n    }\n    namespace IOperation {\n        interface IParameter {\n            name?: string;\n            in: "path" | "query" | "header" | "cookie";\n            schema: IJsonSchema;\n            required?: boolean;\n            description?: string;\n            example?: any;\n            examples?: Record<string, IExample | IJsonSchema.IReference<`#/components/examples/${string}`>>;\n        }\n        interface IRequestBody {\n            description?: string;\n            required?: boolean;\n            content?: Record<string, IMediaType>;\n        }\n        interface IResponse {\n            content?: Record<string, IMediaType>;\n            headers?: Record<string, Omit<IOperation.IParameter, "in"> | IJsonSchema.IReference<`#/components/headers/${string}`>>;\n            description?: string;\n        }\n        interface IMediaType {\n            schema?: IJsonSchema;\n            example?: any;\n            examples?: Record<string, IExample | IJsonSchema.IReference<`#/components/examples/${string}`>>;\n        }\n    }\n    interface IExample {\n        summary?: string;\n        description?: string;\n        value?: any;\n        externalValue?: string;\n    }\n    interface IComponents {\n        schemas?: Record<string, IJsonSchema>;\n        responses?: Record<string, IOperation.IResponse>;\n        parameters?: Record<string, IOperation.IParameter>;\n        requestBodies?: Record<string, IOperation.IRequestBody>;\n        securitySchemes?: Record<string, ISecurityScheme>;\n        headers?: Record<string, Omit<IOperation.IParameter, "in">>;\n        examples?: Record<string, IExample>;\n    }\n    type IJsonSchema = IJsonSchema.IBoolean | IJsonSchema.IInteger | IJsonSchema.INumber | IJsonSchema.IString | IJsonSchema.IArray | IJsonSchema.IObject | IJsonSchema.IReference | IJsonSchema.IAllOf | IJsonSchema.IAnyOf | IJsonSchema.IOneOf | IJsonSchema.INullOnly | IJsonSchema.IUnknown;\n    namespace IJsonSchema {\n        interface IBoolean extends Omit<IJsonSchemaAttribute.IBoolean, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: boolean | null;\n            enum?: Array<boolean | null>;\n        }\n        interface IInteger extends Omit<IJsonSchemaAttribute.IInteger, "examples">, __IAttribute {\n            nullable?: boolean;\n            /** @type int64 */ default?: number | null;\n            /** @type int64 */ enum?: Array<number | null>;\n            /** @type int64 */ minimum?: number;\n            /** @type int64 */ maximum?: number;\n            exclusiveMinimum?: number | boolean;\n            exclusiveMaximum?: number | boolean;\n            /**\n             * @type uint64\n             * @exclusiveMinimum 0\n             */\n            multipleOf?: number;\n        }\n        interface INumber extends Omit<IJsonSchemaAttribute.INumber, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: number | null;\n            enum?: Array<number | null>;\n            minimum?: number;\n            maximum?: number;\n            exclusiveMinimum?: number | boolean;\n            exclusiveMaximum?: number | boolean;\n            /** @exclusiveMinimum 0 */ multipleOf?: number;\n        }\n        interface IString extends Omit<IJsonSchemaAttribute.IString, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: string | null;\n            enum?: Array<string | null>;\n            format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n            pattern?: string;\n            /** @type uint64 */ minLength?: number;\n            /** @type uint64 */ maxLength?: number;\n        }\n        interface IArray extends Omit<IJsonSchemaAttribute.IArray, "examples">, __IAttribute {\n            nullable?: boolean;\n            items: IJsonSchema;\n            uniqueItems?: boolean;\n            /** @type uint64 */ minItems?: number;\n            /** @type uint64 */ maxItems?: number;\n        }\n        interface IObject extends Omit<IJsonSchemaAttribute.IObject, "examples">, __IAttribute {\n            nullable?: boolean;\n            properties?: Record<string, IJsonSchema>;\n            required?: string[];\n            additionalProperties?: boolean | IJsonSchema;\n            maxProperties?: number;\n            minProperties?: number;\n        }\n        interface IReference<Key = string> extends __IAttribute {\n            $ref: Key;\n        }\n        interface IAllOf extends __IAttribute {\n            allOf: IJsonSchema[];\n        }\n        interface IAnyOf extends __IAttribute {\n            anyOf: IJsonSchema[];\n        }\n        interface IOneOf extends __IAttribute {\n            oneOf: IJsonSchema[];\n            discriminator?: IOneOf.IDiscriminator;\n        }\n        namespace IOneOf {\n            interface IDiscriminator {\n                propertyName: string;\n                mapping?: Record<string, string>;\n            }\n        }\n        interface INullOnly extends Omit<IJsonSchemaAttribute.INull, "examples">, __IAttribute {\n            default?: null;\n        }\n        interface IUnknown extends Omit<IJsonSchemaAttribute.IUnknown, "examples">, __IAttribute {\n            default?: any;\n        }\n        interface __IAttribute extends Omit<IJsonSchemaAttribute, "examples"> {\n            examples?: any[] | Record<string, any>;\n        }\n    }\n    type ISecurityScheme = ISecurityScheme.IApiKey | ISecurityScheme.IHttpBasic | ISecurityScheme.IHttpBearer | ISecurityScheme.IOAuth2 | ISecurityScheme.IOpenId;\n    namespace ISecurityScheme {\n        interface IApiKey {\n            type: "apiKey";\n            in?: "header" | "query" | "cookie";\n            name?: string;\n            description?: string;\n        }\n        interface IHttpBasic {\n            type: "http";\n            scheme: "basic";\n            description?: string;\n        }\n        interface IHttpBearer {\n            type: "http";\n            scheme: "bearer";\n            bearerFormat?: string;\n            description?: string;\n        }\n        interface IOAuth2 {\n            type: "oauth2";\n            flows: IOAuth2.IFlowSet;\n            description?: string;\n        }\n        interface IOpenId {\n            type: "openIdConnect";\n            openIdConnectUrl: string;\n            description?: string;\n        }\n        namespace IOAuth2 {\n            interface IFlowSet {\n                authorizationCode?: IFlow;\n                implicit?: Omit<IFlow, "tokenUrl">;\n                password?: Omit<IFlow, "authorizationUrl">;\n                clientCredentials?: Omit<IFlow, "authorizationUrl">;\n            }\n            interface IFlow {\n                authorizationUrl?: string;\n                tokenUrl?: string;\n                refreshUrl?: string;\n                scopes?: Record<string, string>;\n            }\n        }\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/OpenApiV3_1.d.ts",'import { IJsonSchemaAttribute } from "./structures/IJsonSchemaAttribute";\n/**\n * OpenAPI v3.1 definition.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace OpenApiV3_1 {\n    type Method = "get" | "post" | "put" | "delete" | "options" | "head" | "patch" | "trace";\n    interface IDocument {\n        openapi: `3.1.${number}`;\n        servers?: IServer[];\n        info?: IDocument.IInfo;\n        components?: IComponents;\n        paths?: Record<string, IPath>;\n        webhooks?: Record<string, IJsonSchema.IReference<`#/components/pathItems/${string}`> | IPath>;\n        security?: Record<string, string[]>[];\n        tags?: IDocument.ITag[];\n    }\n    namespace IDocument {\n        interface IInfo {\n            title: string;\n            summary?: string;\n            description?: string;\n            termsOfService?: string;\n            contact?: IContact;\n            license?: ILicense;\n            version: string;\n        }\n        interface ITag {\n            name: string;\n            description?: string;\n        }\n        interface IContact {\n            name?: string;\n            url?: string;\n            email?: string;\n        }\n        interface ILicense {\n            name: string;\n            identifier?: string;\n            url?: string;\n        }\n    }\n    interface IServer {\n        url: string;\n        description?: string;\n        variables?: Record<string, IServer.IVariable>;\n    }\n    namespace IServer {\n        interface IVariable {\n            default: string;\n            /** @minItems 1 */ enum?: string[];\n            description?: string;\n        }\n    }\n    interface IPath extends Partial<Record<Method, IOperation>> {\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/components/headers/${string}`> | IJsonSchema.IReference<`#/components/parameters/${string}`>>;\n        servers?: IServer[];\n        summary?: string;\n        description?: string;\n    }\n    interface IOperation {\n        operationId?: string;\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/components/headers/${string}`> | IJsonSchema.IReference<`#/components/parameters/${string}`>>;\n        requestBody?: IOperation.IRequestBody | IJsonSchema.IReference<`#/components/requestBodies/${string}`>;\n        responses?: Record<string, IOperation.IResponse | IJsonSchema.IReference<`#/components/responses/${string}`>>;\n        servers?: IServer[];\n        summary?: string;\n        description?: string;\n        security?: Record<string, string[]>[];\n        tags?: string[];\n        deprecated?: boolean;\n    }\n    namespace IOperation {\n        interface IParameter {\n            name?: string;\n            in: "path" | "query" | "header" | "cookie";\n            schema: IJsonSchema;\n            required?: boolean;\n            description?: string;\n            example?: any;\n            examples?: Record<string, IExample | IJsonSchema.IReference<`#/components/examples/${string}`>>;\n        }\n        interface IRequestBody {\n            description?: string;\n            required?: boolean;\n            content?: Record<string, IMediaType>;\n        }\n        interface IResponse {\n            content?: Record<string, IMediaType>;\n            headers?: Record<string, Omit<IOperation.IParameter, "in"> | IJsonSchema.IReference<`#/components/headers/${string}`>>;\n            description?: string;\n        }\n        interface IMediaType {\n            schema?: IJsonSchema;\n            example?: any;\n            examples?: Record<string, IExample | IJsonSchema.IReference<`#/components/examples/${string}`>>;\n        }\n    }\n    interface IExample {\n        summary?: string;\n        description?: string;\n        value?: any;\n        externalValue?: string;\n    }\n    interface IComponents {\n        schemas?: Record<string, IJsonSchema>;\n        pathItems?: Record<string, IPath>;\n        responses?: Record<string, IOperation.IResponse>;\n        parameters?: Record<string, IOperation.IParameter>;\n        requestBodies?: Record<string, IOperation.IRequestBody>;\n        securitySchemes?: Record<string, ISecurityScheme>;\n        headers?: Record<string, Omit<IOperation.IParameter, "in">>;\n        examples?: Record<string, IExample>;\n    }\n    type IJsonSchema = IJsonSchema.IMixed | IJsonSchema.IConstant | IJsonSchema.IBoolean | IJsonSchema.IInteger | IJsonSchema.INumber | IJsonSchema.IString | IJsonSchema.IArray | IJsonSchema.IObject | IJsonSchema.IReference | IJsonSchema.IRecursiveReference | IJsonSchema.IAllOf | IJsonSchema.IAnyOf | IJsonSchema.IOneOf | IJsonSchema.INull | IJsonSchema.IUnknown;\n    namespace IJsonSchema {\n        interface IMixed extends IConstant, Omit<IBoolean, "type" | "default" | "enum">, Omit<INumber, "type" | "default" | "enum">, Omit<IString, "type" | "default" | "enum">, Omit<IArray, "type">, Omit<IObject, "type">, IOneOf, IAnyOf, IAllOf, IReference {\n            type: Array<"boolean" | "integer" | "number" | "string" | "array" | "object" | "null">;\n            default?: any[] | null;\n            enum?: any[];\n        }\n        interface IConstant extends __IAttribute {\n            const: boolean | number | string;\n            nullable?: boolean;\n        }\n        interface IBoolean extends Omit<IJsonSchemaAttribute.IBoolean, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: boolean | null;\n            enum?: Array<boolean | null>;\n        }\n        interface IInteger extends Omit<IJsonSchemaAttribute.IInteger, "examples">, __IAttribute {\n            nullable?: boolean;\n            /** @type int64 */ default?: number | null;\n            /** @type int64 */ enum?: Array<number | null>;\n            /** @type int64 */ minimum?: number;\n            /** @type int64 */ maximum?: number;\n            /** @type int64 */ exclusiveMinimum?: number | boolean;\n            /** @type int64 */ exclusiveMaximum?: number | boolean;\n            /**\n             * @type uint64\n             * @exclusiveMinimum 0\n             */\n            multipleOf?: number;\n        }\n        interface INumber extends Omit<IJsonSchemaAttribute.INumber, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: number | null;\n            enum?: Array<number | null>;\n            minimum?: number;\n            maximum?: number;\n            exclusiveMinimum?: number | boolean;\n            exclusiveMaximum?: number | boolean;\n            /** @exclusiveMinimum 0 */ multipleOf?: number;\n        }\n        interface IString extends Omit<IJsonSchemaAttribute.IString, "examples">, __IAttribute {\n            nullable?: boolean;\n            default?: string | null;\n            enum?: Array<string | null>;\n            format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n            pattern?: string;\n            contentMediaType?: string;\n            /** @type uint64 */ minLength?: number;\n            /** @type uint64 */ maxLength?: number;\n        }\n        interface IObject extends Omit<IJsonSchemaAttribute.IObject, "examples">, __IAttribute {\n            nullable?: boolean;\n            properties?: Record<string, IJsonSchema>;\n            required?: string[];\n            additionalProperties?: boolean | IJsonSchema;\n            maxProperties?: number;\n            minProperties?: number;\n        }\n        interface IArray extends Omit<IJsonSchemaAttribute.IArray, "examples">, __IAttribute {\n            nullable?: boolean;\n            items?: IJsonSchema | IJsonSchema[];\n            prefixItems?: IJsonSchema[];\n            uniqueItems?: boolean;\n            additionalItems?: boolean | IJsonSchema;\n            /** @type uint64 */ minItems?: number;\n            /** @type uint64 */ maxItems?: number;\n        }\n        interface IReference<Key = string> extends __IAttribute {\n            $ref: Key;\n        }\n        interface IRecursiveReference extends __IAttribute {\n            $recursiveRef: string;\n        }\n        interface IAllOf extends __IAttribute {\n            allOf: IJsonSchema[];\n        }\n        interface IAnyOf extends __IAttribute {\n            anyOf: IJsonSchema[];\n        }\n        interface IOneOf extends __IAttribute {\n            oneOf: IJsonSchema[];\n            discriminator?: IOneOf.IDiscriminator;\n        }\n        namespace IOneOf {\n            interface IDiscriminator {\n                propertyName: string;\n                mapping?: Record<string, string>;\n            }\n        }\n        interface INull extends Omit<IJsonSchemaAttribute.INull, "examples">, __IAttribute {\n            default?: null;\n        }\n        interface IUnknown extends Omit<IJsonSchemaAttribute.IUnknown, "examples">, __IAttribute {\n            type?: undefined;\n            default?: any;\n        }\n        interface __IAttribute extends Omit<IJsonSchemaAttribute, "examples"> {\n            examples?: any[] | Record<string, any>;\n        }\n    }\n    type ISecurityScheme = ISecurityScheme.IApiKey | ISecurityScheme.IHttpBasic | ISecurityScheme.IHttpBearer | ISecurityScheme.IOAuth2 | ISecurityScheme.IOpenId;\n    namespace ISecurityScheme {\n        interface IApiKey {\n            type: "apiKey";\n            in?: "header" | "query" | "cookie";\n            name?: string;\n            description?: string;\n        }\n        interface IHttpBasic {\n            type: "http";\n            scheme: "basic";\n            description?: string;\n        }\n        interface IHttpBearer {\n            type: "http";\n            scheme: "bearer";\n            bearerFormat?: string;\n            description?: string;\n        }\n        interface IOAuth2 {\n            type: "oauth2";\n            flows: IOAuth2.IFlowSet;\n            description?: string;\n        }\n        interface IOpenId {\n            type: "openIdConnect";\n            openIdConnectUrl: string;\n            description?: string;\n        }\n        namespace IOAuth2 {\n            interface IFlowSet {\n                authorizationCode?: IFlow;\n                implicit?: Omit<IFlow, "tokenUrl">;\n                password?: Omit<IFlow, "authorizationUrl">;\n                clientCredentials?: Omit<IFlow, "authorizationUrl">;\n            }\n            interface IFlow {\n                authorizationUrl?: string;\n                tokenUrl?: string;\n                refreshUrl?: string;\n                scopes?: Record<string, string>;\n            }\n        }\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/SwaggerV2.d.ts",'import { IJsonSchemaAttribute } from "./structures/IJsonSchemaAttribute";\n/**\n * Swagger v2.0 definition.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace SwaggerV2 {\n    type Method = "get" | "post" | "put" | "delete" | "options" | "head" | "patch" | "trace";\n    interface IDocument {\n        swagger: "2.0" | `2.0.${number}`;\n        info?: IDocument.IInfo;\n        host?: string;\n        basePath?: string;\n        consumes?: string[];\n        produces?: string[];\n        definitions?: Record<string, IJsonSchema>;\n        parameters?: Record<string, IOperation.IParameter>;\n        responses?: Record<string, IOperation.IResponse>;\n        securityDefinitions?: Record<string, ISecurityDefinition>;\n        security?: Record<string, string[]>[];\n        paths?: Record<string, IPath>;\n        tags?: IDocument.ITag[];\n    }\n    namespace IDocument {\n        interface IInfo {\n            title: string;\n            description?: string;\n            termsOfService?: string;\n            contact?: IContact;\n            license?: ILicense;\n            version: string;\n        }\n        interface IContact {\n            name?: string;\n            url?: string;\n            email?: string;\n        }\n        interface ILicense {\n            name: string;\n            url?: string;\n        }\n        interface ITag {\n            name: string;\n            description?: string;\n        }\n    }\n    interface IPath extends Partial<Record<Method, IOperation | undefined>> {\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/parameters/${string}`>>;\n    }\n    interface IOperation {\n        operationId?: string;\n        parameters?: Array<IOperation.IParameter | IJsonSchema.IReference<`#/definitions/parameters/${string}`>>;\n        responses?: Record<string, IOperation.IResponse | IJsonSchema.IReference<`#/definitions/responses/${string}`>>;\n        summary?: string;\n        description?: string;\n        security?: Record<string, string[]>[];\n        tags?: string[];\n        deprecated?: boolean;\n    }\n    namespace IOperation {\n        type IParameter = IGeneralParameter | IBodyParameter;\n        type IGeneralParameter = IJsonSchema & {\n            name: string;\n            in: string;\n            description?: string;\n        };\n        interface IBodyParameter {\n            schema: IJsonSchema;\n            name: string;\n            in: string;\n            description?: string;\n            required?: boolean;\n        }\n        interface IResponse {\n            description?: string;\n            headers?: Record<string, IJsonSchema>;\n            schema?: IJsonSchema;\n            example?: any;\n        }\n    }\n    type IJsonSchema = IJsonSchema.IBoolean | IJsonSchema.IInteger | IJsonSchema.INumber | IJsonSchema.IString | IJsonSchema.IArray | IJsonSchema.IObject | IJsonSchema.IReference | IJsonSchema.IAnyOf | IJsonSchema.IOneOf | IJsonSchema.INullOnly | IJsonSchema.IUnknown;\n    namespace IJsonSchema {\n        interface IBoolean extends Omit<IJsonSchemaAttribute.IBoolean, "examples">, __ISignificant<"boolean"> {\n            default?: boolean | null;\n            enum?: Array<boolean | null>;\n        }\n        interface IInteger extends Omit<IJsonSchemaAttribute.IInteger, "examples">, __ISignificant<"integer"> {\n            /** @type int64 */ default?: number | null;\n            /** @type int64 */ enum?: Array<number | null>;\n            /** @type int64 */ minimum?: number;\n            /** @type int64 */ maximum?: number;\n            exclusiveMinimum?: number | boolean;\n            exclusiveMaximum?: number | boolean;\n            /**\n             * @type uint64\n             * @exclusiveMinimum 0\n             */\n            multipleOf?: number;\n        }\n        interface INumber extends Omit<IJsonSchemaAttribute.INumber, "examples">, __ISignificant<"number"> {\n            default?: number | null;\n            enum?: Array<number | null>;\n            minimum?: number;\n            maximum?: number;\n            exclusiveMinimum?: number | boolean;\n            exclusiveMaximum?: number | boolean;\n            /** @exclusiveMinimum 0 */ multipleOf?: number;\n        }\n        interface IString extends Omit<IJsonSchemaAttribute.IString, "examples">, __ISignificant<"string"> {\n            default?: string | null;\n            enum?: Array<string | null>;\n            format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n            pattern?: string;\n            /** @type uint64 */ minLength?: number;\n            /** @type uint64 */ maxLength?: number;\n        }\n        interface IArray extends Omit<IJsonSchemaAttribute.IArray, "examples">, __ISignificant<"array"> {\n            items: IJsonSchema;\n            uniqueItems?: boolean;\n            /** @type uint64 */ minItems?: number;\n            /** @type uint64 */ maxItems?: number;\n        }\n        interface IObject extends Omit<IJsonSchemaAttribute.IObject, "examples">, __ISignificant<"object"> {\n            properties?: Record<string, IJsonSchema>;\n            required?: string[];\n            additionalProperties?: boolean | IJsonSchema;\n            maxProperties?: number;\n            minProperties?: number;\n        }\n        interface IReference<Key = string> extends __IAttribute {\n            $ref: Key;\n        }\n        interface IAllOf extends __IAttribute {\n            allOf: IJsonSchema[];\n        }\n        interface IAnyOf extends __IAttribute {\n            "x-anyOf": IJsonSchema[];\n        }\n        interface IOneOf extends __IAttribute {\n            "x-oneOf": IJsonSchema[];\n        }\n        interface INullOnly extends __IAttribute {\n            type: "null";\n            default?: null;\n        }\n        interface IUnknown extends __IAttribute {\n            type?: undefined;\n        }\n        interface __ISignificant<Type extends string> extends __IAttribute {\n            type: Type;\n            "x-nullable"?: boolean;\n        }\n        interface __IAttribute extends Omit<IJsonSchemaAttribute, "examples"> {\n            examples?: any[];\n        }\n    }\n    type ISecurityDefinition = ISecurityDefinition.IApiKey | ISecurityDefinition.IBasic | ISecurityDefinition.IOauth2Implicit | ISecurityDefinition.IOauth2AccessCode | ISecurityDefinition.IOauth2Password | ISecurityDefinition.IOauth2Application;\n    namespace ISecurityDefinition {\n        interface IApiKey {\n            type: "apiKey";\n            in?: "header" | "query" | "cookie";\n            name?: string;\n            description?: string;\n        }\n        interface IBasic {\n            type: "basic";\n            name?: string;\n            description?: string;\n        }\n        interface IOauth2Implicit {\n            type: "oauth2";\n            flow: "implicit";\n            authorizationUrl?: string;\n            scopes?: Record<string, string>;\n            description?: string;\n        }\n        interface IOauth2AccessCode {\n            type: "oauth2";\n            flow: "accessCode";\n            authorizationUrl?: string;\n            tokenUrl?: string;\n            scopes?: Record<string, string>;\n            description?: string;\n        }\n        interface IOauth2Password {\n            type: "oauth2";\n            flow: "password";\n            tokenUrl?: string;\n            scopes?: Record<string, string>;\n            description?: string;\n        }\n        interface IOauth2Application {\n            type: "oauth2";\n            flow: "application";\n            tokenUrl?: string;\n            scopes?: Record<string, string>;\n            description?: string;\n        }\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/HttpLlmApplicationComposer.d.ts",'import { IHttpLlmApplication } from "../structures/IHttpLlmApplication";\nimport { IHttpMigrateApplication } from "../structures/IHttpMigrateApplication";\nimport { ILlmSchema } from "../structures/ILlmSchema";\nexport declare namespace HttpLlmComposer {\n    const application: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        migrate: IHttpMigrateApplication;\n        options: IHttpLlmApplication.IOptions<Model>;\n    }) => IHttpLlmApplication<Model>;\n    const shorten: <Model extends ILlmSchema.Model>(app: IHttpLlmApplication<Model>, limit?: number) => void;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/LlmSchemaComposer.d.ts",'import { IChatGptSchema } from "../structures/IChatGptSchema";\nimport { IClaudeSchema } from "../structures/IClaudeSchema";\nimport { IDeepSeekSchema } from "../structures/IDeepSeekSchema";\nimport { IGeminiSchema } from "../structures/IGeminiSchema";\nimport { ILlamaSchema } from "../structures/ILlamaSchema";\nimport { ILlmSchema } from "../structures/ILlmSchema";\nimport { ILlmSchemaV3 } from "../structures/ILlmSchemaV3";\nimport { ILlmSchemaV3_1 } from "../structures/ILlmSchemaV3_1";\nimport { ChatGptTypeChecker } from "../utils/ChatGptTypeChecker";\nimport { GeminiTypeChecker } from "../utils/GeminiTypeChecker";\nimport { LlmTypeCheckerV3 } from "../utils/LlmTypeCheckerV3";\nimport { LlmTypeCheckerV3_1 } from "../utils/LlmTypeCheckerV3_1";\nexport declare namespace LlmSchemaComposer {\n    const parameters: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: (props: {\n            config: IChatGptSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IChatGptSchema.IParameters, import("..").IOpenApiSchemaError>;\n        claude: (props: {\n            config: IClaudeSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IClaudeSchema.IParameters, import("..").IOpenApiSchemaError>;\n        deepseek: (props: {\n            config: IDeepSeekSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IDeepSeekSchema.IParameters, import("..").IOpenApiSchemaError>;\n        gemini: (props: {\n            config: IGeminiSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IGeminiSchema.IParameters, import("..").IOpenApiSchemaError>;\n        llama: (props: {\n            config: ILlamaSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n        }) => import("..").IResult<ILlamaSchema.IParameters, import("..").IOpenApiSchemaError>;\n        "3.0": (props: {\n            config: ILlmSchemaV3.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            validate?: (schema: import("..").OpenApi.IJsonSchema, accessor: string) => import("..").IOpenApiSchemaError.IReason[];\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<ILlmSchemaV3.IParameters, import("..").IOpenApiSchemaError>;\n        "3.1": (props: {\n            config: ILlmSchemaV3_1.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema.IObject | import("..").OpenApi.IJsonSchema.IReference;\n            errors?: string[];\n            validate?: (input: import("..").OpenApi.IJsonSchema, accessor: string) => import("..").IOpenApiSchemaError.IReason[];\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<ILlmSchemaV3_1.IParameters, import("..").IOpenApiSchemaError>;\n    }[Model];\n    const schema: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: (props: {\n            config: IChatGptSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            $defs: Record<string, IChatGptSchema>;\n            schema: import("..").OpenApi.IJsonSchema;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IChatGptSchema, import("..").IOpenApiSchemaError>;\n        claude: (props: {\n            config: IClaudeSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            $defs: Record<string, IClaudeSchema>;\n            schema: import("..").OpenApi.IJsonSchema;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IClaudeSchema, import("..").IOpenApiSchemaError>;\n        deepseek: (props: {\n            config: IDeepSeekSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            $defs: Record<string, IDeepSeekSchema>;\n            schema: import("..").OpenApi.IJsonSchema;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IDeepSeekSchema, import("..").IOpenApiSchemaError>;\n        gemini: (props: {\n            config: IGeminiSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema;\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<IGeminiSchema, import("..").IOpenApiSchemaError>;\n        llama: (props: {\n            config: ILlamaSchema.IConfig;\n            components: import("..").OpenApi.IComponents;\n            $defs: Record<string, ILlamaSchema>;\n            schema: import("..").OpenApi.IJsonSchema;\n        }) => import("..").IResult<ILlamaSchema, import("..").IOpenApiSchemaError>;\n        "3.0": (props: {\n            config: ILlmSchemaV3.IConfig;\n            components: import("..").OpenApi.IComponents;\n            schema: import("..").OpenApi.IJsonSchema;\n            validate?: (schema: import("..").OpenApi.IJsonSchema, accessor: string) => import("..").IOpenApiSchemaError.IReason[];\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<ILlmSchemaV3, import("..").IOpenApiSchemaError>;\n        "3.1": (props: {\n            config: ILlmSchemaV3_1.IConfig;\n            components: import("..").OpenApi.IComponents;\n            $defs: Record<string, ILlmSchemaV3_1>;\n            schema: import("..").OpenApi.IJsonSchema;\n            validate?: (input: import("..").OpenApi.IJsonSchema, accessor: string) => import("..").IOpenApiSchemaError.IReason[];\n            accessor?: string;\n            refAccessor?: string;\n        }) => import("..").IResult<ILlmSchemaV3_1, import("..").IOpenApiSchemaError>;\n    }[Model];\n    const defaultConfig: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: {\n            reference: false;\n            strict: false;\n        };\n        claude: {\n            reference: false;\n        };\n        deepseek: {\n            reference: false;\n        };\n        gemini: {\n            recursive: number;\n        };\n        llama: {\n            reference: false;\n        };\n        "3.0": {\n            constraint: true;\n            recursive: number;\n        };\n        "3.1": {\n            constraint: true;\n            reference: false;\n        };\n    }[Model];\n    const typeChecker: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: typeof ChatGptTypeChecker;\n        claude: typeof LlmTypeCheckerV3_1;\n        deepseek: typeof LlmTypeCheckerV3_1;\n        gemini: typeof GeminiTypeChecker;\n        llama: typeof LlmTypeCheckerV3_1;\n        "3.0": typeof LlmTypeCheckerV3;\n        "3.1": typeof LlmTypeCheckerV3_1;\n    }[Model];\n    const separateParameters: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: (props: {\n            parameters: IChatGptSchema.IParameters;\n            predicate: (schema: IChatGptSchema) => boolean;\n            convention?: (key: string, type: "llm" | "human") => string;\n        }) => import("..").ILlmFunction.ISeparated<"chatgpt">;\n        claude: (props: {\n            parameters: IClaudeSchema.IParameters;\n            predicate: (schema: IClaudeSchema) => boolean;\n            convention?: (key: string, type: "llm" | "human") => string;\n        }) => import("..").ILlmFunction.ISeparated<"claude">;\n        deepseek: (props: {\n            parameters: IDeepSeekSchema.IParameters;\n            predicate: (schema: IDeepSeekSchema) => boolean;\n            convention?: (key: string, type: "llm" | "human") => string;\n        }) => import("..").ILlmFunction.ISeparated<"deepseek">;\n        gemini: (props: {\n            predicate: (schema: IGeminiSchema) => boolean;\n            parameters: IGeminiSchema.IParameters;\n        }) => import("..").ILlmFunction.ISeparated<"gemini">;\n        llama: (props: {\n            parameters: ILlamaSchema.IParameters;\n            predicate: (schema: ILlamaSchema) => boolean;\n            convention?: (key: string, type: "llm" | "human") => string;\n        }) => import("..").ILlmFunction.ISeparated<"llama">;\n        "3.0": (props: {\n            predicate: (schema: ILlmSchemaV3) => boolean;\n            parameters: ILlmSchemaV3.IParameters;\n        }) => import("..").ILlmFunction.ISeparated<"3.0">;\n        "3.1": (props: {\n            parameters: ILlmSchemaV3_1.IParameters;\n            predicate: (schema: ILlmSchemaV3_1) => boolean;\n            convention?: (key: string, type: "llm" | "human") => string;\n        }) => import("..").ILlmFunction.ISeparated<"3.1">;\n    }[Model];\n    const invert: <Model extends ILlmSchema.Model>(model: Model) => {\n        chatgpt: (props: {\n            components: import("..").OpenApi.IComponents;\n            schema: IChatGptSchema;\n            $defs: Record<string, IChatGptSchema>;\n        }) => import("..").OpenApi.IJsonSchema;\n        claude: (props: {\n            components: import("..").OpenApi.IComponents;\n            schema: IClaudeSchema;\n            $defs: Record<string, IClaudeSchema>;\n        }) => import("..").OpenApi.IJsonSchema;\n        deepseek: (props: {\n            components: import("..").OpenApi.IComponents;\n            schema: IDeepSeekSchema;\n            $defs: Record<string, IDeepSeekSchema>;\n        }) => import("..").OpenApi.IJsonSchema;\n        gemini: (props: {\n            schema: IGeminiSchema;\n        }) => import("..").OpenApi.IJsonSchema;\n        llama: (props: {\n            components: import("..").OpenApi.IComponents;\n            schema: ILlamaSchema;\n            $defs: Record<string, ILlamaSchema>;\n        }) => import("..").OpenApi.IJsonSchema;\n        "3.0": (props: {\n            schema: ILlmSchemaV3;\n        }) => import("..").OpenApi.IJsonSchema;\n        "3.1": (props: {\n            components: import("..").OpenApi.IComponents;\n            schema: ILlmSchemaV3_1;\n            $defs: Record<string, ILlmSchemaV3_1>;\n        }) => import("..").OpenApi.IJsonSchema;\n    }[Model];\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/ChatGptSchemaComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IChatGptSchema } from "../../structures/IChatGptSchema";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace ChatGptSchemaComposer {\n    const parameters: (props: {\n        config: IChatGptSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IChatGptSchema.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: IChatGptSchema.IConfig;\n        components: OpenApi.IComponents;\n        $defs: Record<string, IChatGptSchema>;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IChatGptSchema, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        parameters: IChatGptSchema.IParameters;\n        predicate: (schema: IChatGptSchema) => boolean;\n        convention?: (key: string, type: "llm" | "human") => string;\n    }) => ILlmFunction.ISeparated<"chatgpt">;\n    const invert: (props: {\n        components: OpenApi.IComponents;\n        schema: IChatGptSchema;\n        $defs: Record<string, IChatGptSchema>;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/ClaudeSchemaComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IClaudeSchema } from "../../structures/IClaudeSchema";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace ClaudeSchemaComposer {\n    const parameters: (props: {\n        config: IClaudeSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IClaudeSchema.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: IClaudeSchema.IConfig;\n        components: OpenApi.IComponents;\n        $defs: Record<string, IClaudeSchema>;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IClaudeSchema, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        parameters: IClaudeSchema.IParameters;\n        predicate: (schema: IClaudeSchema) => boolean;\n        convention?: (key: string, type: "llm" | "human") => string;\n    }) => ILlmFunction.ISeparated<"claude">;\n    const invert: (props: {\n        components: OpenApi.IComponents;\n        schema: IClaudeSchema;\n        $defs: Record<string, IClaudeSchema>;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/DeepSeekSchemaComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IDeepSeekSchema } from "../../structures/IDeepSeekSchema";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace DeepSeekSchemaComposer {\n    const parameters: (props: {\n        config: IDeepSeekSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IDeepSeekSchema.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: IDeepSeekSchema.IConfig;\n        components: OpenApi.IComponents;\n        $defs: Record<string, IDeepSeekSchema>;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IDeepSeekSchema, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        parameters: IDeepSeekSchema.IParameters;\n        predicate: (schema: IDeepSeekSchema) => boolean;\n        convention?: (key: string, type: "llm" | "human") => string;\n    }) => ILlmFunction.ISeparated<"deepseek">;\n    const invert: (props: {\n        components: OpenApi.IComponents;\n        schema: IDeepSeekSchema;\n        $defs: Record<string, IDeepSeekSchema>;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/GeminiSchemaComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IGeminiSchema } from "../../structures/IGeminiSchema";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace GeminiSchemaComposer {\n    const parameters: (props: {\n        config: IGeminiSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IGeminiSchema.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: IGeminiSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<IGeminiSchema, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        predicate: (schema: IGeminiSchema) => boolean;\n        parameters: IGeminiSchema.IParameters;\n    }) => ILlmFunction.ISeparated<"gemini">;\n    const invert: (props: {\n        schema: IGeminiSchema;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/LlamaSchemaComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { ILlamaSchema } from "../../structures/ILlamaSchema";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace LlamaSchemaComposer {\n    const parameters: (props: {\n        config: ILlamaSchema.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n    }) => IResult<ILlamaSchema.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: ILlamaSchema.IConfig;\n        components: OpenApi.IComponents;\n        $defs: Record<string, ILlamaSchema>;\n        schema: OpenApi.IJsonSchema;\n    }) => IResult<ILlamaSchema, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        parameters: ILlamaSchema.IParameters;\n        predicate: (schema: ILlamaSchema) => boolean;\n        convention?: (key: string, type: "llm" | "human") => string;\n    }) => ILlmFunction.ISeparated<"llama">;\n    const invert: (props: {\n        components: OpenApi.IComponents;\n        schema: ILlamaSchema;\n        $defs: Record<string, ILlamaSchema>;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/LlmDescriptionInverter.d.ts",'import { OpenApi } from "../../OpenApi";\nexport declare namespace LlmDescriptionInverter {\n    const numeric: (description: string | undefined) => Pick<OpenApi.IJsonSchema.INumber, "minimum" | "maximum" | "exclusiveMinimum" | "exclusiveMaximum" | "multipleOf" | "description">;\n    const string: (description: string | undefined) => Pick<OpenApi.IJsonSchema.IString, "format" | "pattern" | "contentMediaType" | "minLength" | "maxLength" | "description">;\n    const array: (description: string | undefined) => Pick<OpenApi.IJsonSchema.IArray, "minItems" | "maxItems" | "uniqueItems" | "description">;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/LlmParametersComposer.d.ts","export {};\n"],["file:///node_modules/@samchon/openapi/lib/composers/llm/LlmSchemaV3Composer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { ILlmSchemaV3 } from "../../structures/ILlmSchemaV3";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace LlmSchemaV3Composer {\n    const parameters: (props: {\n        config: ILlmSchemaV3.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        /** @internal */\n        validate?: (schema: OpenApi.IJsonSchema, accessor: string) => IOpenApiSchemaError.IReason[];\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<ILlmSchemaV3.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: ILlmSchemaV3.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        /** @internal */\n        validate?: (schema: OpenApi.IJsonSchema, accessor: string) => IOpenApiSchemaError.IReason[];\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<ILlmSchemaV3, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        predicate: (schema: ILlmSchemaV3) => boolean;\n        parameters: ILlmSchemaV3.IParameters;\n    }) => ILlmFunction.ISeparated<"3.0">;\n    const invert: (props: {\n        schema: ILlmSchemaV3;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/llm/LlmSchemaV3_1Composer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { ILlmFunction } from "../../structures/ILlmFunction";\nimport { ILlmSchemaV3_1 } from "../../structures/ILlmSchemaV3_1";\nimport { IOpenApiSchemaError } from "../../structures/IOpenApiSchemaError";\nimport { IResult } from "../../structures/IResult";\nexport declare namespace LlmSchemaV3_1Composer {\n    const parameters: (props: {\n        config: ILlmSchemaV3_1.IConfig;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IObject | OpenApi.IJsonSchema.IReference;\n        errors?: string[];\n        /** @internal */\n        validate?: (input: OpenApi.IJsonSchema, accessor: string) => IOpenApiSchemaError.IReason[];\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<ILlmSchemaV3_1.IParameters, IOpenApiSchemaError>;\n    const schema: (props: {\n        config: ILlmSchemaV3_1.IConfig;\n        components: OpenApi.IComponents;\n        $defs: Record<string, ILlmSchemaV3_1>;\n        schema: OpenApi.IJsonSchema;\n        /** @internal */\n        validate?: (input: OpenApi.IJsonSchema, accessor: string) => IOpenApiSchemaError.IReason[];\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<ILlmSchemaV3_1, IOpenApiSchemaError>;\n    const separateParameters: (props: {\n        parameters: ILlmSchemaV3_1.IParameters;\n        predicate: (schema: ILlmSchemaV3_1) => boolean;\n        convention?: (key: string, type: "llm" | "human") => string;\n    }) => ILlmFunction.ISeparated<"3.1">;\n    const invert: (props: {\n        components: OpenApi.IComponents;\n        schema: ILlmSchemaV3_1;\n        $defs: Record<string, ILlmSchemaV3_1>;\n    }) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/migrate/HttpMigrateApplicationComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IHttpMigrateApplication } from "../../structures/IHttpMigrateApplication";\nexport declare namespace HttpMigrateApplicationComposer {\n    const compose: (document: OpenApi.IDocument) => IHttpMigrateApplication;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/migrate/HttpMigrateRouteAccessor.d.ts",'import { IHttpMigrateRoute } from "../../structures/IHttpMigrateRoute";\nexport declare namespace HttpMigrateRouteAccessor {\n    const overwrite: (routes: IHttpMigrateRoute[]) => void;\n}\n'],["file:///node_modules/@samchon/openapi/lib/composers/migrate/HttpMigrateRouteComposer.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IHttpMigrateRoute } from "../../structures/IHttpMigrateRoute";\nexport declare namespace HttpMigrateRouteComposer {\n    interface IProps {\n        document: OpenApi.IDocument;\n        method: "head" | "get" | "post" | "put" | "patch" | "delete";\n        path: string;\n        emendedPath: string;\n        operation: OpenApi.IOperation;\n    }\n    const compose: (props: IProps) => IHttpMigrateRoute | string[];\n}\n'],["file:///node_modules/@samchon/openapi/lib/converters/OpenApiV3Downgrader.d.ts",'import { OpenApi } from "../OpenApi";\nimport { OpenApiV3 } from "../OpenApiV3";\nexport declare namespace OpenApiV3Downgrader {\n    interface IComponentsCollection {\n        original: OpenApi.IComponents;\n        downgraded: OpenApiV3.IComponents;\n    }\n    const downgrade: (input: OpenApi.IDocument) => OpenApiV3.IDocument;\n    const downgradeComponents: (input: OpenApi.IComponents) => IComponentsCollection;\n    const downgradeSchema: (collection: IComponentsCollection) => (input: OpenApi.IJsonSchema) => OpenApiV3.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/converters/OpenApiV3Upgrader.d.ts",'import { OpenApi } from "../OpenApi";\nimport { OpenApiV3 } from "../OpenApiV3";\nexport declare namespace OpenApiV3Upgrader {\n    const convert: (input: OpenApiV3.IDocument) => OpenApi.IDocument;\n    const convertComponents: (input: OpenApiV3.IComponents) => OpenApi.IComponents;\n    const convertSchema: (components: OpenApiV3.IComponents) => (input: OpenApiV3.IJsonSchema) => OpenApi.IJsonSchema;\n    namespace TypeChecker {\n        const isBoolean: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IBoolean;\n        const isInteger: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IInteger;\n        const isNumber: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.INumber;\n        const isString: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IString;\n        const isArray: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IArray;\n        const isObject: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IObject;\n        const isReference: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IReference;\n        const isAllOf: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IAllOf;\n        const isAnyOf: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IAnyOf;\n        const isOneOf: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.IOneOf;\n        const isNullOnly: (schema: OpenApiV3.IJsonSchema) => schema is OpenApiV3.IJsonSchema.INullOnly;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/converters/OpenApiV3_1Emender.d.ts",'import { OpenApi } from "../OpenApi";\nimport { OpenApiV3_1 } from "../OpenApiV3_1";\nexport declare namespace OpenApiV3_1Emender {\n    const convert: (input: OpenApiV3_1.IDocument) => OpenApi.IDocument;\n    const convertComponents: (input: OpenApiV3_1.IComponents) => OpenApi.IComponents;\n    const convertSchema: (components: OpenApiV3_1.IComponents) => (input: OpenApiV3_1.IJsonSchema) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/converters/SwaggerV2Downgrader.d.ts",'import { OpenApi } from "../OpenApi";\nimport { SwaggerV2 } from "../SwaggerV2";\nexport declare namespace SwaggerV2Downgrader {\n    interface IComponentsCollection {\n        original: OpenApi.IComponents;\n        downgraded: Record<string, SwaggerV2.IJsonSchema>;\n    }\n    const downgrade: (input: OpenApi.IDocument) => SwaggerV2.IDocument;\n    const downgradeComponents: (input: OpenApi.IComponents) => IComponentsCollection;\n    const downgradeSchema: (collection: IComponentsCollection) => (input: OpenApi.IJsonSchema) => SwaggerV2.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/converters/SwaggerV2Upgrader.d.ts",'import { OpenApi } from "../OpenApi";\nimport { SwaggerV2 } from "../SwaggerV2";\nexport declare namespace SwaggerV2Upgrader {\n    const convert: (input: SwaggerV2.IDocument) => OpenApi.IDocument;\n    const convertSchema: (definitions: Record<string, SwaggerV2.IJsonSchema>) => (input: SwaggerV2.IJsonSchema) => OpenApi.IJsonSchema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/functional/_isBigintString.d.ts","export declare const _isBigintString: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatByte.d.ts","export declare const _isFormatByte: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatDate.d.ts","export declare const _isFormatDate: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatDateTime.d.ts","export declare const _isFormatDateTime: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatDuration.d.ts","export declare const _isFormatDuration: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatEmail.d.ts","export declare const _isFormatEmail: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatHostname.d.ts","export declare const _isFormatHostname: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIdnEmail.d.ts","export declare const _isFormatIdnEmail: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIdnHostname.d.ts","export declare const _isFormatIdnHostname: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIpv4.d.ts","export declare const _isFormatIpv4: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIpv6.d.ts","export declare const _isFormatIpv6: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIri.d.ts","export declare const _isFormatIri: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatIriReference.d.ts","export declare const _isFormatIriReference: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatJsonPointer.d.ts","export declare const _isFormatJsonPointer: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatPassword.d.ts","export declare const _isFormatPassword: () => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatRegex.d.ts","export declare const _isFormatRegex: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatRelativeJsonPointer.d.ts","export declare const _isFormatRelativeJsonPointer: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatTime.d.ts","export declare const _isFormatTime: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatUri.d.ts","export declare const _isFormatUri: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatUriReference.d.ts","export declare const _isFormatUriReference: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatUriTemplate.d.ts","export declare const _isFormatUriTemplate: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatUrl.d.ts","export declare const _isFormatUrl: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isFormatUuid.d.ts","export declare const _isFormatUuid: (str: string) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/functional/_isUniqueItems.d.ts","export declare const _isUniqueItems: (elements: any[]) => boolean;\n"],["file:///node_modules/@samchon/openapi/lib/http/HttpError.d.ts",'/**\n * HTTP Error.\n *\n * `HttpError` is a type of error class who\'ve been thrown by the remote HTTP server.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare class HttpError extends Error {\n    readonly method: "GET" | "DELETE" | "POST" | "PUT" | "PATCH" | "HEAD";\n    readonly path: string;\n    readonly status: number;\n    readonly headers: Record<string, string | string[]>;\n    /**\n     * Initializer Constructor.\n     *\n     * @param method Method of the HTTP request.\n     * @param path Path of the HTTP request.\n     * @param status Status code from the remote HTTP server.\n     * @param message Error message from the remote HTTP server.\n     */\n    constructor(method: "GET" | "DELETE" | "POST" | "PUT" | "PATCH" | "HEAD", path: string, status: number, headers: Record<string, string | string[]>, message: string);\n    /**\n     * `HttpError` to JSON.\n     *\n     * When you call `JSON.stringify()` function on current `HttpError` instance,\n     * this `HttpError.toJSON()` method would be automatically called.\n     *\n     * Also, if response body from the remote HTTP server forms a JSON object,\n     * this `HttpError.toJSON()` method would be useful because it returns the\n     * parsed JSON object about the {@link message} property.\n     *\n     * @template T Expected type of the response body.\n     * @returns JSON object of the `HttpError`.\n     */\n    toJSON<T>(): HttpError.IProps<T>;\n}\nexport declare namespace HttpError {\n    /**\n     * Returned type of {@link HttpError.toJSON} method.\n     */\n    interface IProps<T> {\n        method: "GET" | "DELETE" | "POST" | "PUT" | "PATCH" | "HEAD";\n        path: string;\n        status: number;\n        headers: Record<string, string | string[]>;\n        message: T;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/http/HttpLlmFunctionFetcher.d.ts",'import type { HttpLlm } from "../HttpLlm";\nimport { IHttpResponse } from "../structures/IHttpResponse";\nimport { ILlmSchema } from "../structures/ILlmSchema";\nexport declare namespace HttpLlmFunctionFetcher {\n    const execute: <Model extends ILlmSchema.Model>(props: HttpLlm.IFetchProps<Model>) => Promise<unknown>;\n    const propagate: <Model extends ILlmSchema.Model>(props: HttpLlm.IFetchProps<Model>) => Promise<IHttpResponse>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/http/HttpMigrateRouteFetcher.d.ts",'import type { HttpMigration } from "../HttpMigration";\nimport { IHttpResponse } from "../structures/IHttpResponse";\nexport declare namespace HttpMigrateRouteFetcher {\n    const execute: (props: HttpMigration.IFetchProps) => Promise<unknown>;\n    const propagate: (props: HttpMigration.IFetchProps) => Promise<IHttpResponse>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/index.d.ts",'export * from "./OpenApi";\nexport * from "./SwaggerV2";\nexport * from "./OpenApiV3";\nexport * from "./OpenApiV3_1";\nexport * from "./structures/IJsonSchemaAttribute";\nexport * from "./utils/OpenApiTypeChecker";\nexport * from "./structures/IHttpMigrateApplication";\nexport * from "./structures/IHttpMigrateRoute";\nexport * from "./structures/IHttpConnection";\nexport * from "./structures/IHttpResponse";\nexport * from "./http/HttpError";\nexport * from "./HttpMigration";\nexport * from "./structures/IOpenApiSchemaError";\nexport * from "./structures/IResult";\nexport * from "./structures/IValidation";\nexport * from "./structures/IHttpLlmController";\nexport * from "./structures/ILlmController";\nexport * from "./structures/IMcpLlmController";\nexport * from "./structures/IHttpLlmApplication";\nexport * from "./structures/IHttpLlmFunction";\nexport * from "./structures/ILlmApplication";\nexport * from "./structures/ILlmFunction";\nexport * from "./structures/IChatGptSchema";\nexport * from "./structures/IClaudeSchema";\nexport * from "./structures/IDeepSeekSchema";\nexport * from "./structures/IGeminiSchema";\nexport * from "./structures/ILlamaSchema";\nexport * from "./structures/ILlmSchema";\nexport * from "./structures/ILlmSchemaV3";\nexport * from "./structures/ILlmSchemaV3_1";\nexport * from "./utils/ChatGptTypeChecker";\nexport * from "./utils/ClaudeTypeChecker";\nexport * from "./utils/DeepSeekTypeChecker";\nexport * from "./utils/GeminiTypeChecker";\nexport * from "./utils/LlamaTypeChecker";\nexport * from "./utils/LlmTypeCheckerV3";\nexport * from "./utils/LlmTypeCheckerV3_1";\nexport * from "./HttpLlm";\nexport * from "./McpLlm";\nexport * from "./structures/IMcpLlmApplication";\nexport * from "./structures/IMcpLlmFunction";\nexport * from "./structures/IMcpTool";\n'],["file:///node_modules/@samchon/openapi/lib/structures/IChatGptSchema.d.ts",'import { IJsonSchemaAttribute } from "./IJsonSchemaAttribute";\n/**\n * Type schema info of the ChatGPT.\n *\n * `IChatGptSchema` is a type schema info of the ChatGPT function calling.\n *\n * `IChatGptSchema` basically follows the JSON schema definition of the OpenAPI v3.1\n * speciifcation; {@link OpenApiV3_1.IJsonSchema}.\n *\n * However, the `IChatGptSchema` does not follow the entire specification of\n * the OpenAPI v3.1. It has own specific restrictions and definitions. Here is the\n * list of how `IChatGptSchema` is different with the OpenAPI v3.1 JSON schema.\n *\n * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n * - Tuple type is banned: {@link OpenApiV3_1.IJsonSchema.ITuple.prefixItems}\n * - Constant type is banned: {@link OpenApiV3_1.IJsonSchema.IConstant}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IOneOf} to {@link IChatGptSchema.IAnOf}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link IChatGptSchema.IObject}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link IChatGptSchema.IReference}\n * - When {@link IChatGptSchema.IConfig.strict} mode\n *   - Every object properties must be required\n *   - Do not allow {@link IChatGptSchema.IObject.additionalProperties}\n *\n * If compare with the {@link OpenApi.IJsonSchema}, the emended JSON schema specification,\n *\n * - {@link IChatGptSchema.IAnyOf} instead of the {@link OpenApi.IJsonSchema.IOneOf}\n * - {@link IChatGptSchema.IParameters.$defs} instead of the {@link OpenApi.IJsonSchema.IComponents.schemas}\n * - {@link IChatGptSchema.IString.enum} instead of the {@link OpenApi.IJsonSchema.IConstant}\n * - {@link IChatGptSchema.additionalProperties} is fixed to `false`\n * - No tuple type {@link OpenApi.IJsonSchema.ITuple} support\n * - When {@link IChatGptSchema.IConfig.strict} mode\n *   - Every object properties must be required\n *   - Do not allow {@link IChatGptSchema.IObject.additionalProperties}\n *\n * For reference, if you\'ve composed the `IChatGptSchema` type with the\n * {@link IChatGptSchema.IConfig.reference} `false` option (default is `false`),\n * only the recursived named types would be archived into the\n * {@link IChatGptSchema.IParameters.$defs}, and the others would be ecaped from the\n * {@link IChatGptSchema.IReference} type.\n *\n * Also, OpenAI has banned below constraint properties. Instead, `IChatGptSchema`\n * fills the {@link IChatGptSchema.__IAttribute.description} property with\n * the comment text like `"@format uuid"`.\n *\n * - {@link OpenApi.IJsonSchema.INumber.minimum}\n * - {@link OpenApi.IJsonSchema.INumber.maximum}\n * - {@link OpenApi.IJsonSchema.INumber.multipleOf}\n * - {@link OpenApi.IJsonSchema.IString.minLength}\n * - {@link OpenApi.IJsonSchema.IString.maxLength}\n * - {@link OpenApi.IJsonSchema.IString.format}\n * - {@link OpenApi.IJsonSchema.IString.pattern}\n * - {@link OpenApi.IJsonSchema.IString.contentMediaType}\n * - {@link OpenApi.IJsonSchema.IString.default}\n * - {@link OpenApi.IJsonSchema.IArray.minItems}\n * - {@link OpenApi.IJsonSchema.IArray.maxItems}\n * - {@link OpenApi.IJsonSchema.IArray.unique}\n *\n * Additionally, OpenAI cannot define the `description` property to the\n * {@link IChatGptSchema.IReference} type, and even does not understand\n * the capsulization to the {@link IChatGptSchema.IAnyOf} type.\n * Therefore, the `description` is written to the parent object type,\n * not the reference type.\n *\n * ```json\n * {\n *   "type": "object",\n *   "description": "### Description of {@link something} property.\\n\\n> Hello?",\n *   "properties": {\n *     "something": {\n *       "$ref": "#/$defs/SomeObject"\n *     }\n *   }\n * }\n * ```\n *\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n * @warning Specified not only by the official documentation, but also by my\n *          experiments. Therefore, its definitions can be inaccurate or be\n *          changed in the future. If you find any wrong or outdated definitions,\n *          please let me know by issue.\n * @issue https://github.com/samchon/openapi/issues\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IChatGptSchema = IChatGptSchema.IBoolean | IChatGptSchema.IInteger | IChatGptSchema.INumber | IChatGptSchema.IString | IChatGptSchema.IArray | IChatGptSchema.IObject | IChatGptSchema.IReference | IChatGptSchema.IAnyOf | IChatGptSchema.INull | IChatGptSchema.IUnknown;\nexport declare namespace IChatGptSchema {\n    /**\n     * Type of the function parameters.\n     *\n     * `IChatGptSchema.IParameters` is a type defining a function\'s parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    interface IParameters extends Omit<IObject, "additionalProperties"> {\n        /**\n         * Collection of the named types.\n         */\n        $defs: Record<string, IChatGptSchema>;\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * By the way, it is not allowed in the parameters level.\n         */\n        additionalProperties: false;\n    }\n    /**\n     * Boolean type info.\n     */\n    interface IBoolean extends IJsonSchemaAttribute.IBoolean {\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<boolean>;\n    }\n    /**\n     * Integer type info.\n     */\n    interface IInteger extends IJsonSchemaAttribute.IInteger {\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<number>;\n    }\n    /**\n     * Number (double) type info.\n     */\n    interface INumber extends IJsonSchemaAttribute.INumber {\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<number>;\n    }\n    /**\n     * String type info.\n     */\n    interface IString extends IJsonSchemaAttribute.IString {\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<string>;\n    }\n    /**\n     * Array type info.\n     */\n    interface IArray extends IJsonSchemaAttribute.IArray {\n        /**\n         * Items type info.\n         *\n         * The `items` means the type of the array elements. In other words, it is\n         * the type schema info of the `T` in the TypeScript array type `Array<T>`.\n         */\n        items: IChatGptSchema;\n    }\n    /**\n     * Object type info.\n     */\n    interface IObject extends IJsonSchemaAttribute.IObject {\n        /**\n         * Properties of the object.\n         *\n         * The `properties` means a list of key-value pairs of the object\'s\n         * regular properties. The key is the name of the regular property,\n         * and the value is the type schema info.\n         */\n        properties: Record<string, IChatGptSchema>;\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * By the way, if you\'ve configured {@link IChatGptSchema.IConfig.strict} as `true`,\n         * ChatGPT function calling does not support such dynamic key typed properties, so\n         * the `additionalProperties` becomes always `false`.\n         */\n        additionalProperties?: boolean | IChatGptSchema;\n        /**\n         * List of key values of the required properties.\n         *\n         * The `required` means a list of the key values of the required\n         * {@link properties}. If some property key is not listed in the `required`\n         * list, it means that property is optional. Otherwise some property key\n         * exists in the `required` list, it means that the property must be filled.\n         *\n         * Below is an example of the {@link properties} and `required`.\n         *\n         * ```typescript\n         * interface SomeObject {\n         *   id: string;\n         *   email: string;\n         *   name?: string;\n         * }\n         * ```\n         *\n         * As you can see, `id` and `email` {@link properties} are {@link required},\n         * so that they are listed in the `required` list.\n         *\n         * ```json\n         * {\n         *   "type": "object",\n         *   "properties": {\n         *     "id": { "type": "string" },\n         *     "email": { "type": "string" },\n         *     "name": { "type": "string" }\n         *   },\n         *   "required": ["id", "email"]\n         * }\n         * ```\n         */\n        required: string[];\n    }\n    /**\n     * Reference type directing named schema.\n     */\n    interface IReference extends IJsonSchemaAttribute {\n        /**\n         * Reference to the named schema.\n         *\n         * The `ref` is a reference to the named schema. Format of the `$ref` is\n         * following the JSON Pointer specification. In the OpenAPI, the `$ref`\n         * starts with `#/$defs/` which means the type is stored in\n         * the {@link IChatGptSchema.IParameters.$defs} object.\n         *\n         * - `#/$defs/SomeObject`\n         * - `#/$defs/AnotherObject`\n         */\n        $ref: string;\n    }\n    /**\n     * Union type.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, {@link IChatGptSchema} forcibly\n     * converts it to `oneOf` type.\n     */\n    interface IAnyOf extends IJsonSchemaAttribute {\n        /**\n         * List of the union types.\n         */\n        anyOf: Exclude<IChatGptSchema, IChatGptSchema.IAnyOf>[];\n    }\n    /**\n     * Null type.\n     */\n    interface INull extends IJsonSchemaAttribute.INull {\n    }\n    /**\n     * Unknown, the `any` type.\n     */\n    interface IUnknown extends IJsonSchemaAttribute.IUnknown {\n    }\n    /**\n     * Significant attributes that can be applied to the most types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    interface __ISignificant<Type extends string> extends __IAttribute {\n        /**\n         * Discriminator value of the type.\n         */\n        type: Type;\n    }\n    /**\n     * Common attributes that can be applied to all types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    type __IAttribute = IJsonSchemaAttribute;\n    /**\n     * Configuration for ChatGPT schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow reference type in everywhere.\n         *\n         * If you configure this property to `false`, most of reference types\n         * represented by {@link IChatGptSchema.IReference} would be escaped to\n         * a plain type unless recursive type case.\n         *\n         * This is because the lower version of ChatGPT does not understand the\n         * reference type well, and even the modern version of ChatGPT sometimes occur\n         * the hallucination.\n         *\n         * However, the reference type makes the schema size smaller, so that reduces\n         * the LLM token cost. Therefore, if you\'re using the modern version of ChatGPT,\n         * and want to reduce the LLM token cost, you can configure this property to\n         * `true`.\n         *\n         * @default false\n         */\n        reference: boolean;\n        /**\n         * Whether to apply the strict mode.\n         *\n         * If you configure this property to `true`, the ChatGPT function calling\n         * does not allow optional properties and dynamic key typed properties in the\n         * {@link IChatGptSchema.IObject} type. Instead, it increases the success\n         * rate of the function calling.\n         *\n         * By the way, if you utilize the {@link typia.validate} function and give\n         * its validation feedback to the ChatGPT, its performance is much better\n         * than the strict mode. Therefore, I recommend you to just turn off the\n         * strict mode and utilize the {@link typia.validate} function instead.\n         *\n         * @default false\n         */\n        strict?: boolean;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IClaudeSchema.d.ts","import { ILlmSchemaV3_1 } from \"./ILlmSchemaV3_1\";\n/**\n * Type schema info of the Claude.\n *\n * `IClaudeSchema` is a type schema info of the Claude function calling.\n *\n * `IClaudeSchema` seems fully supporting the JSON schema definition of the OpenAPI v3.1\n * specification; {@link OpenApiV3_1.IJsonSchema}. By the way, as the\n * {@link OpenApiV3_1.IJsonSchema} has too much ambiguous and duplicated expressions,\n * `IClaudeSchema` is designed to be clear and simple for the Claude function calling,\n * by utilizng {@link ILlmSchemaV3_1} which has been transformed from the\n * {@link OpenApi.IJsonSchema} for the convenience and clarity.\n *\n * Therefore, `IClaudeSchema` does not follow the entire specification of\n * the OpenAPI v3.1. It has own specific restrictions and definitions. Here is the\n * list of how `ILlmSchemaV3_1` is different with the OpenAPI v3.1 JSON schema.\n *\n * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n * - Tuple type is banned: {@link OpenApiV3_1.IJsonSchema.ITuple.prefixItems}\n * - Constant type is banned: {@link OpenApiV3_1.IJsonSchema.IConstant}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link IClaudeSchema.IOneOf}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link IClaudeSchema.IObject}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link IClaudeSchema.IReference}\n * - Do not support {@link OpenApiV3_1.IJsonSchema.ITuple} type\n *\n * If compare with the {@link OpenApi.IJsonSchema}, the emended JSON schema specification,\n *\n * - {@link IClaudeSchema.IParameters.$defs} instead of the {@link OpenApi.IJsonSchema.schemas}\n * - Do not support {@link OpenApi.IJsonSchema.ITuple} type\n * - {@link IClaudeSchema.properties} and {@link IClaudeSchema.required} are always defined\n *\n * For reference, if you've composed the `IClaudeSchema` type with the\n * {@link IClaudeSchema.IConfig.reference} `false` option (default is `false`), only the\n * recursive named types would be archived into the {@link IClaudeSchema.IParameters.$defs},\n * and the others would be escaped from the {@link IClaudeSchema.IReference} type.\n *\n * @reference https://docs.anthropic.com/en/docs/build-with-claude/tool-use\n * @reference https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/increase-consistency\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IClaudeSchema = IClaudeSchema.IConstant | IClaudeSchema.IBoolean | IClaudeSchema.IInteger | IClaudeSchema.INumber | IClaudeSchema.IString | IClaudeSchema.IArray | IClaudeSchema.IObject | IClaudeSchema.IReference | IClaudeSchema.IOneOf | IClaudeSchema.INull | IClaudeSchema.IUnknown;\nexport declare namespace IClaudeSchema {\n    /**\n     * Configuration for Claude schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow reference type in everywhere.\n         *\n         * If you configure this property to `false`, most of reference types\n         * represented by {@link IClaudeSchema.IReference} would be escaped to\n         * a plain type unless recursive type case.\n         *\n         * This is because some low sized LLM models does not understand the\n         * reference type well, and even the large size LLM models sometimes occur\n         * the hallucination.\n         *\n         * However, the reference type makes the schema size smaller, so that reduces\n         * the LLM token cost. Therefore, if you're using the large size of LLM model,\n         * and want to reduce the LLM token cost, you can configure this property to\n         * `true`.\n         *\n         * @default false\n         */\n        reference: boolean;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `IClaudeSchema.IParameters` is a type defining a function's parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    type IParameters = ILlmSchemaV3_1.IParameters;\n    /**\n     * Constant value type.\n     */\n    type IConstant = ILlmSchemaV3_1.IConstant;\n    /**\n     * Boolean type info.\n     */\n    type IBoolean = ILlmSchemaV3_1.IBoolean;\n    /**\n     * Integer type info.\n     */\n    type IInteger = ILlmSchemaV3_1.IInteger;\n    /**\n     * Number (double) type info.\n     */\n    type INumber = ILlmSchemaV3_1.INumber;\n    /**\n     * String type info.\n     */\n    type IString = ILlmSchemaV3_1.IString;\n    /**\n     * Array type info.\n     */\n    type IArray = ILlmSchemaV3_1.IArray;\n    /**\n     * Object type info.\n     */\n    type IObject = ILlmSchemaV3_1.IObject;\n    /**\n     * Reference type directing named schema.\n     */\n    type IReference = ILlmSchemaV3_1.IReference;\n    /**\n     * Union type.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\n     * converts it to `oneOf` type.\n     */\n    type IOneOf = ILlmSchemaV3_1.IOneOf;\n    namespace IOneOf {\n        /**\n         * Discriminator info of the union type.\n         */\n        type IDiscriminator = ILlmSchemaV3_1.IOneOf.IDiscriminator;\n    }\n    /**\n     * Null type.\n     */\n    type INull = ILlmSchemaV3_1.INull;\n    /**\n     * Unknown, the `any` type.\n     */\n    type IUnknown = ILlmSchemaV3_1.IUnknown;\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IDeepSeekSchema.d.ts","import { ILlmSchemaV3_1 } from \"./ILlmSchemaV3_1\";\n/**\n * Type schema info of the DeepSeek.\n *\n * `IDeepSeekSchema` is a type schema info of the DeepSeek function calling.\n *\n * `IDeepSeekSchema` seems fully supporting the JSON schema definition of the OpenAPI v3.1\n * specification; {@link OpenApiV3_1.IJsonSchema}. By the way, as the\n * {@link OpenApiV3_1.IJsonSchema} has too much ambiguous and duplicated expressions,\n * `IDeepSeekSchema` is designed to be clear and simple for the DeepSeek function calling,\n * by utilizing {@link ILlmSchemaV3_1} which has been transformed from the\n * {@link OpenApi.IJsonSchema} for the convenience and clarity.\n *\n * Therefore, `IDeepSeekSchema` does not follow the entire specification of\n * the OpenAPI v3.1. It has own specific restrictions and definitions. Here is the\n * list of how `ILlmSchemaV3_1` is different with the OpenAPI v3.1 JSON schema.\n *\n * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n * - Tuple type is banned: {@link OpenApiV3_1.IJsonSchema.ITuple.prefixItems}\n * - Constant type is banned: {@link OpenApiV3_1.IJsonSchema.IConstant}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link IDeepSeekSchema.IOneOf}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link IDeepSeekSchema.IObject}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link IDeepSeekSchema.IReference}\n * - Do not support {@link OpenApiV3_1.IJsonSchema.ITuple} type\n *\n * If compare with the {@link OpenApi.IJsonSchema}, the emended JSON schema specification,\n *\n * - {@link IDeepSeekSchema.IParameters.$defs} instead of the {@link OpenApi.IJsonSchema.schemas}\n * - Do not support {@link OpenApi.IJsonSchema.ITuple} type\n * - {@link IDeepSeekSchema.properties} and {@link IDeepSeekSchema.required} are always defined\n *\n * For reference, if you've composed the `IDeepSeekSchema` type with the\n * {@link IDeepSeekSchema.IConfig.reference} `false` option (default is `false`), only the\n * recursive named types would be archived into the {@link IDeepSeekSchema.IParameters.$defs},\n * and the others would be escaped from the {@link IDeepSeekSchema.IReference} type.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IDeepSeekSchema = IDeepSeekSchema.IConstant | IDeepSeekSchema.IBoolean | IDeepSeekSchema.IInteger | IDeepSeekSchema.INumber | IDeepSeekSchema.IString | IDeepSeekSchema.IArray | IDeepSeekSchema.IObject | IDeepSeekSchema.IReference | IDeepSeekSchema.IOneOf | IDeepSeekSchema.INull | IDeepSeekSchema.IUnknown;\nexport declare namespace IDeepSeekSchema {\n    /**\n     * Configuration for DeepSeek schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow reference type in everywhere.\n         *\n         * If you configure this property to `false`, most of reference types\n         * represented by {@link IDeepSeekSchema.IReference} would be escaped to\n         * a plain type unless recursive type case.\n         *\n         * This is because some low sized LLM models does not understand the\n         * reference type well, and even the large size LLM models sometimes occur\n         * the hallucination.\n         *\n         * However, the reference type makes the schema size smaller, so that reduces\n         * the LLM token cost. Therefore, if you're using the large size of LLM model,\n         * and want to reduce the LLM token cost, you can configure this property to\n         * `true`.\n         *\n         * @default false\n         */\n        reference: boolean;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `IDeepSeekSchema.IParameters` is a type defining a function's parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    type IParameters = ILlmSchemaV3_1.IParameters;\n    /**\n     * Constant value type.\n     */\n    type IConstant = ILlmSchemaV3_1.IConstant;\n    /**\n     * Boolean type info.\n     */\n    type IBoolean = ILlmSchemaV3_1.IBoolean;\n    /**\n     * Integer type info.\n     */\n    type IInteger = ILlmSchemaV3_1.IInteger;\n    /**\n     * Number (double) type info.\n     */\n    type INumber = ILlmSchemaV3_1.INumber;\n    /**\n     * String type info.\n     */\n    type IString = ILlmSchemaV3_1.IString;\n    /**\n     * Array type info.\n     */\n    type IArray = ILlmSchemaV3_1.IArray;\n    /**\n     * Object type info.\n     */\n    type IObject = ILlmSchemaV3_1.IObject;\n    /**\n     * Reference type directing named schema.\n     */\n    type IReference = ILlmSchemaV3_1.IReference;\n    /**\n     * Union type.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\n     * converts it to `oneOf` type.\n     */\n    type IOneOf = ILlmSchemaV3_1.IOneOf;\n    namespace IOneOf {\n        /**\n         * Discriminator info of the union type.\n         */\n        type IDiscriminator = ILlmSchemaV3_1.IOneOf.IDiscriminator;\n    }\n    /**\n     * Null type.\n     */\n    type INull = ILlmSchemaV3_1.INull;\n    /**\n     * Unknown, the `any` type.\n     */\n    type IUnknown = ILlmSchemaV3_1.IUnknown;\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IGeminiSchema.d.ts",'import { IJsonSchemaAttribute } from "./IJsonSchemaAttribute";\n/**\n * Type schema info for the Gemini function calling.\n *\n * `IGeminiSchema` is a type metadata for the LLM (Large Language Model)\n * function calling in the Geminimi.\n *\n * `IGeminiSchema` basically follows the JSON schema definition of the\n * OpenAPI v3.0 specification; {@link OpenApiV3.IJsonSchema}. However,\n * `IGeminiSchema` cannot understand union and reference types, represented\n * by the `oneOf` and `$ref` properties. Also, as OpenAPI v3.0 specification\n * does not support the tuple type, `IGeminiSchema` does not support the\n * tuple type either.\n *\n * - Does not support\n *   - {@link OpenApiV3.IJsonSchema.IReference}\n *   - {@link OpenApiV3.IJsonSchema.IAllOf}\n *   - {@link OpenApiV3.IJsonSchema.IAnyOf}\n *   - {@link OpenApiV3.IJsonSchema.IOneOf}\n *   - {@link OpenApiV3.IJsonSchema.IObject.additionalProperties}\n *   - {@link OpenApiV3.IJsonSchema.__IAttribute.title}\n *\n * If compare with {@link OpenApi.IJsonSchema}, the emended JSON schema type,\n * these are not supported in the Gemini schema. One thing interesting is,\n * the Gemini does not support the `title` property, so it would be revealed\n * in the {@link IGeminiSchema.__IAttribute.description} property instead.\n *\n *   - {@link OpenApi.IJsonSchema.IReference}\n *   - {@link OpenApi.IJsonSchema.IOneOf}\n *   - {@link OpenApi.IJsonSchema.ITuple}\n *   - {@link OpenApi.IJsonSchema.IObject.additionalProperties}\n *   - {@link OpenApi.IJsonSchema.__IAttribute.title}\n *\n * Also, Gemini has banned below constraint properties. Instead, I\'ll will\n * fill the {@link IGeminiSchema.__IAttribute.description} property with\n * the comment text like `"@format uuid"`.\n *\n * - {@link OpenApi.IJsonSchema.INumber.minimum}\n * - {@link OpenApi.IJsonSchema.INumber.maximum}\n * - {@link OpenApi.IJsonSchema.INumber.multipleOf}\n * - {@link OpenApi.IJsonSchema.IString.minLength}\n * - {@link OpenApi.IJsonSchema.IString.maxLength}\n * - {@link OpenApi.IJsonSchema.IString.format}\n * - {@link OpenApi.IJsonSchema.IString.pattern}\n * - {@link OpenApi.IJsonSchema.IString.contentMediaType}\n * - {@link OpenApi.IJsonSchema.IString.default}\n * - {@link OpenApi.IJsonSchema.IArray.minItems}\n * - {@link OpenApi.IJsonSchema.IArray.maxItems}\n * - {@link OpenApi.IJsonSchema.IArray.uniqueItems}\n *\n * @reference https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/function-calling\n * @reference https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/function-calling\n * @reference https://ai.google.dev/gemini-api/docs/structured-output\n * @warning Specified not only by the official documentation, but also by my\n *          experiments. Therefore, its definitions can be inaccurate or be\n *          changed in the future. If you find any wrong or outdated definitions,\n *          please let me know by issue.\n * @issue https://github.com/samchon/openapi/issues\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IGeminiSchema = IGeminiSchema.IBoolean | IGeminiSchema.IInteger | IGeminiSchema.INumber | IGeminiSchema.IString | IGeminiSchema.IArray | IGeminiSchema.IObject | IGeminiSchema.IUnknown | IGeminiSchema.INullOnly;\nexport declare namespace IGeminiSchema {\n    /**\n     * Configuration for the Gemini schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow recursive types or not.\n         *\n         * If allow, then how many times to repeat the recursive types.\n         *\n         * By the way, if the model is "chatgpt", the recursive types are always\n         * allowed without any limitation, due to it supports the reference type.\n         *\n         * @default 3\n         */\n        recursive: false | number;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `IGeminiSchema.IParameters` is a type defining a function\'s parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://ai.google.dev/gemini-api/docs/structured-output\n     */\n    type IParameters = IObject;\n    /**\n     * Boolean type schema info.\n     */\n    interface IBoolean extends IJsonSchemaAttribute.IBoolean {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<boolean | null>;\n    }\n    /**\n     * Integer type schema info.\n     */\n    interface IInteger extends IJsonSchemaAttribute.IInteger {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Enumeration values.\n         *\n         * @type int64\n         */\n        enum?: Array<number | null>;\n    }\n    /**\n     * Number type schema info.\n     */\n    interface INumber extends IJsonSchemaAttribute.INumber {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<number | null>;\n    }\n    /**\n     * String type schema info.\n     */\n    interface IString extends IJsonSchemaAttribute.IString {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<string | null>;\n    }\n    /**\n     * Array type schema info.\n     */\n    interface IArray extends IJsonSchemaAttribute.IArray {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Items type schema info.\n         *\n         * The `items` means the type of the array elements. In other words, it is\n         * the type schema info of the `T` in the TypeScript array type `Array<T>`.\n         */\n        items: IGeminiSchema;\n    }\n    /**\n     * Object type schema info.\n     */\n    interface IObject extends IJsonSchemaAttribute.IObject {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Properties of the object.\n         *\n         * The `properties` means a list of key-value pairs of the object\'s\n         * regular properties. The key is the name of the regular property,\n         * and the value is the type schema info.\n         *\n         * If you need additional properties that is represented by dynamic key,\n         * it is not possible to compose because the Gemini does not support it.\n         */\n        properties: Record<string, IGeminiSchema>;\n        /**\n         * List of key values of the required properties.\n         *\n         * The `required` means a list of the key values of the required\n         * {@link properties}. If some property key is not listed in the `required`\n         * list, it means that property is optional. Otherwise some property key\n         * exists in the `required` list, it means that the property must be filled.\n         *\n         * Below is an example of the {@link properties} and `required`.\n         *\n         * ```typescript\n         * interface SomeObject {\n         *   id: string;\n         *   email: string;\n         *   name?: string;\n         * }\n         * ```\n         *\n         * As you can see, `id` and `email` {@link properties} are {@link required},\n         * so that they are listed in the `required` list.\n         *\n         * ```json\n         * {\n         *   "type": "object",\n         *   "properties": {\n         *     "id": { "type": "string" },\n         *     "email": { "type": "string" },\n         *     "name": { "type": "string" }\n         *   },\n         *   "required": ["id", "email"]\n         * }\n         * ```\n         */\n        required: string[];\n    }\n    /**\n     * Null only type schema info.\n     */\n    interface INullOnly extends IJsonSchemaAttribute.INull {\n    }\n    /**\n     * Unknown type schema info.\n     *\n     * It means the type of the value is `any`.\n     */\n    interface IUnknown extends IJsonSchemaAttribute.IUnknown {\n    }\n    /**\n     * Significant attributes that can be applied to the most types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    interface __ISignificant<Type extends string> extends __IAttribute {\n        /**\n         * Discriminator value of the type.\n         */\n        type: Type;\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n    }\n    /**\n     * Common attributes that can be applied to all types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    type __IAttribute = IJsonSchemaAttribute;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpConnection.d.ts",'/**\n * Connection information.\n *\n * `IConnection` is an interface ttype who represents connection information of the\n * remote HTTP server. You can target the remote HTTP server by wring the\n * {@link IHttpConnection.host} variable down. Also, you can configure special header values\n * by specializing the {@link IHttpConnection.headers} variable.\n *\n * If the remote HTTP server encrypts or decrypts its body data through the AES-128/256\n * algorithm, specify the {@link IHttpConnection.encryption} with {@link IEncryptionPassword}\n * or {@link IEncryptionPassword.Closure} variable.\n *\n * @author Jenogho Nam - https://github.com/samchon\n * @author Seungjun We - https://github.com/SeungjunWe\n */\nexport interface IHttpConnection {\n    /**\n     * Host address of the remote HTTP server.\n     */\n    host: string;\n    /**\n     * Header values delivered to the remote HTTP server.\n     */\n    headers?: Record<string, IHttpConnection.HeaderValue>;\n    /**\n     * Additional options for the `fetch` function.\n     */\n    options?: IHttpConnection.IOptions;\n    /**\n     * Custom fetch function.\n     *\n     * If you want to use custom `fetch` function instead of built-in,\n     * assign your custom `fetch` function into this property.\n     *\n     * For reference, the `fetch` function has started to be supported\n     * since version 20 of NodeJS. Therefore, if you are using NodeJS\n     * version 19 or lower, you have to assign the `node-fetch` module\n     * into this property.\n     */\n    fetch?: typeof fetch;\n}\nexport declare namespace IHttpConnection {\n    /**\n     * Additional options for the `fetch` function.\n     *\n     * Almost same with {@link RequestInit} type of the {@link fetch} function,\n     * but `body`, `headers` and `method` properties are omitted.\n     *\n     * The reason why defining duplicated definition of {@link RequestInit}\n     * is for legacy NodeJS environments, which does not have the {@link fetch}\n     * function type.\n     */\n    interface IOptions {\n        /**\n         * A string indicating how the request will interact with the browser\'s\n         * cache to set request\'s cache.\n         */\n        cache?: "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload";\n        /**\n         * A string indicating whether credentials will be sent with the request\n         * always, never, or only when sent to a same-origin URL. Sets request\'s\n         * credentials.\n         */\n        credentials?: "omit" | "same-origin" | "include";\n        /**\n         * A cryptographic hash of the resource to be fetched by request.\n         *\n         * Sets request\'s integrity.\n         */\n        integrity?: string;\n        /**\n         * A boolean to set request\'s keepalive.\n         */\n        keepalive?: boolean;\n        /**\n         * A string to indicate whether the request will use CORS, or will be\n         * restricted to same-origin URLs.\n         *\n         * Sets request\'s mode.\n         */\n        mode?: "cors" | "navigate" | "no-cors" | "same-origin";\n        /**\n         * A string indicating whether request follows redirects, results in\n         * an error upon encountering a redirect, or returns the redirect\n         * (in an opaque fashion).\n         *\n         * Sets request\'s redirect.\n         */\n        redirect?: "error" | "follow" | "manual";\n        /**\n         * A string whose value is a same-origin URL, "about:client", or the\n         * empty string, to set request\'s referrer.\n         */\n        referrer?: string;\n        /**\n         * A referrer policy to set request\'s referrerPolicy.\n         */\n        referrerPolicy?: "" | "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url";\n        /**\n         * An AbortSignal to set request\'s signal.\n         */\n        signal?: AbortSignal | null;\n    }\n    /**\n     * Type of allowed header values.\n     *\n     * Only atomic or array of atomic values are allowed.\n     */\n    type HeaderValue = string | boolean | number | bigint | string | Array<boolean> | Array<number> | Array<bigint> | Array<number> | Array<string>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpLlmApplication.d.ts",'import { OpenApi } from "../OpenApi";\nimport { IHttpLlmFunction } from "./IHttpLlmFunction";\nimport { IHttpMigrateRoute } from "./IHttpMigrateRoute";\nimport { ILlmApplication } from "./ILlmApplication";\nimport { ILlmSchema } from "./ILlmSchema";\n/**\n * Application of LLM function call from OpenAPI document.\n *\n * `IHttpLlmApplication` is a data structure representing a collection of\n * {@link IHttpLlmFunction LLM function calling schemas} composed from the\n * {@link OpenApi.IDocument OpenAPI document} and its {@link OpenApi.IOperation operation}\n * metadata. It also contains {@link IHttpLlmApplication.errors failed operations}, and\n * adjusted {@link IHttpLlmApplication.options options} during the `IHttpLlmApplication`\n * construction.\n *\n * About the {@link OpenApi.IOperation API operations}, they are converted to\n * {@link IHttpLlmFunction} type which represents LLM function calling schema.\n * By the way, if there\'re some types which does not supported by LLM, the operation\n * would be failed and pushed into the {@link IHttpLlmApplication.errors}. Otherwise not,\n * the operation would be successfully converted to {@link IHttpLlmFunction} and its\n * type schemas are downgraded to {@link OpenApiV3.IJsonSchema} and converted to\n * {@link ILlmSchemaV3}.\n *\n * For reference, the arguments type is composed by below rule.\n *\n * - `pathParameters`: Path parameters of {@link IHttpMigrateRoute.parameters}\n * - `query`: Query parameter of {@link IHttpMigrateRoute.query}\n * - `body`: Body parameter of {@link IHttpMigrateRoute.body}\n *\n * ```typescript\n * {\n *   ...pathParameters,\n *   query,\n *   body,\n * }\n * ```\n *\n * By the way, there can be some parameters (or their nested properties) which must be\n * composed by Human, not by LLM. File uploading feature or some sensitive information\n * like secret key (password) are the examples. In that case, you can separate the\n * function parameters to both LLM and Human sides by configuring the\n * {@link IHttpLlmApplication.IOptions.separate} property. The separated parameters are\n * assigned to the {@link IHttpLlmFunction.separated} property.\n *\n * For reference, the actual function call execution is not by LLM, but by you.\n * When the LLM selects the proper function and fills the arguments, you just call\n * the function by {@link HttpLlm.execute} with the LLM prepared arguments. And then\n * informs the return value to the LLM by system prompt. The LLM will continue the next\n * conversation based on the return value.\n *\n * Additionally, if you\'ve configured {@link IHttpLlmApplication.IOptions.separate},\n * so that the parameters are separated to Human and LLM sides, you can merge these\n * humand and LLM sides\' parameters into one through {@link HttpLlm.mergeParameters}\n * before the actual LLM function call execution.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpLlmApplication<Model extends ILlmSchema.Model> {\n    /**\n     * Model of the target LLM.\n     */\n    model: Model;\n    /**\n     * List of function metadata.\n     *\n     * List of function metadata that can be used for the LLM function call.\n     *\n     * When you want to execute the function with LLM constructed arguments,\n     * you can do it through {@link LlmFetcher.execute} function.\n     */\n    functions: IHttpLlmFunction<Model>[];\n    /**\n     * List of errors occurred during the composition.\n     */\n    errors: IHttpLlmApplication.IError[];\n    /**\n     * Configuration for the application.\n     */\n    options: IHttpLlmApplication.IOptions<Model>;\n}\nexport declare namespace IHttpLlmApplication {\n    /**\n     * Options for the HTTP LLM application schema composition.\n     */\n    type IOptions<Model extends ILlmSchema.Model> = ILlmApplication.IOptions<Model> & {\n        /**\n         * Maximum length of function name.\n         *\n         * When a function name is longer than this value, it will be truncated.\n         *\n         * If not possible to truncate due to the duplication, the function name\n         * would be modified to randomly generated (UUID v4).\n         *\n         * @default 64\n         */\n        maxLength?: number;\n    };\n    /**\n     * Error occurred in the composition.\n     */\n    interface IError {\n        /**\n         * HTTP method of the endpoint.\n         */\n        method: "get" | "post" | "put" | "patch" | "delete" | "head";\n        /**\n         * Path of the endpoint.\n         */\n        path: string;\n        /**\n         * Error messages.\n         */\n        messages: string[];\n        /**\n         * Get the Swagger operation metadata.\n         *\n         * Get the Swagger operation metadata, of the source.\n         */\n        operation: () => OpenApi.IOperation;\n        /**\n         * Get the migration route metadata.\n         *\n         * Get the migration route metadata, of the source.\n         *\n         * If the property returns `undefined`, it means that the error has\n         * been occurred in the migration level, not of LLM application composition.\n         *\n         * @returns Migration route metadata.\n         */\n        route: () => IHttpMigrateRoute | undefined;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpLlmController.d.ts",'import { IHttpConnection } from "./IHttpConnection";\nimport { IHttpLlmApplication } from "./IHttpLlmApplication";\nimport { IHttpLlmFunction } from "./IHttpLlmFunction";\nimport { IHttpResponse } from "./IHttpResponse";\nimport { ILlmSchema } from "./ILlmSchema";\n/**\n * Controller of HTTP LLM function calling.\n *\n * `IHttpLlmController` is a controller of HTTP LLM function calling,\n * containing not only the {@link IHttpLlmApplication application} of\n * {@link IHttpLlmFunction function calling schemas}, but also\n * {@link name identifier name} of the application and\n * {@link execute executor} of its HTTP functions.\n *\n * Here is an example of using `IHttpLlmController` type for AI agent\n * development of performing AI function calling to e-commerce API\n * functions through `@agentica`.\n *\n * ```typescript\n * import { Agentica } from "@agentica/core";\n * import { HttpLlm, OpenApi } from "@samchon/openapi";\n *\n * const agentica = new Agentica({\n *   model: "chatgpt",\n *   vendor: {\n *     api: new OpenAI({ apiKey: "********" }),\n *     model: "gpt-4o-mini",\n *   },\n *   controllers: [\n *     {\n *       protocol: "http",\n *       name: "shopping",\n *       application: HttpLlm.application(\n *         model: "chatgpt",\n *         document: await fetch(\n *           "https://shopping-be.wrtn.io/editor/swagger.json",\n *         ).then((r) => r.json()),\n *       ),\n *       connection: {\n *         host: "https://shopping-be.wrtn.io",\n *         headers: {\n *           Authorization: "Bearer ********",\n *         },\n *       },\n *     },\n *   ],\n * });\n * await agentica.conversate("I wanna buy a new phone.");\n * ```\n *\n * For reference, this `IHttpLlmController` type is designed for\n * HTTP API servers. If you want to make a controller of another\n * {@link protocol} like MCP or TypeScript, use below types instead:\n *\n * - {@link IMcpLlmController} for MCP\n * - {@link ILlmController} for TypeScript\n *\n * @template Model Type of the LLM model\n * @reference https://wrtnlabs.io/agentica/docs/core/controller/swagger/\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpLlmController<Model extends ILlmSchema.Model> {\n    /**\n     * Protocol discriminator.\n     */\n    protocol: "http";\n    /**\n     * Identifier name of the controller.\n     */\n    name: string;\n    /**\n     * Application schema of function calling.\n     */\n    application: IHttpLlmApplication<Model>;\n    /**\n     * Connection to the server.\n     *\n     * Connection to the API server including the URL and headers.\n     */\n    connection: IHttpConnection;\n    /**\n     * Executor of the API function.\n     *\n     * Default executor is {@link HttpLlm.execute} function, and you can\n     * override it with your own function.\n     *\n     * @param props Properties of the API function call\n     * @returns HTTP response of the API function call\n     */\n    execute?: undefined | ((props: {\n        /**\n         * Connection to the server.\n         */\n        connection: IHttpConnection;\n        /**\n         * Application schema.\n         */\n        application: IHttpLlmApplication<Model>;\n        /**\n         * Function schema.\n         */\n        function: IHttpLlmFunction<Model>;\n        /**\n         * Arguments of the function calling.\n         *\n         * It is an object of key-value pairs of the API function\'s parameters.\n         * The property keys are composed by below rules:\n         *\n         * - parameter names\n         * - query parameter as an object type if exists\n         * - body parameter if exists\n         */\n        arguments: object;\n    }) => Promise<IHttpResponse>);\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpLlmFunction.d.ts",'import { OpenApi } from "../OpenApi";\nimport { IHttpMigrateRoute } from "./IHttpMigrateRoute";\nimport { ILlmSchema } from "./ILlmSchema";\nimport { IValidation } from "./IValidation";\n/**\n * LLM function calling schema from HTTP (OpenAPI) operation.\n *\n * `IHttpLlmFunction` is a data structure representing a function converted\n * from the {@link OpenApi.IOperation OpenAPI operation}, used for the LLM\n * (Large Language Model) function calling. It\'s a typical RPC (Remote Procedure Call)\n * structure containing the function {@link name}, {@link parameters}, and\n * {@link output return type}.\n *\n * If you provide this `IHttpLlmFunction` data to the LLM provider like "OpenAI",\n * the "OpenAI" will compose a function arguments by analyzing conversations with\n * the user. With the LLM composed arguments, you can execute the function through\n * {@link LlmFetcher.execute} and get the result.\n *\n * For reference, different between `IHttpLlmFunction` and its origin source\n * {@link OpenApi.IOperation} is, `IHttpLlmFunction` has converted every type schema\n * information from {@link OpenApi.IJsonSchema} to {@link ILlmSchemaV3} to escape\n * {@link OpenApi.IJsonSchema.IReference reference types}, and downgrade the version\n * of the JSON schema to OpenAPI 3.0. It\'s because LLM function call feature cannot\n * understand both reference types and OpenAPI 3.1 specification.\n *\n * Additionally, the properties\' rule is:\n *\n * - `pathParameters`: Path parameters of {@link OpenApi.IOperation.parameters}\n * - `query`: Query parameter of {@link IHttpMigrateRoute.query}\n * - `body`: Body parameter of {@link IHttpMigrateRoute.body}\n *\n * ```typescript\n * {\n *   ...pathParameters,\n *   query,\n *   body,\n * }\n * ```\n *\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpLlmFunction<Model extends ILlmSchema.Model> {\n    /**\n     * HTTP method of the endpoint.\n     */\n    method: "get" | "post" | "patch" | "put" | "delete";\n    /**\n     * Path of the endpoint.\n     */\n    path: string;\n    /**\n     * Representative name of the function.\n     *\n     * The `name` is a repsentative name identifying the function in the\n     * {@link IHttpLlmApplication}. The `name` value is just composed by joining the\n     * {@link IHttpMigrateRoute.accessor} by underscore `_` character.\n     *\n     * Here is the composition rule of the  {@link IHttpMigrateRoute.accessor}:\n     *\n     * > The `accessor` is composed with the following rules. At first,\n     * > namespaces are composed by static directory names in the {@link path}.\n     * > Parametric symbols represented by `:param` or `{param}` cannot be\n     * > a part of the namespace.\n     * >\n     * > Instead, they would be a part of the function name. The function\n     * > name is composed with the {@link method HTTP method} and parametric\n     * > symbols like `getByParam` or `postByParam`. If there are multiple\n     * > path parameters, they would be concatenated by `And` like\n     * > `getByParam1AndParam2`.\n     * >\n     * > For refefence, if the {@link operation}\'s {@link method} is `delete`,\n     * > the function name would be replaced to `erase` instead of `delete`.\n     * > It is the reason why the `delete` is a reserved keyword in many\n     * > programming languages.\n     * >\n     * > - Example 1\n     * >   - path: `POST /shopping/sellers/sales`\n     * >   - accessor: `shopping.sellers.sales.post`\n     * > - Example 2\n     * >   - endpoint: `GET /shoppings/sellers/sales/:saleId/reviews/:reviewId/comments/:id\n     * >   - accessor: `shoppings.sellers.sales.reviews.getBySaleIdAndReviewIdAndCommentId`\n     *\n     * @maxLength 64\n     */\n    name: string;\n    /**\n     * List of parameter types.\n     *\n     * If you\'ve configured {@link IHttpLlmApplication.IOptions.keyword} as `true`,\n     * number of {@link IHttpLlmFunction.parameters} are always 1 and the first\n     * parameter\'s type is always {@link ILlmSchemaV3.IObject}. The\n     * properties\' rule is:\n     *\n     * - `pathParameters`: Path parameters of {@link IHttpMigrateRoute.parameters}\n     * - `query`: Query parameter of {@link IHttpMigrateRoute.query}\n     * - `body`: Body parameter of {@link IHttpMigrateRoute.body}\n     *\n     * ```typescript\n     * {\n     *   ...pathParameters,\n     *   query,\n     *   body,\n     * }\n     * ```\n     *\n     * Otherwise, the parameters would be multiple, and the sequence of the\n     * parameters are following below rules:\n     *\n     * ```typescript\n     * [\n     *   ...pathParameters,\n     *   ...(query ? [query] : []),\n     *   ...(body ? [body] : []),\n     * ]\n     * ```\n     */\n    parameters: ILlmSchema.ModelParameters[Model];\n    /**\n     * Collection of separated parameters.\n     *\n     * Filled only when {@link IHttpLlmApplication.IOptions.separate} is configured.\n     */\n    separated?: IHttpLlmFunction.ISeparated<Model>;\n    /**\n     * Expected return type.\n     *\n     * If the target operation returns nothing (`void`), the `output`\n     * would be `undefined`.\n     */\n    output?: ILlmSchema.ModelSchema[Model] | undefined;\n    /**\n     * Description of the function.\n     *\n     * `IHttpLlmFunction.description` is composed by below rule:\n     *\n     * 1. Starts from the {@link OpenApi.IOperation.summary} paragraph.\n     * 2. The next paragraphs are filled with the\n     *    {@link OpenApi.IOperation.description}. By the way, if the first\n     *    paragraph of {@link OpenApi.IOperation.description} is same with the\n     *    {@link OpenApi.IOperation.summary}, it would not be duplicated.\n     * 3. Parameters\' descriptions are added with `@param` tag.\n     * 4. {@link OpenApi.IOperation.security Security requirements} are added\n     *    with `@security` tag.\n     * 5. Tag names are added with `@tag` tag.\n     * 6. If {@link OpenApi.IOperation.deprecated}, `@deprecated` tag is added.\n     *\n     * For reference, the `description` is very important property to teach\n     * the purpose of the function to the LLM (Language Large Model), and\n     * LLM actually determines which function to call by the description.\n     *\n     * Also, when the LLM conversates with the user, the `description` is\n     * used to explain the function to the user. Therefore, the `description`\n     * property has the highest priority, and you have to consider it.\n     */\n    description?: string | undefined;\n    /**\n     * Whether the function is deprecated or not.\n     *\n     * If the `deprecated` is `true`, the function is not recommended to use.\n     *\n     * LLM (Large Language Model) may not use the deprecated function.\n     */\n    deprecated?: boolean | undefined;\n    /**\n     * Category tags for the function.\n     *\n     * Same with {@link OpenApi.IOperation.tags} indicating the category of the function.\n     */\n    tags?: string[];\n    /**\n     * Validate function of the arguments.\n     *\n     * You know what? LLM (Large Language Model) like OpenAI takes a lot of\n     * mistakes when composing arguments in function calling. Even though\n     * `number` like simple type is defined in the {@link parameters} schema,\n     * LLM often fills it just by a `string` typed value.\n     *\n     * In that case, you have to give a validation feedback to the LLM by\n     * using this `validate` function. The `validate` function will return\n     * detailed information about every type errors about the arguments.\n     *\n     * And in my experience, OpenAI\'s `gpt-4o-mini` model tends to construct\n     * an invalid function calling arguments at the first trial about 50% of\n     * the time. However, if correct it through this `validate` function,\n     * the success rate soars to 99% at the second trial, and I\'ve never\n     * failed at the third trial.\n     *\n     * > If you\'ve {@link separated} parameters, use the\n     * > {@link IHttpLlmFunction.ISeparated.validate} function instead when\n     * > validating the LLM composed arguments.\n     * >\n     * > In that case, This `validate` function would be meaningful only\n     * > when you\'ve merged the LLM and human composed arguments by\n     * > {@link HttpLlm.mergeParameters} function.\n     *\n     * @param args Arguments to validate.\n     * @returns Validation result\n     */\n    validate: (args: unknown) => IValidation<unknown>;\n    /**\n     * Get the Swagger operation metadata.\n     *\n     * Get the Swagger operation metadata, of the source.\n     *\n     * @returns Swagger operation metadata.\n     */\n    operation: () => OpenApi.IOperation;\n    /**\n     * Get the migration route metadata.\n     *\n     * Get the migration route metadata, of the source.\n     *\n     * @returns Migration route metadata.\n     */\n    route: () => IHttpMigrateRoute;\n}\nexport declare namespace IHttpLlmFunction {\n    /**\n     * Collection of separated parameters.\n     */\n    interface ISeparated<Model extends ILlmSchema.Model> {\n        /**\n         * Parameters that would be composed by the LLM.\n         *\n         * Even though no property exists in the LLM side, the `llm` property\n         * would have at least empty object type.\n         */\n        llm: ILlmSchema.ModelParameters[Model];\n        /**\n         * Parameters that would be composed by the human.\n         */\n        human: ILlmSchema.ModelParameters[Model] | null;\n        /**\n         * Validate function of the separated arguments.\n         *\n         * If LLM part of separated parameters has some properties,\n         * this `validate` function will be filled for the {@link llm}\n         * type validation.\n         *\n         * > You know what? LLM (Large Language Model) like OpenAI takes a lot of\n         * > mistakes when composing arguments in function calling. Even though\n         * > `number` like simple type is defined in the {@link parameters} schema,\n         * > LLM often fills it just by a `string` typed value.\n         * >\n         * > In that case, you have to give a validation feedback to the LLM by\n         * > using this `validate` function. The `validate` function will return\n         * > detailed information about every type errors about the arguments.\n         * >\n         * > And in my experience, OpenAI\'s `gpt-4o-mini` model tends to construct\n         * > an invalid function calling arguments at the first trial about 50% of\n         * > the time. However, if correct it through this `validate` function,\n         * > the success rate soars to 99% at the second trial, and I\'ve never\n         * > failed at the third trial.\n         *\n         * @param args Arguments to validate\n         * @returns Validate result\n         */\n        validate?: ((args: unknown) => IValidation<unknown>) | undefined;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpMigrateApplication.d.ts",'import { OpenApi } from "../OpenApi";\nimport { IHttpMigrateRoute } from "./IHttpMigrateRoute";\n/**\n * Document of migration.\n *\n * The `IHttpMigrateApplication` interface is an application migrated from\n * {@link OpenAPI.IDocument OpenAPI document} for supporting the OpenAPI generator\n * libraries which compose RPC (Remote Procedure Call) functions from the\n * {@link OpenAPI.IOperation OpenAPI operations}.\n *\n * As the `IHttpMigrateApplication` and {@link IHttpMigrateRoute} have a lot of special\n * stories, when you\'re developing OpenAPI generator library, please read\n * their descriptions carefully including the description of properties.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpMigrateApplication {\n    /**\n     * List of routes for migration.\n     */\n    routes: IHttpMigrateRoute[];\n    /**\n     * List of errors occurred during the migration.\n     */\n    errors: IHttpMigrateApplication.IError[];\n    /**\n     * Source OpenAPI document.\n     */\n    document: () => OpenApi.IDocument;\n}\nexport declare namespace IHttpMigrateApplication {\n    /**\n     * Error of migration in the operation level.\n     */\n    interface IError {\n        /**\n         * Target operation causing the error.\n         */\n        operation: () => OpenApi.IOperation;\n        /**\n         * Method of the operation.\n         *\n         * If the {@link OpenApi.IOperation.method} is not one of below type\n         * values, the operation would be ignored in the migration process for\n         * the RPC (Remote Procedure Call) function.\n         */\n        method: "head" | "get" | "post" | "put" | "patch" | "delete";\n        /**\n         * Original path from the OpenAPI document.\n         */\n        path: string;\n        /**\n         * List of error messages (reasons).\n         */\n        messages: string[];\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpMigrateRoute.d.ts",'import { OpenApi } from "../OpenApi";\n/**\n * Route information for migration.\n *\n * The `IHttpMigrateRoute` is a structure representing a route information for\n * OpenAPI generator libraries, which composes an RPC (Remote Procedure Call) function\n * from the {@link OpenApi.IOperation OpenAPI operation}.\n *\n * As the `IHttpMigrateRoute` has a lot of special stories, when you\'re developing\n * OpenAPI generator library, please read its description carefully including\n * the description of its properties.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpMigrateRoute {\n    /**\n     * Method of the route.\n     *\n     * If the {@link OpenApi.IOperation.method} is not one of below type\n     * values, the operation would be ignored in the migration process for\n     * the RPC (Remote Procedure Call) function.\n     */\n    method: "head" | "get" | "post" | "put" | "patch" | "delete";\n    /**\n     * Original path from the OpenAPI document.\n     */\n    path: string;\n    /**\n     * Emended path for OpenAPI generator libraries.\n     *\n     * The difference between {@link path} is:\n     *\n     * 1. Path parameters are replaced with `:param` format.\n     * 2. Always starts with `/`.\n     */\n    emendedPath: string;\n    /**\n     * Accessor for the route.\n     *\n     * The `accessor` is a list of string values that are representing how to\n     * access to the OpenAPI generated RPC (Remote Procedure Call) function\n     * through namespace(s).\n     *\n     * The `accessor` is composed with the following rules. At first, namespaces\n     * are composed by static directory names in the {@link path}. Parametric\n     * symbols represented by `:param` or `{param}` cannot be a part of the\n     * namespace.\n     *\n     * Instead, they would be a part of the function name. The function\n     * name is composed with the {@link method HTTP method} and parametric symbols\n     * like `getByParam` or `postByParam`. If there are multiple path parameters,\n     * they would be concatenated by `And` like `getByParam1AndParam2`.\n     *\n     * For refefence, if the {@link operation}\'s {@link method} is `delete`, the\n     * function name would be replaced to `erase` instead of `delete`. It is\n     * the reason why the `delete` is a reserved keyword in many programming\n     * languages.\n     *\n     * - Example 1\n     *   - path: `POST /shopping/sellers/sales`\n     *   - accessor: `shopping.sellers.sales.post`\n     * - Example 2\n     *   - endpoint: `GET /shoppings/sellers/sales/:saleId/reviews/:reviewId/comments/:id\n     *   - accessor: `shoppings.sellers.sales.reviews.getBySaleIdAndReviewIdAndCommentId`\n     */\n    accessor: string[];\n    /**\n     * List of path parameters.\n     *\n     * Note that, not a list of every parameters, but only path parameters.\n     */\n    parameters: IHttpMigrateRoute.IParameter[];\n    /**\n     * Metadata of headers.\n     *\n     * The `headers` property is a metadata of HTTP request headers for RPC function,\n     * including the parameter variable name and schema.\n     *\n     * Also, its {@link IHttpMigrateRoute.IHeaders.schema} is always object or reference\n     * to object. Even though the original {@link OpenApi.IOperation OpenAPI operation}\'s\n     * headers are separated to atomic typed properties, the `headers` property forcibly\n     * combines them into a single object type.\n     *\n     * For reference, if the `headers` property has been converted to an object type\n     * forcibly, its property {@link IHttpMigrateRoute.IHeaders.name name} and\n     * {@link IHttpMigrateRoute.IHeaders.key key} are always "headers".\n     */\n    headers: IHttpMigrateRoute.IHeaders | null;\n    /**\n     * Metadata of query values.\n     *\n     * The `query` property is a metadata of HTTP request query values for RPC function,\n     * including the parameter variable name and schema.\n     *\n     * Also, its {@link IHttpMigrateRoute.IQuery.schema} is always object or reference\n     * to object. Even though the original {@link OpenApi.IOperation OpenAPI operation}\'s\n     * query parameters are separated to atomic typed properties, the `query` property\n     * forcibly combines them into a single object type.\n     *\n     * For reference, if the `query` property has been converted to an object type\n     * forcibly, its property {@link IHttpMigrateRoute.IQuery.name name} and\n     * {@link IHttpMigrateRoute.IQuery.key key} are always "headers".\n     */\n    query: IHttpMigrateRoute.IQuery | null;\n    /**\n     * Metadata of request body.\n     *\n     * The `body` property is a metadata of HTTP request body for RPC function,\n     * including the parameter variable name, content type, and schema.\n     *\n     * If the `body` property is `null`, it means the operation does not require\n     * the request body data.\n     */\n    body: IHttpMigrateRoute.IBody | null;\n    /**\n     * Metadata of response body for success case.\n     *\n     * The `success` property is a metadata of HTTP response body for RPC function,\n     * including content type, and schema when status code is `200` or `201`.\n     *\n     * If the `success` property is `null`, it means the operation does not have\n     * the response body data. In other words, the RPC function would return `void`.\n     */\n    success: IHttpMigrateRoute.ISuccess | null;\n    /**\n     * Metadata of response body for exceptional status cases.\n     *\n     * The `exceptions` property is a metadata of HTTP response body for RPC\n     * function, including content type, and schema when status code is not `200`\n     * or `201`.\n     *\n     * The key of the `exceptions` property is the status code. It may be a\n     * stringified number, but sometimes it could be a string like "default",\n     * because the OpenAPI document allows the status code to be a string.\n     */\n    exceptions: Record<string, IHttpMigrateRoute.IException>;\n    /**\n     * Description comment for the route function.\n     *\n     * The `comment` is a function returning description comment for the\n     * RPC function of OpenAPI generated. The comment is composed with the\n     * following rules:\n     *\n     * 1. Starts from the {@link OpenApi.IOperation.summary} paragraph.\n     * 2. The next paragraphs are filled with {@link OpenApi.IOperation.description}.\n     * 3. Parameter descriptions are added with `@param` tag.\n     * 4. Security requirements are added with `@security` tag.\n     * 5. Tag names are added with `@tag` tag.\n     * 6. If {@link OpenApi.IOperation.deprecated}, `@deprecated` tag is added.\n     */\n    comment: () => string;\n    /**\n     * Original operation from the OpenAPI document.\n     *\n     * The `operation` is a function returning the original\n     * {@link OpenApi.IOperation} from the {@link OpenAPI} document.\n     */\n    operation: () => OpenApi.IOperation;\n}\nexport declare namespace IHttpMigrateRoute {\n    /**\n     * Metadata of path parameter.\n     */\n    interface IParameter {\n        /**\n         * Name of the path parameter.\n         */\n        name: string;\n        /**\n         * Key of the path parameter.\n         */\n        key: string;\n        /**\n         * Metadata of path parameter data type.\n         */\n        schema: OpenApi.IJsonSchema;\n        /**\n         * Original parameter info from the OpenAPI document.\n         *\n         * The `parameter` is a function returning the original\n         * {@link OpenApi.IOperation.IParameter} from the {@link OpenAPI} document.\n         */\n        parameter: () => OpenApi.IOperation.IParameter;\n    }\n    /**\n     * Metadata of headers.\n     */\n    interface IHeaders {\n        /**\n         * Name of the headers parameter.\n         */\n        name: string;\n        /**\n         * Key of the headers parameter.\n         */\n        key: string;\n        /**\n         * Metadata of headers data type.\n         */\n        schema: OpenApi.IJsonSchema;\n        title: () => string | undefined;\n        description: () => string | undefined;\n        example: () => any | undefined;\n        examples: () => Record<string, any> | undefined;\n    }\n    /**\n     * Metadata of query values.\n     */\n    interface IQuery {\n        name: string;\n        key: string;\n        schema: OpenApi.IJsonSchema;\n        title: () => string | undefined;\n        description: () => string | undefined;\n        example: () => any | undefined;\n        examples: () => Record<string, any> | undefined;\n    }\n    /**\n     * Metadata of request body.\n     */\n    interface IBody {\n        /**\n         * Name of the body parameter.\n         */\n        name: string;\n        /**\n         * Key of the body parameter.\n         */\n        key: string;\n        /**\n         * Content type of the body.\n         */\n        type: "text/plain" | "application/json" | "application/x-www-form-urlencoded" | "multipart/form-data";\n        /**\n         * Metadata of response body data type.\n         */\n        schema: OpenApi.IJsonSchema;\n        /**\n         * Description comment for the request/response body.\n         */\n        description: () => string | undefined;\n        /**\n         * Media type of the request/response body.\n         */\n        media: () => OpenApi.IOperation.IMediaType;\n        /**\n         * Whether the body is encrypted or not.\n         */\n        "x-nestia-encrypted"?: boolean;\n    }\n    /**\n     * Metadata of response body.\n     */\n    interface ISuccess extends IBody {\n        /**\n         * Status code of the response.\n         */\n        status: string;\n    }\n    /**\n     * Metadata of response body for exceptional status cases.\n     */\n    interface IException {\n        /**\n         * Metadata of response body data type.\n         */\n        schema: OpenApi.IJsonSchema;\n        /**\n         * Description comment for the exception.\n         */\n        response: () => OpenApi.IOperation.IResponse;\n        /**\n         * Media type of the response body.\n         */\n        media: () => OpenApi.IOperation.IMediaType;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IHttpResponse.d.ts","/**\n * Represents an HTTP response.\n *\n * The `IHttpResponse` interface represents an HTTP response.\n *\n * It contains the {@link status} code, {@link headers}, and {@link body} of the response.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IHttpResponse {\n    /**\n     * Status code of the response.\n     */\n    status: number;\n    /**\n     * Headers of the response.\n     */\n    headers: Record<string, string | string[]>;\n    /**\n     * Body of the response.\n     */\n    body: unknown;\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IJsonSchemaAttribute.d.ts",'/**\n * Common attributes for JSON schema types.\n *\n * `IJsonSchemaAttribute` is a common interface for all JSON schema\n * types supported in here `@samchon/openapi`. Here is the list of\n * affected JSON schema types in `@samchon/openapi`, and you can extend\n * the interface by declaring module augmentation.\n *\n * - {@link OpenApi.IJsonSchema}\n * - {@link OpenApiV3_1.IJsonSchema}\n * - {@link OpenApiV3.IJsonSchema}\n * - {@link SwaggerV2.IJsonSchema}\n * - {@link IChatGptSchema}\n * - {@link IClaudeSchema}\n * - {@link IGeminiSchema}\n * - {@link ILlmSchemaV3}\n * - {@link ILlmSchemaV3_1}\n *\n * For example, if you extend the `IJsonSchemaAttribute` interface\n * like below, every JSON schema types in `@samchon/openapi` will have\n * a new custom attribute `x-wrtn-placeholder`.\n *\n * Also, if you augment the nested type like\n * `IJsonSchemaAttribute.IString`, you can add the custom attribute\n * to every string types in the JSON schema. In the below example case,\n * every string types will have a new custom attribute\n * `x-wrtn-secret-key`.\n *\n * ```typescript\n * declare module "@samchon/openapi" {\n *   export interface IJsonSchemaAttribute {\n *     /// Placeholder value for frontend application\n *     ///\n *     /// Placeholder ia label shown in the input field as a hint.\n *     /// For example, when an email input field exists, the label\n *     /// value would be "Insert your email address here".\n *     "x-wrtn-placeholder"?: string;\n *   }\n *   export namespace IJsonSchemaAttribute {\n *     export interface IString {\n *       /// Secret key for the schema.\n *       ///\n *       /// `x-wrtn-secret-key` is a property means a secret key\n *       /// that is required for the target API endpoint calling.\n *       /// If the secret key is not filled, the API call would\n *       /// be failed.\n *       "x-wrtn-secret-key"?: string;\n *     }\n *   }\n * }\n * ```\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IJsonSchemaAttribute {\n    /**\n     * Title of the schema.\n     */\n    title?: string;\n    /**\n     * Detailed description of the schema.\n     */\n    description?: string;\n    /**\n     * Whether the type is deprecated or not.\n     */\n    deprecated?: boolean;\n    /**\n     * Example value.\n     */\n    example?: any;\n    /**\n     * List of example values as key-value pairs.\n     */\n    examples?: Record<string, any>;\n}\nexport declare namespace IJsonSchemaAttribute {\n    /**\n     * Common attributes for boolean types.\n     */\n    export interface IBoolean extends ISignificant<"boolean"> {\n    }\n    /**\n     * Common attributes for integer types.\n     */\n    export interface IInteger extends ISignificant<"integer"> {\n    }\n    /**\n     * Common attributes for number types.\n     */\n    export interface INumber extends ISignificant<"number"> {\n    }\n    /**\n     * Common attributes for string types.\n     */\n    export interface IString extends ISignificant<"string"> {\n    }\n    /**\n     * Common attributes for object types.\n     */\n    export interface IObject extends ISignificant<"object"> {\n    }\n    /**\n     * Common attributes for array types.\n     */\n    export interface IArray extends ISignificant<"array"> {\n    }\n    /**\n     * Common attributes for null types.\n     */\n    export interface INull extends ISignificant<"null"> {\n    }\n    /**\n     * Common attributes for unknown types.\n     */\n    export interface IUnknown extends IJsonSchemaAttribute {\n        /**\n         * Type is never be defined.\n         */\n        type?: undefined;\n    }\n    /**\n     * Significant attributes that can be applied to the most types.\n     */\n    interface ISignificant<Type extends string> extends IJsonSchemaAttribute {\n        /**\n         * Discriminator value of the type.\n         */\n        type: Type;\n    }\n    export {};\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlamaSchema.d.ts","import { ILlmSchemaV3_1 } from \"./ILlmSchemaV3_1\";\n/**\n * Type schema info of the Llama.\n *\n * `ILlamaSchema` is a type schema info of the Llama function calling.\n *\n * `ILlamaSchema` seems fully supporting the JSON schema definition of the OpenAPI v3.1\n * specification; {@link OpenApiV3_1.IJsonSchema}. By the way, as the\n * {@link OpenApiV3_1.IJsonSchema} has too much ambiguous and duplicated expressions,\n * `ILlamaSchema` is designed to be clear and simple for the Llama function calling,\n * by utilizng {@link ILlmSchemaV3_1} which has been transformed from the\n * {@link OpenApi.IJsonSchema} for the convenience and clarity.\n *\n * Therefore, `ILlamaSchema` does not follow the entire specification of\n * the OpenAPI v3.1. It has own specific restrictions and definitions. Here is the\n * list of how `ILlmSchemaV3_1` is different with the OpenAPI v3.1 JSON schema.\n *\n * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n * - Tuple type is banned: {@link OpenApiV3_1.IJsonSchema.ITuple.prefixItems}\n * - Constant type is banned: {@link OpenApiV3_1.IJsonSchema.IConstant}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link ILlamaSchema.IOneOf}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link ILlamaSchema.IObject}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link ILlamaSchema.IReference}\n * - Do not support {@link OpenApiV3_1.IJsonSchema.ITuple} type\n *\n * If compare with the {@link OpenApi.IJsonSchema}, the emended JSON schema specification,\n *\n * - {@link ILlamaSchema.IParameters.$defs} instead of the {@link OpenApi.IJsonSchema.schemas}\n * - Do not support {@link OpenApi.IJsonSchema.ITuple} type\n * - {@link ILlamaSchema.properties} and {@link ILlamaSchema.required} are always defined\n *\n * For reference, if you've composed the `ILlamaSchema` type with the\n * {@link ILlamaSchema.IConfig.reference} `false` option (default is `false`), only the\n * recursive named types would be archived into the {@link ILlamaSchema.IParameters.$defs},\n * and the others would be escaped from the {@link ILlamaSchema.IReference} type.\n *\n * @reference https://www.llama.com/docs/model-cards-and-prompt-formats/llama3_2\n * @reference https://github.com/ggerganov/llama.cpp/blob/master/examples/json_schema_to_grammar.py\n * @warning Specified not only by the official documentation, but also by my\n *          experiments. Therefore, its definitions can be inaccurate or be\n *          changed in the future. If you find any wrong or outdated definitions,\n *          please let me know by issue.\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type ILlamaSchema = ILlamaSchema.IConstant | ILlamaSchema.IBoolean | ILlamaSchema.IInteger | ILlamaSchema.INumber | ILlamaSchema.IString | ILlamaSchema.IArray | ILlamaSchema.IObject | ILlamaSchema.IReference | ILlamaSchema.IOneOf | ILlamaSchema.INull | ILlamaSchema.IUnknown;\nexport declare namespace ILlamaSchema {\n    /**\n     * Configuration for Llama schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow reference type in everywhere.\n         *\n         * If you configure this property to `false`, most of reference types\n         * represented by {@link ILlamaSchema.IReference} would be escaped to\n         * a plain type unless recursive type case.\n         *\n         * This is because some low sized LLM models does not understand the\n         * reference type well, and even the large size LLM models sometimes occur\n         * the hallucination.\n         *\n         * However, the reference type makes the schema size smaller, so that reduces\n         * the LLM token cost. Therefore, if you're using the large size of LLM model,\n         * and want to reduce the LLM token cost, you can configure this property to\n         * `true`.\n         *\n         * @default false\n         */\n        reference: boolean;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `ILlamaSchema.IParameters` is a type defining a function's parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    type IParameters = ILlmSchemaV3_1.IParameters;\n    /**\n     * Constant value type.\n     */\n    type IConstant = ILlmSchemaV3_1.IConstant;\n    /**\n     * Boolean type info.\n     */\n    type IBoolean = ILlmSchemaV3_1.IBoolean;\n    /**\n     * Integer type info.\n     */\n    type IInteger = ILlmSchemaV3_1.IInteger;\n    /**\n     * Number (double) type info.\n     */\n    type INumber = ILlmSchemaV3_1.INumber;\n    /**\n     * String type info.\n     */\n    type IString = ILlmSchemaV3_1.IString;\n    /**\n     * Array type info.\n     */\n    type IArray = ILlmSchemaV3_1.IArray;\n    /**\n     * Object type info.\n     */\n    type IObject = ILlmSchemaV3_1.IObject;\n    /**\n     * Reference type directing named schema.\n     */\n    type IReference = ILlmSchemaV3_1.IReference;\n    /**\n     * Union type.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\n     * converts it to `oneOf` type.\n     */\n    type IOneOf = ILlmSchemaV3_1.IOneOf;\n    namespace IOneOf {\n        /**\n         * Discriminator info of the union type.\n         */\n        type IDiscriminator = ILlmSchemaV3_1.IOneOf.IDiscriminator;\n    }\n    /**\n     * Null type.\n     */\n    type INull = ILlmSchemaV3_1.INull;\n    /**\n     * Unknown, the `any` type.\n     */\n    type IUnknown = ILlmSchemaV3_1.IUnknown;\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/ILlmApplication.d.ts",'import { ILlmFunction } from "./ILlmFunction";\nimport { ILlmSchema } from "./ILlmSchema";\n/**\n * Application of LLM function calling.\n *\n * `ILlmApplication` is a data structure representing a collection of\n * {@link ILlmFunction LLM function calling schemas}, composed from a native\n * TypeScript class (or interface) type by the `typia.llm.application<App, Model>()`\n * function.\n *\n * Also, there can be some parameters (or their nested properties) which must be\n * composed by Human, not by LLM. File uploading feature or some sensitive information\n * like secret key (password) are the examples. In that case, you can separate the\n * function parameters to both LLM and human sides by configuring the\n * {@link ILlmApplication.IOptions.separate} property. The separated parameters are\n * assigned to the {@link ILlmFunction.separated} property.\n *\n * For reference, when both LLM and Human filled parameter values to call, you can\n * merge them by calling the {@link HttpLlm.mergeParameters} function. In other words,\n * if you\'ve configured the {@link ILlmApplication.IOptions.separate} property, you\n * have to merge the separated parameters before the function call execution.\n *\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface ILlmApplication<Model extends ILlmSchema.Model, Class extends object = any> {\n    /**\n     * Model of the LLM.\n     */\n    model: Model;\n    /**\n     * List of function metadata.\n     *\n     * List of function metadata that can be used for the LLM function call.\n     */\n    functions: ILlmFunction<Model>[];\n    /**\n     * Configuration for the application.\n     */\n    options: ILlmApplication.IOptions<Model>;\n    /**\n     * Class type, the source of the LLM application.\n     *\n     * This property is just for the generic type inference,\n     * and its value is always `undefined`.\n     */\n    __class?: Class | undefined;\n}\nexport declare namespace ILlmApplication {\n    /**\n     * Options for application composition.\n     */\n    type IOptions<Model extends ILlmSchema.Model> = {\n        /**\n         * Separator function for the parameters.\n         *\n         * When composing parameter arguments through LLM function call,\n         * there can be a case that some parameters must be composed by human,\n         * or LLM cannot understand the parameter.\n         *\n         * For example, if the parameter type has configured\n         * {@link IGeminiSchema.IString.contentMediaType} which indicates file\n         * uploading, it must be composed by human, not by LLM\n         * (Large Language Model).\n         *\n         * In that case, if you configure this property with a function that\n         * predicating whether the schema value must be composed by human or\n         * not, the parameters would be separated into two parts.\n         *\n         * - {@link ILlmFunction.separated.llm}\n         * - {@link ILlmFunction.separated.human}\n         *\n         * When writing the function, note that returning value `true` means\n         * to be a human composing the value, and `false` means to LLM\n         * composing the value. Also, when predicating the schema, it would\n         * better to utilize the {@link GeminiTypeChecker} like features.\n         *\n         * @param schema Schema to be separated.\n         * @returns Whether the schema value must be composed by human or not.\n         * @default null\n         */\n        separate: null | ((schema: ILlmSchema.ModelSchema[Model]) => boolean);\n    } & ILlmSchema.ModelConfig[Model];\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlmController.d.ts",'import { ILlmApplication } from "./ILlmApplication";\nimport { ILlmSchema } from "./ILlmSchema";\n/**\n * Controller of LLM function calling.\n *\n * `ILlmController` is a controller of LLM function calling,\n * containing not only the {@link ILlmApplication application} of\n * {@link ILlmFunction function calling schemas}, but also\n * {@link name identifier name} of the application and\n * {@link execute executor} of its TypeScript class/interface functions.\n *\n * Here is an example of using `ILlmController` type for AI agent\n * development of performing AI function calling to mobile API\n * classes/interfaces through `typia` and `@agentica`.\n *\n * ```typescript\n * import { Agentica } from "@agentica/core";\n * import typia from "typia";\n *\n * const agentica = new Agentica({\n *   model: "chatgpt",\n *   vendor: {\n *     api: new OpenAI({ apiKey: "********" }),\n *     model: "gpt-4o-mini",\n *   },\n *   controllers: [\n *     typia.llm.controller<ReactNativeFileSystem, "chatgpt">(\n *       "filesystem",\n *       new ReactNativeFileSystem(),\n *     ),\n *     typia.llm.controller<ReactNativeGallery, "chatgpt">(\n *       "gallery",\n *       new ReactNativeGallery(),\n *     ),\n *   ],\n * });\n * await agentica.conversate(\n *   "Organize photo collection and sort them into appropriate folders.",\n * );\n * ```\n *\n * For reference, this `ILlmController` type is designed for\n * TypeScript classes/interfaces. If you want to make a controller of\n * another {@link protocol} like HTTP or MCP, use below types instead:\n *\n * - {@link IHttpLlmController} for HTTP\n * - {@link IMcpLlmController} for MCP\n *\n * @template Model Type of the LLM model\n * @template Class Class type of the function executor\n * @reference https://typia.io/docs/llm/controller/\n * @reference https://wrtnlabs.io/agentica/docs/core/controller/typescript/\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface ILlmController<Model extends ILlmSchema.Model, Class extends object = any> {\n    /**\n     * Protocol discriminator.\n     */\n    protocol: "class";\n    /**\n     * Identifier name of the controller.\n     */\n    name: string;\n    /**\n     * Application schema of function calling.\n     */\n    application: ILlmApplication<Model, Class>;\n    /**\n     * Executor of the class function.\n     *\n     * Executor of the class function, by target class instance.\n     */\n    execute: Class;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlmFunction.d.ts",'import { ILlmSchema } from "./ILlmSchema";\nimport { IValidation } from "./IValidation";\n/**\n * LLM function metadata.\n *\n * `ILlmFunction` is an interface representing a function metadata,\n * which has been used for the LLM (Language Large Model) function\n * calling. Also, it\'s a function structure containing the function\n * {@link name}, {@link parameters} and {@link output return type}.\n *\n * If you provide this `ILlmFunction` data to the LLM provider like "OpenAI",\n * the "OpenAI" will compose a function arguments by analyzing conversations\n * with the user. With the LLM composed arguments, you can execute the function\n * and get the result.\n *\n * By the way, do not ensure that LLM will always provide the correct\n * arguments. The LLM of present age is not perfect, so that you would\n * better to validate the arguments before executing the function.\n * I recommend you to validate the arguments before execution by using\n * [`typia`](https://github.com/samchon/typia) library.\n *\n * @template Model Type of the LLM model\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface ILlmFunction<Model extends ILlmSchema.Model> {\n    /**\n     * Representative name of the function.\n     *\n     * @maxLength 64\n     */\n    name: string;\n    /**\n     * List of parameter types.\n     */\n    parameters: ILlmSchema.ModelParameters[Model];\n    /**\n     * Collection of separated parameters.\n     *\n     * Filled only when {@link ILlmApplication.IOptions.separate} is configured.\n     */\n    separated?: ILlmFunction.ISeparated<Model>;\n    /**\n     * Expected return type.\n     *\n     * If the function returns nothing (`void`), the `output` value would\n     * be `undefined`.\n     */\n    output?: ILlmSchema.ModelSchema[Model];\n    /**\n     * Description of the function.\n     *\n     * For reference, the `description` is very important property to teach\n     * the purpose of the function to the LLM (Language Large Model), and\n     * LLM actually determines which function to call by the description.\n     *\n     * Also, when the LLM conversates with the user, the `description` is\n     * used to explain the function to the user. Therefore, the `description`\n     * property has the highest priority, and you have to consider it.\n     */\n    description?: string | undefined;\n    /**\n     * Whether the function is deprecated or not.\n     *\n     * If the `deprecated` is `true`, the function is not recommended to use.\n     *\n     * LLM (Large Language Model) may not use the deprecated function.\n     */\n    deprecated?: boolean | undefined;\n    /**\n     * Category tags for the function.\n     *\n     * You can fill this property by the `@tag ${name}` comment tag.\n     */\n    tags?: string[] | undefined;\n    /**\n     * Validate function of the arguments.\n     *\n     * You know what? LLM (Large Language Model) like OpenAI takes a lot of\n     * mistakes when composing arguments in function calling. Even though\n     * `number` like simple type is defined in the {@link parameters} schema,\n     * LLM often fills it just by a `string` typed value.\n     *\n     * In that case, you have to give a validation feedback to the LLM by\n     * using this `validate` function. The `validate` function will return\n     * detailed information about every type errors about the arguments.\n     *\n     * And in my experience, OpenAI\'s `gpt-4o-mini` model tends to construct\n     * an invalid function calling arguments at the first trial about 50% of\n     * the time. However, if correct it through this `validate` function,\n     * the success rate soars to 99% at the second trial, and I\'ve never\n     * failed at the third trial.\n     *\n     * > If you\'ve {@link separated} parameters, use the\n     * > {@link ILlmFunction.ISeparated.validate} function instead when\n     * > validating the LLM composed arguments.\n     * >\n     * > In that case, This `validate` function would be meaningful only\n     * > when you\'ve merged the LLM and human composed arguments by\n     * > {@link HttpLlm.mergeParameters} function.\n     *\n     * @param args Arguments to validate\n     * @returns Validation result\n     */\n    validate: (args: unknown) => IValidation<unknown>;\n}\nexport declare namespace ILlmFunction {\n    /**\n     * Collection of separated parameters.\n     */\n    interface ISeparated<Model extends ILlmSchema.Model> {\n        /**\n         * Parameters that would be composed by the LLM.\n         *\n         * Even though no property exists in the LLM side, the `llm` property\n         * would have at least empty object type.\n         */\n        llm: ILlmSchema.ModelParameters[Model];\n        /**\n         * Parameters that would be composed by the human.\n         */\n        human: ILlmSchema.ModelParameters[Model] | null;\n        /**\n         * Validate function of the separated arguments.\n         *\n         * If LLM part of separated parameters has some properties,\n         * this `validate` function will be filled for the {@link llm}\n         * type validation.\n         *\n         * > You know what? LLM (Large Language Model) like OpenAI takes a lot of\n         * > mistakes when composing arguments in function calling. Even though\n         * > `number` like simple type is defined in the {@link parameters} schema,\n         * > LLM often fills it just by a `string` typed value.\n         * >\n         * > In that case, you have to give a validation feedback to the LLM by\n         * > using this `validate` function. The `validate` function will return\n         * > detailed information about every type errors about the arguments.\n         * >\n         * > And in my experience, OpenAI\'s `gpt-4o-mini` model tends to construct\n         * > an invalid function calling arguments at the first trial about 50% of\n         * > the time. However, if correct it through this `validate` function,\n         * > the success rate soars to 99% at the second trial, and I\'ve never\n         * > failed at the third trial.\n         *\n         * @param args Arguments to validate\n         * @returns Validate result\n         */\n        validate?: ((args: unknown) => IValidation<unknown>) | undefined;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlmSchema.d.ts",'import { IChatGptSchema } from "./IChatGptSchema";\nimport { IClaudeSchema } from "./IClaudeSchema";\nimport { IDeepSeekSchema } from "./IDeepSeekSchema";\nimport { IGeminiSchema } from "./IGeminiSchema";\nimport { ILlamaSchema } from "./ILlamaSchema";\nimport { ILlmSchemaV3 } from "./ILlmSchemaV3";\nimport { ILlmSchemaV3_1 } from "./ILlmSchemaV3_1";\n/**\n * The schemas for the LLM function calling.\n *\n * `ILlmSchema` is an union type collecting every the schemas for the\n * LLM function calling.\n *\n * Select a proper schema type according to the LLM provider you\'re using.\n *\n * @template Model Type of the LLM model\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type ILlmSchema<Model extends ILlmSchema.Model = ILlmSchema.Model> = ILlmSchema.ModelSchema[Model];\nexport declare namespace ILlmSchema {\n    type Model = "chatgpt" | "claude" | "deepseek" | "gemini" | "llama" | "3.0" | "3.1";\n    interface ModelConfig {\n        chatgpt: IChatGptSchema.IConfig;\n        claude: IClaudeSchema.IConfig;\n        deepseek: IDeepSeekSchema.IConfig;\n        gemini: IGeminiSchema.IConfig;\n        llama: ILlamaSchema.IConfig;\n        "3.0": ILlmSchemaV3.IConfig;\n        "3.1": ILlmSchemaV3_1.IConfig;\n    }\n    interface ModelParameters {\n        chatgpt: IChatGptSchema.IParameters;\n        claude: IClaudeSchema.IParameters;\n        deepseek: IDeepSeekSchema.IParameters;\n        gemini: IGeminiSchema.IParameters;\n        llama: ILlamaSchema.IParameters;\n        "3.0": ILlmSchemaV3.IParameters;\n        "3.1": ILlmSchemaV3_1.IParameters;\n    }\n    interface ModelSchema {\n        chatgpt: IChatGptSchema;\n        claude: IClaudeSchema;\n        deepseek: IDeepSeekSchema;\n        gemini: IGeminiSchema;\n        llama: ILlamaSchema;\n        "3.0": ILlmSchemaV3;\n        "3.1": ILlmSchemaV3_1;\n    }\n    /**\n     * Type of function parameters.\n     *\n     * `ILlmSchema.IParameters` is a type defining a function\'s pamameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    type IParameters<Model extends ILlmSchema.Model = ILlmSchema.Model> = ILlmSchema.ModelParameters[Model];\n    /**\n     * Configuration for the LLM schema composition.\n     */\n    type IConfig<Model extends ILlmSchema.Model = ILlmSchema.Model> = ILlmSchema.ModelConfig[Model];\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlmSchemaV3.d.ts",'import { IJsonSchemaAttribute } from "./IJsonSchemaAttribute";\n/**\n * Type schema based on OpenAPI v3.0 for LLM function calling.\n *\n * `ILlmSchemaV3` is a type metadata for LLM (Large Language Model)\n * function calling, based on the OpenAPI v3.0 speicification. This type\n * is not the final type for the LLM function calling, but the intermediate\n * structure for the conversion to the final type like {@link IGeminiSchema}.\n *\n * `ILlmSchemaV3` basically follows the JSON schema definition of OpenAPI\n * v3.0 specification; {@link OpenApiV3.IJsonSchema}. However, `ILlmSchemaV3`\n * does not have the reference type; {@link OpenApiV3.IJsonSchema.IReference}.\n * It\'s because the LLM cannot compose the reference typed arguments. If\n * recursive type comes, its type would be repeated in\n * {@link ILlmSchemaV3.IConfig.recursive} times. Otherwise you\'ve configured\n * it to `false`, the recursive types are not allowed.\n *\n * For reference, the OpenAPI v3.0 based JSON schema definition can\'t\n * express the tuple array type. It has been supported since OpenAPI v3.1;\n * {@link OpenApi.IJsonSchema.ITuple}. Therefore, it would better to avoid\n * using the tuple array type in the LLM function calling.\n *\n * Also, if you configure {@link ILlmSchemaV3.IConfig.constraint} to `false`,\n * these properties would be banned and written to the\n * {@link ILlmSchemaV3.__IAttribute.description} property instead. It\'s because\n * there are some LLM models which does not support the constraint properties.\n *\n * - {@link ILlmSchemaV3.INumber.minimum}\n * - {@link ILlmSchemaV3.INumber.maximum}\n * - {@link ILlmSchemaV3.INumber.multipleOf}\n * - {@link ILlmSchemaV3.IString.minLength}\n * - {@link ILlmSchemaV3.IString.maxLength}\n * - {@link ILlmSchemaV3.IString.format}\n * - {@link ILlmSchemaV3.IString.pattern}\n * - {@link ILlmSchemaV3.IString.contentMediaType}\n * - {@link ILlmSchemaV3.IArray.minItems}\n * - {@link ILlmSchemaV3.IArray.maxItems}\n * - {@link ILlmSchemaV3.IArray.unique}\n *\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type ILlmSchemaV3 = ILlmSchemaV3.IBoolean | ILlmSchemaV3.IInteger | ILlmSchemaV3.INumber | ILlmSchemaV3.IString | ILlmSchemaV3.IArray | ILlmSchemaV3.IObject | ILlmSchemaV3.IUnknown | ILlmSchemaV3.INullOnly | ILlmSchemaV3.IOneOf;\nexport declare namespace ILlmSchemaV3 {\n    /**\n     * Configuration for OpenAPI v3.0 based LLM schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow constraint properties or not.\n         *\n         * If you configure this property to `false`, the schemas do not contain\n         * the constraint properties of below. Instead, below properties would be\n         * written to the {@link ILlmSchemaV3.__IAttribute.description} property\n         * as a comment string like `"@format uuid"`.\n         *\n         * This is because some LLM schema model like {@link IGeminiSchema}\n         * has banned such constraint, because their LLM cannot understand the\n         * constraint properties and occur the hallucination.\n         *\n         * Therefore, considering your LLM model\'s performance, capability,\n         * and the complexity of your parameter types, determine which is better,\n         * to allow the constraint properties or not.\n         *\n         * - {@link ILlmSchemaV3.INumber.minimum}\n         * - {@link ILlmSchemaV3.INumber.maximum}\n         * - {@link ILlmSchemaV3.INumber.multipleOf}\n         * - {@link ILlmSchemaV3.IString.minLength}\n         * - {@link ILlmSchemaV3.IString.maxLength}\n         * - {@link ILlmSchemaV3.IString.format}\n         * - {@link ILlmSchemaV3.IString.pattern}\n         * - {@link ILlmSchemaV3.IString.contentMediaType}\n         * - {@link ILlmSchemaV3.IString.default}\n         * - {@link ILlmSchemaV3.IArray.minItems}\n         * - {@link ILlmSchemaV3.IArray.maxItems}\n         * - {@link ILlmSchemaV3.IArray.unique}\n         *\n         * @default true\n         */\n        constraint: boolean;\n        /**\n         * Whether to allow recursive types or not.\n         *\n         * If allow, then how many times to repeat the recursive types.\n         *\n         * By the way, if the model is "chatgpt", the recursive types are always\n         * allowed without any limitation, due to it supports the reference type.\n         *\n         * @default 3\n         */\n        recursive: false | number;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `ILlmSchemaV3.IParameters` is a type defining a function\'s parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    interface IParameters extends Omit<IObject, "additionalProperties"> {\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * By the way, it is not allowed in the parameters level.\n         */\n        additionalProperties: false;\n    }\n    /**\n     * Boolean type schema info.\n     */\n    interface IBoolean extends IJsonSchemaAttribute.IBoolean {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Default value.\n         */\n        default?: boolean | null;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<boolean | null>;\n    }\n    /**\n     * Integer type schema info.\n     */\n    interface IInteger extends IJsonSchemaAttribute.IInteger {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Default value.\n         *\n         * @type int64\n         */\n        default?: number | null;\n        /**\n         * Enumeration values.\n         *\n         * @type int64\n         */\n        enum?: Array<number | null>;\n        /**\n         * Minimum value restriction.\n         *\n         * @type int64\n         */\n        minimum?: number;\n        /**\n         * Maximum value restriction.\n         *\n         * @type int64\n         */\n        maximum?: number;\n        /**\n         * Exclusive minimum value restriction.\n         */\n        exclusiveMinimum?: number;\n        /**\n         * Exclusive maximum value restriction.\n         */\n        exclusiveMaximum?: number;\n        /**\n         * Multiple of value restriction.\n         *\n         * @type uint64\n         * @exclusiveMinimum 0\n         */\n        multipleOf?: number;\n    }\n    /**\n     * Number type schema info.\n     */\n    interface INumber extends IJsonSchemaAttribute.INumber {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Default value.\n         */\n        default?: number | null;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<number | null>;\n        /**\n         * Minimum value restriction.\n         */\n        minimum?: number;\n        /**\n         * Maximum value restriction.\n         */\n        maximum?: number;\n        /**\n         * Exclusive minimum value restriction.\n         */\n        exclusiveMinimum?: number;\n        /**\n         * Exclusive maximum value restriction.\n         */\n        exclusiveMaximum?: number;\n        /**\n         * Multiple of value restriction.\n         *\n         * @exclusiveMinimum 0\n         */\n        multipleOf?: number;\n    }\n    /**\n     * String type schema info.\n     */\n    interface IString extends IJsonSchemaAttribute.IString {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Default value.\n         */\n        default?: string | null;\n        /**\n         * Enumeration values.\n         */\n        enum?: Array<string | null>;\n        /**\n         * Format restriction.\n         */\n        format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n        /**\n         * Pattern restriction.\n         */\n        pattern?: string;\n        /**\n         * Minimum length restriction.\n         *\n         * @type uint64\n         */\n        minLength?: number;\n        /**\n         * Maximum length restriction.\n         *\n         * @type uint64\n         */\n        maxLength?: number;\n        /**\n         * Content media type restriction.\n         */\n        contentMediaType?: string;\n    }\n    /**\n     * Array type schema info.\n     */\n    interface IArray extends IJsonSchemaAttribute.IArray {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Items type schema info.\n         *\n         * The `items` means the type of the array elements. In other words, it is\n         * the type schema info of the `T` in the TypeScript array type `Array<T>`.\n         */\n        items: ILlmSchemaV3;\n        /**\n         * Unique items restriction.\n         *\n         * If this property value is `true`, target array must have unique items.\n         */\n        uniqueItems?: boolean;\n        /**\n         * Minimum items restriction.\n         *\n         * Restriction of minimum number of items in the array.\n         *\n         * @type uint64\n         */\n        minItems?: number;\n        /**\n         * Maximum items restriction.\n         *\n         * Restriction of maximum number of items in the array.\n         *\n         * @type uint64\n         */\n        maxItems?: number;\n    }\n    /**\n     * Object type schema info.\n     */\n    interface IObject extends IJsonSchemaAttribute.IObject {\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n        /**\n         * Properties of the object.\n         *\n         * The `properties` means a list of key-value pairs of the object\'s\n         * regular properties. The key is the name of the regular property,\n         * and the value is the type schema info.\n         *\n         * If you need additional properties that is represented by dynamic key,\n         * you can use the {@link additionalProperties} instead.\n         */\n        properties: Record<string, ILlmSchemaV3>;\n        /**\n         * List of key values of the required properties.\n         *\n         * The `required` means a list of the key values of the required\n         * {@link properties}. If some property key is not listed in the `required`\n         * list, it means that property is optional. Otherwise some property key\n         * exists in the `required` list, it means that the property must be filled.\n         *\n         * Below is an example of the {@link properties} and `required`.\n         *\n         * ```typescript\n         * interface SomeObject {\n         *   id: string;\n         *   email: string;\n         *   name?: string;\n         * }\n         * ```\n         *\n         * As you can see, `id` and `email` {@link properties} are {@link required},\n         * so that they are listed in the `required` list.\n         *\n         * ```json\n         * {\n         *   "type": "object",\n         *   "properties": {\n         *     "id": { "type": "string" },\n         *     "email": { "type": "string" },\n         *     "name": { "type": "string" }\n         *   },\n         *   "required": ["id", "email"]\n         * }\n         * ```\n         */\n        required: string[];\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * If the value is `true`, it means that the additional properties are not\n         * restricted. They can be any type. Otherwise, if the value is\n         * {@link ILlmSchemaV3} type, it means that the additional properties must\n         * follow the type schema info.\n         *\n         * - `true`: `Record<string, any>`\n         * - `IOpenAiSchema`: `Record<string, T>`\n         */\n        additionalProperties?: boolean | ILlmSchemaV3;\n    }\n    /**\n     * One of type schema info.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, it has been forcibly converted\n     * to `oneOf` type by {@link OpenApi.convert OpenAPI conversion}.\n     */\n    interface IOneOf extends IJsonSchemaAttribute {\n        /**\n         * List of the union types.\n         */\n        oneOf: Exclude<ILlmSchemaV3, ILlmSchemaV3.IOneOf>[];\n    }\n    /**\n     * Null only type schema info.\n     */\n    interface INullOnly extends IJsonSchemaAttribute.INull {\n        /**\n         * Default value.\n         */\n        default?: null;\n    }\n    /**\n     * Unknown type schema info.\n     *\n     * It means the type of the value is `any`.\n     */\n    interface IUnknown extends IJsonSchemaAttribute.IUnknown {\n    }\n    /**\n     * Significant attributes that can be applied to the most types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    interface __ISignificant<Type extends string> extends __IAttribute {\n        /**\n         * Discriminator value of the type.\n         */\n        type: Type;\n        /**\n         * Whether to allow `null` value or not.\n         */\n        nullable?: boolean;\n    }\n    /**\n     * Common attributes that can be applied to all types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    type __IAttribute = IJsonSchemaAttribute;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/ILlmSchemaV3_1.d.ts",'import { IJsonSchemaAttribute } from "./IJsonSchemaAttribute";\n/**\n * Type schema based on OpenAPI v3.1 for LLM function calling.\n *\n * `ILlmSchemaV3_1` is a type metadata for LLM (Large Language Model)\n * function calling, based on the OpenAPI v3.1 speicification. This type\n * is not the final type for the LLM function calling, but the intermediate\n * structure for the conversion to the final type of below:\n *\n * - {@link IChatGptSchema}\n * - {@link IClaudeSchema}\n * - {@link ILlamaSchema}\n *\n * However, the `ILlmSchemaV3_1` does not follow the entire specification of\n * the OpenAPI v3.1. It has own specific restrictions and definitions. Here is the\n * list of how `ILlmSchemaV3_1` is different with the OpenAPI v3.1 JSON schema.\n *\n * - Decompose mixed type: {@link OpenApiV3_1.IJsonSchema.IMixed}\n * - Resolve nullable property: {@link OpenApiV3_1.IJsonSchema.__ISignificant.nullable}\n * - Constant type is banned: {@link OpenApiV3_1.IJsonSchema.IConstant}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAnyOf} to {@link ILlmSchemaV3_1.IOneOf}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IAllOf} to {@link ILlmSchemaV3_1.IObject}\n * - Merge {@link OpenApiV3_1.IJsonSchema.IRecursiveReference} to {@link ILlmSchemaV3_1.IReference}\n * - Do not support {@link OpenApiV3_1.IJsonSchema.ITuple} type\n *\n * If compare with the {@link OpenApi.IJsonSchema}, the emended JSON schema specification,\n *\n * - {@link ILlmSchemaV3_1.IParameters.$defs} instead of the {@link OpenApi.IJsonSchema.schemas}\n * - Do not support {@link OpenApi.IJsonSchema.ITuple} type\n * - {@link ILlmSchemaV3_1.properties} and {@link ILlmSchemaV3_1.required} are always defined\n *\n * For reference, if you\'ve composed the `ILlmSchemaV3_1` type with the\n * {@link ILlmSchemaV3_1.IConfig.reference} `false` option (default is `false`), only the\n * recursived named types would be archived into the {@link ILlmSchemaV3_1.IParameters.$defs},\n * and the others would be ecaped from the {@link ILlmSchemaV3_1.IReference} type.\n *\n * Also, if you\'ve composed the `ILlmSchemaV3_1` type with the\n * {@link ILlmSchemaV3_1.IConfig.constraint} `false` option (default `false`),\n * the `ILlmSchemaV3_1` would not compose these properties. Instead, these\n * properties would be written on {@link ILlmSchemaV3_1.__IAttribute.descripotion}\n * field like `@format uuid` case.\n *\n * - {@link ILlmSchemaV3_1.INumber.minimum}\n * - {@link ILlmSchemaV3_1.INumber.maximum}\n * - {@link ILlmSchemaV3_1.INumber.multipleOf}\n * - {@link ILlmSchemaV3_1.IString.minLength}\n * - {@link ILlmSchemaV3_1.IString.maxLength}\n * - {@link ILlmSchemaV3_1.IString.format}\n * - {@link ILlmSchemaV3_1.IString.pattern}\n * - {@link ILlmSchemaV3_1.IString.contentMediaType}\n * - {@link ILlmSchemaV3_1.IArray.minItems}\n * - {@link ILlmSchemaV3_1.IArray.maxItems}\n * - {@link ILlmSchemaV3_1.IArray.unique}\n *\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type ILlmSchemaV3_1 = ILlmSchemaV3_1.IConstant | ILlmSchemaV3_1.IBoolean | ILlmSchemaV3_1.IInteger | ILlmSchemaV3_1.INumber | ILlmSchemaV3_1.IString | ILlmSchemaV3_1.IArray | ILlmSchemaV3_1.IObject | ILlmSchemaV3_1.IReference | ILlmSchemaV3_1.IOneOf | ILlmSchemaV3_1.INull | ILlmSchemaV3_1.IUnknown;\nexport declare namespace ILlmSchemaV3_1 {\n    /**\n     * Configuration for OpenAPI v3.1 based LLM schema composition.\n     */\n    interface IConfig {\n        /**\n         * Whether to allow constraint properties or not.\n         *\n         * If you configure this property to `false`, the schemas do not contain\n         * the constraint properties of below. Instead, below properties would be\n         * written to the {@link ILlmSchemaV3_1.__IAttribute.description} property\n         * as a comment string like `"@format uuid"`.\n         *\n         * This is because some LLM schema model like {@link IChatGptSchema}\n         * has banned such constraint, because their LLM cannot understand the\n         * constraint properties and occur the hallucination.\n         *\n         * Therefore, considering your LLM model\'s performance, capability,\n         * and the complexity of your parameter types, determine which is better,\n         * to allow the constraint properties or not.\n         *\n         * - {@link ILlmSchemaV3_1.INumber.minimum}\n         * - {@link ILlmSchemaV3_1.INumber.maximum}\n         * - {@link ILlmSchemaV3_1.INumber.multipleOf}\n         * - {@link ILlmSchemaV3_1.IString.minLength}\n         * - {@link ILlmSchemaV3_1.IString.maxLength}\n         * - {@link ILlmSchemaV3_1.IString.format}\n         * - {@link ILlmSchemaV3_1.IString.pattern}\n         * - {@link ILlmSchemaV3_1.IString.contentMediaType}\n         * - {@link ILlmSchemaV3_1.IString.default}\n         * - {@link ILlmSchemaV3_1.IArray.minItems}\n         * - {@link ILlmSchemaV3_1.IArray.maxItems}\n         * - {@link ILlmSchemaV3_1.IArray.unique}\n         *\n         * @default true\n         */\n        constraint: boolean;\n        /**\n         * Whether to allow reference type in everywhere.\n         *\n         * If you configure this property to `false`, most of reference types\n         * represented by {@link ILlmSchemaV3_1.IReference} would be escaped to\n         * a plain type unless recursive type case.\n         *\n         * This is because some low sized LLM models does not understand the\n         * reference type well, and even the large size LLM models sometimes occur\n         * the hallucination.\n         *\n         * However, the reference type makes the schema size smaller, so that reduces\n         * the LLM token cost. Therefore, if you\'re using the large size of LLM model,\n         * and want to reduce the LLM token cost, you can configure this property to\n         * `true`.\n         *\n         * @default false\n         */\n        reference: boolean;\n    }\n    /**\n     * Type of the function parameters.\n     *\n     * `ILlmSchemaV3_1.IParameters` is a type defining a function\'s parameters\n     * as a keyworded object type.\n     *\n     * It also can be utilized for the structured output metadata.\n     *\n     * @reference https://platform.openai.com/docs/guides/structured-outputs\n     */\n    interface IParameters extends Omit<IObject, "additionalProperties"> {\n        /**\n         * Collection of the named types.\n         */\n        $defs: Record<string, ILlmSchemaV3_1>;\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * By the way, it is not allowed in the parameters level.\n         */\n        additionalProperties: false;\n    }\n    /**\n     * Constant value type.\n     */\n    interface IConstant extends IJsonSchemaAttribute {\n        /**\n         * The constant value.\n         */\n        const: boolean | number | string;\n    }\n    /**\n     * Boolean type info.\n     */\n    interface IBoolean extends IJsonSchemaAttribute.IBoolean {\n        /**\n         * The default value.\n         */\n        default?: boolean;\n    }\n    /**\n     * Integer type info.\n     */\n    interface IInteger extends IJsonSchemaAttribute.IInteger {\n        /**\n         * Default value.\n         *\n         * @type int64\n         */\n        default?: number;\n        /**\n         * Minimum value restriction.\n         *\n         * @type int64\n         */\n        minimum?: number;\n        /**\n         * Maximum value restriction.\n         *\n         * @type int64\n         */\n        maximum?: number;\n        /**\n         * Exclusive minimum value restriction.\n         */\n        exclusiveMinimum?: number;\n        /**\n         * Exclusive maximum value restriction.\n         */\n        exclusiveMaximum?: number;\n        /**\n         * Multiple of value restriction.\n         *\n         * @type uint64\n         * @exclusiveMinimum 0\n         */\n        multipleOf?: number;\n    }\n    /**\n     * Number (double) type info.\n     */\n    interface INumber extends IJsonSchemaAttribute.INumber {\n        /**\n         * Default value.\n         */\n        default?: number;\n        /**\n         * Minimum value restriction.\n         */\n        minimum?: number;\n        /**\n         * Maximum value restriction.\n         */\n        maximum?: number;\n        /**\n         * Exclusive minimum value restriction.\n         */\n        exclusiveMinimum?: number;\n        /**\n         * Exclusive maximum value restriction.\n         */\n        exclusiveMaximum?: number;\n        /**\n         * Multiple of value restriction.\n         *\n         * @exclusiveMinimum 0\n         */\n        multipleOf?: number;\n    }\n    /**\n     * String type info.\n     */\n    interface IString extends IJsonSchemaAttribute.IString {\n        /**\n         * Default value.\n         */\n        default?: string;\n        /**\n         * Format restriction.\n         */\n        format?: "binary" | "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer" | (string & {});\n        /**\n         * Pattern restriction.\n         */\n        pattern?: string;\n        /**\n         * Content media type restriction.\n         */\n        contentMediaType?: string;\n        /**\n         * Minimum length restriction.\n         *\n         * @type uint64\n         */\n        minLength?: number;\n        /**\n         * Maximum length restriction.\n         *\n         * @type uint64\n         */\n        maxLength?: number;\n    }\n    /**\n     * Array type info.\n     */\n    interface IArray extends IJsonSchemaAttribute.IArray {\n        /**\n         * Items type info.\n         *\n         * The `items` means the type of the array elements. In other words, it is\n         * the type schema info of the `T` in the TypeScript array type `Array<T>`.\n         */\n        items: ILlmSchemaV3_1;\n        /**\n         * Unique items restriction.\n         *\n         * If this property value is `true`, target array must have unique items.\n         */\n        uniqueItems?: boolean;\n        /**\n         * Minimum items restriction.\n         *\n         * Restriction of minimum number of items in the array.\n         *\n         * @type uint64\n         */\n        minItems?: number;\n        /**\n         * Maximum items restriction.\n         *\n         * Restriction of maximum number of items in the array.\n         *\n         * @type uint64\n         */\n        maxItems?: number;\n    }\n    /**\n     * Object type info.\n     */\n    interface IObject extends IJsonSchemaAttribute.IObject {\n        /**\n         * Properties of the object.\n         *\n         * The `properties` means a list of key-value pairs of the object\'s\n         * regular properties. The key is the name of the regular property,\n         * and the value is the type schema info.\n         *\n         * If you need additional properties that is represented by dynamic key,\n         * you can use the {@link additionalProperties} instead.\n         */\n        properties: Record<string, ILlmSchemaV3_1>;\n        /**\n         * Additional properties\' info.\n         *\n         * The `additionalProperties` means the type schema info of the additional\n         * properties that are not listed in the {@link properties}.\n         *\n         * If the value is `true`, it means that the additional properties are not\n         * restricted. They can be any type. Otherwise, if the value is\n         * {@link IOpenAiSchema} type, it means that the additional properties must\n         * follow the type schema info.\n         *\n         * - `true`: `Record<string, any>`\n         * - `IOpenAiSchema`: `Record<string, T>`\n         */\n        additionalProperties?: boolean | ILlmSchemaV3_1;\n        /**\n         * List of key values of the required properties.\n         *\n         * The `required` means a list of the key values of the required\n         * {@link properties}. If some property key is not listed in the `required`\n         * list, it means that property is optional. Otherwise some property key\n         * exists in the `required` list, it means that the property must be filled.\n         *\n         * Below is an example of the {@link properties} and `required`.\n         *\n         * ```typescript\n         * interface SomeObject {\n         *   id: string;\n         *   email: string;\n         *   name?: string;\n         * }\n         * ```\n         *\n         * As you can see, `id` and `email` {@link properties} are {@link required},\n         * so that they are listed in the `required` list.\n         *\n         * ```json\n         * {\n         *   "type": "object",\n         *   "properties": {\n         *     "id": { "type": "string" },\n         *     "email": { "type": "string" },\n         *     "name": { "type": "string" }\n         *   },\n         *   "required": ["id", "email"]\n         * }\n         * ```\n         */\n        required: string[];\n    }\n    /**\n     * Reference type directing named schema.\n     */\n    interface IReference extends IJsonSchemaAttribute {\n        /**\n         * Reference to the named schema.\n         *\n         * The `ref` is a reference to the named schema. Format of the `$ref` is\n         * following the JSON Pointer specification. In the OpenAPI, the `$ref`\n         * starts with `#/$defs/` which means the type is stored in\n         * the {@link ILlmSchemaV3_1.IParameters.$defs} object.\n         *\n         * - `#/$defs/SomeObject`\n         * - `#/$defs/AnotherObject`\n         */\n        $ref: string;\n    }\n    /**\n     * Union type.\n     *\n     * `IOneOf` represents an union type of the TypeScript (`A | B | C`).\n     *\n     * For reference, even though your Swagger (or OpenAPI) document has\n     * defined `anyOf` instead of the `oneOf`, {@link OpenApi} forcibly\n     * converts it to `oneOf` type.\n     */\n    interface IOneOf extends IJsonSchemaAttribute {\n        /**\n         * List of the union types.\n         */\n        oneOf: Exclude<ILlmSchemaV3_1, ILlmSchemaV3_1.IOneOf>[];\n        /**\n         * Discriminator info of the union type.\n         */\n        discriminator?: IOneOf.IDiscriminator;\n    }\n    namespace IOneOf {\n        /**\n         * Discriminator info of the union type.\n         */\n        interface IDiscriminator {\n            /**\n             * Property name for the discriminator.\n             */\n            propertyName: string;\n            /**\n             * Mapping of the discriminator value to the schema name.\n             *\n             * This property is valid only for {@link IReference} typed\n             * {@link IOneOf.oneof} elements. Therefore, `key` of `mapping` is\n             * the discriminator value, and `value` of `mapping` is the\n             * schema name like `#/components/schemas/SomeObject`.\n             */\n            mapping?: Record<string, string>;\n        }\n    }\n    /**\n     * Null type.\n     */\n    interface INull extends IJsonSchemaAttribute.INull {\n        /**\n         * Default value.\n         */\n        default?: null;\n    }\n    /**\n     * Unknown, the `any` type.\n     */\n    interface IUnknown extends IJsonSchemaAttribute.IUnknown {\n    }\n    /**\n     * Significant attributes that can be applied to the most types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    interface __ISignificant<Type extends string> extends __IAttribute {\n        /**\n         * Discriminator value of the type.\n         */\n        type: Type;\n    }\n    /**\n     * Common attributes that can be applied to all types.\n     *\n     * @deprecated\n     * @hidden\n     */\n    type __IAttribute = IJsonSchemaAttribute;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IMcpLlmApplication.d.ts",'import { ILlmSchema } from "./ILlmSchema";\nimport { IMcpLlmFunction } from "./IMcpLlmFunction";\n/**\n * Application of LLM function call from MCP document.\n *\n * `IMcpLlmApplication` is an interface representing a collection of\n * {@link IMcpLlmFunction LLM function calling schemas} composed from the\n * MCP (Model Context Protocol) document. It contains\n * {@link IMcpLlmApplication.errors failed functions}, and adjusted\n * {@link IMcpLlmApplication.options options} during the `IMcpLlmApplication`\n * construction.\n *\n * About each function of MCP server, there can be {@link errors} during\n * the composition, if the target {@link model} does not support the\n * function\'s {@link IMcpLlmFunction.parameters} type. For example,\n * Google Gemini model does not support union type, so that the function\n * containing the union type would be placed into the {@link errors} list\n * instead of {@link functions}.\n *\n * Also, each function has its own {@link IMcpLlmFunction.validate}\n * function for correcting AI agent\'s mistakes, and this is the reason why\n * `@samchon/openapi` recommends not to use the\n * [`mcp_servers`](https://openai.github.io/openai-agents-python/mcp/#using-mcp-servers)\n * property of LLM API directly, but to use the function calling feature\n * instead.\n *\n * @author Jeongho Nam - https://github.com/samchon\n * @author Byeongjin Oh - https://github.com/sunrabbit123\n */\nexport interface IMcpLlmApplication<Model extends ILlmSchema.Model> {\n    /**\n     * Model of the target LLM.\n     */\n    model: Model;\n    /**\n     * List of function metadata.\n     *\n     * List of function metadata that can be used for the LLM function call.\n     */\n    functions: IMcpLlmFunction<Model>[];\n    /**\n     * List of errors occurred during the composition.\n     */\n    errors: IMcpLlmApplication.IError[];\n    /**\n     * Configuration for the application.\n     */\n    options: IMcpLlmApplication.IOptions<Model>;\n}\nexport declare namespace IMcpLlmApplication {\n    /**\n     * Options for the HTTP LLM application schema composition.\n     */\n    type IOptions<Model extends ILlmSchema.Model> = ILlmSchema.ModelConfig[Model] & {\n        /**\n         * Maximum length of function name.\n         *\n         * When a function name is longer than this value, it will be truncated.\n         *\n         * If not possible to truncate due to the duplication, the function name\n         * would be modified to randomly generated (UUID v4).\n         *\n         * @default 64\n         */\n        maxLength?: number;\n    };\n    /**\n     * Error occurred in the composition.\n     */\n    interface IError {\n        /**\n         * Name of the failed function.\n         */\n        name: string;\n        /**\n         * Description of the failed function.\n         */\n        description?: string | undefined;\n        /**\n         * Parameters of the function.\n         */\n        parameters: object;\n        /**\n         * Error messages.\n         *\n         * The reason why the function is failed to be convert.\n         */\n        messages: string[];\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IMcpLlmController.d.ts",'import { ILlmSchema } from "./ILlmSchema";\nimport { IMcpLlmApplication } from "./IMcpLlmApplication";\n\n/**\n * Controller of MCP function calling.\n *\n * `IMcpLlmController` is a controller of MCP function calling,\n * containing not only the {@link IMcpLlmApplication application} of\n * {@link IMcpLlmFunction function calling schemas}, but also\n * {@link name identifier name} of the application and\n * {@link execute executor} of MCP functions.\n *\n * Here is an example of using `IMcpLlmController` type for AI agent\n * development of performing AI function calling to e-commerce API\n * functions through `@agentica`.\n *\n * ```typescript\n * import { Agentica, assertMcpController } from "@wrtnlabs/agentica";\n * import { StdioClientTransport } from "@modelcontextprotocol/sdk/client/stdio.js";\n * import { Client } from "@modelcontextprotocol/sdk/client/index.js";\n *\n * const client = new Client({\n *   name: "calculator",\n *   version: "1.0.0",\n * });\n * await client.connect(new StdioClientTransport({\n *   command: "npx",\n *   args: ["-y", "@modelcontextprotocol/server-github"],\n *   env: {\n *     GITHUB_PERSONAL_ACCESS_TOKEN: process.env.GITHUB_PERSONAL_ACCESS_TOKEN,\n *     // Add other environment variables as needed\n *   }\n * }));\n *\n * const agent = new Agentica({\n *   model: "chatgpt",\n *   vendor: {\n *     api: new OpenAI({ apiKey: "*****"})\n *     model: "gpt-4o-mini"\n *   },\n *   controllers: [\n *     await assertMcpController({\n *       name: "calculator",\n *       model: "chatgpt",\n *       client,\n *     }),\n *   ],\n * });\n * await agent.conversate("What can you do?");\n * ```\n *\n * For reference, this `IMcpLlmController` type is designed for\n * MCP servers. If you want to make a controller of another\n * {@link protocol} like HTTP or TypeScript, use below types instead:\n *\n * - {@link IHttpLlmController} for HTTP\n * - {@link ILlmController} for TypeScript\n *\n * @reference https://wrtnlabs.io/agentica/docs/core/controller/mcp/\n * @author Jeongho Nam - https://github.com/samchon\n * @author Byeongjin Oh - https://github.com/sunrabbit123\n */\nexport interface IMcpLlmController<Model extends ILlmSchema.Model> {\n  /**\n   * Protocol discriminator.\n   */\n  protocol: "mcp";\n\n  /**\n   * Identifier name of the controller.\n   */\n  name: string;\n\n  /**\n   * Application schema of function calling.\n   */\n  application: IMcpLlmApplication<Model>;\n\n  /**\n   * MCP client for connection.\n   *\n   * @warning You have to install `@modelcontextprotocol/sdk` package\n   *          to use this type properly. If not, this type would work\n   *          as an `any` type, so that you can\'t validate it.\n   */\n  // @ts-ignore\n  client: import("@modelcontextprotocol/sdk/client/index.d.ts").Client;\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IMcpLlmFunction.d.ts","import { ILlmSchema } from \"./ILlmSchema\";\nimport { IValidation } from \"./IValidation\";\n/**\n * MCP LLM function.\n *\n * `IMcpLlmFunction` is an interface representing a function metadata\n * of MCP (Model Context Protocol), which has been designed for the LLM\n * (Language Large Model) function calling, instead of providing\n * [`mcp_servers`](https://openai.github.io/openai-agents-python/mcp/#using-mcp-servers)\n * property to the LLM vendor API.\n *\n * It contains the target function's metadata {@link name}, {@link parameters}\n * and {@link description}. You can put these properties to the LLM vendor API\n * to let the LLM know the function's purpose and how to call it.\n *\n * Also, it contains {@link validate} function, which is used to validate the\n * function arguments generated by AI agent. It is very important to the\n * LLM function calling, because LLM like OpenAI takes a lot of mistakes when\n * composing arguments in function calling. Even though `number` like\n * simple type is defined in the {@link parameters} schema, LLM often\n * fills it just by a `string` typed value.\n *\n * > This is the reason why `@samchon/openapi` recommends not to use the\n * > [`mcp_servers`](https://openai.github.io/openai-agents-python/mcp/#using-mcp-servers)\n * > property of LLM API directly, but to use the function calling feature\n * > instead. You have to make the AI agent to correct the type level mistakes\n * > by using the `validate` function.\n *\n * @author Jeongho Nam - https://github.com/samchon\n * @author Byeongjin Oh - https://github.com/sunrabbit123\n */\nexport interface IMcpLlmFunction<Model extends ILlmSchema.Model> {\n    /**\n     * Representative name of the function.\n     *\n     * @maxLength 64\n     */\n    name: string;\n    /**\n     * Description of the function.\n     *\n     * For reference, the `description` is very important property to teach\n     * the purpose of the function to the LLM (Language Large Model), and\n     * LLM actually determines which function to call by the description.\n     *\n     * Also, when the LLM conversates with the user, the `description` is\n     * used to explain the function to the user. Therefore, the `description`\n     * property has the highest priority, and you have to consider it.\n     */\n    description?: string | undefined;\n    /**\n     * Parameters of the function.\n     */\n    parameters: ILlmSchema.IParameters<Model>;\n    /**\n     * Validate function of the arguments.\n     *\n     * You know what? LLM (Large Language Model) like OpenAI takes a lot of\n     * mistakes when composing arguments in function calling. Even though\n     * `number` like simple type is defined in the {@link parameters} schema,\n     * LLM often fills it just by a `string` typed value.\n     *\n     * In that case, you have to give a validation feedback to the LLM by\n     * using this `validate` function. The `validate` function will return\n     * detailed information about every type errors about the arguments.\n     *\n     * And in my experience, OpenAI's `gpt-4o-mini` model tends to construct\n     * an invalid function calling arguments at the first trial about 50% of\n     * the time. However, if correct it through this `validate` function,\n     * the success rate soars to 99% at the second trial, and I've never\n     * failed at the third trial.\n     *\n     * > If you've {@link separated} parameters, use the\n     * > {@link IMcpLlmFunction.ISeparated.validate} function instead when\n     * > validating the LLM composed arguments.\n     * >\n     * > In that case, This `validate` function would be meaningful only\n     * > when you've merged the LLM and human composed arguments by\n     * > {@link McpLlm.mergeParameters} function.\n     *\n     * @param args Arguments to validate\n     * @returns Validation result\n     */\n    validate: (args: unknown) => IValidation<unknown>;\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IMcpTool.d.ts","import { OpenApiV3_1 } from \"../OpenApiV3_1\";\n/**\n * MCP tool type.\n *\n * `IMcpTool` is an interface representing a tool type defined in\n * the MCP (Model Context Protocol).\n *\n * Note that, don't be confused with {@link IMcpLlmFunction} type, that is\n * used for {@link McpLlm.application} which converts this `IMcpTool` type\n * to the {@link IMcpLlmFunction} type.\n *\n * @warning Don't be confused with {@link IMcpLlmFunction}\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IMcpTool {\n    /**\n     * Name of the tool.\n     *\n     * @maxLength 64\n     */\n    name: string;\n    /**\n     * Description of the tool.\n     */\n    description?: string | undefined;\n    /**\n     * Input schema of the tool.\n     *\n     * The input schema, parameters of the tool.\n     *\n     * As MCP (Model Context Protocol) does not restict the JSON schema\n     * specification, `@samchon/openapi` has defined it to be universal\n     * structure {@link OpenApiV3_1.IJsonSchema} which can cover every\n     * JSON schema specification.\n     */\n    inputSchema: IMcpTool.IInputSchema;\n}\nexport declare namespace IMcpTool {\n    /**\n     * Input schema of the tool.\n     *\n     * The input schema, parameters of the tool.\n     *\n     * As MCP (Model Context Protocol) does not restict the JSON schema\n     * specification, `@samchon/openapi` has defined it to be universal\n     * structure {@link OpenApiV3_1.IJsonSchema} which can cover every\n     * JSON schema specification.\n     */\n    type IInputSchema = (OpenApiV3_1.IJsonSchema.IObject | OpenApiV3_1.IJsonSchema.IReference) & {\n        /**\n         * Collection of the named schemas.\n         */\n        $defs?: Record<string, OpenApiV3_1.IJsonSchema>;\n    };\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IOpenApiSchemaError.d.ts",'import { OpenApi } from "../OpenApi";\n/**\n * OpenAPI schema related error.\n *\n * `IOpenApiSchemaError` is a type representing an error that occurred during the\n * iteration or transformation of the OpenAPI schema (JSON schema) of\n * {@link OpenApi.IJsonSchema} type.\n *\n * The most `IOpenApiSchemaError` is occurred by the transformation process from\n * {@link OpenApi.IJsonSchema} to {@link ILlmSchema} type. The transformation can\n * be failed by following reasons:\n *\n * - Unable to find the {@link OpenApi.IJsonSchema.IReference} directing.\n * - Non-supported type in LLM schema models\n *   - Every models do not support {@link OpenApi.IJsonSchema.ITuple}\n *   - Gemini does not support {@link OpenApi.IJsonSchema.IOneOf}\n *   - ChatGPT and Gemini do not support {@link OpenApi.IJsonSchema.IObject.additionalProperties}\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport interface IOpenApiSchemaError {\n    /**\n     * Method that caused the error.\n     */\n    method: string;\n    /**\n     * Message of the error.\n     */\n    message: string;\n    /**\n     * The detailed reasons of the error.\n     */\n    reasons: IOpenApiSchemaError.IReason[];\n}\nexport declare namespace IOpenApiSchemaError {\n    /**\n     * Detailed reason of the error.\n     */\n    interface IReason {\n        /**\n         * Schema that caused the error.\n         */\n        schema: OpenApi.IJsonSchema;\n        /**\n         * Accessor to the schema.\n         */\n        accessor: string;\n        /**\n         * Message of the reason.\n         */\n        message: string;\n    }\n}\n'],["file:///node_modules/@samchon/openapi/lib/structures/IResult.d.ts","/**\n * Result of an operation that can either succeed or fail.\n *\n * `IResult` is an union type that represents the result of an operation\n * that can either succeed or fail.\n *\n * You can distinguished the result by checking the {@link IResult.success} value,\n * and if it's `true`, the success value is stored in {@link IResult.value}.\n * Otherwise, if it's `false`, the error value is stored in {@link IResult.error}.\n *\n * @template T Type of the success value.\n * @template E Type of the error value.\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IResult<T, E> = IResult.ISuccess<T> | IResult.IFailure<E>;\nexport declare namespace IResult {\n    /**\n     * Success type of {@link IResult}.\n     */\n    interface ISuccess<T> {\n        /**\n         * Success flag.\n         */\n        success: true;\n        /**\n         * Success value.\n         */\n        value: T;\n    }\n    /**\n     * Failure type of {@link IResult}.\n     */\n    interface IFailure<E> {\n        /**\n         * Success flag.\n         */\n        success: false;\n        /**\n         * The error value.\n         */\n        error: E;\n    }\n}\n"],["file:///node_modules/@samchon/openapi/lib/structures/IValidation.d.ts","export type IValidation<T = unknown> = IValidation.ISuccess<T> | IValidation.IFailure;\nexport declare namespace IValidation {\n    interface ISuccess<T = unknown> {\n        success: true;\n        data: T;\n    }\n    interface IFailure {\n        success: false;\n        data: unknown;\n        errors: IError[];\n    }\n    interface IError {\n        path: string;\n        expected: string;\n        value: any;\n    }\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/AccessorUtil.d.ts","export declare namespace AccessorUtil {\n    const reference: (prefix: string) => string;\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/ChatGptTypeChecker.d.ts",'import { IChatGptSchema } from "../structures/IChatGptSchema";\nexport declare namespace ChatGptTypeChecker {\n    /**\n     * Test whether the schema is a nul type.\n     *\n     * @param schema Target schema\n     * @returns Whether null type or not\n     */\n    const isNull: (schema: IChatGptSchema) => schema is IChatGptSchema.INull;\n    /**\n     * Test whether the schema is an unknown type.\n     *\n     * @param schema Target schema\n     * @returns Whether unknown type or not\n     */\n    const isUnknown: (schema: IChatGptSchema) => schema is IChatGptSchema.IUnknown;\n    /**\n     * Test whether the schema is a boolean type.\n     *\n     * @param schema Target schema\n     * @returns Whether boolean type or not\n     */\n    const isBoolean: (schema: IChatGptSchema) => schema is IChatGptSchema.IBoolean;\n    /**\n     * Test whether the schema is an integer type.\n     *\n     * @param schema Target schema\n     * @returns Whether integer type or not\n     */\n    const isInteger: (schema: IChatGptSchema) => schema is IChatGptSchema.IInteger;\n    /**\n     * Test whether the schema is a number type.\n     *\n     * @param schema Target schema\n     * @returns Whether number type or not\n     */\n    const isNumber: (schema: IChatGptSchema) => schema is IChatGptSchema.INumber;\n    /**\n     * Test whether the schema is a string type.\n     *\n     * @param schema Target schema\n     * @returns Whether string type or not\n     */\n    const isString: (schema: IChatGptSchema) => schema is IChatGptSchema.IString;\n    /**\n     * Test whether the schema is an array type.\n     *\n     * @param schema Target schema\n     * @returns Whether array type or not\n     */\n    const isArray: (schema: IChatGptSchema) => schema is IChatGptSchema.IArray;\n    /**\n     * Test whether the schema is an object type.\n     *\n     * @param schema Target schema\n     * @returns Whether object type or not\n     */\n    const isObject: (schema: IChatGptSchema) => schema is IChatGptSchema.IObject;\n    /**\n     * Test whether the schema is a reference type.\n     *\n     * @param schema Target schema\n     * @returns Whether reference type or not\n     */\n    const isReference: (schema: IChatGptSchema) => schema is IChatGptSchema.IReference;\n    /**\n     * Test whether the schema is an union type.\n     *\n     * @param schema Target schema\n     * @returns Whether union type or not\n     */\n    const isAnyOf: (schema: IChatGptSchema) => schema is IChatGptSchema.IAnyOf;\n    /**\n     * Visit every nested schemas.\n     *\n     * Visit every nested schemas of the target, and apply the `props.closure` function.\n     *\n     * Here is the list of occurring nested visitings:\n     *\n     * - {@link IChatGptSchema.IAnyOf.anyOf}\n     * - {@link IChatGptSchema.IReference}\n     * - {@link IChatGptSchema.IObject.properties}\n     * - {@link IChatGptSchema.IArray.items}\n     *\n     * @param props Properties for visiting\n     */\n    const visit: (props: {\n        closure: (schema: IChatGptSchema, accessor: string) => void;\n        $defs?: Record<string, IChatGptSchema> | undefined;\n        schema: IChatGptSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => void;\n    /**\n     * Test whether the `x` schema covers the `y` schema.\n     *\n     * @param props Properties for testing\n     * @returns Whether the `x` schema covers the `y` schema\n     */\n    const covers: (props: {\n        $defs?: Record<string, IChatGptSchema> | undefined;\n        x: IChatGptSchema;\n        y: IChatGptSchema;\n    }) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/ClaudeTypeChecker.d.ts",'import { LlmTypeCheckerV3_1 } from "./LlmTypeCheckerV3_1";\nexport declare const ClaudeTypeChecker: typeof LlmTypeCheckerV3_1;\n'],["file:///node_modules/@samchon/openapi/lib/utils/DeepSeekTypeChecker.d.ts",'import { LlmTypeCheckerV3_1 } from "./LlmTypeCheckerV3_1";\nexport declare const DeepSeekTypeChecker: typeof LlmTypeCheckerV3_1;\n'],["file:///node_modules/@samchon/openapi/lib/utils/EndpointUtil.d.ts","export declare namespace EndpointUtil {\n    const capitalize: (str: string) => string;\n    const pascal: (path: string) => string;\n    const splitWithNormalization: (path: string) => string[];\n    const reJoinWithDecimalParameters: (path: string) => string;\n    const normalize: (str: string) => string;\n    const escapeDuplicate: (keep: string[]) => (change: string) => string;\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/Escaper.d.ts","export declare namespace Escaper {\n    const variable: (str: string) => boolean;\n    const reserved: (str: string) => boolean;\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/GeminiTypeChecker.d.ts",'import { IGeminiSchema } from "../structures/IGeminiSchema";\n/**\n * Type checker for Gemini type schema.\n *\n * `GeminiTypeChecker` is a type checker of {@link IGeminiSchema}.\n *\n * @author Samchon\n */\nexport declare namespace GeminiTypeChecker {\n    /**\n     * Visit every nested schemas.\n     *\n     * Visit every nested schemas of the target, and apply the `props.closure` function.\n     *\n     * Here is the list of occurring nested visitings:\n     *\n     * - {@link IGeminiSchema.IObject.properties}\n     * - {@link IGeminiSchema.IArray.items}\n     *\n     * @param props Properties for visiting\n     */\n    const visit: (props: {\n        closure: (schema: IGeminiSchema, accessor: string) => void;\n        schema: IGeminiSchema;\n        accessor?: string;\n    }) => void;\n    /**\n     * Test whether the `x` schema covers the `y` schema.\n     *\n     * @param props Properties for testing\n     * @returns Whether the `x` schema covers the `y` schema\n     */\n    const covers: (x: IGeminiSchema, y: IGeminiSchema) => boolean;\n    /**\n     * Test whether the schema is a boolean type.\n     *\n     * @param schema Target schema\n     * @returns Whether boolean type or not\n     */\n    const isBoolean: (schema: IGeminiSchema) => schema is IGeminiSchema.IBoolean;\n    /**\n     * Test whether the schema is an integer type.\n     *\n     * @param schema Target schema\n     * @returns Whether integer type or not\n     */\n    const isInteger: (schema: IGeminiSchema) => schema is IGeminiSchema.IInteger;\n    /**\n     * Test whether the schema is a number type.\n     *\n     * @param schema Target schema\n     * @returns Whether number type or not\n     */\n    const isNumber: (schema: IGeminiSchema) => schema is IGeminiSchema.INumber;\n    /**\n     * Test whether the schema is a string type.\n     *\n     * @param schema Target schema\n     * @returns Whether string type or not\n     */\n    const isString: (schema: IGeminiSchema) => schema is IGeminiSchema.IString;\n    /**\n     * Test whether the schema is an array type.\n     *\n     * @param schema Target schema\n     * @returns Whether array type or not\n     */\n    const isArray: (schema: IGeminiSchema) => schema is IGeminiSchema.IArray;\n    /**\n     * Test whether the schema is an object type.\n     *\n     * @param schema Target schema\n     * @returns Whether object type or not\n     */\n    const isObject: (schema: IGeminiSchema) => schema is IGeminiSchema.IObject;\n    /**\n     * Test whether the schema is a null type.\n     *\n     * @param schema Target schema\n     * @returns Whether null type or not\n     */\n    const isNullOnly: (schema: IGeminiSchema) => schema is IGeminiSchema.INullOnly;\n    /**\n     * Test whether the schema is a nullable type.\n     *\n     * @param schema Target schema\n     * @returns Whether nullable type or not\n     */\n    const isNullable: (schema: IGeminiSchema) => boolean;\n    /**\n     * Test whether the schema is an unknown type.\n     *\n     * @param schema Target schema\n     * @returns Whether unknown type or not\n     */\n    const isUnknown: (schema: IGeminiSchema) => schema is IGeminiSchema.IUnknown;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/LlamaTypeChecker.d.ts",'import { LlmTypeCheckerV3_1 } from "./LlmTypeCheckerV3_1";\nexport declare const LlamaTypeChecker: typeof LlmTypeCheckerV3_1;\n'],["file:///node_modules/@samchon/openapi/lib/utils/LlmDataMerger.d.ts",'import { ILlmFunction } from "../structures/ILlmFunction";\nimport { ILlmSchema } from "../structures/ILlmSchema";\n/**\n * Data combiner for LLM function call.\n *\n * @author Samchon\n */\nexport declare namespace LlmDataMerger {\n    /**\n     * Properties of {@link parameters} function.\n     */\n    interface IProps<Model extends ILlmSchema.Model> {\n        /**\n         * Target function to call.\n         */\n        function: ILlmFunction<Model>;\n        /**\n         * Arguments composed by LLM (Large Language Model).\n         */\n        llm: object | null;\n        /**\n         * Arguments composed by human.\n         */\n        human: object | null;\n    }\n    /**\n     * Combine LLM and human arguments into one.\n     *\n     * When you composes {@link IOpenAiDocument} with\n     * {@link IOpenAiDocument.IOptions.separate} option, then the arguments of the\n     * target function would be separated into two parts; LLM (Large Language Model)\n     * and human.\n     *\n     * In that case, you can combine both LLM and human composed arguments into one\n     * by utilizing this {@link LlmDataMerger.parameters} function, referencing\n     * the target function metadata {@link IOpenAiFunction.separated}.\n     *\n     * @param props Properties to combine LLM and human arguments with metadata.\n     * @returns Combined arguments\n     */\n    const parameters: <Model extends ILlmSchema.Model>(props: IProps<Model>) => object;\n    /**\n     * Combine two values into one.\n     *\n     * If both values are objects, then combines them in the properties level.\n     *\n     * Otherwise, returns the latter value if it\'s not null, otherwise the former value\n     *\n     * - `return (y ?? x)`\n     *\n     * @param x Value X\n     * @param y Value Y\n     * @returns Combined value\n     */\n    const value: (x: unknown, y: unknown) => unknown;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/LlmTypeCheckerV3.d.ts",'import { ILlmSchemaV3 } from "../structures/ILlmSchemaV3";\n/**\n * Type checker for LLM type schema.\n *\n * `LlmSchemaTypeChecker` is a type checker of {@link ILlmSchemaV3}.\n *\n * @author Samchon\n */\nexport declare namespace LlmTypeCheckerV3 {\n    /**\n     * Visit every nested schemas.\n     *\n     * Visit every nested schemas of the target, and apply the `props.closure` function.\n     *\n     * Here is the list of occurring nested visitings:\n     *\n     * - {@link ILlmSchemaV3.IOneOf.oneOf}\n     * - {@link ILlmSchemaV3.IObject.additionalProperties}\n     * - {@link ILlmSchemaV3.IArray.items}\n     *\n     * @param props Properties for visiting\n     */\n    const visit: (props: {\n        closure: (schema: ILlmSchemaV3, accessor: string) => void;\n        schema: ILlmSchemaV3;\n        accessor?: string;\n    }) => void;\n    const covers: (x: ILlmSchemaV3, y: ILlmSchemaV3) => boolean;\n    /**\n     * Test whether the schema is an union type.\n     *\n     * @param schema Target schema\n     * @returns Whether union type or not\n     */\n    const isOneOf: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IOneOf;\n    /**\n     * Test whether the schema is an object type.\n     *\n     * @param schema Target schema\n     * @returns Whether object type or not\n     */\n    const isObject: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IObject;\n    /**\n     * Test whether the schema is an array type.\n     *\n     * @param schema Target schema\n     * @returns Whether array type or not\n     */\n    const isArray: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IArray;\n    /**\n     * Test whether the schema is a boolean type.\n     *\n     * @param schema Target schema\n     * @returns Whether boolean type or not\n     */\n    const isBoolean: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IBoolean;\n    /**\n     * Test whether the schema is an integer type.\n     *\n     * @param schema Target schema\n     * @returns Whether integer type or not\n     */\n    const isInteger: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IInteger;\n    /**\n     * Test whether the schema is a number type.\n     *\n     * @param schema Target schema\n     * @returns Whether number type or not\n     */\n    const isNumber: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.INumber;\n    /**\n     * Test whether the schema is a string type.\n     *\n     * @param schema Target schema\n     * @returns Whether string type or not\n     */\n    const isString: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IString;\n    /**\n     * Test whether the schema is a null type.\n     *\n     * @param schema Target schema\n     * @returns Whether null type or not\n     */\n    const isNullOnly: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.INullOnly;\n    /**\n     * Test whether the schema is a nullable type.\n     *\n     * @param schema Target schema\n     * @returns Whether nullable type or not\n     */\n    const isNullable: (schema: ILlmSchemaV3) => boolean;\n    /**\n     * Test whether the schema is an unknown type.\n     *\n     * @param schema Target schema\n     * @returns Whether unknown type or not\n     */\n    const isUnknown: (schema: ILlmSchemaV3) => schema is ILlmSchemaV3.IUnknown;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/LlmTypeCheckerV3_1.d.ts",'import { ILlmSchemaV3_1 } from "../structures/ILlmSchemaV3_1";\nexport declare namespace LlmTypeCheckerV3_1 {\n    /**\n     * Test whether the schema is a nul type.\n     *\n     * @param schema Target schema\n     * @returns Whether null type or not\n     */\n    const isNull: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.INull;\n    /**\n     * Test whether the schema is an unknown type.\n     *\n     * @param schema Target schema\n     * @returns Whether unknown type or not\n     */\n    const isUnknown: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IUnknown;\n    /**\n     * Test whether the schema is a constant type.\n     *\n     * @param schema Target schema\n     * @returns Whether constant type or not\n     */\n    const isConstant: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IConstant;\n    /**\n     * Test whether the schema is a boolean type.\n     *\n     * @param schema Target schema\n     * @returns Whether boolean type or not\n     */\n    const isBoolean: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IBoolean;\n    /**\n     * Test whether the schema is an integer type.\n     *\n     * @param schema Target schema\n     * @returns Whether integer type or not\n     */\n    const isInteger: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IInteger;\n    /**\n     * Test whether the schema is a number type.\n     *\n     * @param schema Target schema\n     * @returns Whether number type or not\n     */\n    const isNumber: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.INumber;\n    /**\n     * Test whether the schema is a string type.\n     *\n     * @param schema Target schema\n     * @returns Whether string type or not\n     */\n    const isString: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IString;\n    /**\n     * Test whether the schema is an array type.\n     *\n     * @param schema Target schema\n     * @returns Whether array type or not\n     */\n    const isArray: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IArray;\n    /**\n     * Test whether the schema is an object type.\n     *\n     * @param schema Target schema\n     * @returns Whether object type or not\n     */\n    const isObject: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IObject;\n    /**\n     * Test whether the schema is a reference type.\n     *\n     * @param schema Target schema\n     * @returns Whether reference type or not\n     */\n    const isReference: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IReference;\n    /**\n     * Test whether the schema is an union type.\n     *\n     * @param schema Target schema\n     * @returns Whether union type or not\n     */\n    const isOneOf: (schema: ILlmSchemaV3_1) => schema is ILlmSchemaV3_1.IOneOf;\n    /**\n     * Test whether the schema is recursive reference type.\n     *\n     * Test whether the target schema is a reference type, and test one thing more\n     * that the reference is self-recursive or not.\n     *\n     * @param props Properties for recursive reference test\n     * @returns Whether the schema is recursive reference type or not\n     */\n    const isRecursiveReference: (props: {\n        $defs?: Record<string, ILlmSchemaV3_1>;\n        schema: ILlmSchemaV3_1;\n    }) => boolean;\n    /**\n     * Test whether the `x` schema covers the `y` schema.\n     *\n     * @param props Properties for testing\n     * @returns Whether the `x` schema covers the `y` schema\n     */\n    const covers: (props: {\n        $defs?: Record<string, ILlmSchemaV3_1>;\n        x: ILlmSchemaV3_1;\n        y: ILlmSchemaV3_1;\n    }) => boolean;\n    /**\n     * Visit every nested schemas.\n     *\n     * Visit every nested schemas of the target, and apply the `props.closure` function.\n     *\n     * Here is the list of occurring nested visitings:\n     *\n     * - {@link ILlmSchemaV3_1.IOneOf.oneOf}\n     * - {@link ILlmSchemaV3_1.IReference}\n     * - {@link ILlmSchemaV3_1.IObject.properties}\n     * - {@link ILlmSchemaV3_1.IObject.additionalProperties}\n     * - {@link ILlmSchemaV3_1.IArray.items}\n     *\n     * @param props Properties for visiting\n     */\n    const visit: (props: {\n        closure: (schema: ILlmSchemaV3_1, accessor: string) => void;\n        $defs?: Record<string, ILlmSchemaV3_1>;\n        schema: ILlmSchemaV3_1;\n    }) => void;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/MapUtil.d.ts","export declare namespace MapUtil {\n    const take: <Key, T>(dict: Map<Key, T>) => (key: Key) => (generator: () => T) => T;\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/NamingConvention.d.ts","export declare namespace NamingConvention {\n    function snake(str: string): string;\n    function camel(str: string): string;\n    function pascal(str: string): string;\n    const capitalize: (str: string) => string;\n    const variable: (str: string) => boolean;\n    const reserved: (str: string) => boolean;\n}\n"],["file:///node_modules/@samchon/openapi/lib/utils/OpenApiConstraintShifter.d.ts",'import { OpenApi } from "../OpenApi";\nexport declare namespace OpenApiConstraintShifter {\n    const shiftArray: <Schema extends Pick<OpenApi.IJsonSchema.IArray, "description" | "minItems" | "maxItems" | "uniqueItems">>(schema: Schema) => Omit<Schema, "minItems" | "maxItems" | "uniqueItems">;\n    const shiftNumeric: <Schema extends Pick<OpenApi.IJsonSchema.INumber | OpenApi.IJsonSchema.IInteger, "description" | "minimum" | "maximum" | "exclusiveMinimum" | "exclusiveMaximum" | "multipleOf" | "default">>(schema: Schema) => Omit<Schema, "minimum" | "maximum" | "exclusiveMinimum" | "exclusiveMaximum" | "multipleOf" | "default">;\n    const shiftString: <Schema extends Pick<OpenApi.IJsonSchema.IString, "description" | "minLength" | "maxLength" | "format" | "pattern" | "contentMediaType" | "default">>(schema: Schema) => Omit<Schema, "minLength" | "maxLength" | "format" | "pattern" | "contentMediaType" | "default">;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/OpenApiExclusiveEmender.d.ts",'import { OpenApi } from "../OpenApi";\nexport declare namespace OpenApiExclusiveEmender {\n    const emend: <Schema extends Pick<OpenApi.IJsonSchema.INumber, "exclusiveMinimum" | "exclusiveMaximum" | "minimum" | "maximum">>(schema: Schema) => Schema;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/OpenApiTypeChecker.d.ts",'import { OpenApi } from "../OpenApi";\nimport { IOpenApiSchemaError } from "../structures/IOpenApiSchemaError";\nimport { IResult } from "../structures/IResult";\n/**\n * Type checker of OpenAPI type schema.\n *\n * `OpenApiTypeChecker` is a type checker of {@link OpenApi.IJsonSchema}.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare namespace OpenApiTypeChecker {\n    /**\n     * Test whether the schema is a nul type.\n     *\n     * @param schema Target schema\n     * @returns Whether null type or not\n     */\n    const isNull: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.INull;\n    /**\n     * Test whether the schema is an unknown type.\n     *\n     * @param schema Target schema\n     * @returns Whether unknown type or not\n     */\n    const isUnknown: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IUnknown;\n    /**\n     * Test whether the schema is a constant type.\n     *\n     * @param schema Target schema\n     * @returns Whether constant type or not\n     */\n    const isConstant: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IConstant;\n    /**\n     * Test whether the schema is a boolean type.\n     *\n     * @param schema Target schema\n     * @returns Whether boolean type or not\n     */\n    const isBoolean: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IBoolean;\n    /**\n     * Test whether the schema is an integer type.\n     *\n     * @param schema Target schema\n     * @returns Whether integer type or not\n     */\n    const isInteger: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IInteger;\n    /**\n     * Test whether the schema is a number type.\n     *\n     * @param schema Target schema\n     * @returns Whether number type or not\n     */\n    const isNumber: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.INumber;\n    /**\n     * Test whether the schema is a string type.\n     *\n     * @param schema Target schema\n     * @returns Whether string type or not\n     */\n    const isString: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IString;\n    /**\n     * Test whether the schema is an array type.\n     *\n     * @param schema Target schema\n     * @returns Whether array type or not\n     */\n    const isArray: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IArray;\n    /**\n     * Test whether the schema is a tuple type.\n     *\n     * @param schema Target schema\n     * @returns Whether tuple type or not\n     */\n    const isTuple: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.ITuple;\n    /**\n     * Test whether the schema is an object type.\n     *\n     * @param schema Target schema\n     * @returns Whether object type or not\n     */\n    const isObject: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IObject;\n    /**\n     * Test whether the schema is a reference type.\n     *\n     * @param schema Target schema\n     * @returns Whether reference type or not\n     */\n    const isReference: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IReference;\n    /**\n     * Test whether the schema is an union type.\n     *\n     * @param schema Target schema\n     * @returns Whether union type or not\n     */\n    const isOneOf: (schema: OpenApi.IJsonSchema) => schema is OpenApi.IJsonSchema.IOneOf;\n    /**\n     * Test whether the schema is recursive reference type.\n     *\n     * Test whether the target schema is a reference type, and test one thing more\n     * that the reference is self-recursive or not.\n     *\n     * @param props Properties for recursive reference test\n     * @returns Whether the schema is recursive reference type or not\n     */\n    const isRecursiveReference: (props: {\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n    }) => boolean;\n    /**\n     * Escape from the {@link OpenApi.IJsonSchema.IReference} type.\n     *\n     * Escape from the {@link OpenApi.IJsonSchema.IReference} type, replacing the\n     * every references to the actual schemas. If the escape is successful, the returned\n     * schema never contains any {@link OpenApi.IJsonSchema.IReference} type in its\n     * structure.\n     *\n     * If the schema has a recursive reference, the recursive reference would be repeated\n     * as much as the `props.recursive` depth. If you\'ve configured the `props.recursive`\n     * as `false` or `0`, it would be failed and return an {@link IOpenApiSchemaError}.\n     * Also, if there\'s a {@link OpenApi.IJsonSchema.IReference} type which cannot find\n     * the matched type in the {@link OpenApi.IComponents.schemas}, it would also be failed\n     * and return an {@link IOpenApiSchemaError} either.\n     *\n     * @param props Properties for escaping\n     * @returns Escaped schema, or error with reason\n     */\n    const escape: (props: {\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        recursive: false | number;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<OpenApi.IJsonSchema, IOpenApiSchemaError>;\n    /**\n     * Unreference the schema.\n     *\n     * Unreference the schema, replacing the {@link OpenApi.IJsonSchema.IReference} type\n     * to the actual schema. Different with {@link escape} is, the `unreference` function\n     * does not resolve every references in the schema, but resolve only one time.\n     *\n     * If there\'s a {@link OpenApi.IJsonSchema.IReference} type which cannot find\n     * the matched type in the {@link OpenApi.IComponents.schemas}, and you\'ve called this\n     * `unreference()` function with the reference, it would also be failed and return an\n     * {@link IOpenApiSchemaError} value.\n     *\n     * @param props Properties of unreference\n     * @returns Unreferenced schema\n     */\n    const unreference: (props: {\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => IResult<OpenApi.IJsonSchema, IOpenApiSchemaError>;\n    /**\n     * Visit every nested schemas.\n     *\n     * Visit every nested schemas of the target, and apply the `props.closure` function.\n     *\n     * Here is the list of occurring nested visitings:\n     *\n     * - {@link OpenApi.IJsonSchema.IOneOf.oneOf}\n     * - {@link OpenApi.IJsonSchema.IReference}\n     * - {@link OpenApi.IJsonSchema.IObject.properties}\n     * - {@link OpenApi.IJsonSchema.IObject.additionalProperties}\n     * - {@link OpenApi.IJsonSchema.IArray.items}\n     * - {@link OpenApi.IJsonSchema.ITuple.prefixItems}\n     * - {@link OpenApi.IJsonSchema.ITuple.additionalItems}\n     *\n     * @param props Properties for visiting\n     */\n    const visit: (props: {\n        closure: (schema: OpenApi.IJsonSchema, accessor: string) => void;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        accessor?: string;\n        refAccessor?: string;\n    }) => void;\n    /**\n     * Test whether the `x` schema covers the `y` schema.\n     *\n     * @param props Properties for testing\n     * @returns Whether the `x` schema covers the `y` schema\n     */\n    const covers: (props: {\n        components: OpenApi.IComponents;\n        x: OpenApi.IJsonSchema;\n        y: OpenApi.IJsonSchema;\n    }) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/OpenApiValidator.d.ts",'import { OpenApi } from "../OpenApi";\nimport { IValidation } from "../structures/IValidation";\nexport declare namespace OpenApiValidator {\n    const create: (prop: {\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        required: boolean;\n    }) => (value: unknown) => IValidation<unknown>;\n    const validate: (props: {\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema;\n        value: unknown;\n        required: boolean;\n    }) => IValidation<unknown>;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/IOpenApiValidatorContext.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IValidation } from "../../structures/IValidation";\nexport interface IOpenApiValidatorContext<Schema extends OpenApi.IJsonSchema> {\n    components: OpenApi.IComponents;\n    schema: Schema;\n    value: unknown;\n    path: string;\n    report: (error: IValidation.IError & {\n        exceptionable: boolean;\n    }) => false;\n    exceptionable: boolean;\n    expected: string;\n    required: boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/JsonDescriptionUtil.d.ts",'import { OpenApi } from "../../OpenApi";\nexport declare namespace JsonDescriptionUtil {\n    const cascade: (props: {\n        prefix: string;\n        components: OpenApi.IComponents;\n        schema: OpenApi.IJsonSchema.IReference;\n        escape: boolean;\n    }) => string | undefined;\n    const take: (o: OpenApi.IJsonSchema.IObject) => string | undefined;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiArrayValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiArrayValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IArray>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiBooleanValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiBooleanValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IBoolean>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiConstantValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiConstantValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IConstant>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiIntegerValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiIntegerValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IInteger>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiNumberValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiNumberValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.INumber>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiObjectValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiObjectValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IObject>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiOneOfValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiOneOfValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IOneOf>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiSchemaNamingRule.d.ts",'import { OpenApi } from "../../OpenApi";\nexport declare namespace OpenApiSchemaNamingRule {\n    const getName: (schema: OpenApi.IJsonSchema, union?: boolean) => string;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiStationValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiStationValidator {\n    const validate: (ctx: Omit<IOpenApiValidatorContext<OpenApi.IJsonSchema>, "expected">, expected?: string) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiStringValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiStringValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.IString>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiTupleValidator.d.ts",'import { OpenApi } from "../../OpenApi";\nimport { IOpenApiValidatorContext } from "./IOpenApiValidatorContext";\nexport declare namespace OpenApiTupleValidator {\n    const validate: (ctx: IOpenApiValidatorContext<OpenApi.IJsonSchema.ITuple>) => boolean;\n}\n'],["file:///node_modules/@samchon/openapi/lib/utils/internal/OpenApiTypeCheckerBase.d.ts","export {};\n"],["file:///node_modules/typia/package.json",'{\n  "private": true,\n  "name": "typia",\n  "version": "9.3.1",\n  "description": "Superfast runtime validators with only one line",\n  "main": "lib/index.js",\n  "typings": "lib/index.d.ts",\n  "module": "lib/index.mjs",\n  "bin": {\n    "typia": "./lib/executable/typia.js"\n  },\n  "tsp": {\n    "tscOptions": {\n      "parseAllJsDoc": true\n    }\n  },\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/samchon/typia"\n  },\n  "author": "Jeongho Nam",\n  "license": "MIT",\n  "bugs": {\n    "url": "https://github.com/samchon/typia/issues"\n  },\n  "homepage": "https://typia.io",\n  "dependencies": {\n    "@samchon/openapi": "^4.3.1",\n    "@standard-schema/spec": "^1.0.0",\n    "commander": "^10.0.0",\n    "comment-json": "^4.2.3",\n    "inquirer": "^8.2.5",\n    "package-manager-detector": "^0.2.0",\n    "randexp": "^0.5.3"\n  },\n  "peerDependencies": {\n    "@samchon/openapi": ">=4.3.1 <5.0.0",\n    "typescript": ">=4.8.0 <5.9.0"\n  },\n  "devDependencies": {\n    "@rollup/plugin-commonjs": "^26.0.1",\n    "@rollup/plugin-node-resolve": "^15.2.3",\n    "@rollup/plugin-typescript": "^11.1.6",\n    "@trivago/prettier-plugin-sort-imports": "^4.3.0",\n    "@types/inquirer": "^8.2.5",\n    "@types/node": "^18.15.12",\n    "@types/ts-expose-internals": "npm:ts-expose-internals@5.5.4",\n    "@typescript-eslint/eslint-plugin": "^8.1.0",\n    "@typescript-eslint/parser": "^8.1.0",\n    "chalk": "^4.0.0",\n    "eslint-plugin-deprecation": "^3.0.0",\n    "prettier": "^3.2.5",\n    "rimraf": "^5.0.5",\n    "rollup": "^4.18.0",\n    "rollup-plugin-auto-external": "^2.0.0",\n    "rollup-plugin-node-externals": "^8.0.0",\n    "suppress-warnings": "^1.0.2",\n    "tinyglobby": "^0.2.12",\n    "ts-node": "^10.9.2",\n    "typescript": "~5.8.3"\n  },\n  "sideEffects": false,\n  "files": [\n    "LICENSE",\n    "README.md",\n    "package.json",\n    "lib",\n    "src"\n  ],\n  "keywords": [\n    "fast",\n    "json",\n    "stringify",\n    "typescript",\n    "transform",\n    "ajv",\n    "io-ts",\n    "zod",\n    "schema",\n    "json-schema",\n    "generator",\n    "assert",\n    "clone",\n    "is",\n    "validate",\n    "equal",\n    "runtime",\n    "type",\n    "typebox",\n    "checker",\n    "validator",\n    "safe",\n    "parse",\n    "prune",\n    "random",\n    "protobuf",\n    "llm",\n    "llm-function-calling",\n    "structured-output",\n    "openai",\n    "chatgpt",\n    "claude",\n    "gemini",\n    "llama"\n  ],\n  "scripts": {\n    "test": "ts-node deploy --tag test",\n    "test:template": "npm run --tag test --template",\n    "-------------------------------------------------": "",\n    "build": "rimraf lib && tsc && rollup -c",\n    "dev": "rimraf lib && tsc --watch",\n    "dev:errors": "tsc --project tsconfig.errors.json --watch",\n    "eslint": "eslint",\n    "eslint:fix": "eslint --fix",\n    "prettier": "prettier src --check",\n    "prettier:fix": "prettier src --write",\n    "------------------------------------------------": "",\n    "package:latest": "ts-node deploy --tag latest",\n    "package:next": "ts-node deploy --tag next",\n    "package:patch": "ts-node deploy --tag patch",\n    "package:tgz": "ts-node deploy/tgz.ts"\n  }\n}'],["file:///node_modules/typia/index.d.ts",'import * as typia from "./lib";\nexport * from "./lib";\nexport default typia;'],["file:///node_modules/typia/lib/AssertionGuard.d.ts","/**\n * Type definition for assertion guard functions in `typia`.\n *\n * An assertion guard is a function that asserts an input value's type at runtime\n * and performs a TypeScript type assertion if validation passes. Unlike regular\n * assertion functions that return the validated value, assertion guards return\n * nothing but automatically cast the input parameter to the expected type `T`.\n *\n * This type is used by `typia.createAssertGuard<T>()` and `typia.createAssertGuardEquals<T>()`\n * to generate reusable assertion guard functions.\n *\n * @template T - The expected type to validate and assert against\n * @param input - The value to validate (type unknown)\n * @throws {TypeGuardError} When the input value doesn't match the expected type T\n * @returns void - Returns nothing, but asserts that input is type T\n *\n * @example\n * ```typescript\n * interface IMember {\n *   name: string;\n *   age: number;\n * }\n *\n * // Create reusable assertion guard\n * const assertMember: AssertionGuard<IMember> = typia.createAssertGuard<IMember>();\n *\n * // Usage - input will be automatically cast to IMember if validation passes\n * const unknownData: unknown = { name: \"John\", age: 25 };\n *\n * assertMember(unknownData);\n * // After this line, unknownData is automatically treated as IMember type\n * console.log(unknownData.name); // TypeScript knows this is safe\n * ```\n *\n * @see {@link https://github.com/samchon/typia#assertguard-functions} Typia assertion guards documentation\n * @see {@link TypeGuardError} Error thrown when assertion fails\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type AssertionGuard<T> = (input: unknown) => asserts input is T;\n"],["file:///node_modules/typia/lib/CamelCase.d.ts",'import { Equal } from "./typings/Equal";\nimport { IsTuple } from "./typings/IsTuple";\nimport { NativeClass } from "./typings/NativeClass";\nimport { ValueOf } from "./typings/ValueOf";\n/**\n * Camel case type.\n *\n * `CamelCase` type is a type that all keys of an object are camelized.\n *\n * It also erase every method properties like {@link Resolved} type.\n *\n * @template T Target type to be camelized\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type CamelCase<T> = Equal<T, CamelizeMain<T>> extends true ? T : CamelizeMain<T>;\ntype CamelizeMain<T> = T extends [never] ? never : T extends {\n    valueOf(): boolean | bigint | number | string;\n} ? ValueOf<T> : T extends Function ? never : T extends object ? CamelizeObject<T> : T;\ntype CamelizeObject<T extends object> = T extends Array<infer U> ? IsTuple<T> extends true ? CamelizeTuple<T> : CamelizeMain<U>[] : T extends Set<infer U> ? Set<CamelizeMain<U>> : T extends Map<infer K, infer V> ? Map<CamelizeMain<K>, CamelizeMain<V>> : T extends WeakSet<any> | WeakMap<any, any> ? never : T extends NativeClass ? T : {\n    [Key in keyof T as CamelizeString<Key & string>]: CamelizeMain<T[Key]>;\n};\ntype CamelizeTuple<T extends readonly any[]> = T extends [] ? [] : T extends [infer F] ? [CamelizeMain<F>] : T extends [infer F, ...infer Rest extends readonly any[]] ? [CamelizeMain<F>, ...CamelizeTuple<Rest>] : T extends [(infer F)?] ? [CamelizeMain<F>?] : T extends [(infer F)?, ...infer Rest extends readonly any[]] ? [CamelizeMain<F>?, ...CamelizeTuple<Rest>] : [];\ntype CamelizeString<Key extends string> = Key extends `_${infer R}` ? `_${CamelizeString<R>}` : Key extends `${infer _F}_${infer _R}` ? CamelizeSnakeString<Key> : Key extends Uppercase<Key> ? Lowercase<Key> : CamelizePascalString<Key>;\ntype CamelizePascalString<Key extends string> = Key extends `${infer F}${infer R}` ? `${Lowercase<F>}${R}` : Key;\ntype CamelizeSnakeString<Key extends string> = Key extends `_${infer R}` ? CamelizeSnakeString<R> : Key extends `${infer F}_${infer M}${infer R}` ? M extends "_" ? CamelizeSnakeString<`${F}_${R}`> : `${Lowercase<F>}${Uppercase<M>}${CamelizeSnakeString<R>}` : Lowercase<Key>;\nexport {};\n'],["file:///node_modules/typia/lib/IRandomGenerator.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport interface IRandomGenerator {\n    boolean(): boolean | undefined;\n    number(schema: OpenApi.IJsonSchema.INumber): number;\n    integer(schema: OpenApi.IJsonSchema.IInteger): number;\n    bigint(schema: OpenApi.IJsonSchema.IInteger): bigint;\n    string(schema: OpenApi.IJsonSchema.IString): string;\n    array<T>(schema: Omit<OpenApi.IJsonSchema.IArray, "items"> & {\n        element: (index: number, count: number) => T;\n    }): T[];\n    pattern(regex: RegExp): string;\n    byte(): string;\n    password(): string;\n    regex(): string;\n    uuid(): string;\n    email(): string;\n    hostname(): string;\n    idnEmail(): string;\n    idnHostname(): string;\n    iri(): string;\n    iriReference(): string;\n    ipv4(): string;\n    ipv6(): string;\n    uri(): string;\n    uriReference(): string;\n    uriTemplate(): string;\n    url(): string;\n    datetime(props?: {\n        minimum?: number;\n        maximum?: number;\n    }): string;\n    date(props?: {\n        minimum?: number;\n        maximum?: number;\n    }): string;\n    time(): string;\n    duration(): string;\n    jsonPointer(): string;\n    relativeJsonPointer(): string;\n}\n'],["file:///node_modules/typia/lib/IReadableURLSearchParams.d.ts",'/**\n * Interface for a readable URLSearchParams object.\n *\n * This interface is a subset of the {@link URLSearchParams} interface,\n * designed especially for the [Hono.JS](https://hono.dev/) library.\n *\n * @author https://github.com/miyaji255\n */\nexport type IReadableURLSearchParams = Pick<URLSearchParams, "get" | "getAll">;\n'],["file:///node_modules/typia/lib/IValidation.d.ts",'export { IValidation } from "@samchon/openapi";\n'],["file:///node_modules/typia/lib/PascalCase.d.ts",'import { Equal } from "./typings/Equal";\nimport { IsTuple } from "./typings/IsTuple";\nimport { NativeClass } from "./typings/NativeClass";\nimport { ValueOf } from "./typings/ValueOf";\n/**\n * Pascal case type.\n *\n * `PascalCase` type is a type that all keys of an object are pascalized.\n *\n * It also erase every method properties like {@link Resolved} type.\n *\n * @template T Target type to be pascalized\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type PascalCase<T> = Equal<T, PascalizeMain<T>> extends true ? T : PascalizeMain<T>;\ntype PascalizeMain<T> = T extends [never] ? never : T extends {\n    valueOf(): boolean | bigint | number | string;\n} ? ValueOf<T> : T extends Function ? never : T extends object ? PascalizeObject<T> : T;\ntype PascalizeObject<T extends object> = T extends Array<infer U> ? IsTuple<T> extends true ? PascalizeTuple<T> : PascalizeMain<U>[] : T extends Set<infer U> ? Set<PascalizeMain<U>> : T extends Map<infer K, infer V> ? Map<PascalizeMain<K>, PascalizeMain<V>> : T extends WeakSet<any> | WeakMap<any, any> ? never : T extends NativeClass ? T : {\n    [Key in keyof T as PascalizeString<Key & string>]: PascalizeMain<T[Key]>;\n};\ntype PascalizeTuple<T extends readonly any[]> = T extends [] ? [] : T extends [infer F] ? [PascalizeMain<F>] : T extends [infer F, ...infer Rest extends readonly any[]] ? [PascalizeMain<F>, ...PascalizeTuple<Rest>] : T extends [(infer F)?] ? [PascalizeMain<F>?] : T extends [(infer F)?, ...infer Rest extends readonly any[]] ? [PascalizeMain<F>?, ...PascalizeTuple<Rest>] : [];\ntype PascalizeString<Key extends string> = Key extends `_${infer R}` ? `_${PascalizeString<R>}` : Key extends `${infer _F}_${infer _R}` ? PascalizeSnakeString<Key> : Capitalize<Key>;\ntype PascalizeSnakeString<Key extends string> = Key extends `_${infer R}` ? PascalizeSnakeString<R> : Key extends `${infer F}${infer M}_${infer R}` ? `${Uppercase<F>}${Lowercase<M>}${PascalizeSnakeString<R>}` : Key extends `${infer F}${infer R}` ? `${Uppercase<F>}${Lowercase<R>}` : Key;\nexport {};\n'],["file:///node_modules/typia/lib/Primitive.d.ts",'import { Equal } from "./typings/Equal";\nimport { IsTuple } from "./typings/IsTuple";\nimport { NativeClass } from "./typings/NativeClass";\nimport { ValueOf } from "./typings/ValueOf";\nimport { Format } from "./tags";\n/**\n * Primitive type of JSON.\n *\n * `Primitive<T>` is a TMP (Type Meta Programming) type which converts\n * its argument as a primitive type within framework JSON.\n *\n * If the target argument is a built-in class which returns its origin primitive type\n * through the `valueOf()` method like the `String` or `Number`, its return type would\n * be the `string` or `number`. Otherwise, the built-in class does not have the\n * `valueOf()` method, the return type would be an empty object (`{}`).\n *\n * Otherwise, the target argument is a type of custom class, all of its custom method\n * would be erased and its prototype would be changed to the primitive `object`.\n * Therefore, return type of the TMP type finally be the primitive object.\n *\n * In addition, if the target argument is a type of custom class and it has a special\n * method `toJSON()`, return type of this `Primitive` would be not `Primitive<Instance>`\n * but `Primitive<ReturnType<Instance.toJSON>>`.\n *\n * Before                  | After\n * ------------------------|----------------------------------------\n * `Boolean`               | `boolean`\n * `Number`                | `number`\n * `String`                | `string`\n * `Class`                 | `object`\n * `Class` with `toJSON()` | `Primitive<ReturnType<Class.toJSON>>`\n * Native Class            | never\n * Others                  | No change\n *\n * @template T Target argument type.\n * @author Jeongho Nam - https://github.com/samchon\n * @author Kyungsu Kang - https://github.com/kakasoo\n * @author Michael - https://github.com/8471919\n */\nexport type Primitive<T> = Equal<T, PrimitiveMain<T>> extends true ? T : PrimitiveMain<T>;\ntype PrimitiveMain<Instance> = Instance extends [never] ? never : ValueOf<Instance> extends bigint ? never : ValueOf<Instance> extends boolean | number | string ? ValueOf<Instance> : Instance extends Function ? never : ValueOf<Instance> extends object ? Instance extends object ? Instance extends Date ? string & Format<"date-time"> : Instance extends IJsonable<infer Raw> ? ValueOf<Raw> extends object ? Raw extends object ? PrimitiveObject<Raw> : never : ValueOf<Raw> : Instance extends Exclude<NativeClass, Date> ? never : PrimitiveObject<Instance> : never : ValueOf<Instance>;\ntype PrimitiveObject<Instance extends object> = Instance extends Array<infer T> ? IsTuple<Instance> extends true ? PrimitiveTuple<Instance> : PrimitiveMain<T>[] : {\n    [P in keyof Instance]: PrimitiveMain<Instance[P]>;\n};\ntype PrimitiveTuple<T extends readonly any[]> = T extends [] ? [] : T extends [infer F] ? [PrimitiveMain<F>] : T extends [infer F, ...infer Rest extends readonly any[]] ? [PrimitiveMain<F>, ...PrimitiveTuple<Rest>] : T extends [(infer F)?] ? [PrimitiveMain<F>?] : T extends [(infer F)?, ...infer Rest extends readonly any[]] ? [PrimitiveMain<F>?, ...PrimitiveTuple<Rest>] : [];\ninterface IJsonable<T> {\n    toJSON(): T;\n}\nexport {};\n'],["file:///node_modules/typia/lib/Resolved.d.ts",'import { Equal } from "./typings/Equal";\nimport { IsTuple } from "./typings/IsTuple";\nimport { NativeClass } from "./typings/NativeClass";\nimport { ValueOf } from "./typings/ValueOf";\n/**\n * Resolved type erased every methods.\n *\n * `Resolved` is a type of TMP (Type Meta Programming) type which converts\n * its argument as a resolved type that erased every method properties.\n *\n * If the target argument is a built-in class which returns its origin primitive type\n * through the `valueOf()` method like the `String` or `Number`, its return type would\n * be the `string` or `number`. Otherwise, the built-in class does not have the\n * `valueOf()` method, the return type would be same with the target argument.\n *\n * Otherwise, the target argument is a type of custom class, all of its custom methods\n * would be erased and its prototype would be changed to the primitive `object`.\n * Therefore, return type of the TMP type finally be the resolved object.\n *\n * Before                  | After\n * ------------------------|----------------------------------------\n * `Boolean`               | `boolean`\n * `Number`                | `number`\n * `BigInt`                | `bigint`\n * `String`                | `string`\n * `Class`                 | `interface`\n * Native Class or Others  | No change\n *\n * @template T Target argument type.\n * @author Jeongho Nam - https://github.com/samchon\n * @author Kyungsu Kang - https://github.com/kakasoo\n */\nexport type Resolved<T> = Equal<T, ResolvedMain<T>> extends true ? T : ResolvedMain<T>;\ntype ResolvedMain<T> = T extends [never] ? never : ValueOf<T> extends boolean | number | bigint | string ? ValueOf<T> : T extends Function ? never : T extends object ? ResolvedObject<T> : ValueOf<T>;\ntype ResolvedObject<T extends object> = T extends Array<infer U> ? IsTuple<T> extends true ? ResolvedTuple<T> : ResolvedMain<U>[] : T extends Set<infer U> ? Set<ResolvedMain<U>> : T extends Map<infer K, infer V> ? Map<ResolvedMain<K>, ResolvedMain<V>> : T extends WeakSet<any> | WeakMap<any, any> ? never : T extends NativeClass ? T : {\n    [P in keyof T]: ResolvedMain<T[P]>;\n};\ntype ResolvedTuple<T extends readonly any[]> = T extends [] ? [] : T extends [infer F] ? [ResolvedMain<F>] : T extends [infer F, ...infer Rest extends readonly any[]] ? [ResolvedMain<F>, ...ResolvedTuple<Rest>] : T extends [(infer F)?] ? [ResolvedMain<F>?] : T extends [(infer F)?, ...infer Rest extends readonly any[]] ? [ResolvedMain<F>?, ...ResolvedTuple<Rest>] : [];\nexport {};\n'],["file:///node_modules/typia/lib/SnakeCase.d.ts",'import { Equal } from "./typings/Equal";\nimport { NativeClass } from "./typings/NativeClass";\nimport { ValueOf } from "./typings/ValueOf";\n/**\n * Snake case type.\n *\n * `SnakeCase` type is a type that all keys of an object are converted to snake case.\n *\n * It also erase every method properties like {@link Resolved} type.\n *\n * @template T Target type to be snake cased\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type SnakeCase<T> = Equal<T, SnakageMain<T>> extends true ? T : SnakageMain<T>;\ntype SnakageMain<T> = T extends [never] ? never : T extends {\n    valueOf(): boolean | bigint | number | string;\n} ? ValueOf<T> : T extends Function ? never : T extends object ? SnakageObject<T> : T;\ntype SnakageObject<T extends object> = T extends Array<infer U> ? IsTuple<T> extends true ? SnakageTuple<T> : SnakageMain<U>[] : T extends Set<infer U> ? Set<SnakageMain<U>> : T extends Map<infer K, infer V> ? Map<SnakageMain<K>, SnakageMain<V>> : T extends WeakSet<any> | WeakMap<any, any> ? never : T extends NativeClass ? T : {\n    [Key in keyof T as SnakageString<Key & string>]: SnakageMain<T[Key]>;\n};\ntype IsTuple<T extends readonly any[] | {\n    length: number;\n}> = [T] extends [\n    never\n] ? false : T extends readonly any[] ? number extends T["length"] ? false : true : false;\ntype SnakageTuple<T extends readonly any[]> = T extends [] ? [] : T extends [infer F] ? [SnakageMain<F>] : T extends [infer F, ...infer Rest extends readonly any[]] ? [SnakageMain<F>, ...SnakageTuple<Rest>] : T extends [(infer F)?] ? [SnakageMain<F>?] : T extends [(infer F)?, ...infer Rest extends readonly any[]] ? [SnakageMain<F>?, ...SnakageTuple<Rest>] : [];\ntype SnakageString<Key extends string> = Key extends `${infer _}` ? SnakageStringRepeatedly<Key, ""> : Key;\ntype SnakageStringRepeatedly<S extends string, Previous extends string> = S extends `${infer First}${infer Second}${infer Rest}` ? `${Underscore<Previous, First>}${Lowercase<First>}${Underscore<First, Second>}${Lowercase<Second>}${SnakageStringRepeatedly<Rest, Second>}` : S extends `${infer First}` ? `${Underscore<Previous, First>}${Lowercase<First>}` : "";\ntype Underscore<First extends string, Second extends string> = First extends UpperAlphabetic | "" | "_" ? "" : Second extends UpperAlphabetic ? "_" : "";\ntype UpperAlphabetic = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z";\nexport {};\n'],["file:///node_modules/typia/lib/TypeGuardError.d.ts",'/**\n * Custom error class thrown when runtime assertion fails in `typia.assert<T>()` function.\n *\n * This error is thrown by the `typia.assert<T>()` function when the input value\n * doesn\'t match the expected type.\n *\n * The error provides detailed information about the first assertion failure encountered,\n * including the access path where the error occurred, the expected type, and the actual value.\n *\n * @template T - The expected type (generic for type safety)\n * @author Jeongho Nam - https://github.com/samchon\n * @example\n * ```typescript\n * interface IMember {\n *   name: string;\n *   age: number & ExclusiveMinimum<19>;\n * }\n *\n * try {\n *   typia.assert<IMember>({ name: "John", age: 18 });\n * } catch (error) {\n *   if (error instanceof TypeGuardError) {\n *     console.log(error.method);   // "typia.assert"\n *     console.log(error.path);     // "input.age"\n *     console.log(error.expected); // "number & ExclusiveMinimum<19>"\n *     console.log(error.value);    // 18\n *   }\n * }\n * ```\n */\nexport declare class TypeGuardError<T = any> extends Error {\n    /**\n     * The name of the typia method that threw this error.\n     *\n     * @example "typia.assert"\n     */\n    readonly method: string;\n    /**\n     * The access path to the property where the assertion error occurred.\n     *\n     * Uses dot notation to indicate the path for nested object properties.\n     * May be `undefined` if the error occurred at the root level.\n     *\n     * @example\n     * - `"input.age"` - Error in the age property of the object\n     * - `"input.profile.email"` - Error in the email property of a nested object\n     * - `"input[0].name"` - Error in the name property of the first array element\n     * - `undefined` - Error occurred at the root level\n     */\n    readonly path: string | undefined;\n    /**\n     * String representation of the expected type at the error location.\n     *\n     * Represents TypeScript types as strings, including detailed type information\n     * for complex types.\n     *\n     * @example\n     * - `"string"` - Expected string type\n     * - `"number & ExclusiveMinimum<19>"` - Expected number greater than 19\n     * - `"undefined"` - Expected undefined (when superfluous property found in assertion)\n     * - `"{ name: string; age: number }"` - Expected object type\n     */\n    readonly expected: string;\n    /**\n     * The actual value that failed assertion.\n     *\n     * Stores the actual value at the error path as-is.\n     * Useful for debugging by comparing the expected type with the actual value.\n     *\n     * @example\n     * - `18` - Numeric value\n     * - `"invalid"` - String value\n     * - `{ name: "John", age: 18, sex: 1 }` - Object value\n     */\n    readonly value: any;\n    /**\n     * Creates a new TypeGuardError instance.\n     *\n     * @param props - Object containing the properties needed to create the error\n     *\n     * @example\n     * ```typescript\n     * const error = new TypeGuardError({\n     *   method: "typia.assert",\n     *   path: "input.age",\n     *   expected: "number & ExclusiveMinimum<19>",\n     *   value: 18\n     * });\n     * ```\n     */\n    constructor(props: TypeGuardError.IProps);\n}\nexport declare namespace TypeGuardError {\n    /**\n     * Interface for properties passed to the TypeGuardError constructor.\n     *\n     * @example\n     * ```typescript\n     * const props: TypeGuardError.IProps = {\n     *   method: "typia.assertEquals",\n     *   path: "input.sex",\n     *   expected: "undefined",\n     *   value: 1,\n     *   message: "Custom error message" // optional\n     * };\n     * ```\n     */\n    interface IProps {\n        /**\n         * The name of the typia method that threw the error.\n         *\n         * @example "typia.assert", "typia.assertEquals"\n         */\n        method: string;\n        /**\n         * The access path to the property where the assertion error occurred (optional).\n         *\n         * @example "input.age", "input.profile.email"\n         */\n        path?: undefined | string;\n        /**\n         * String representation of the expected type at the error location.\n         *\n         * @example "string", "number & ExclusiveMinimum<19>"\n         */\n        expected: string;\n        /**\n         * The actual value that failed assertion.\n         */\n        value: any;\n        /**\n         * Custom error message (optional).\n         *\n         * If not provided, a default format message will be automatically generated.\n         */\n        message?: undefined | string;\n    }\n}\n'],["file:///node_modules/typia/lib/executable/TypiaGenerateWizard.d.ts","export declare namespace TypiaGenerateWizard {\n    function generate(): Promise<void>;\n    interface IArguments {\n        input: string;\n        output: string;\n        project: string;\n    }\n}\n"],["file:///node_modules/typia/lib/executable/TypiaPatchWizard.d.ts","export declare namespace TypiaPatchWizard {\n    const main: () => Promise<void>;\n    const patch: () => Promise<void>;\n}\n"],["file:///node_modules/typia/lib/executable/TypiaSetupWizard.d.ts",'export declare namespace TypiaSetupWizard {\n    interface IArguments {\n        manager: "npm" | "pnpm" | "yarn" | "bun";\n        project: string | null;\n    }\n    const setup: () => Promise<void>;\n}\n'],["file:///node_modules/typia/lib/executable/setup/ArgumentParser.d.ts",'import commander from "commander";\nimport inquirer from "inquirer";\nimport { PackageManager } from "./PackageManager";\nexport declare namespace ArgumentParser {\n    type Inquiry<T> = (pack: PackageManager, command: commander.Command, prompt: (opt?: inquirer.StreamOptions) => inquirer.PromptModule, action: (closure: (options: Partial<T>) => Promise<T>) => Promise<T>) => Promise<T>;\n    const parse: <T>(pack: PackageManager, inquiry: (pack: PackageManager, command: commander.Command, prompt: (opt?: inquirer.StreamOptions) => inquirer.PromptModule, action: (closure: (options: Partial<T>) => Promise<T>) => Promise<T>) => Promise<T>) => Promise<T>;\n}\n'],["file:///node_modules/typia/lib/executable/setup/CommandExecutor.d.ts","export declare namespace CommandExecutor {\n    const run: (str: string) => void;\n}\n"],["file:///node_modules/typia/lib/executable/setup/FileRetriever.d.ts","export declare namespace FileRetriever {\n    const directory: (props: {\n        file: string;\n        location: string;\n        depth?: number;\n    }) => string | null;\n}\n"],["file:///node_modules/typia/lib/executable/setup/PackageManager.d.ts",'export declare class PackageManager {\n    readonly directory: string;\n    data: Package.Data;\n    manager: Manager;\n    get file(): string;\n    static mount(): Promise<PackageManager>;\n    save(modifier: (data: Package.Data) => void): Promise<void>;\n    install(props: {\n        dev: boolean;\n        modulo: string;\n        version: string;\n    }): boolean;\n    private constructor();\n    private static load;\n}\nexport declare namespace Package {\n    interface Data {\n        scripts?: Record<string, string>;\n        dependencies?: Record<string, string>;\n        devDependencies?: Record<string, string>;\n    }\n}\ntype Manager = "npm" | "pnpm" | "yarn" | "bun";\nexport {};\n'],["file:///node_modules/typia/lib/executable/setup/PluginConfigurator.d.ts",'import { TypiaSetupWizard } from "../TypiaSetupWizard";\nexport declare namespace PluginConfigurator {\n    function configure(args: TypiaSetupWizard.IArguments): Promise<void>;\n}\n'],["file:///node_modules/typia/lib/executable/typia.d.ts",'#!/usr/bin/env node\ndeclare const USAGE = "Wrong command has been detected. Use like below:\\n\\n  npx typia setup \\\\\\n    --manager (npm|pnpm|yarn) \\\\\\n    --project {tsconfig.json file path}\\n\\n    - npx typia setup\\n    - npx typia setup --manager pnpm\\n    - npx typia setup --project tsconfig.test.json\\n\\n  npx typia generate \\n    --input {directory} \\\\\\n    --output {directory}\\n\\n    --npx typia generate --input src/templates --output src/functinoal\\n";\ndeclare const halt: (desc: string) => never;\ndeclare const main: () => Promise<void>;\n'],["file:///node_modules/typia/lib/factories/CommentFactory.d.ts",'import ts from "typescript";\nexport declare namespace CommentFactory {\n    const description: (symbol: ts.Symbol, includeTags?: boolean) => string | undefined;\n    const merge: (comments: ts.SymbolDisplayPart[]) => string;\n}\n'],["file:///node_modules/typia/lib/factories/ExpressionFactory.d.ts",'import ts from "typescript";\nimport { ImportProgrammer } from "../programmers/ImportProgrammer";\nexport declare namespace ExpressionFactory {\n    const number: (value: number) => ts.PrefixUnaryExpression | ts.NumericLiteral;\n    const bigint: (value: number | bigint) => ts.CallExpression;\n    const isRequired: (input: ts.Expression) => ts.Expression;\n    const isArray: (input: ts.Expression) => ts.Expression;\n    const isObject: (props: {\n        checkNull: boolean;\n        checkArray: boolean;\n        input: ts.Expression;\n    }) => ts.Expression;\n    const isInstanceOf: (type: string, input: ts.Expression) => ts.Expression;\n    const coalesce: (x: ts.Expression, y: ts.Expression) => ts.Expression;\n    const currying: (props: {\n        function: ts.Expression;\n        arguments: ts.Expression[];\n    }) => ts.CallExpression;\n    const selfCall: (body: ts.ConciseBody, type?: ts.TypeNode | undefined) => ts.CallExpression;\n    const getEscapedText: (props: {\n        printer: ts.Printer;\n        input: ts.Expression;\n    }) => string;\n    const transpile: (props: {\n        transformer?: ts.TransformationContext;\n        importer?: ImportProgrammer;\n        script: string;\n    }) => (input: ts.Expression) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/factories/IdentifierFactory.d.ts",'import ts from "typescript";\nexport declare namespace IdentifierFactory {\n    const identifier: (name: string) => ts.Identifier | ts.StringLiteral;\n    const access: (input: ts.Expression, key: string, chain?: boolean) => ts.PropertyAccessExpression | ts.ElementAccessExpression;\n    const getName: (input: ts.Expression) => string;\n    const postfix: (str: string) => string;\n    const parameter: (name: string | ts.BindingName, type?: ts.TypeNode | undefined, init?: ts.Expression | ts.PunctuationToken<ts.SyntaxKind.QuestionToken> | undefined) => ts.ParameterDeclaration;\n}\n'],["file:///node_modules/typia/lib/factories/JsonMetadataFactory.d.ts",'import ts from "typescript";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataCollection } from "./MetadataCollection";\nimport { MetadataFactory } from "./MetadataFactory";\nexport declare namespace JsonMetadataFactory {\n    interface IProps {\n        method: string;\n        checker: ts.TypeChecker;\n        transformer?: ts.TransformationContext;\n        type: ts.Type;\n        validate?: MetadataFactory.Validator;\n    }\n    interface IOutput {\n        collection: MetadataCollection;\n        metadata: Metadata;\n    }\n    const analyze: (props: IProps) => IOutput;\n    const validate: (meta: Metadata) => string[];\n}\n'],["file:///node_modules/typia/lib/factories/LiteralFactory.d.ts",'import ts from "typescript";\nexport declare namespace LiteralFactory {\n    const write: (input: any) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/factories/MetadataCollection.d.ts",'import ts from "typescript";\nimport { IMetadataComponents } from "../schemas/metadata/IMetadataComponents";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataAliasType } from "../schemas/metadata/MetadataAliasType";\nimport { MetadataArrayType } from "../schemas/metadata/MetadataArrayType";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { MetadataTupleType } from "../schemas/metadata/MetadataTupleType";\nexport declare class MetadataCollection {\n    private options?;\n    private objects_;\n    private object_unions_;\n    private aliases_;\n    private arrays_;\n    private tuples_;\n    private names_;\n    private object_index_;\n    private recursive_array_index_;\n    private recursive_tuple_index_;\n    constructor(options?: Partial<MetadataCollection.IOptions> | undefined);\n    clone(): MetadataCollection;\n    aliases(): MetadataAliasType[];\n    objects(): MetadataObjectType[];\n    unions(): MetadataObjectType[][];\n    arrays(): MetadataArrayType[];\n    tuples(): MetadataTupleType[];\n    private getName;\n    emplace(checker: ts.TypeChecker, type: ts.Type): [MetadataObjectType, boolean];\n    emplaceAlias(checker: ts.TypeChecker, type: ts.Type, symbol: ts.Symbol): [MetadataAliasType, boolean, (meta: Metadata) => void];\n    emplaceArray(checker: ts.TypeChecker, type: ts.Type): [MetadataArrayType, boolean, (meta: Metadata) => void];\n    emplaceTuple(checker: ts.TypeChecker, type: ts.TupleType): [MetadataTupleType, boolean, (elements: Metadata[]) => void];\n    setTupleRecursive(tuple: MetadataTupleType, recursive: boolean): void;\n    toJSON(): IMetadataComponents;\n}\nexport declare namespace MetadataCollection {\n    interface IOptions {\n        replace?(str: string): string;\n    }\n    const replace: (str: string) => string;\n    const escape: (str: string) => string;\n}\n'],["file:///node_modules/typia/lib/factories/MetadataCommentTagFactory.d.ts","export {};\n"],["file:///node_modules/typia/lib/factories/MetadataFactory.d.ts",'import ts from "typescript";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataAliasType } from "../schemas/metadata/MetadataAliasType";\nimport { MetadataArrayType } from "../schemas/metadata/MetadataArrayType";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { MetadataTupleType } from "../schemas/metadata/MetadataTupleType";\nimport { ValidationPipe } from "../typings/ValidationPipe";\nimport { MetadataCollection } from "./MetadataCollection";\nexport declare namespace MetadataFactory {\n    type Validator = (meta: Metadata, explore: IExplore) => string[];\n    interface IProps {\n        checker: ts.TypeChecker;\n        transformer: ts.TransformationContext | undefined;\n        options: IOptions;\n        collection: MetadataCollection;\n        type: ts.Type | null;\n    }\n    interface IOptions {\n        escape: boolean;\n        constant: boolean;\n        absorb: boolean;\n        functional?: boolean;\n        validate?: Validator;\n        onError?: (node: ts.Node | undefined, message: string) => void;\n    }\n    interface IExplore {\n        top: boolean;\n        object: MetadataObjectType | null;\n        property: string | object | null;\n        nested: null | MetadataAliasType | MetadataArrayType | MetadataTupleType;\n        parameter: string | null;\n        output: boolean;\n        escaped: boolean;\n        aliased: boolean;\n    }\n    interface IError {\n        name: string;\n        explore: IExplore;\n        messages: string[];\n    }\n    const analyze: (props: IProps) => ValidationPipe<Metadata, IError>;\n    const validate: (props: {\n        transformer?: ts.TransformationContext;\n        options: IOptions;\n        functor: Validator;\n        metadata: Metadata;\n    }) => IError[];\n}\n'],["file:///node_modules/typia/lib/factories/MetadataTypeTagFactory.d.ts",'import { IMetadataTypeTag } from "../schemas/metadata/IMetadataTypeTag";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { MetadataFactory } from "./MetadataFactory";\nexport declare namespace MetadataTypeTagFactory {\n    const is: (obj: MetadataObjectType) => boolean;\n    const analyze: (props: {\n        errors: MetadataFactory.IError[];\n        type: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n        objects: MetadataObjectType[];\n        explore: MetadataFactory.IExplore;\n    }) => IMetadataTypeTag[];\n    const validate: (props: {\n        report: (next: {\n            property: string | null;\n            message: string;\n        }) => false;\n        type: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n        tags: IMetadataTypeTag[];\n    }) => boolean;\n}\n'],["file:///node_modules/typia/lib/factories/MetadataTypeTagSchemaFactory.d.ts",'import { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nexport declare namespace MetadataTypeTagSchemaFactory {\n    const object: (props: {\n        report: (msg: string) => false;\n        object: MetadataObjectType;\n    }) => object | undefined;\n}\n'],["file:///node_modules/typia/lib/factories/NumericRangeFactory.d.ts",'import ts from "typescript";\nimport { ProtobufAtomic } from "../typings/ProtobufAtomic";\nexport declare namespace NumericRangeFactory {\n    const number: (type: ProtobufAtomic.Numeric, input: ts.Expression) => ts.Expression;\n    const bigint: (type: ProtobufAtomic.BigNumeric, input: ts.Expression) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/factories/ProtobufFactory.d.ts",'import ts from "typescript";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataCollection } from "./MetadataCollection";\nexport declare namespace ProtobufFactory {\n    interface IProps {\n        method: string;\n        checker: ts.TypeChecker;\n        transformer?: ts.TransformationContext;\n        collection: MetadataCollection;\n        type: ts.Type;\n    }\n    const metadata: (props: IProps) => Metadata;\n}\n'],["file:///node_modules/typia/lib/factories/StatementFactory.d.ts",'import ts from "typescript";\nexport declare namespace StatementFactory {\n    const mut: (props: {\n        name: string;\n        type?: ts.TypeNode | undefined;\n        initializer?: ts.Expression | undefined;\n    }) => ts.VariableStatement;\n    const constant: (props: {\n        name: string;\n        type?: ts.TypeNode | undefined;\n        value?: ts.Expression | undefined;\n    }) => ts.VariableStatement;\n    const entry: (props: {\n        key: string;\n        value: string;\n    }) => ts.VariableDeclarationList;\n    const transpile: (script: string) => ts.ExpressionStatement;\n    const block: (expression: ts.Expression) => ts.Block;\n}\n'],["file:///node_modules/typia/lib/factories/TemplateFactory.d.ts",'import ts from "typescript";\nexport declare namespace TemplateFactory {\n    const generate: (expressions: ts.Expression[]) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/factories/TypeFactory.d.ts",'import ts from "typescript";\nexport declare namespace TypeFactory {\n    const isFunction: (type: ts.Type) => boolean;\n    const getFunction: (type: ts.Type) => ts.SignatureDeclaration | null;\n    const getReturnTypeOfClassMethod: (props: {\n        checker: ts.TypeChecker;\n        class: ts.Type;\n        function: string;\n    }) => ts.Type | null;\n    const getFullName: (props: {\n        checker: ts.TypeChecker;\n        type: ts.Type;\n        symbol?: ts.Symbol;\n    }) => string;\n    const keyword: (type: "void" | "any" | "unknown" | "boolean" | "number" | "bigint" | "string") => ts.KeywordTypeNode<ts.SyntaxKind.VoidKeyword | ts.SyntaxKind.AnyKeyword | ts.SyntaxKind.BooleanKeyword | ts.SyntaxKind.NumberKeyword | ts.SyntaxKind.StringKeyword | ts.SyntaxKind.UnknownKeyword | ts.SyntaxKind.BigIntKeyword>;\n}\n'],["file:///node_modules/typia/lib/factories/ValueFactory.d.ts",'import ts from "typescript";\nexport declare namespace ValueFactory {\n    const NULL: () => ts.NullLiteral;\n    const UNDEFINED: () => ts.Identifier;\n    const BOOLEAN: (value: boolean) => ts.TrueLiteral | ts.FalseLiteral;\n    const INPUT: (str?: string) => ts.Identifier;\n    const TYPEOF: (input: ts.Expression) => ts.TypeOfExpression;\n}\n'],["file:///node_modules/typia/lib/factories/internal/metadata/IMetadataIteratorProps.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../../schemas/metadata/Metadata";\nimport { MetadataCollection } from "../../MetadataCollection";\nimport { MetadataFactory } from "../../MetadataFactory";\nexport interface IMetadataIteratorProps<Type extends ts.Type = ts.Type> {\n    options: MetadataFactory.IOptions;\n    checker: ts.TypeChecker;\n    collection: MetadataCollection;\n    errors: MetadataFactory.IError[];\n    metadata: Metadata;\n    type: Type;\n    explore: MetadataFactory.IExplore;\n    intersected?: boolean;\n}\n'],["file:///node_modules/typia/lib/factories/internal/metadata/MetadataHelper.d.ts",'import { Metadata } from "../../../schemas/metadata/Metadata";\nexport declare namespace MetadataHelper {\n    const literal_to_metadata: (key: string) => Metadata;\n}\n'],["file:///node_modules/typia/lib/factories/internal/metadata/emend_metadata_atomics.d.ts",'import { Metadata } from "../../../schemas/metadata/Metadata";\nexport declare const emend_metadata_atomics: (meta: Metadata) => void;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/emplace_metadata_alias.d.ts",'import { MetadataAliasType } from "../../../schemas/metadata/MetadataAliasType";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const emplace_metadata_alias: (props: IMetadataIteratorProps) => MetadataAliasType;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/emplace_metadata_array_type.d.ts",'import ts from "typescript";\nimport { MetadataArrayType } from "../../../schemas/metadata/MetadataArrayType";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\ninterface IProps extends IMetadataIteratorProps {\n    array: ts.Type;\n}\nexport declare const emplace_metadata_array_type: (props: IProps) => MetadataArrayType;\nexport {};\n'],["file:///node_modules/typia/lib/factories/internal/metadata/emplace_metadata_object.d.ts",'import { MetadataObjectType } from "../../../schemas/metadata/MetadataObjectType";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const emplace_metadata_object: (props: IMetadataIteratorProps) => MetadataObjectType;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/emplace_metadata_tuple.d.ts",'import ts from "typescript";\nimport { MetadataTupleType } from "../../../schemas/metadata/MetadataTupleType";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const emplace_metadata_tuple: (props: IMetadataIteratorProps<ts.TupleType>) => MetadataTupleType;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/explore_metadata.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../../schemas/metadata/Metadata";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const explore_metadata: (props: Required<IProps>) => Metadata;\ninterface IProps extends Omit<IMetadataIteratorProps, "metadata" | "type"> {\n    type: ts.Type | null;\n}\nexport {};\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata: (props: IMetadataIteratorProps) => void;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_alias.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_alias: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_array.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_array: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_atomic.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../../schemas/metadata/Metadata";\nexport declare const iterate_metadata_atomic: (props: {\n    metadata: Metadata;\n    type: ts.Type;\n}) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_coalesce.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../../schemas/metadata/Metadata";\nexport declare const iterate_metadata_coalesce: (props: {\n    metadata: Metadata;\n    type: ts.Type;\n}) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_collection.d.ts",'import { MetadataCollection } from "../../MetadataCollection";\nimport { MetadataFactory } from "../../MetadataFactory";\nexport declare const iterate_metadata_collection: (props: {\n    errors: MetadataFactory.IError[];\n    collection: MetadataCollection;\n}) => void;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_comment_tags.d.ts",'import { MetadataObjectType } from "../../../schemas/metadata/MetadataObjectType";\nimport { MetadataFactory } from "../../MetadataFactory";\nexport declare const iterate_metadata_comment_tags: (props: {\n    errors: MetadataFactory.IError[];\n    object: MetadataObjectType;\n}) => void;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_constant.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_constant: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_escape.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_escape: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_function.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_function: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_intersection.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_intersection: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_map.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_map: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_native.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_native: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_object.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_object: (props: IMetadataIteratorProps, ensure?: boolean) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_set.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_set: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_sort.d.ts",'import { Metadata } from "../../../schemas/metadata/Metadata";\nimport { MetadataCollection } from "../../MetadataCollection";\nexport declare const iterate_metadata_sort: (props: {\n    collection: MetadataCollection;\n    metadata: Metadata;\n}) => void;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_template.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_template: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_tuple.d.ts",'import ts from "typescript";\nimport { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_tuple: (props: IMetadataIteratorProps<ts.TupleType>) => boolean;\n'],["file:///node_modules/typia/lib/factories/internal/metadata/iterate_metadata_union.d.ts",'import { IMetadataIteratorProps } from "./IMetadataIteratorProps";\nexport declare const iterate_metadata_union: (props: IMetadataIteratorProps) => boolean;\n'],["file:///node_modules/typia/lib/functional.d.ts","import { IValidation } from \"./IValidation\";\nimport { TypeGuardError } from \"./TypeGuardError\";\n/**\n * Asserts a function.\n *\n * Asserts a function, by wrapping the function and checking its parameters and\n * return value through {@link assert} function. If some parameter or return value\n * does not match the expected type, it throws an {@link TypeGuardError} or a custom\n * error generated by the *errorFactory* parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assert} function. If the {@link TypeGuardError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`. Otherwise\n * the path would start from `$input.return`.\n *\n * - `$input.parameters[0].~`\n * - `$input.return.~`\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use {@link validateFunction}\n * instead. Otherwise, what you want is just asserting parameters or return value\n * only, you can use {@link assertParameters} or {@link assertReturn} instead.\n *\n * On the other hand, if don't want to allow any superfluous properties, utilize\n * {@link assertEqualsFunction} or {@link validateEqualsFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertFunction<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts parameters.\n *\n * Asserts a function, by wrapping the function and checking its parameters through\n * {@link assert} function. If some parameter does not match the expected type, it\n * throws an {@link TypeGuardError} or a custom error generated by the *errorFactory*\n * parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assert} function. If the {@link TypeGuardError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`.\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use {@link validateParameters}\n * instead. Otherwise, what you want is not only asserting parameters, but also\n * asserting return value, you can use {@link assertFunction} instead.\n *\n * On the other hand, if don't want to allow any superfluous properties, utilize\n * {@link assertEqualsParameters} or {@link validateEqualsParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertParameters<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts return value.\n *\n * Asserts a function, by wrapping the function and checking its return value through\n * {@link assert} function. If the return value does not match the expected type, it\n * throws an {@link TypeGuardError} or a custom error generated by the *errorFactory*\n * parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assert} function. If the {@link TypeGuardError} occurs from\n * the return value, the path would start from `$input.return`.\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use {@link validateReturn}\n * instead. Otherwise, what you want is not only asserting return value, but also\n * asserting parameters, you can use {@link assertFunction} instead.\n *\n * On the other hand, if don't want to allow any superfluous properties, utilize\n * {@link assertEqualsReturn} or {@link validateEqualsReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertReturn<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts a function with strict equality.\n *\n * Asserts a function with strict equality, by wrapping the function and checking\n * its parameters and return value through {@link assertEquals} function. If some\n * parameter or return value does not match the expected type, it throws an\n * {@link TypeGuardError} or a custom error generated by the *errorFactory* parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assertEquals} function. If the {@link TypeGuardError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`. Otherwise\n * the path would start from `$input.return`.\n *\n * - `$input.parameters[0].~`\n * - `$input.return.~`\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use\n * {@link validateEqualsFunction} instead. Otherwise, what you want is just asserting\n * parameters or return value only, you can use {@link assertEqualsParameters} or\n * {@link assertEqualsReturn} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link assertFunction} or {@link validateFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEqualsFunction<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts parameters with strict equality.\n *\n * Asserts a function, by wrapping the function and checking its parameters through\n * {@link assertEquals} function. If some parameter does not match the expected type,\n * it throws an {@link TypeGuardError} or a custom error generated by the *errorFactory*\n * parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assertEquals} function. If the {@link TypeGuardError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`.\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use\n * {@link validateEqualsParameters} instead. Otherwise, what you want is not only\n * asserting parameters, but also asserting return value, you can use\n * {@link assertEqualsFunction} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link assertParameters} or {@link validateParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEqualsParameters<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts return value with strict equality.\n *\n * Asserts a function, by wrapping the function and checking its return value through\n * {@link assertEquals} function. If the return value does not match the expected type,\n * it throws an {@link TypeGuardError} or a custom error generated by the *errorFactory*\n * parameter.\n *\n * For reference, {@link TypeGuardError.path} would be a little bit different with\n * individual {@link assertEquals} function. If the {@link TypeGuardError} occurs from\n * the return value, the path would start from `$input.return`.\n *\n * By the way, if what you want is not just finding the 1st type error through\n * assertion, but also finding every type errors, then use {@link validateEqualsReturn}\n * instead. Otherwise, what you want is not only asserting return value, but also\n * asserting parameters, you can use {@link assertEqualsFunction} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link assertReturn} or {@link validateReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to assert\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns The wrapper function with type assertions\n * @throws A {@link TypeGuardError} or a custom error generated by *errorFactory*\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEqualsReturn<T extends (...args: any[]) => any>(func: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Tests a function.\n *\n * Tests a function, by wrapping the function and checking its parameters and\n * return value through {@link is} function. If some parameter or return value\n * does not match the expected type, it returns `null`. Otherwise there's no\n * type error, it returns the result of the function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertFunction} or\n * {@link validateFunction} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties,\n * utilize {@link equalsFunction}, {@link assertEqualsFunction} or\n * {@link validateEqualsFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isFunction<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Tests parameters.\n *\n * Tests a function, by wrapping the function and checking its parameters through\n * {@link is} function. If some parameter does not match the expected type, it\n * returns `null`. Otherwise there's no type error, it returns the result of the\n * function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertParameters} or\n * {@link validateParameters} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties,\n * utilize {@link equalsParameters}, {@link assertEqualsParameters} or\n * {@link validateEqualsParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isParameters<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Tests return value.\n *\n * Tests a function, by wrapping the function and checking its return value through\n * {@link is} function. If the return value does not match the expected type, it\n * returns `null`. Otherwise there's no type error, it returns the result of the\n * function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertReturn} or\n * {@link validateReturn} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties,\n * utilize {@link equalsReturn}, {@link assertEqualsReturn} or\n * {@link validateEqualsReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isReturn<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Tests a function with strict equality.\n *\n * Tests a function with strict equality, by wrapping the function and checking its\n * parameters and return value through {@link isEquals} function. If some parameter\n * or return value does not match the expected type, it returns `null`. Otherwise\n * there's no type error, it returns the result of the function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertEqualsFunction} or\n * {@link validateEqualsFunction} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link isFunction}, {@link assertFunction} or {@link validateFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function equalsFunction<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Tests parameters with strict equality.\n *\n * Tests a function, by wrapping the function and checking its parameters through\n * {@link isEquals} function. If some parameter does not match the expected type,\n * it returns `null`. Otherwise there's no type error, it returns the result of the\n * function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertEqualsParameters} or\n * {@link validateEqualsParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function equalsParameters<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Tests return value with strict equality.\n *\n * Tests a function, by wrapping the function and checking its return value through\n * {@link isEquals} function. If the return value does not match the expected type,\n * it returns `null`. Otherwise there's no type error, it returns the result of the\n * function.\n *\n * By the way, if you want is not just testing type checking, but also finding\n * detailed type error reason(s), then use {@link assertEqualsReturn} or\n * {@link validateEqualsReturn} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link isReturn}, {@link assertReturn} or {@link validateReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to test\n * @returns The wrapper function with type tests\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function equalsReturn<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<R | null> : (...args: Arguments) => Output | null : never;\n/**\n * Validates a function.\n *\n * Validates a function, by wrapping the function and checking its parameters and\n * return value through {@link validate} function. If some parameter or return value\n * does not match the expected type, it returns {@link IValidation.IError} typed\n * object. Otherwise there's no type error, it returns {@link IValidation.ISuccess}\n * typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validate} function. If the {@link IValidation.IError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`. Otherwise\n * the path would start from `$input.return`.\n *\n * - `$input.parameters[0].~`\n * - `$input.return.~`\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertFunction} instead. Otherwise, what you\n * want is just validating parameters or return value only, you can use\n * {@link validateParameters} or {@link validateReturn} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties, utilize\n * {@link validateEqualsFunction} or {@link assertEqualsFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateFunction<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n/**\n * Validates parameters.\n *\n * Validates a function, by wrapping the function and checking its parameters through\n * {@link validate} function. If some parameter does not match the expected type, it\n * returns {@link IValidation.IError} typed object. Otherwise there's no type error,\n * it returns {@link IValidation.ISuccess} typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validate} function. If the {@link IValidation.IError} occurs from\n * some parameter, the path would start from `$input.parameters[number]`.\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertParameters} instead. Otherwise, what you\n * want is not only validating parameters, but also validating return value, you can\n * use {@link validateFunction} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties, utilize\n * {@link validateEqualsParameters} or {@link assertEqualsParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateParameters<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n/**\n * Validates return value.\n *\n * Validates a function, by wrapping the function and checking its return value through\n * {@link validate} function. If the return value does not match the expected type, it\n * returns {@link IValidation.IError} typed object. Otherwise there's no type error,\n * it returns {@link IValidation.ISuccess} typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validate} function. If the {@link IValidation.IError} occurs from\n * the return value, the path would start from `$input.return`.\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertReturn} instead. Otherwise, what you want\n * is not only validating return value, but also validating parameters, you can use\n * {@link validateFunction} instead.\n *\n * On the other hand, if you don't want to allow any superfluous properties, utilize\n * {@link validateEqualsReturn} or {@link assertEqualsReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateReturn<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n/**\n * Validates a function with strict equality.\n *\n * Validates a function with strict equality, by wrapping the function and checking\n * its parameters and return value through {@link validateEquals} function. If some\n * parameter or return value does not match the expected type, it returns\n * {@link IValidation.IError} typed object. Otherwise there's no type error, it\n * returns {@link IValidation.ISuccess} typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validateEquals} function. If the {@link IValidation.IError} occurs\n * from some parameter, the path would start from `$input.parameters[number]`. Otherwise\n * the path would start from `$input.return`.\n *\n * - `$input.parameters[0].~`\n * - `$input.return.~`\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertEqualsFunction} instead. Otherwise, what\n * you want is just validating parameters or return value only, you can use\n * {@link validateEqualsParameters} or {@link validateEqualsReturn} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link validateFunction} or {@link assertFunction} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEqualsFunction<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n/**\n * Validates parameters with strict equality.\n *\n * Validates a function, by wrapping the function and checking its parameters through\n * {@link validateEquals} function. If some parameter does not match the expected type,\n * it returns {@link IValidation.IError} typed object. Otherwise there's no type error,\n * it returns {@link IValidation.ISuccess} typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validateEquals} function. If the {@link IValidation.IError} occurs\n * from some parameter, the path would start from `$input.parameters[number]`.\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertEqualsParameters} instead. Otherwise,\n * what you want is not only validating parameters, but also validating return value,\n * you can use {@link validateEqualsFunction} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link validateParameters} or {@link assertParameters} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEqualsParameters<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n/**\n * Validates return value with strict equality.\n *\n * Validates a function, by wrapping the function and checking its return value through\n * {@link validateEquals} function. If the return value does not match the expected type,\n * it returns {@link IValidation.IError} typed object. Otherwise there's no type error,\n * it returns {@link IValidation.ISuccess} typed object instead.\n *\n * For reference, {@link IValidation.IError.path} would be a little bit different with\n * individual {@link validateEquals} function. If the {@link IValidation.IError} occurs\n * from the return value, the path would start from `$input.return`.\n *\n * By the way, if what you want is not finding every type errors, but just finding\n * the 1st type error, then use {@link assertEqualsReturn} instead. Otherwise, what you\n * want is not only validating return value, but also validating parameters, you can use\n * {@link validateEqualsFunction} instead.\n *\n * On the other hand, if you want to allow any superfluous properties, utilize\n * {@link validateReturn} or {@link assertReturn} instead.\n *\n * @template T Target function type\n * @param func Target function to validate\n * @returns The wrapper function with type validations\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEqualsReturn<T extends (...args: any[]) => any>(func: T): T extends (...args: infer Arguments) => infer Output ? Output extends Promise<infer R> ? (...args: Arguments) => Promise<IValidation<R>> : (...args: Arguments) => IValidation<Output> : never;\n"],["file:///node_modules/typia/lib/http.d.ts",'import { Atomic } from "./typings/Atomic";\nimport { IReadableURLSearchParams } from "./IReadableURLSearchParams";\nimport { IValidation } from "./IValidation";\nimport { Resolved } from "./Resolved";\nimport { TypeGuardError } from "./TypeGuardError";\n/**\n * Form data decoder.\n *\n * `typia.http.formData()` is a function decoding `FormData` instance, with\n * automatic type casting to the expected type. When roperty type be defined\n * as `boolean` or `Blob` type, `typia.http.formData()` will cast the value to\n * the expected type when decoding.\n *\n * By the way, as `FormData` is not enough to express complex data structures,\n * `typia.http.formData()` function has some limitations. If target type `T` is\n * not following those restrictions, compilation errors would be occurred.\n *\n * 1. Type `T` must be an object type\n * 2. Do not allow dynamic property\n * 3. Only `boolean`, `bigint`, `number`, `string`, `Blob`, `File` or their array types are allowed\n * 4. By the way, union type never be not allowed\n *\n * Also, `typia.http.formData()` function does not perform validation about the\n * decoded value. Therefore, if you can\'t sure that input data is following the\n * `T` type, it would better to call one of below functions instead.\n *\n * @template T Expected type of decoded value\n * @param input FormData instance\n * @returns Decoded form FormData\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function formData<T extends object>(input: FormData): Resolved<T>;\n/**\n * Form data decoder with type assertion.\n *\n * `typia.http.assertFormData()` is a function decoding `FormData` instance, with\n * automatic type casting to the expected type. When roperty type be defined\n * as `boolean` or `Blob` type, `typia.http.assertFormData()` will cast the value\n * to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.assertFormData()` performs type assertion to\n * the decoded value by combining with {@link assert} function. Therefore, when\n * the decoded value is not following the `T` type, {@link TypeGuardError} or\n * custom error generated by *errorFactory* would be thrown.\n *\n * By the way, as `FormData` is not enough to express complex data structures,\n * `typia.http.assertFormData()` function has some limitations. If target type `T`\n * is not following those restrictions, compilation errors would be occurred.\n *\n * 1. Type `T` must be an object type\n * 2. Do not allow dynamic property\n * 3. Only `boolean`, `bigint`, `number`, `string`, `Blob`, `File` or their array types are allowed\n * 4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input FormData instance\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Decoded form FormData\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertFormData<T extends object>(input: FormData, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * Form data decoder with type checking.\n *\n * `typia.http.isFormData()` is a function decoding `FormData` instance, with\n * automatic type casting to the expected type. When roperty type be defined\n * as `boolean` or `Blob` type, `typia.http.isFormData()` will cast the value\n * to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.isFormData()` performs type checking to the\n * decoded value by combining with {@link is} function. Therefore, when the\n * decoded value is not following the `T` type, `null` value would be returned.\n *\n * By the way, as `FormData` is not enough to express complex data structures,\n * `typia.http.isFormData()` function has some limitations. If target type `T` is\n * not following those restrictions, compilation errors would be occurred.\n *\n * 1. Type `T` must be an object type\n * 2. Do not allow dynamic property\n * 3. Only `boolean`, `bigint`, `number`, `string`, `Blob`, `File` or their array types are allowed\n * 4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input FormData instance\n * @returns Decoded form FormData or `null` value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isFormData<T extends object>(input: FormData): Resolved<T> | null;\n/**\n * Form data decoder with type validation.\n *\n * `typia.http.validateFormData()` is a function decoding `FormData` instance,\n * with automatic type casting to the expected type. When roperty type be defined\n * as `boolean` or `Blob` type, `typia.http.validateFormData()` will cast the\n * value to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.validateFormData()` performs type validation\n * to the decoded value by combining with {@link validate} function. Therefore,\n * when the decoded value is not following the `T` type,\n * {@link IValidation.IFailure} would be returned. Otherwise,\n * x@xxxx IValidation.ISuccess} would be returned.\n *\n * By the way, as `FormData` is not enough to express complex data structures,\n * `typia.http.validateFormData()` function has some limitations. If target type\n * `T` is not following those restrictions, compilation errors would be occurred.\n *\n * 1. Type `T` must be an object type\n * 2. Do not allow dynamic property\n * 3. Only `boolean`, `bigint`, `number`, `string`, `Blob`, `File` or their array types are allowed\n * 4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input FormData instance\n * @returns Validation result with decoded form FormData\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateFormData<T extends object>(input: FormData): IValidation<Resolved<T>>;\n/**\n * URL query decoder.\n *\n * `typia.http.query()` is a function decoding a query string or an `URLSearchParams`\n * instance, with automatic type casting to the expected type. When property type be\n * defined as `boolean` or `number` type, `typia.http.query()` will cast the value to\n * the expected type when decoding.\n *\n * By the way, as URL query is not enough to express complex data structures,\n * `typia.http.query()` function has some limitations. If target type `T` is not\n * following those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  4. By the way, union type never be not allowed\n *\n * Also, `typia.http.query()` function does not perform validation about the decoded\n * value. Therefore, if you can\'t sure that input data is following the `T` type,\n * it would better to call one of below functions instead.\n *\n *  - {@link assertQuery}\n *  - {@link isQuery}\n *  - {@link validateQuery}\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Decoded query object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function query<T extends object>(input: string | IReadableURLSearchParams): Resolved<T>;\n/**\n * URL query decoder with type assertion.\n *\n * `typia.http.assertQuery()` is a function decoding a query string or an\n * `URLSearchParams` instance, with automatic type casting to the expected type.\n * When property type be defined as `boolean` or `number` type,\n * `typia.http.assertQuery()` will cast the value to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.assertQuery()` performs type assertion to the\n * decoded value by combining with {@link assert} function. Therefore, when the\n * decoded value is not following the `T` type, {@link TypeGuardError} or custom\n * error generated by *errorFactory* would be thrown.\n *\n * By the way, as URL query is not enough to express complex data structures,\n * `typia.http.assertQuery()` function has some limitations. If target type `T` is\n * notfollowing those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Decoded query object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertQuery<T extends object>(input: string | IReadableURLSearchParams, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * URL query decoder with type checking.\n *\n * `typia.http.isQuery()` is a function decoding a query string or an\n * `URLSearchParams` instance, with automatic type casting to the expected type.\n * When property type be defined as `boolean` or `number` type,\n * `typia.http.isQuery()` will cast the value to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.isQuery()` performs type checking to the\n * decoded value by combining with {@link is} function. Therefore, when the\n * decoded value is not following the `T` type, `null` value would be returned.\n *\n * By the way, as URL query is not enough to express complex data structures,\n * `typia.http.isQuery()` function has some limitations. If target type `T` is\n * notfollowing those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Decoded query object or `null` value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isQuery<T extends object>(input: string | IReadableURLSearchParams): Resolved<T> | null;\n/**\n * URL query decoder with type validation.\n *\n * `typia.http.validateQuery()` is a function decoding a query string or an\n * `URLSearchParams` instance, with automatic type casting to the expected type.\n * When property type be defined as `boolean` or `number` type,\n * `typia.http.validateQuery()` will cast the value to the expected type when decoding.\n *\n * Also, after decoding, `typia.http.validateQuery()` performs type validation to the\n * decoded value by combining with {@link validate} function. Therefore, when the\n * decoded value is not following the `T` type, {@link IValidation.IFailure} would\n * be returned. Otherwise, {@link IValidation.ISuccess} would be returned.\n *\n * By the way, as URL query is not enough to express complex data structures,\n * `typia.http.validateQuery()` function has some limitations. If target type `T` is\n * notfollowing those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  4. By the way, union type never be not allowed\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Validation result with decoded query object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateQuery<T extends object>(input: string | IReadableURLSearchParams): IValidation<Resolved<T>>;\n/**\n * Headers decoder (for express and fastify).\n *\n * `typia.http.headers()` is a function decoding an header instance, with automatic\n * type casting to the expected type. When property type be defined as `boolean` or\n * `number` type, `typia.http.headers()` will cast the value to the expected type.\n *\n * By the way, as HTTP headers are not enough to express complex data structures,\n * `typia.http.headers()` function has some limitations. If target type `T` is not\n * following those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Property key must be lower case\n *  4. Property value cannot be `null`, but `undefined` is possible\n *  5. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  6. By the way, union type never be not allowed\n *  7. Property `set-cookie` must be array type\n *  8. Those properties cannot be array type\n *    - age\n *    - authorization\n *    - content-length\n *    - content-type\n *    - etag\n *    - expires\n *    - from\n *    - host\n *    - if-modified-since\n *    - if-unmodified-since\n *    - last-modified\n *    - location\n *    - max-forwards\n *    - proxy-authorization\n *    - referer\n *    - retry-after\n *    - server\n *    - user-agent\n *\n * Also, `typia.http.headers()` function does not perform validation about the decoded\n * value. Therefore, if you can\'t sure that input data is following the `T` type,\n * it would better to call one of below functions instead.\n *\n *  - {@link assertHeaders}\n *  - {@link isHeaders}\n *  - {@link validateHeaders}\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Decoded headers object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function headers<T extends object>(input: Record<string, string | string[] | undefined>): Resolved<T>;\n/**\n * Headers decoder with type assertion (for express and fastify).\n *\n * `typia.http.assertHeaders()` is a function decoding an header instance, with\n * automatic type casting to the expected type. When property type be defined as\n * `boolean` or `number` type, `typia.http.headers()` will cast the value to the\n * expected type.\n *\n * Also, after decoding, `typia.http.assertHeaders()` performs type assertion to the\n * decoded value by combining with {@link assert} function. Therefore, when the\n * decoded value is not following the `T` type, {@link TypeGuardError} or custom\n * error generated by *errorFactory* would be thrown.\n *\n * By the way, as HTTP headers are not enough to express complex data structures,\n * `typia.http.headers()` function has some limitations. If target type `T` is not\n * following those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Property key must be lower case\n *  4. Property value cannot be `null`, but `undefined` is possible\n *  5. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  6. By the way, union type never be not allowed\n *  7. Property `set-cookie` must be array type\n *  8. Those properties cannot be array type\n *    - age\n *    - authorization\n *    - content-length\n *    - content-type\n *    - etag\n *    - expires\n *    - from\n *    - host\n *    - if-modified-since\n *    - if-unmodified-since\n *    - last-modified\n *    - location\n *    - max-forwards\n *    - proxy-authorization\n *    - referer\n *    - retry-after\n *    - server\n *    - user-agent\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Decoded headers object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertHeaders<T extends object>(input: Record<string, string | string[] | undefined>, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Headers decoder with type checking (for express and fastify).\n *\n * `typia.http.isHeaders()` is a function decoding an header instance, with\n * automatic type casting to the expected type. When property type be defined as\n * `boolean` or `number` type, `typia.http.headers()` will cast the value to the\n * expected type.\n *\n * Also, after decoding, `typia.http.isHeaders()` performs type checking to the\n * decoded value by combining with {@link is} function. Therefore, when the\n * decoded value is not following the `T` type, `null` value would be returned.\n *\n * By the way, as HTTP headers are not enough to express complex data structures,\n * `typia.http.headers()` function has some limitations. If target type `T` is not\n * following those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Property key must be lower case\n *  4. Property value cannot be `null`, but `undefined` is possible\n *  5. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  6. By the way, union type never be not allowed\n *  7. Property `set-cookie` must be array type\n *  8. Those properties cannot be array type\n *    - age\n *    - authorization\n *    - content-length\n *    - content-type\n *    - etag\n *    - expires\n *    - from\n *    - host\n *    - if-modified-since\n *    - if-unmodified-since\n *    - last-modified\n *    - location\n *    - max-forwards\n *    - proxy-authorization\n *    - referer\n *    - retry-after\n *    - server\n *    - user-agent\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Decoded headers object or `null` value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isHeaders<T extends object>(input: Record<string, string | string[] | undefined>): Resolved<T> | null;\n/**\n * Headers decoder with type validation (for express and fastify).\n *\n * `typia.http.validateHeaders()` is a function decoding an header instance, with\n * automatic type casting to the expected type. When property type be defined as\n * `boolean` or `number` type, `typia.http.headers()` will cast the value to the\n * expected type.\n *\n * Also, after decoding, `typia.http.validateHeaders()` performs type assertion to the\n * decoded value by combining with {@link validate} function. Therefore, when the\n * decoded value is not following the `T` type, {@link IValidation.IError} would be\n * returned. Otherwise, {@link IValidation.ISuccess} be returned.\n *\n * By the way, as HTTP headers are not enough to express complex data structures,\n * `typia.http.headers()` function has some limitations. If target type `T` is not\n * following those restrictions, compilation errors would be occurred.\n *\n *  1. Type `T` must be an object type\n *  2. Do not allow dynamic property\n *  3. Property key must be lower case\n *  4. Property value cannot be `null`, but `undefined` is possible\n *  5. Only `boolean`, `bigint`, `number`, `string` or their array types are allowed\n *  6. By the way, union type never be not allowed\n *  7. Property `set-cookie` must be array type\n *  8. Those properties cannot be array type\n *    - age\n *    - authorization\n *    - content-length\n *    - content-type\n *    - etag\n *    - expires\n *    - from\n *    - host\n *    - if-modified-since\n *    - if-unmodified-since\n *    - last-modified\n *    - location\n *    - max-forwards\n *    - proxy-authorization\n *    - referer\n *    - retry-after\n *    - server\n *    - user-agent\n *\n * @template T Expected type of decoded value\n * @param input Query string or URLSearchParams instance\n * @returns Decoded headers object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateHeaders<T extends object>(input: Record<string, string | string[] | undefined>): IValidation<Resolved<T>>;\n/**\n * URL path parameter decoder.\n *\n * `typia.http.parameter()` is a function decoding a path parameter, with automatic\n * type casting to the expected type. When type `T` has been defined as `boolean` or\n * `number` type, `typia.http.parameter()` will cast the value to the expected type.\n *\n * Also, `typia.http.parameter()` performs type assertion to the decoded value by\n * combining with {@link assert} function. Therefore, when the decoded value is not\n * following the `T` type, {@link TypeGuardError} would be thrown.\n *\n * @template T Expected type of decoded value\n * @param input Path parameter string\n * @returns Decoded path parameter value\n */\nexport declare function parameter<T extends Atomic.Type | null>(input: string): Resolved<T>;\n/**\n * Creates a reusable {@link formdata} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the formdata object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createFormData(): never;\n/**\n * Creates a reusable {@link formdata} function.\n *\n * @template T The type of the formdata object\n * @returns A reusable `formdata` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createFormData<T extends object>(): (input: FormData) => T;\n/**\n * Creates a reusable {@link assertFormData} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the formdata object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertFormData(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertFormData} function.\n *\n * @template T The type of the formdata object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertFormData` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertFormData<T extends object>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: FormData) => T;\n/**\n * Creates a reusable {@link isFormData} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the formdata object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsFormData(): never;\n/**\n * Creates a reusable {@link isFormData} function.\n *\n * @template T The type of the formdata object\n * @returns A reusable `isFormData` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsFormData<T extends object>(): (input: FormData) => T | null;\n/**\n * Creates a reusable {@link validateFormData} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the formdata object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateFormData(): never;\n/**\n * Creates a reusable {@link validateFormData} function.\n *\n * @template T The type of the formdata object\n * @returns A reusable `validateFormData` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateFormData<T extends object>(): (input: FormData) => IValidation<Resolved<T>>;\n/**\n * Creates a reusable {@link query} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the query object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createQuery(): never;\n/**\n * Creates a reusable {@link query} function.\n *\n * @template T The type of the query object\n * @returns A reusable `query` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createQuery<T extends object>(): (input: string | IReadableURLSearchParams) => T;\n/**\n * Creates a reusable {@link assertQuery} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the query object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertQuery(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertQuery} function.\n *\n * @template T The type of the query object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertQuery` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertQuery<T extends object>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: string | IReadableURLSearchParams) => T;\n/**\n * Creates a reusable {@link isQuery} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the query object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsQuery(): never;\n/**\n * Creates a reusable {@link isQuery} function.\n *\n * @template T The type of the query object\n * @returns A reusable `isQuery` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsQuery<T extends object>(): (input: string | IReadableURLSearchParams) => T | null;\n/**\n * Creates a reusable {@link validateQuery} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the query object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateQuery(): never;\n/**\n * Creates a reusable {@link validateQuery} function.\n *\n * @template T The type of the query object\n * @returns A reusable `validateQuery` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateQuery<T extends object>(): (input: string | IReadableURLSearchParams) => IValidation<Resolved<T>>;\n/**\n * Creates a reusable {@link headers} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the headers object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createHeaders(): never;\n/**\n * Creates a reusable {@link headers} function.\n *\n * @template T The type of the headers object\n * @returns A reusable `headers` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createHeaders<T extends object>(): (input: Record<string, string | string[] | undefined>) => T;\n/**\n * Creates a reusable {@link assertHeaders} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the headers object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertHeaders(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertHeaders} function.\n *\n * @template T The type of the headers object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertHeaders` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertHeaders<T extends object>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: Record<string, string | string[] | undefined>) => T;\n/**\n * Creates a reusable {@link isHeaders} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the headers object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsHeaders(): never;\n/**\n * Creates a reusable {@link isHeaders} function.\n *\n * @template T The type of the headers object\n * @returns A reusable `isHeaders` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsHeaders<T extends object>(): (input: Record<string, string | string[] | undefined>) => T | null;\n/**\n * Creates a reusable {@link validateHeaders} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the headers object\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateHeaders(): never;\n/**\n * Creates a reusable {@link validateHeaders} function.\n *\n * @template T The type of the headers object\n * @returns A reusable `validateHeaders` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateHeaders<T extends object>(): (input: Record<string, string | string[] | undefined>) => IValidation<Resolved<T>>;\n/**\n * Creates a reusable {@link parameter} function.\n *\n * @danger You must configure the generic argument `T`\n * @template T The type of the parameter value\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createParameter(): never;\n/**\n * Creates a reusable {@link parameter} function.\n *\n * @template T The type of the parameter value\n * @returns A reusable `parameter` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createParameter<T extends Atomic.Type | null>(): (input: string) => T;\n'],["file:///node_modules/typia/lib/index.d.ts",'import * as typia from "./module";\nexport default typia;\nexport * from "./module";\n'],["file:///node_modules/typia/lib/internal/_IProtobufWriter.d.ts","export interface _IProtobufWriter {\n    bool(value: boolean): void;\n    int32(value: number): void;\n    sint32(value: number): void;\n    uint32(value: number): void;\n    int64(value: bigint | number): void;\n    sint64(value: bigint | number): void;\n    uint64(value: bigint | number): void;\n    float(value: number): void;\n    double(value: number): void;\n    bytes(value: Uint8Array): void;\n    string(value: string): void;\n    fork(): void;\n    ldelim(): void;\n}\n"],["file:///node_modules/typia/lib/internal/_ProtobufReader.d.ts",'import { ProtobufWire } from "../programmers/helpers/ProtobufWire";\nexport declare class _ProtobufReader {\n    /**\n     * Read buffer\n     */\n    private buf;\n    /**\n     * Read buffer pointer.\n     */\n    private ptr;\n    /**\n     * DataView for buffer.\n     */\n    private view;\n    constructor(buf: Uint8Array);\n    index(): number;\n    size(): number;\n    uint32(): number;\n    int32(): number;\n    sint32(): number;\n    uint64(): bigint;\n    int64(): bigint;\n    sint64(): bigint;\n    bool(): boolean;\n    float(): number;\n    double(): number;\n    bytes(): Uint8Array;\n    string(): string;\n    skip(length: number): void;\n    skipType(wireType: ProtobufWire): void;\n    private varint32;\n    private varint64;\n    private u8;\n    private u8n;\n}\n'],["file:///node_modules/typia/lib/internal/_ProtobufSizer.d.ts",'import { _IProtobufWriter } from "./_IProtobufWriter";\nexport declare class _ProtobufSizer implements _IProtobufWriter {\n    /**\n     * Total length.\n     */\n    len: number;\n    /**\n     * Position stack.\n     */\n    readonly pos: Array<number>;\n    /**\n     * Variable length list.\n     */\n    readonly varlen: Array<number>;\n    /**\n     * Variable length index stack.\n     */\n    readonly varlenidx: Array<number>;\n    constructor(length?: number);\n    bool(): void;\n    int32(value: number): void;\n    sint32(value: number): void;\n    uint32(value: number): void;\n    int64(value: bigint | number): void;\n    sint64(value: bigint | number): void;\n    uint64(value: bigint | number): void;\n    float(_value: number): void;\n    double(_value: number): void;\n    bytes(value: Uint8Array): void;\n    string(value: string): void;\n    fork(): void;\n    ldelim(): void;\n    reset(): void;\n    private varint32;\n    private varint64;\n}\n'],["file:///node_modules/typia/lib/internal/_ProtobufWriter.d.ts",'import { _IProtobufWriter } from "./_IProtobufWriter";\nimport { _ProtobufSizer } from "./_ProtobufSizer";\nexport declare class _ProtobufWriter implements _IProtobufWriter {\n    /**\n     * Related sizer\n     */\n    private readonly sizer;\n    /**\n     * Current pointer.\n     */\n    private ptr;\n    /**\n     * Protobuf buffer.\n     */\n    private buf;\n    /**\n     * DataView for buffer.\n     */\n    private view;\n    /**\n     * Index in varlen array from sizer.\n     */\n    private varlenidx;\n    constructor(sizer: _ProtobufSizer);\n    buffer(): Uint8Array;\n    bool(value: boolean): void;\n    byte(value: number): void;\n    int32(value: number): void;\n    sint32(value: number): void;\n    uint32(value: number): void;\n    sint64(value: number | bigint): void;\n    int64(value: number | bigint): void;\n    uint64(value: number | bigint): void;\n    float(val: number): void;\n    double(val: number): void;\n    bytes(value: Uint8Array): void;\n    string(value: string): void;\n    fork(): void;\n    ldelim(): void;\n    finish(): Uint8Array;\n    reset(): void;\n    private variant32;\n    private variant64;\n    private varlen;\n}\n'],["file:///node_modules/typia/lib/internal/_accessExpressionAsString.d.ts","export declare const _accessExpressionAsString: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_assertGuard.d.ts",'import { TypeGuardError } from "../TypeGuardError";\nexport declare const _assertGuard: (exceptionable: boolean, props: TypeGuardError.IProps, factory?: (props: TypeGuardError.IProps) => Error) => false;\n'],["file:///node_modules/typia/lib/internal/_createStandardSchema.d.ts",'import { StandardSchemaV1 } from "@standard-schema/spec";\nimport { IValidation } from "../IValidation";\nexport declare const _createStandardSchema: <T>(fn: (input: unknown) => IValidation<T>) => ((input: unknown) => IValidation<T>) & StandardSchemaV1<unknown, T>;\n'],["file:///node_modules/typia/lib/internal/_functionalTypeGuardErrorFactory.d.ts",'import { TypeGuardError } from "../TypeGuardError";\nexport declare const _functionalTypeGuardErrorFactory: (p: TypeGuardError.IProps) => TypeGuardError<any>;\n'],["file:///node_modules/typia/lib/internal/_httpFormDataReadArray.d.ts","export declare const _httpFormDataReadArray: (input: any[], alternative: null | undefined) => any[] | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadBigint.d.ts","export declare const _httpFormDataReadBigint: (input: string | File | null) => bigint | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadBlob.d.ts","export declare const _httpFormDataReadBlob: (input: string | Blob | null) => Blob | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadBoolean.d.ts","export declare const _httpFormDataReadBoolean: (input: string | File | null) => boolean | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadFile.d.ts","export declare const _httpFormDataReadFile: (input: string | File | null) => File | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadNumber.d.ts","export declare const _httpFormDataReadNumber: (input: string | File | null) => number | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpFormDataReadString.d.ts","export declare const _httpFormDataReadString: (input: string | File | null) => string | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpHeaderReadBigint.d.ts","export declare const _httpHeaderReadBigint: (value: string | undefined) => string | bigint | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpHeaderReadBoolean.d.ts","export declare const _httpHeaderReadBoolean: (value: string | undefined) => string | boolean | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpHeaderReadNumber.d.ts","export declare const _httpHeaderReadNumber: (value: string | undefined) => string | number | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpParameterReadBigint.d.ts","export declare const _httpParameterReadBigint: (value: string) => string | bigint | null;\n"],["file:///node_modules/typia/lib/internal/_httpParameterReadBoolean.d.ts","export declare const _httpParameterReadBoolean: (value: string) => string | boolean | null;\n"],["file:///node_modules/typia/lib/internal/_httpParameterReadNumber.d.ts","export declare const _httpParameterReadNumber: (value: string) => string | number | null;\n"],["file:///node_modules/typia/lib/internal/_httpParameterReadString.d.ts","export declare const _httpParameterReadString: (value: string) => string | null;\n"],["file:///node_modules/typia/lib/internal/_httpQueryParseURLSearchParams.d.ts",'import { IReadableURLSearchParams } from "../IReadableURLSearchParams";\nexport declare const _httpQueryParseURLSearchParams: (input: string | IReadableURLSearchParams) => IReadableURLSearchParams;\n'],["file:///node_modules/typia/lib/internal/_httpQueryReadArray.d.ts","export declare const _httpQueryReadArray: (input: any[], alternative: null | undefined) => any[] | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpQueryReadBigint.d.ts","export declare const _httpQueryReadBigint: (str: string | null) => bigint | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpQueryReadBoolean.d.ts","export declare const _httpQueryReadBoolean: (str: string | null) => boolean | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpQueryReadNumber.d.ts","export declare const _httpQueryReadNumber: (str: string | null) => number | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_httpQueryReadString.d.ts","export declare const _httpQueryReadString: (str: string | null) => string | null | undefined;\n"],["file:///node_modules/typia/lib/internal/_isBetween.d.ts","export declare const _isBetween: (value: number, minimum: number, maximum: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isBigintString.d.ts","export declare const _isBigintString: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatByte.d.ts","export declare const _isFormatByte: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatDate.d.ts","export declare const _isFormatDate: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatDateTime.d.ts","export declare const _isFormatDateTime: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatDuration.d.ts","export declare const _isFormatDuration: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatEmail.d.ts","export declare const _isFormatEmail: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatHostname.d.ts","export declare const _isFormatHostname: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIdnEmail.d.ts","export declare const _isFormatIdnEmail: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIdnHostname.d.ts","export declare const _isFormatIdnHostname: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIpv4.d.ts","export declare const _isFormatIpv4: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIpv6.d.ts","export declare const _isFormatIpv6: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIri.d.ts","export declare const _isFormatIri: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatIriReference.d.ts","export declare const _isFormatIriReference: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatJsonPointer.d.ts","export declare const _isFormatJsonPointer: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatPassword.d.ts","export declare const _isFormatPassword: () => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatRegex.d.ts","export declare const _isFormatRegex: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatRelativeJsonPointer.d.ts","export declare const _isFormatRelativeJsonPointer: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatTime.d.ts","export declare const _isFormatTime: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatUri.d.ts","export declare const _isFormatUri: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatUriReference.d.ts","export declare const _isFormatUriReference: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatUriTemplate.d.ts","export declare const _isFormatUriTemplate: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatUrl.d.ts","export declare const _isFormatUrl: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isFormatUuid.d.ts","export declare const _isFormatUuid: (str: string) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isTypeFloat.d.ts","export declare const _isTypeFloat: (value: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isTypeInt32.d.ts","export declare const _isTypeInt32: (value: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isTypeInt64.d.ts","export declare const _isTypeInt64: (value: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isTypeUint32.d.ts","export declare const _isTypeUint32: (value: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isTypeUint64.d.ts","export declare const _isTypeUint64: (value: number) => boolean;\n"],["file:///node_modules/typia/lib/internal/_isUniqueItems.d.ts","export declare const _isUniqueItems: (elements: any[]) => boolean;\n"],["file:///node_modules/typia/lib/internal/_jsonStringifyNumber.d.ts","export declare const _jsonStringifyNumber: (value: number) => number;\n"],["file:///node_modules/typia/lib/internal/_jsonStringifyRest.d.ts","export declare const _jsonStringifyRest: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_jsonStringifyString.d.ts","/**\n * In the past, name of `typia` was `typescript-json`, and supported\n * JSON serialization by wrapping `fast-json-stringify. `typescript-json` was\n * a helper library of `fast-json-stringify`, which can skip manual JSON schema\n * definition just by putting pure TypeScript type.\n *\n * This `$string` function is a part of `fast-json-stringify` at that time, and\n * still being used in `typia` for the string serialization.\n *\n * @reference https://github.com/fastify/fast-json-stringify/blob/master/lib/serializer.js\n * @blog https://dev.to/samchon/good-bye-typescript-is-ancestor-of-typia-20000x-faster-validator-49fi\n */\nexport declare const _jsonStringifyString: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_jsonStringifyTail.d.ts","export declare const _jsonStringifyTail: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_llmApplicationFinalize.d.ts",'import { ILlmApplication, ILlmSchema } from "@samchon/openapi";\nexport declare const _llmApplicationFinalize: <Model extends ILlmSchema.Model>(app: ILlmApplication<Model>, options?: Partial<Pick<ILlmApplication.IOptions<Model>, "separate">>) => void;\n'],["file:///node_modules/typia/lib/internal/_miscCloneAny.d.ts",'import { Resolved } from "../Resolved";\nexport declare const _miscCloneAny: <T>(value: T) => Resolved<T>;\n'],["file:///node_modules/typia/lib/internal/_notationAny.d.ts","export declare const _notationAny: (rename: (str: string) => string) => (input: any) => any;\n"],["file:///node_modules/typia/lib/internal/_notationCamel.d.ts","export declare const _notationCamel: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_notationPascal.d.ts","export declare const _notationPascal: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_notationSnake.d.ts","export declare const _notationSnake: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/_randomArray.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport declare const _randomArray: <T>(props: Omit<OpenApi.IJsonSchema.IArray, "items"> & {\n    element: (index: number, count: number) => T;\n}) => any[];\n'],["file:///node_modules/typia/lib/internal/_randomBigint.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport declare const _randomBigint: (props: OpenApi.IJsonSchema.IInteger) => bigint;\n'],["file:///node_modules/typia/lib/internal/_randomBoolean.d.ts","export declare const _randomBoolean: () => boolean;\n"],["file:///node_modules/typia/lib/internal/_randomFormatByte.d.ts","export declare const _randomFormatByte: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatDate.d.ts","export declare const _randomFormatDate: (props?: {\n    minimum?: number;\n    maximum?: number;\n}) => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatDatetime.d.ts","export declare const _randomFormatDatetime: (props?: {\n    minimum?: number;\n    maximum?: number;\n}) => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatDuration.d.ts","export declare const _randomFormatDuration: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatEmail.d.ts","export declare const _randomFormatEmail: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatHostname.d.ts","export declare const _randomFormatHostname: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIdnEmail.d.ts","export declare const _randomFormatIdnEmail: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIdnHostname.d.ts","export declare const _randomFormatIdnHostname: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIpv4.d.ts","export declare const _randomFormatIpv4: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIpv6.d.ts","export declare const _randomFormatIpv6: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIri.d.ts","export declare const _randomFormatIri: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatIriReference.d.ts","export declare const _randomFormatIriReference: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatJsonPointer.d.ts","export declare const _randomFormatJsonPointer: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatPassword.d.ts","export declare const _randomFormatPassword: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatRegex.d.ts","export declare const _randomFormatRegex: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatRelativeJsonPointer.d.ts","export declare const _randomFormatRelativeJsonPointer: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatTime.d.ts","export declare const _randomFormatTime: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatUri.d.ts","export declare const _randomFormatUri: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatUriReference.d.ts","export declare const _randomFormatUriReference: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatUriTemplate.d.ts","export declare const _randomFormatUriTemplate: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatUrl.d.ts","export declare const _randomFormatUrl: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomFormatUuid.d.ts","export declare const _randomFormatUuid: () => string;\n"],["file:///node_modules/typia/lib/internal/_randomInteger.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport declare const _randomInteger: (schema: OpenApi.IJsonSchema.IInteger) => number;\n'],["file:///node_modules/typia/lib/internal/_randomNumber.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport declare const _randomNumber: (schema: OpenApi.IJsonSchema.INumber) => number;\n'],["file:///node_modules/typia/lib/internal/_randomPattern.d.ts","export declare const _randomPattern: (regex: RegExp) => string;\n"],["file:///node_modules/typia/lib/internal/_randomPick.d.ts","export declare const _randomPick: <T>(array: T[]) => T;\n"],["file:///node_modules/typia/lib/internal/_randomString.d.ts",'import { OpenApi } from "@samchon/openapi";\nexport declare const _randomString: (props: OpenApi.IJsonSchema.IString) => string;\n'],["file:///node_modules/typia/lib/internal/_throwTypeGuardError.d.ts",'import { TypeGuardError } from "../TypeGuardError";\nexport declare const _throwTypeGuardError: (props: TypeGuardError.IProps) => never;\n'],["file:///node_modules/typia/lib/internal/_validateReport.d.ts",'import { IValidation } from "../IValidation";\nexport declare const _validateReport: (array: IValidation.IError[]) => (exceptable: boolean, error: IValidation.IError) => false;\n'],["file:///node_modules/typia/lib/internal/private/__notationCapitalize.d.ts","export declare const __notationCapitalize: (str: string) => string;\n"],["file:///node_modules/typia/lib/internal/private/__notationUnsnake.d.ts","export declare const __notationUnsnake: (props: {\n    plain: (str: string) => string;\n    snake: (str: string, index: number) => string;\n}) => (str: string) => string;\n"],["file:///node_modules/typia/lib/json.d.ts",'import { IJsonSchemaCollection } from "./schemas/json/IJsonSchemaCollection";\nimport { IJsonSchemaUnit } from "./schemas/json/IJsonSchemaUnit";\nimport { IValidation } from "./IValidation";\nimport { Primitive } from "./Primitive";\nimport { TypeGuardError } from "./TypeGuardError";\n/**\n * > You must configure the generic argument `Types`.\n *\n * JSON Schemas Generator.\n *\n * Creates a JSON schema list which contains both main JSON schemas\n * and components. Note that, all of the named types are stored in the\n * {@link IJsonSchemaCollection.components} property for the `$ref` referencing.\n *\n * Also, you can specify the OpenAPI version by configuring the second generic\n * argument `Version`. For reference, the default version is `"3.1"`, and key\n * different of `"3.0"` and `"3.1"` is whether supporting the tuple type or not.\n *\n * @template Types Tuple of target types\n * @template Version Version of OpenAPI specification. Default is 3.1\n * @return JSON schema collection\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schemas(): never;\n/**\n * JSON Schemas Generator.\n *\n * Creates a JSON schema list which contains both main JSON schemas\n * and components. Note that, all of the named types are stored in the\n * {@link IJsonSchemaCollection.components} property for the `$ref` referencing.\n *\n * Also, you can specify the OpenAPI version by configuring the second generic\n * argument `Version`. For reference, the default version is `"3.1"`, and key\n * different of `"3.0"` and `"3.1"` is whether supporting the tuple type or not.\n *\n * @template Types Tuple of target types\n * @template Version Version of OpenAPI specification. Default is 3.1\n * @return JSON schema collection\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schemas<Types extends unknown[], Version extends "3.0" | "3.1" = "3.1">(): IJsonSchemaCollection<Version, Types>;\n/**\n * > You must configure the generic argument `Type`.\n *\n * JSON schema generator.\n *\n * Creates a JSON schema unit which contains a main JSON schema and\n * its components. Note that, all of the named types are stored in the\n * {@link IJsonSchemaUnit.components} property for the `$ref` referencing.\n *\n * Also, you can specify the OpenAPI version by configuring the second\n * generic argument `Version`. For reference, the default version is `"3.1"`,\n * and key different of `"3.0"` and `"3.1"` is whether supporting the\n * tuple type or not.\n *\n * @template Type Target type\n * @template Version Version of OpenAPI specification. Default is 3.1\n * @return JSON schema unit\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schema(): never;\n/**\n * JSON schema generator.\n *\n * Creates a JSON schema unit which contains a main JSON schema and\n * its components. Note that, all of the named types are stored in the\n * {@link IJsonSchemaUnit.components} property for the `$ref` referencing.\n *\n * Also, you can specify the OpenAPI version by configuring the second\n * generic argument `Version`. For reference, the default version is `"3.1"`,\n * and key different of `"3.0"` and `"3.1"` is whether supporting the\n * tuple type or not.\n *\n * @template Type Target type\n * @template Version Version of OpenAPI specification. Default is 3.1\n * @return JSON schema unit\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schema<Type extends unknown, Version extends "3.0" | "3.1" = "3.1">(): IJsonSchemaUnit<Version, Type>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Safe `JSON.parse()` function with type assertion.\n *\n * `typia.json.assertParse()` is a combination function of `JSON.parse()` and\n * {@link assert}. Therefore, it converts a JSON (JavaScript Object Notation) string\n * to a `T` typed instance with type assertion.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`, it\n * throws {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the parsed value, the parsed value would be returned.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parsed value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertParse(input: string, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Safe `JSON.parse()` function with type assertion.\n *\n * `typia.json.assertParse()` is a combination function of `JSON.parse()` and\n * {@link assert}. Therefore, it converts a JSON (JavaScript Object Notation) string\n * to a `T` typed instance with type assertion.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`,\n * it throws {@link TypeGuardError} or custom error generated by *errorFactory*.\n * Otherwise, there\'s no problem on the parsed value, the parsed value would be\n * returned.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parsed value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertParse<T>(input: string, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Primitive<T>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Safe `JSON.parse()` function with type checking.\n *\n * `typia.json.isParse()` is a combination function of `JSON.parse()` and {@link is}.\n * Therefore, it converts a JSON (JavaScript Object Notation) string to a `T` typed\n * instance with type checking.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`, it\n * returns `null` value. Otherwise, there\'s no problem on the parsed value, the parsed\n * value would be returned.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @returns Parsed value when exact type, otherwise `null`\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isParse(input: string): never;\n/**\n * Safe `JSON.parse()` function with type checking.\n *\n * `typia.json.isParse()` is a combination function of `JSON.parse()` and {@link is}.\n * Therefore, it converts a JSON (JavaScript Object Notation) string to a `T` typed\n * instance with type checking.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`, it\n * returns `null` value. Otherwise, there\'s no problem on the parsed value, the parsed\n * value would be returned.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @returns Parsed value when exact type, otherwise `null`\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isParse<T>(input: string): Primitive<T> | null;\n/**\n * > You must configure the generic argument `T`.\n *\n * Safe `JSON.parse()` function with detailed type validation.\n *\n * `typia.json.validateParse()` is a combination function of `JSON.parse()` and\n * {@link validate}. Therefore, it converts a JSON (JavaScript Object Notation) string\n * to a `T` typed instance with detailed type validation.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`, it\n * returns {@link IValidation.IFailure} value with detailed error reasons. Otherwise,\n * there\'s no problem on the parsed value, the parsed value would be stored in `data`\n * property of the output {@link IValidation.ISuccess} instance.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @returns Validation result with JSON parsed value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateParse(input: string): never;\n/**\n * Safe `JSON.parse()` function with detailed type validation.\n *\n * `typia.json.validateParse()` is a combination function of `JSON.parse()` and\n * {@link validate}. Therefore, it converts a JSON (JavaScript Object Notation) string\n * to a `T` typed instance with detailed type validation.\n *\n * In such reason, when parsed JSON string value is not matched with the type `T`, it\n * returns {@link IValidation.IFailure} value with detailed error reasons. Otherwise,\n * there\'s no problem on the parsed value, the parsed value would be stored in `data`\n * property of the output {@link IValidation.ISuccess} instance.\n *\n * @template T Expected type of parsed value\n * @param input JSON string\n * @returns Validation result with JSON parsed value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateParse<T>(input: string): IValidation<Primitive<T>>;\n/**\n * 8x faster `JSON.stringify()` function.\n *\n * Converts an input value to a JSON (JavaScript Object Notation) string, about 8x\n * faster than the native `JSON.stringify()` function. The 5x faster principle is\n * because it writes an optimized JSON conversion plan, only for the type `T`.\n *\n * For reference, this `typia.json.stringify()` does not validate the input value type.\n * It just believes that the input value is following the type `T`. Therefore, if you\n * can\'t ensure the input value type, it would be better to call one of below\n * functions instead.\n *\n *  - {@link assertStringify}\n *  - {@link isStringify}\n *  - {@link validateStringify}\n *\n * @template T Type of the input value\n * @param input A value to be converted\n * @return JSON string value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function stringify<T>(input: T): string;\n/**\n * 5x faster `JSON.stringify()` function with type assertion.\n *\n * `typia.json.assertStringify()` is a combination function of {@link assert} and\n * {@link stringify}. Therefore, it converts an input value to\n * JSON (JavaScript Object Notation) string, with type assertion.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the `input` value, JSON string would be returned.\n *\n * For reference, with type assertion, it is even 5x times faster than the native\n * `JSON.stringify()` function. So, just enjoy the safe and fast JSON conversion\n * with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be asserted and converted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @return JSON string value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertStringify<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): string;\n/**\n * 5x faster `JSON.stringify()` function with type assertion.\n *\n * `typia.json.assertStringify()` is a combination function of {@link assert} and\n * {@link stringify}. Therefore, it converts an input value to\n * JSON (JavaScript Object Notation) string, with type assertion.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the `input` value, JSON string would be returned.\n *\n * For reference, with type assertion, it is even 5x times faster than the native\n * `JSON.stringify()` function. So, just enjoy the safe and fast JSON conversion\n * with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be asserted and converted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @return JSON string value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertStringify<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): unknown;\n/**\n * 7x faster `JSON.stringify()` function with type checking.\n *\n * `typia.json.stringify()` is a combination function of {@link is} and\n * {@link stringify}. Therefore, it converts an input value to JSON\n * (JavaScript Object Notation) string, with type checking.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `null` value. Otherwise, there\'s no problem on the `input` value, JSON string\n * would be returned.\n *\n * For reference, with type checking, it is even 7x times faster than the native\n * `JSON.stringify()` function. So, just enjoy the safe and fast JSON conversion\n * with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be checked and converted\n * @return JSON string value when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isStringify<T>(input: T): string | null;\n/**\n * 7x faster `JSON.stringify()` function with type checking.\n *\n * `typia.json.isStringify()` is a combination function of {@link is} and\n * {@link stringify}. Therefore, it converts an input value to JSON\n * (JavaScript Object Notation) string, with type checking.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `null` value. Otherwise, there\'s no problem on the `input` value, JSON string\n * would be returned.\n *\n * For reference, with type checking, it is even 7x times faster than the native\n * `JSON.stringify()` function. So, just enjoy the safe and fast JSON conversion\n * with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be checked and converted\n * @return JSON string value when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isStringify<T>(input: unknown): string | null;\n/**\n * 5x faster `JSON.stringify()` function with detailed type validation.\n *\n * `typia.json.validateStringify()` is a combination function of {@link validate} and\n * {@link stringify}. Therefore, it converts an input value to JSON (JavaScript Object\n * Notation) string, with detailed type validation.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise,\n * there\'s no problem on the `input` value, JSON string would be stored in `data`\n * property of the output {@link IValidation.ISuccess} instance.\n *\n * For reference, with detailed type validation, it is even 5x times faster than the\n * native `JSON.stringify()` function. So, just enjoy the safe and fast JSON\n * conversion with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be checked and converted\n * @returns Validation result with JSON string value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateStringify<T>(input: T): IValidation<string>;\n/**\n * 5x faster `JSON.stringify()` function with detailed type validation.\n *\n * `typia.json.validateStringify()` is a combination function of {@link validate} and\n * {@link stringify}. Therefore, it converts an input value to JSON (JavaScript Object\n * Notation) string, with detailed type validation.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise,\n * there\'s no problem on the `input` value, JSON string would be stored in `data`\n * property of the output {@link IValidation.ISuccess} instance.\n *\n * For reference, with detailed type validation, it is even 5x times faster than the\n * native `JSON.stringify()` function. So, just enjoy the safe and fast JSON\n * conversion with confidence.\n *\n * @template T Type of the input value\n * @param input A value to be checked and converted\n * @returns Validation result with JSON string value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateStringify<T>(input: unknown): IValidation<string>;\n/**\n * Creates a reusable {@link isParse} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsParse(): never;\n/**\n * Creates a reusable {@link isParse} function.\n *\n * @template T Expected type of parsed value\n * @returns A reusable `isParse` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsParse<T>(): (input: string) => Primitive<T> | null;\n/**\n * Creates a reusable {@link assertParse} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertParse(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertParse} function.\n *\n * @template T Expected type of parsed value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertParse` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertParse<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: string) => Primitive<T>;\n/**\n * Creates a reusable {@link validateParse} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateParse(): never;\n/**\n * Creates a reusable {@link validateParse} function.\n *\n * @template T Expected type of parsed value\n * @returns A reusable `validateParse` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateParse<T>(): (input: string) => IValidation<Primitive<T>>;\n/**\n * Creates a reusable {@link stringify} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createStringify(): never;\n/**\n * Creates a reusable {@link stringify} function.\n *\n * @template T Type of the input value\n * @returns A reusable `stringify` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createStringify<T>(): (input: T) => string;\n/**\n * Creates a reusable {@link assertStringify} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertStringify(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertStringify} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertStringify` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertStringify<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => string;\n/**\n * Creates a reusable {@link isStringify} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsStringify(): never;\n/**\n * Creates a reusable {@link isStringify} function.\n *\n * @template T Type of the input value\n * @returns A reusable `isStringify` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsStringify<T>(): (input: unknown) => string | null;\n/**\n * Creates a reusable {@link validateStringify} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateStringify(): never;\n/**\n * Creates a reusable {@link validateStringify} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validateStringify` function\n\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateStringify<T>(): (input: unknown) => IValidation<string>;\n'],["file:///node_modules/typia/lib/llm.d.ts",'import { ILlmApplication, ILlmController, ILlmSchema } from "@samchon/openapi";\n/**\n * > You must configure the generic argument `Class`.\n *\n * TypeScript functions to LLM function calling controller.\n *\n * Creates a controller of LLM (Large Language Model) function calling\n * from a TypeScript class or interface type containing the target functions to be\n * called by the LLM function calling feature. The returned controller contains\n * not only the {@link application} of {@link ILlmFunction function calling schemas},\n * but also the {@link ILlmController.execute executor} of the functions.\n *\n * If you put the returned {@link ILlmController} to the LLM provider like\n * [OpenAI (ChatGPT)](https://openai.com/), the LLM will automatically select the\n * proper function and fill its arguments from the conversation (maybe chatting text)\n * with user (human). And you can actually call the function by using\n * {@link ILlmController.execute} property. This is the concept of the LLM function\n * calling.\n *\n * Here is an example of using `typia.llm.controller()` function for AI agent\n * development of performing such AI function calling to mobile API classes\n * through this `typia` and external `@agentica` libraries.\n *\n * ```typescript\n * import { Agentica } from "@agentica/core";\n * import typia from "typia";\n *\n * const agentica = new Agentica({\n *   model: "chatgpt",\n *   vendor: {\n *     api: new OpenAI({ apiKey: "********" }),\n *     model: "gpt-4o-mini",\n *   },\n *   controllers: [\n *     typia.llm.controller<ReactNativeFileSystem, "chatgpt">(\n *       "filesystem",\n *       new ReactNativeFileSystem(),\n *     ),\n *     typia.llm.controller<ReactNativeGallery, "chatgpt">(\n *       "gallery",\n *       new ReactNativeGallery(),\n *     ),\n *   ],\n * });\n * await agentica.conversate(\n *   "Organize photo collection and sort them into appropriate folders.",\n * );\n * ```\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://samchon.github.io/openapi/api/types/IChatGptSchema-1.html)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Class Target class or interface type collecting the functions to call\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @param name Identifier name of the controller\n * @param execute Executor instance\n * @param options Options for the LLM application construction\n * @returns Controller of LLM function calling\n * @reference https://wrtnlabs.io/agentica/docs/core/controller/typescript/\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function controller(name: string, execute: object, options?: Partial<Pick<ILlmApplication.IOptions<any>, "separate">>): never;\n/**\n * TypeScript functions to LLM function calling controller.\n *\n * Creates a controller of LLM (Large Language Model) function calling\n * from a TypeScript class or interface type containing the target functions to be\n * called by the LLM function calling feature. The returned controller contains\n * not only the {@link application} of {@link ILlmFunction function calling schemas},\n * but also the {@link ILlmController.execute executor} of the functions.\n *\n * If you put the returned {@link ILlmController} to the LLM provider like\n * [OpenAI (ChatGPT)](https://openai.com/), the LLM will automatically select the\n * proper function and fill its arguments from the conversation (maybe chatting text)\n * with user (human). And you can actually call the function by using\n * {@link ILlmController.execute} property. This is the concept of the LLM function\n * calling.\n *\n * Here is an example of using `typia.llm.controller()` function for AI agent\n * development of performing such AI function calling to mobile API classes\n * through this `typia` and external `@agentica` libraries.\n *\n * ```typescript\n * import { Agentica } from "@agentica/core";\n * import typia from "typia";\n *\n * const agentica = new Agentica({\n *   model: "chatgpt",\n *   vendor: {\n *     api: new OpenAI({ apiKey: "********" }),\n *     model: "gpt-4o-mini",\n *   },\n *   controllers: [\n *     typia.llm.controller<ReactNativeFileSystem, "chatgpt">(\n *       "filesystem",\n *       new ReactNativeFileSystem(),\n *     ),\n *     typia.llm.controller<ReactNativeGallery, "chatgpt">(\n *       "gallery",\n *       new ReactNativeGallery(),\n *     ),\n *   ],\n * });\n * await agentica.conversate(\n *   "Organize photo collection and sort them into appropriate folders.",\n * );\n * ```\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://samchon.github.io/openapi/api/types/IChatGptSchema-1.html)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Class Target class or interface type collecting the functions to call\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @param name Identifier name of the controller\n * @param execute Executor instance\n * @param options Options for the LLM application construction\n * @returns Controller of LLM function calling\n * @reference https://wrtnlabs.io/agentica/docs/core/controller/typescript/\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function controller<Class extends Record<string, any>, Model extends ILlmSchema.Model, Config extends Partial<ILlmSchema.ModelConfig[Model]> = {}>(name: string, execute: Class, options?: Partial<Pick<ILlmApplication.IOptions<Model>, "separate">>): ILlmController<Model>;\n/**\n * > You must configure the generic argument `Class`.\n *\n * TypeScript functions to LLM function calling application.\n *\n * Creates an application of LLM (Large Language Model) function calling application\n * from a TypeScript class or interface type containing the target functions to be\n * called by the LLM function calling feature.\n *\n * If you put the returned {@link ILlmApplication.functions} objects to the LLM provider\n * like [OpenAI (ChatGPT)](https://openai.com/), the LLM will automatically select the\n * proper function and fill its arguments from the conversation (maybe chatting text)\n * with user (human). This is the concept of the LLM function calling.\n *\n * By the way, there can be some parameters (or their nested properties) which must be\n * composed by human, not by LLM. File uploading feature or some sensitive information\n * like security keys (password) are the examples. In that case, you can separate the\n * function parameters to both LLM and human sides by configuring the\n * {@link ILlmApplication.IOptions.separate} property. The separated parameters are\n * assigned to the {@link ILlmFunction.separated} property.\n *\n * For reference, the actual function call execution is not by LLM, but by you.\n * When the LLM selects the proper function and fills the arguments, you just call\n * the function with the LLM prepared arguments. And then informs the return value to\n * the LLM by system prompt. The LLM will continue the next conversation based on\n * the return value.\n *\n * Additionally, if you\'ve configured {@link ILlmApplication.IOptions.separate},\n * so that the parameters are separated to human and LLM sides, you can merge these\n * humand and LLM sides\' parameters into one through {@link HttpLlm.mergeParameters}\n * before the actual LLM function call execution.\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Class Target class or interface type collecting the functions to call\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @param options Options for the LLM application construction\n * @returns Application of LLM function calling schemas\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function application(options?: Partial<Pick<ILlmApplication.IOptions<any>, "separate">>): never;\n/**\n * TypeScript functions to LLM function calling application.\n *\n * Creates an application of LLM (Large Language Model) function calling application\n * from a TypeScript class or interface type containing the target functions to be\n * called by the LLM function calling feature.\n *\n * If you put the returned {@link ILlmApplication.functions} objects to the LLM provider\n * like [OpenAI (ChatGPT)](https://openai.com/), the LLM will automatically select the\n * proper function and fill its arguments from the conversation (maybe chatting text)\n * with user (human). This is the concept of the LLM function calling.\n *\n * By the way, there can be some parameters (or their nested properties) which must be\n * composed by human, not by LLM. File uploading feature or some sensitive information\n * like security keys (password) are the examples. In that case, you can separate the\n * function parameters to both LLM and human sides by configuring the\n * {@link ILlmApplication.IOptions.separate} property. The separated parameters are\n * assigned to the {@link ILlmFunction.separated} property.\n *\n * For reference, the actual function call execution is not by LLM, but by you.\n * When the LLM selects the proper function and fills the arguments, you just call\n * the function with the LLM prepared arguments. And then informs the return value to\n * the LLM by system prompt. The LLM will continue the next conversation based on\n * the return value.\n *\n * Additionally, if you\'ve configured {@link ILlmApplication.IOptions.separate},\n * so that the parameters are separated to human and LLM sides, you can merge these\n * humand and LLM sides\' parameters into one through {@link HttpLlm.mergeParameters}\n * before the actual LLM function call execution.\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Class Target class or interface type collecting the functions to call\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @param options Options for the LLM application construction\n * @returns Application of LLM function calling schemas\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function application<Class extends Record<string, any>, Model extends ILlmSchema.Model, Config extends Partial<ILlmSchema.ModelConfig[Model]> = {}>(options?: Partial<Pick<ILlmApplication.IOptions<Model>, "separate">>): ILlmApplication<Model, Class>;\n/**\n * > You must configure the generic argument `Parameters`.\n *\n * TypeScript parameters to LLM parameters schema.\n *\n * Creates an LLM (Large Language Model) parameters schema, a type metadata that is used in the\n * [LLM function calling](https://platform.openai.com/docs/guides/function-calling)\n * and [LLM structured outputs](https://platform.openai.com/docs/guides/structured-outputs),\n * from a TypeScript parameters type.\n *\n * For references, LLM identifies only keyworded arguments, not positional arguments.\n * Therefore, the TypeScript parameters type must be an object type, and its properties\n * must be static. If dynamic properties are, it would be compilation error.\n *\n * Also, such parameters type can be utilized not only for the LLM function calling,\n * but also for the LLM structured outputs. The LLM structured outputs is a feature\n * that LLM (Large Language Model) can generate a structured output, not only a plain\n * text, by filling the parameters from the conversation (maybe chatting text) with user\n * (human).\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Parameters Target parameters type\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @returns LLM parameters schema\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n */\nexport declare function parameters(): never;\n/**\n * TypeScript parameters to LLM parameters schema.\n *\n * Creates an LLM (Large Language Model) parameters schema, a type metadata that is used in the\n * [LLM function calling](https://platform.openai.com/docs/guides/function-calling)\n * and [LLM structured outputs](https://platform.openai.com/docs/guides/structured-outputs),\n * from a TypeScript parameters type.\n *\n * For references, LLM identifies only keyworded arguments, not positional arguments.\n * Therefore, the TypeScript parameters type must be an object type, and its properties\n * must be static. If dynamic properties are, it would be compilation error.\n *\n * Also, such parameters type can be utilized not only for the LLM function calling,\n * but also for the LLM structured outputs. The LLM structured outputs is a feature\n * that LLM (Large Language Model) can generate a structured output, not only a plain\n * text, by filling the parameters from the conversation (maybe chatting text) with user\n * (human).\n *\n * Here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * @template Parameters Target parameters type\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @returns LLM parameters schema\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n */\nexport declare function parameters<Parameters extends Record<string, any>, Model extends ILlmSchema.Model, Config extends Partial<ILlmSchema.ModelConfig[Model]> = {}>(): ILlmSchema.ModelParameters[Model];\n/**\n * > You must configure the generic argument `T`.\n *\n * TypeScript type to LLM type schema.\n *\n * Creates an LLM (Large Language Model) type schema, a type metadata that is used in the\n * [LLM function calling](@reference https://platform.openai.com/docs/guides/function-calling),\n * from a TypeScript type.\n *\n * The returned {@link ILlmSchema} type would be specified by the `Model` argument,\n * and here is the list of available `Model` types with their corresponding LLM schema.\n * Reading the following list, and determine the `Model` type considering the\n * characteristics of the target LLM provider.\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * If you actually want to perform the LLM function calling with TypeScript functions,\n * you can do it with the {@link application} function. Otherwise you hope to perform the\n * structured output, {@link parameters} function is better. Let\'s enjoy the LLM function calling\n * and structured output with the native TypeScript functions and types.\n *\n * > **What LLM function calling is?\n * >\n * > LLM (Large Language Model) selects property function and fill the arguments,\n * > but actual function call execution is not by LLM, but by you.\n * >\n * > In nowadays, most LLM (Large Language Model) like OpenAI are supporting\n * > "function calling" feature. The "function calling" means that LLM automatically selects\n * > a proper function and compose parameter values from the user\'s chatting text.\n * >\n * > When LLM selects the proper function and its arguments, you just call the function\n * > with the arguments. And then informs the return value to the LLM by system prompt,\n * > LLM will continue the next conversation based on the return value.\n *\n * @template T Target type\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @returns LLM schema\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schema(): never;\n/**\n * TypeScript type to LLM type schema.\n *\n * Creates an LLM (Large Language Model) type schema, a type metadata that is used in the\n * [LLM function calling](@reference https://platform.openai.com/docs/guides/function-calling),\n * from a TypeScript type.\n *\n * The returned {@link ILlmSchema} type would be specified by the `Model` argument,\n * and here is the list of available `Model` types with their corresponding LLM schema:\n *\n * - LLM provider schemas\n *   - `chatgpt`: [`IChatGptSchema`](https://github.com/samchon/openapi/blob/master/src/structures/IChatGptSchema.ts)\n *   - `claude`: [`IClaudeSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `deepseek`: [`IDeepSeekSchema`](https://samchon.github.io/openapi/api/types/IClaudeSchema-1.html)\n *   - `gemini`: [`IGeminiSchema`](https://samchon.github.io/openapi/api/types/IGeminiSchema-1.html)\n *   - `llama`: [`ILlamaSchema`](https://samchon.github.io/openapi/api/types/ILlamaSchema-1.html)\n * - Midldle layer schemas\n *   - `3.0`: [`ILlmSchemaV3`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3-1.html)\n *   - `3.1`: [`ILlmSchemaV3_1`](https://samchon.github.io/openapi/api/types/ILlmSchemaV3_1-1.html)\n *\n * If you actually want to perform the LLM function calling with TypeScript functions,\n * you can do it with the {@link application} function. Otherwise you hope to perform the\n * structured output, {@link parameters} function is better. Let\'s enjoy the LLM function calling\n * and structured output with the native TypeScript functions and types.\n *\n * > **What LLM function calling is?\n * >\n * > LLM (Large Language Model) selects property function and fill the arguments,\n * > but actual function call execution is not by LLM, but by you.\n * >\n * > In nowadays, most LLM (Large Language Model) like OpenAI are supporting\n * > "function calling" feature. The "function calling" means that LLM automatically selects\n * > a proper function and compose parameter values from the user\'s chatting text.\n * >\n * > When LLM selects the proper function and its arguments, you just call the function\n * > with the arguments. And then informs the return value to the LLM by system prompt,\n * > LLM will continue the next conversation based on the return value.\n *\n * @template T Target type\n * @template Model LLM schema model\n * @template Config Configuration of LLM schema composition\n * @returns LLM schema\n * @reference https://platform.openai.com/docs/guides/function-calling\n * @reference https://platform.openai.com/docs/guides/structured-outputs\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function schema<T, Model extends ILlmSchema.Model, Config extends Partial<ILlmSchema.ModelConfig[Model]> = {}>(...$defs: Extract<ILlmSchema.ModelSchema[Model], {\n    $ref: string;\n}> extends never ? [] : [Record<string, ILlmSchema.ModelSchema[Model]>]): ILlmSchema.ModelSchema[Model];\n'],["file:///node_modules/typia/lib/misc.d.ts",'import { Atomic } from "./typings/Atomic";\nimport { IValidation } from "./IValidation";\nimport { Resolved } from "./Resolved";\nimport { TypeGuardError } from "./TypeGuardError";\n/**\n * > You must configure the generic argument `T`.\n *\n * Union literal type to array.\n *\n * Converts a union literal type to an array of its members.\n *\n * ```typescript\n * literals<"A" | "B" | 1>; // ["A", "B", 1]\n * ```\n *\n * @template T Union literal type\n * @return Array of union literal type\'s members\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function literals(): never;\n/**\n * Union literal type to array.\n *\n * Converts a union literal type to an array of its members.\n *\n * ```typescript\n * literals<"A" | "B" | 1>; // ["A", "B", 1]\n * ```\n *\n * @template T Union literal type\n * @return Array of union literal type\'s members\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function literals<T extends Atomic.Type | null>(): T[];\n/**\n * Clone a data.\n *\n * Clones an instance following type `T`. If the target *input* value or its member\n * variable contains a class instance having methods, those methods would not be\n * cloned.\n *\n * For reference, this `typia.misc.clone()` function does not validate the input value\n * type. It just believes that the input value is following the type `T`. Therefore,\n * if you can\'t ensure the input value type, it would be better to call\n * {@link assertClone} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @return Cloned data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function clone<T>(input: T): Resolved<T>;\n/**\n * Clone a data with type assertion.\n *\n * Clones an instance following type `T`, with type assertion. If the target `input`\n * value or its member variable contains a class instance having methods, those\n * methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the `input` value, cloned data would be returned.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @return Cloned data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertClone<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * Clone a data with type assertion.\n *\n * Clones an instance following type `T`, with type assertion. If the target `input`\n * value or its member variable contains a class instance having methods, those\n * methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the `input` value, cloned data would be returned.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @return Cloned data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertClone<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * Clone a data with type checking.\n *\n * Clones an instance following type `T`, with type checking. If the target `input`\n * value or its member variable contains a class instance having methods, those\n * methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `null` value instead. Otherwise, there\'s no problem on the `input` value, cloned\n * data would be returned.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @return Cloned data when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isClone<T>(input: T): Resolved<T> | null;\n/**\n * Clone a data with type checking.\n *\n * Clones an instance following type `T`, with type checking. If the target `input`\n * value or its member variable contains a class instance having methods, those\n * methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `null` value instead. Otherwise, there\'s no problem on the `input` value, cloned\n * data would be returned.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @return Cloned data when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isClone<T>(input: unknown): Resolved<T> | null;\n/**\n * Clone a data with detailed type validation.\n *\n * Clones an instance following type `T`, with detailed type validation. If the target\n * `input` value or its member variable contains a class instance having methods,\n * those methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.Failure} value. Otherwise, there\'s no problem on the `input`\n * value, cloned data would be stored in `data` property of the output\n * {@link IValidation.Success} instance.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @returns Validation result with cloned value\n */\nexport declare function validateClone<T>(input: T): IValidation<Resolved<T>>;\n/**\n * Clone a data with detailed type validation.\n *\n * Clones an instance following type `T`, with detailed type validation. If the target\n * `input` value or its member variable contains a class instance having methods,\n * those methods would not be cloned.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.Failure} value. Otherwise, there\'s no problem on the `input`\n * value, cloned data would be stored in `data` property of the output\n * {@link IValidation.Success} instance.\n *\n * @template T Type of the input value\n * @param input A value to be cloned\n * @returns Validation result with cloned value\n */\nexport declare function validateClone<T>(input: unknown): IValidation<Resolved<T>>;\n/**\n * Prune, erase superfluous properties.\n *\n * Remove every superfluous properties from the `input` object, even including nested\n * objects. Note that, as every superfluous properties would be deleted, you never can\n * read those superfluous properties after calling this `prune()` function.\n *\n * For reference, this `typia.misc.prune()` function does not validate the input value\n * type. It just believes that the input value is following the type `T`. Therefore,\n * if you can\'t ensure the input value type, it would better to call one of below\n * functions instead.\n *\n *   - {@link assertPrune}\n *   - {@link isPrune}\n *   - {@link validatePrune}\n *\n * @template T Type of the input value\n * @param input Target instance to prune\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function prune<T extends object>(input: T): void;\n/**\n * Prune, erase superfluous properties, with type assertion.\n *\n * `typia.misc.assertPrune()` is a combination function of {@link assert} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type assertion.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise,\n * there\'s no problem on the `input` value, its every superfluous properties would be\n * removed, including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to assert and prune\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertPrune<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Prune, erase superfluous properties, with type assertion.\n *\n * `typia.misc.assertPrune()` is a combination function of {@link assert} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type assertion.\n *\n * In such reason, when `input` value is not matched with the type `T`, it throws an\n * {@link TypeGuardError} or custom error generated by *errorFactory*. Otherwise, there\'s\n * no problem on the `input` value, its every superfluous properties would be removed,\n * including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to assert and prune\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertPrune<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Prune, erase superfluous properties, with type checking.\n *\n * `typia.misc.assertPrune()` is a combination function of {@link is} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type checking.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `false` value. Otherwise, there\'s no problem on the `input` value, it returns\n * `true` after removing every superfluous properties, including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to check and prune\n * @returns Whether the parametric value is following the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isPrune<T>(input: T): input is T;\n/**\n * Prune, erase superfluous properties, with type checking.\n *\n * `typia.misc.assertPrune()` is a combination function of {@link is} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type checking.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * `false` value. Otherwise, there\'s no problem on the `input` value, it returns\n * `true` after removing every superfluous properties, including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to check and prune\n * @returns Whether the parametric value is following the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isPrune<T>(input: unknown): input is T;\n/**\n * Prune, erase superfluous properties, with type validation.\n *\n * `typia.misc.validatePrune()` is a combination function of {@link validate} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type validation.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise, there\'s\n * no problem on the `input` value, it returns {@link IValidation.ISuccess} value after\n * removing every superfluous properties, including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to validate and prune\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validatePrune<T>(input: T): IValidation<T>;\n/**\n * Prune, erase superfluous properties, with type validation.\n *\n * `typia.misc.validatePrune()` is a combination function of {@link validate} and\n * {@link prune}. Therefore, it removes every superfluous properties from the `input`\n * object including nested objects, with type validation.\n *\n * In such reason, when `input` value is not matched with the type `T`, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise, there\'s\n * no problem on the `input` value, it returns {@link IValidation.ISuccess} value after\n * removing every superfluous properties, including nested objects.\n *\n * @template T Type of the input value\n * @param input Target instance to validate and prune\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validatePrune<T>(input: unknown): IValidation<T>;\n/**\n * Creates a reusable {@link clone} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createClone(): never;\n/**\n * Creates a reusable {@link clone} function.\n *\n * @template T Type of the input value\n * @returns A reusable `clone` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createClone<T>(): (input: T) => Resolved<T>;\n/**\n * Creates a reusable {@link assertClone} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertClone(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertClone} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `clone` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertClone<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => Resolved<T>;\n/**\n * Creates a reusable {@link isClone} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsClone(): never;\n/**\n * Creates a reusable {@link isClone} function.\n *\n * @template T Type of the input value\n * @returns A reusable `clone` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsClone<T>(): (input: unknown) => Resolved<T> | null;\n/**\n * Creates a reusable {@link validateClone} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateClone(): never;\n/**\n * Creates a reusable {@link validateClone} function.\n *\n * @template T Type of the input value\n * @returns A reusable `clone` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateClone<T>(): (input: unknown) => IValidation<Resolved<T>>;\n/**\n * Creates a reusable {@link prune} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createPrune(): never;\n/**\n * Creates a reusable {@link prune} function.\n *\n * @template T Type of the input value\n * @returns A reusable `prune` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createPrune<T extends object>(): (input: T) => void;\n/**\n * Creates a reusable {@link assertPrune} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertPrune(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertPrune} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `isPrune` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertPrune<T extends object>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: T) => T;\n/**\n * Creates a reusable {@link isPrune} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsPrune(): never;\n/**\n * Creates a reusable {@link isPrune} function.\n *\n * @template T Type of the input value\n * @returns A reusable `isPrune` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsPrune<T extends object>(): (input: T) => input is T;\n/**\n * Creates a reusable {@link validatePrune} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidatePrune(): never;\n/**\n * Creates a reusable {@link validatePrune} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validatePrune` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidatePrune<T extends object>(): (input: T) => IValidation<T>;\n'],["file:///node_modules/typia/lib/module.d.ts",'import { StandardSchemaV1 } from "@standard-schema/spec";\nimport { AssertionGuard } from "./AssertionGuard";\nimport { IRandomGenerator } from "./IRandomGenerator";\nimport { IValidation } from "./IValidation";\nimport { Resolved } from "./Resolved";\nimport { TypeGuardError } from "./TypeGuardError";\nexport * as functional from "./functional";\nexport * as http from "./http";\nexport * as llm from "./llm";\nexport * as json from "./json";\nexport * as misc from "./misc";\nexport * as notations from "./notations";\nexport * as protobuf from "./protobuf";\nexport * as reflect from "./reflect";\nexport * as tags from "./tags";\nexport * from "./schemas/metadata/IJsDocTagInfo";\nexport * from "./schemas/json/IJsonApplication";\nexport * from "./schemas/json/IJsonSchemaCollection";\nexport * from "./schemas/json/IJsonSchemaUnit";\nexport * from "./AssertionGuard";\nexport * from "./IRandomGenerator";\nexport * from "./IValidation";\nexport * from "./TypeGuardError";\nexport * from "./Primitive";\nexport * from "./Resolved";\nexport * from "./CamelCase";\nexport * from "./PascalCase";\nexport * from "./SnakeCase";\nexport * from "./IReadableURLSearchParams";\n/**\n * Asserts a value type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T`. Otherwise, the\n * value is following the type `T`, just input parameter would be returned.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link is} function instead.\n * Otherwise you want to know all the errors, {@link validate} is the way to go.\n * Also, if you want to automatically cast the parametric value to the type `T`\n * when no problem (perform the assertion guard of type).\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link assertEquals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assert<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts a value type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T`. Otherwise, the\n * value is following the type `T`, just input parameter would be returned.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link is} function instead.\n * Otherwise, you want to know all the errors, {@link validate} is the way to go.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link assertEquals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value casted as `T`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assert<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Assertion guard of a value type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T`. Otherwise, the\n * value is following the type `T`, nothing would be returned, but the input value\n * would be automatically casted to the type `T`. This is the concept of\n * "Assertion Guard" of a value type.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link is} function instead.\n * Otherwise you want to know all the errors, {@link validate} is the way to go.\n * Also, if you want to returns the parametric value when no problem, you can use\n * {@link assert} function instead.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link assertGuardEquals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertGuard<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): asserts input is T;\n/**\n * Assertion guard of a value type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T`. Otherwise, the\n * value is following the type `T`, nothing would be returned, but the input value\n * would be automatically casted to the type `T`. This is the concept of\n * "Assertion Guard" of a value type.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link is} function instead.\n * Otherwise you want to know all the errors, {@link validate} is the way to go.\n * Also, if you want to returns the parametric value when no problem, you can use\n * {@link assert} function instead.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link assertGuardEquals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertGuard<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): asserts input is T;\n/**\n * Tests a value type.\n *\n * Tests a parametric value type and returns whether it\'s following the type `T` or not.\n * If the parametric value is matched with the type `T`, `true` value would be returned.\n * Otherwise, the parametric value is not following the type `T`, `false` value would be\n * returned.\n *\n * If what you want is not just knowing whether the parametric value is following the\n * type `T` or not, but throwing an exception with detailed reason, you can choose\n * {@link assert} function instead. Also, if you want to know all the errors with\n * detailed reasons, {@link validate} function would be useful.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link equals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be tested\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Whether the parametric value is following the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function is<T>(input: T): input is T;\n/**\n * Tests a value type.\n *\n * Tests a parametric value type and returns whether it\'s following the type `T` or not.\n * If the parametric value is matched with the type `T`, `true` value would be returned.\n * Otherwise, the parametric value is not following the type `T`, `false` value would be\n * returned.\n *\n * If what you want is not just knowing whether the parametric value is following the\n * type `T` or not, but throwing an exception with detailed reason, you can choose\n * {@link assert} function instead. Also, if you want to know all the errors with\n * detailed reasons, {@link validate} function would be useful.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link equals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be tested\n * @returns Whether the parametric value is following the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function is<T>(input: unknown): input is T;\n/**\n * Validates a value type.\n *\n * Validates a parametric value type and archives all the type errors into an\n * {@link IValidation.errors} array, if the parametric value is not following the\n * type `T`. Of course, if the parametric value is following the type `T`, the\n * {@link IValidation.errors} array would be empty and {@link IValidation.success}\n * would have the `true` value.\n *\n * If what you want is not finding all the error, but asserting the parametric value\n * type with exception throwing, you can choose {@link assert} function instead.\n * Otherwise, you just want to know whether the parametric value is matched with the\n * type `T`, {@link is} function is the way to go.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link validateEquals} function instead.\n *\n * @template Type of the input value\n * @param input A value to be validated\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validate<T>(input: T): IValidation<T>;\n/**\n * Validates a value type.\n *\n * Validates a parametric value type and archives all the type errors into an\n * {@link IValidation.errors} array, if the parametric value is not following the\n * type `T`. Of course, if the parametric value is following the type `T`, the\n * {@link IValidation.errors} array would be empty and {@link IValidation.success}\n * would have the `true` value.\n *\n * If what you want is not finding all the error, but asserting the parametric value\n * type with exception throwing, you can choose {@link assert} function instead.\n * Otherwise, you just want to know whether the parametric value is matched with the\n * type `T`, {@link is} function is the way to go.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link validateEquals} function instead.\n *\n * @template Type of the input value\n * @param input A value to be validated\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validate<T>(input: unknown): IValidation<T>;\n/**\n * Asserts equality between a value and its type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T` or some superfluous\n * property that is not listed on the type `T` has been found. Otherwise, the value is\n * following the type `T` without any superfluous property, just input parameter would\n * be returned.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link equals} function instead.\n * Otherwise, you want to know all the errors, {@link validateEquals} is the way to go.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link assert} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEquals<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Asserts equality between a value and its type.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T` or some superfluous\n * property that is not listed on the type `T` has been found. Otherwise, the value is\n * following the type `T` without any superfluous property, just input parameter would\n * be returned.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link equals} function instead.\n * Otherwise, you want to know all the errors, {@link validateEquals} is the way to go.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link assert} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value casted as `T`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEquals<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): T;\n/**\n * Assertion guard of a type with equality.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T` or some superfluous\n * property that is not listed on the type `T` has been found.\n *\n * Otherwise, the value is following the type `T` without any superfluous property,\n * nothing would be returned, but the input value would be automatically casted to\n * the type `T`. This is the concept of "Assertion Guard" of a value type.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link equals} function instead.\n * Otherwise, you want to know all the errors, {@link validateEquals} is the way to go.\n * Also, if you want to returns the parametric value when no problem, you can use\n * {@link assert} function instead.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link assertEquals} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value casted as `T`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertGuardEquals<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): asserts input is T;\n/**\n * Assertion guard of a type with equality.\n *\n * Asserts a parametric value type and throws a {@link TypeGuardError} with detailed\n * reason, if the parametric value is not following the type `T` or some superfluous\n * property that is not listed on the type `T` has been found.\n *\n * Otherwise, the value is following the type `T` without any superfluous property,\n * nothing would be returned, but the input value would be automatically casted to\n * the type `T`. This is the concept of "Assertion Guard" of a value type.\n *\n * If what you want is not asserting but just knowing whether the parametric value is\n * following the type `T` or not, you can choose the {@link equals} function instead.\n * Otherwise, you want to know all the errors, {@link validateEquals} is the way to go.\n * Also, if you want to returns the parametric value when no problem, you can use\n * {@link assertEquals} function instead.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link assertGuard} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be asserted\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Parametric input value casted as `T`\n * @throws A {@link TypeGuardError} instance with detailed reason\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertGuardEquals<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): asserts input is T;\n/**\n * Tests equality between a value and its type.\n *\n * Tests a parametric value type and returns whether it\'s equivalent to the type `T`\n * or not. If the parametric value is matched with the type `T` and there\'s not any\n * superfluous property that is not listed on the type `T`, `true` value would be\n * returned. Otherwise, the parametric value is not following the type `T` or some\n * superfluous property exists, `false` value would be returned.\n *\n * If what you want is not just knowing whether the parametric value is following the\n * type `T` or not, but throwing an exception with detailed reason, you can choose\n * {@link assertEquals} function instead. Also, if you want to know all the errors with\n * detailed reasons, {@link validateEquals} function would be useful.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link is} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be tested\n * @returns Whether the parametric value is equivalent to the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function equals<T>(input: T): input is T;\n/**\n * Tests equality between a value and its type.\n *\n * Tests a parametric value type and returns whether it\'s equivalent to the type `T`\n * or not. If the parametric value is matched with the type `T` and there\'s not any\n * superfluous property that is not listed on the type `T`, `true` value would be\n * returned. Otherwise, the parametric value is not following the type `T` or some\n * superfluous property exists, `false` value would be returned.\n *\n * If what you want is not just knowing whether the parametric value is following the\n * type `T` or not, but throwing an exception with detailed reason, you can choose\n * {@link assertEquals} function instead. Also, if you want to know all the errors with\n * detailed reasons, {@link validateEquals} function would be useful.\n *\n * On the other hand, if you want to allow superfluous property that is not enrolled\n * to the type `T`, you can use {@link is} function instead.\n *\n * @template T Type of the input value\n * @param input A value to be tested\n * @returns Whether the parametric value is equivalent to the type `T` or not\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function equals<T>(input: unknown): input is T;\n/**\n * Validates equality between a value and its type.\n *\n * Validates a parametric value type and archives all the type errors into an\n * {@link IValidation.errors} array, if the parametric value is not following the\n * type `T` or some superfluous property that is not listed on the type `T` has been\n * found. Of course, if the parametric value is following the type `T` and no\n * superfluous property exists, the {@link IValidation.errors} array would be empty\n * and {@link IValidation.success} would have the `true` value.\n *\n * If what you want is not finding all the error, but asserting the parametric value\n * type with exception throwing, you can choose {@link assert} function instead.\n * Otherwise, you just want to know whether the parametric value is matched with the\n * type `T`, {@link is} function is the way to go.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link validateEquals} function instead.\n *\n * @template Type of the input value\n * @param input A value to be validated\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEquals<T>(input: T): IValidation<T>;\n/**\n * Validates equality between a value and its type.\n *\n * Validates a parametric value type and archives all the type errors into an\n * {@link IValidation.errors} array, if the parametric value is not following the\n * type `T` or some superfluous property that is not listed on the type `T` has been\n * found. Of course, if the parametric value is following the type `T` and no\n * superfluous property exists, the {@link IValidation.errors} array would be empty\n * and {@link IValidation.success} would have the `true` value.\n *\n * If what you want is not finding all the error, but asserting the parametric value\n * type with exception throwing, you can choose {@link assert} function instead.\n * Otherwise, you just want to know whether the parametric value is matched with the\n * type `T`, {@link is} function is the way to go.\n *\n * On the other and, if you don\'t want to allow any superfluous property that is not\n * enrolled to the type `T`, you can use {@link validateEquals} function instead.\n *\n * @template Type of the input value\n * @param input A value to be validated\n * @returns Validation result\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEquals<T>(input: unknown): IValidation<T>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Generate random data.\n *\n * Generates a random data following type the `T`.\n *\n * For reference, this `typia.random()` function generates only primitive type.\n * If there\'re some methods in the type `T` or its nested instances, those would\n * be ignored. Also, when the type `T` has a `toJSON()` method, its return type\n * would be generated instead.\n *\n * @template T Type of data to generate\n * @param generator Random data generator\n * @return Randomly generated data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function random(generator?: Partial<IRandomGenerator>): never;\n/**\n * Generate random data.\n *\n * Generates a random data following type the `T`.\n *\n * For reference, this `typia.random()` function generates only primitive type.\n * If there\'re some methods in the type `T` or its nested instances, those would\n * be ignored. Also, when the type `T` has a `toJSON()` method, its return type\n * would be generated instead.\n *\n * @template T Type of data to generate\n * @param generator Random data generator\n * @return Randomly generated data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function random<T>(generator?: Partial<IRandomGenerator>): Resolved<T>;\n/**\n * Creates a reusable {@link assert} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssert(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assert} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assert` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssert<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => T;\n/**\n * Creates a reusable {@link assertGuard} function.\n *\n * Note that, you\'ve to declare the variable type of the factory function caller\n * like below. If you don\'t declare the variable type, compilation error be thrown.\n * This is the special rule of the TypeScript compiler.\n *\n * ```typescript\n * // MUST DECLARE THE VARIABLE TYPE\n * const func: typia.AssertionGuard<number> = typia.createAssertGuard<number>();\n *\n * // IF NOT, COMPILATION ERROR BE OCCURRED\n * const func = typia.createAssertGuard<number>();\n * ```\n *\n * > *Assertions require every name in the call target to be declared with an*\n * > *explicit type annotation.*\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertGuard(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertGuard} function.\n *\n * Note that, you\'ve to declare the variable type of the factory function caller\n * like below. If you don\'t declare the variable type, compilation error be thrown.\n * This is the special rule of the TypeScript compiler.\n *\n * ```typescript\n * // MUST DECLARE THE VARIABLE TYPE\n * const func: typia.AssertionGuard<number> = typia.createAssertGuard<number>();\n *\n * // IF NOT, COMPILATION ERROR BE OCCURRED\n * const func = typia.createAssertGuard<number>();\n * ```\n *\n * > *Assertions require every name in the call target to be declared with an*\n * > *explicit type annotation.*\n *\n * @returns Nothing until you configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertGuard<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => AssertionGuard<T>;\n/**\n * Creates a reusable {@link is} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIs(): never;\n/**\n * Creates a reusable {@link is} function.\n *\n * @template T Type of the input value\n * @returns A reusable `is` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIs<T>(): (input: unknown) => input is T;\n/**\n * Creates a reusable {@link validate} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidate(): never;\n/**\n * Creates a reusable {@link validate} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validate` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidate<T>(): ((input: unknown) => IValidation<T>) & StandardSchemaV1<unknown, T>;\n/**\n * Creates a reusable {@link assertEquals} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertEquals(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertEquals} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertEquals` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertEquals<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => T;\n/**\n * Creates a reusable {@link assertGuardEquals} function.\n *\n * Note that, you\'ve to declare the variable type of the factory function caller\n * like below. If you don\'t declare the variable type, compilation error be thrown.\n * This is the special rule of the TypeScript compiler.\n *\n * ```typescript\n * // MUST DECLARE THE VARIABLE TYPE\n * const func: typia.AssertionGuard<number> = typia.createAssertGuardEquals<number>();\n *\n * // IF NOT, COMPILATION ERROR BE OCCURRED\n * const func = typia.createAssertGuardEquals<number>();\n * ```\n *\n * > *Assertions require every name in the call target to be declared with an*\n * > *explicit type annotation.*\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertGuardEquals(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertGuardEquals} function.\n *\n * Note that, you\'ve to declare the variable type of the factory function caller\n * like below. If you don\'t declare the variable type, compilation error be thrown.\n * This is the special rule of the TypeScript compiler.\n *\n * ```typescript\n * // MUST DECLARE THE VARIABLE TYPE\n * const func: typia.AssertionGuard<number> = typia.createAssertGuardEquals<number>();\n *\n * // IF NOT, COMPILATION ERROR BE OCCURRED\n * const func = typia.createAssertGuardEquals<number>();\n * ```\n *\n * > *Assertions require every name in the call target to be declared with an*\n * > *explicit type annotation.*\n *\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertGuardEquals<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: unknown) => AssertionGuard<T>;\n/**\n * Creates a reusable {@link equals} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createEquals(): never;\n/**\n * Creates a reusable {@link equals} function.\n *\n * @template T Type of the input value\n * @returns A reusable `equals` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createEquals<T>(): (input: unknown) => input is T;\n/**\n * Creates a reusable {@link validateEquals} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateEquals(): never;\n/**\n * Creates a reusable {@link validateEquals} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validateEquals` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateEquals<T>(): ((input: unknown) => IValidation<T>) & StandardSchemaV1<unknown, T>;\n/**\n * Creates a reusable {@link random} function.\n *\n * @danger You must configure the generic argument `T`\n * @param generator Random data generator\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createRandom(generator?: Partial<IRandomGenerator>): never;\n/**\n * Creates a reusable {@link random} function.\n *\n * @template T Type of the input value\n * @param generator Random data generator\n * @returns A reusable `random` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createRandom<T>(generator?: Partial<IRandomGenerator>): () => Resolved<T>;\n'],["file:///node_modules/typia/lib/notations.d.ts",'import { CamelCase } from "./CamelCase";\nimport { IValidation } from "./IValidation";\nimport { PascalCase } from "./PascalCase";\nimport { SnakeCase } from "./SnakeCase";\nimport { TypeGuardError } from "./TypeGuardError";\n/**\n * Convert to camel case.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n *\n * For reference, this `typia.notations.camel()` function does not validate the input value\n * type. It just believes that the input value is following the type `T`. Therefore,\n * if you can\'t ensure the input value type, it would be better to call one of them below:\n *\n * - {@link assertCamel}\n * - {@link isCamel}\n * - {@link validateCamel}\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Camel case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function camel<T>(input: T): CamelCase<T>;\n/**\n * Converts to camel case with type assertion.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Camel case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertCamel<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): CamelCase<T>;\n/**\n * Converts to camel case with type assertion.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Camel case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertCamel<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): CamelCase<T>;\n/**\n * Converts to camel case with type checking.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Camel case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isCamel<T>(input: T): CamelCase<T> | null;\n/**\n * Converts to camel case with type checking.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Camel case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isCamel<T>(input: unknown): CamelCase<T> | null;\n/**\n * Converts to camel case with type validation.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, camel cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with camel case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateCamel<T>(input: T): IValidation<CamelCase<T>>;\n/**\n * Converts to camel case with type validation.\n *\n * Convert every property names of nested objects to follow the camel case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, camel cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with camel case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateCamel<T>(input: unknown): IValidation<CamelCase<T>>;\n/**\n * Convert to pascal case.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n *\n * For reference, this `typia.notations.pascal()` function does not validate the input value\n * type. It just believes that the input value is following the type `T`. Therefore,\n * if you can\'t ensure the input value type, it would be better to call one of them below:\n *\n * - {@link assertPascal}\n * - {@link isPascal}\n * - {@link validatePascal}\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Pascal case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function pascal<T>(input: T): PascalCase<T>;\n/**\n * Converts to pascal case with type assertion.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Pascal case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertPascal<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): PascalCase<T>;\n/**\n * Converts to pascal case with type assertion.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Pascal case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertPascal<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): PascalCase<T>;\n/**\n * Converts to pascal case with type checking.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Pascal case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isPascal<T>(input: T): PascalCase<T> | null;\n/**\n * Converts to pascal case with type checking.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Pascal case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isPascal<T>(input: unknown): PascalCase<T> | null;\n/**\n * Converts to pascal case with type validation.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, pascal cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with pascal case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validatePascal<T>(input: T): IValidation<PascalCase<T>>;\n/**\n * Converts to pascal case with type validation.\n *\n * Convert every property names of nested objects to follow the pascal case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, pascal cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with pascal case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validatePascal<T>(input: unknown): IValidation<PascalCase<T>>;\n/**\n * Convert to snake case.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n *\n * For reference, this `typia.notations.snake()` function does not validate the input value\n * type. It just believes that the input value is following the type `T`. Therefore,\n * if you can\'t ensure the input value type, it would be better to call one of them below:\n *\n * - {@link assertSnake}\n * - {@link isSnake}\n * - {@link validateSnake}\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Snake case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function snake<T>(input: T): SnakeCase<T>;\n/**\n * Converts to snake case with type assertion.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Snake case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertSnake<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): SnakeCase<T>;\n/**\n * Converts to snake case with type assertion.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it throws {@link TypeGuardError}.\n *\n * @template T Type of the input value\n * @param input Target object\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Snake case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertSnake<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): SnakeCase<T>;\n/**\n * Converts to snake case with type checking.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Snake case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isSnake<T>(input: T): SnakeCase<T> | null;\n/**\n * Converts to snake case with type checking.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it returns `null` value instead.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Snake case object when exact type, otherwise null\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isSnake<T>(input: unknown): SnakeCase<T> | null;\n/**\n * Converts to snake case with type validation.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, snake cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with snake case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateSnake<T>(input: T): IValidation<SnakeCase<T>>;\n/**\n * Converts to snake case with type validation.\n *\n * Convert every property names of nested objects to follow the snake case convention.\n * If the input value does not follow the type `T`, it returns {@link IValidation.Failure}\n * object. Otherwise, there\'s no problem on the input value, snake cased converted data\n * would be stored in the `data` property of the output {@link IValidation.Success} object.\n *\n * @template T Type of the input value\n * @param input Target object\n * @returns Validation result with snake case object\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateSnake<T>(input: unknown): IValidation<SnakeCase<T>>;\n/**\n * Creates a reusable {@link camel} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createCamel(): never;\n/**\n * Creates a reusable {@link camel} function.\n *\n * @template T Type of the input value\n * @returns A reusable `camel` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createCamel<T>(): (input: T) => CamelCase<T>;\n/**\n * Creates a reusable {@link assertCamel} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertCamel(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertCamel} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertCamel` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertCamel<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: T) => CamelCase<T>;\n/**\n * Creates a reusable {@link isCamel} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsCamel(): never;\n/**\n * Creates a reusable {@link isCamel} function.\n *\n * @template T Type of the input value\n * @returns A reusable `isCamel` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsCamel<T>(): (input: T) => CamelCase<T> | null;\n/**\n * Creates a reusable {@link validateCamel} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateCamel(): never;\n/**\n * Creates a reusable {@link validateCamel} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validateCamel` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateCamel<T>(): (input: T) => IValidation<CamelCase<T>>;\n/**\n * Creates a reusable {@link pascal} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createPascal(): never;\n/**\n * Creates a reusable {@link pascal} function.\n *\n * @template T Type of the input value\n * @returns A reusable `pascal` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createPascal<T>(): (input: T) => PascalCase<T>;\n/**\n * Creates a reusable {@link assertPascal} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertPascal(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertPascal} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertPascal` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertPascal<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: T) => PascalCase<T>;\n/**\n * Creates a reusable {@link isPascal} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsPascal(): never;\n/**\n * Creates a reusable {@link isPascal} function.\n *\n * @template T Type of the input value\n * @returns A reusable `isPascal` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsPascal<T>(): (input: T) => PascalCase<T> | null;\n/**\n * Creates a reusable {@link validatePascal} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidatePascal(): never;\n/**\n * Creates a reusable {@link validatePascal} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validatePascal` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidatePascal<T>(): (input: T) => IValidation<PascalCase<T>>;\n/**\n * Creates a reusable {@link snake} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createSnake(): never;\n/**\n * Creates a reusable {@link snake} function.\n *\n * @template T Type of the input value\n * @returns A reusable `snake` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createSnake<T>(): (input: T) => SnakeCase<T>;\n/**\n * Creates a reusable {@link assertSnake} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertSnake(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertSnake} function.\n *\n * @template T Type of the input value\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertSnake` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertSnake<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: T) => SnakeCase<T>;\n/**\n * Creates a reusable {@link isSnake} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsSnake(): never;\n/**\n * Creates a reusable {@link isSnake} function.\n *\n * @template T Type of the input value\n * @returns A reusable `isSnake` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsSnake<T>(): (input: T) => SnakeCase<T> | null;\n/**\n * Creates a reusable {@link validateSnake} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until be configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateSnake(): never;\n/**\n * Creates a reusable {@link validateSnake} function.\n *\n * @template T Type of the input value\n * @returns A reusable `validateSnake` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateSnake<T>(): (input: T) => IValidation<SnakeCase<T>>;\n'],["file:///node_modules/typia/lib/programmers/AssertProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "./FeatureProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nexport declare namespace AssertProgrammer {\n    interface IConfig {\n        equals: boolean;\n        guard: boolean;\n    }\n    interface IProps extends IProgrammerProps {\n        config: IConfig;\n    }\n    const decompose: (props: {\n        config: IConfig;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n    namespace Guardian {\n        const identifier: () => ts.Identifier;\n        const parameter: (props: {\n            context: ITypiaContext;\n            init: ts.Expression | undefined;\n        }) => ts.ParameterDeclaration;\n        const type: (context: ITypiaContext) => ts.FunctionTypeNode;\n    }\n}\n'],["file:///node_modules/typia/lib/programmers/CheckerProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataCollection } from "../factories/MetadataCollection";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "./FeatureProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nimport { ICheckEntry } from "./helpers/ICheckEntry";\nimport { IExpressionEntry } from "./helpers/IExpressionEntry";\nexport declare namespace CheckerProgrammer {\n    interface IConfig {\n        prefix: string;\n        path: boolean;\n        trace: boolean;\n        equals: boolean;\n        numeric: boolean;\n        addition?: () => ts.Statement[];\n        decoder?: (props: {\n            metadata: Metadata;\n            input: ts.Expression;\n            explore: IExplore;\n        }) => ts.Expression;\n        combiner: IConfig.Combiner;\n        atomist: (props: {\n            entry: ICheckEntry;\n            input: ts.Expression;\n            explore: IExplore;\n        }) => ts.Expression;\n        joiner: IConfig.IJoiner;\n        success: ts.Expression;\n    }\n    namespace IConfig {\n        interface Combiner {\n            (props: {\n                explore: IExplore;\n                logic: "and" | "or";\n                input: ts.Expression;\n                binaries: IBinary[];\n                expected: string;\n            }): ts.Expression;\n        }\n        interface IJoiner {\n            object(props: {\n                input: ts.Expression;\n                entries: IExpressionEntry<ts.Expression>[];\n            }): ts.Expression;\n            array(props: {\n                input: ts.Expression;\n                arrow: ts.ArrowFunction;\n            }): ts.Expression;\n            tuple?: undefined | ((exprs: ts.Expression[]) => ts.Expression);\n            failure(props: {\n                input: ts.Expression;\n                expected: string;\n                explore?: undefined | FeatureProgrammer.IExplore;\n            }): ts.Expression;\n            is?(expression: ts.Expression): ts.Expression;\n            required?(exp: ts.Expression): ts.Expression;\n            full?: undefined | ((props: {\n                condition: ts.Expression;\n                input: ts.Expression;\n                expected: string;\n                explore: IExplore;\n            }) => ts.Expression);\n        }\n    }\n    type IExplore = FeatureProgrammer.IExplore;\n    interface IBinary {\n        expression: ts.Expression;\n        combined: boolean;\n    }\n    const compose: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IComposed;\n    const write: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name?: string;\n    }) => ts.ArrowFunction;\n    const write_object_functions: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const write_union_functions: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const write_array_functions: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const write_tuple_functions: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const decode: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        input: ts.Expression;\n        metadata: Metadata;\n        explore: IExplore;\n    }) => ts.Expression;\n    const decode_object: (props: {\n        config: IConfig;\n        functor: FunctionProgrammer;\n        object: MetadataObjectType;\n        input: ts.Expression;\n        explore: IExplore;\n    }) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/FeatureProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataCollection } from "../factories/MetadataCollection";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataArray } from "../schemas/metadata/MetadataArray";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { CheckerProgrammer } from "./CheckerProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nimport { IExpressionEntry } from "./helpers/IExpressionEntry";\nexport declare namespace FeatureProgrammer {\n    interface IConfig<Output extends ts.ConciseBody = ts.ConciseBody> {\n        types: IConfig.ITypes;\n        /**\n         * Prefix name of internal functions for specific types.\n         */\n        prefix: string;\n        /**\n         * Whether to archive access path or not.\n         */\n        path: boolean;\n        /**\n         * Whether to trace exception or not.\n         */\n        trace: boolean;\n        addition?: undefined | ((collection: MetadataCollection) => ts.Statement[]);\n        /**\n         * Initializer of metadata.\n         */\n        initializer: (props: {\n            context: ITypiaContext;\n            functor: FunctionProgrammer;\n            type: ts.Type;\n        }) => {\n            collection: MetadataCollection;\n            metadata: Metadata;\n        };\n        /**\n         * Decoder, station of every types.\n         */\n        decoder: (props: {\n            metadata: Metadata;\n            input: ts.Expression;\n            explore: IExplore;\n        }) => Output;\n        /**\n         * Object configurator.\n         */\n        objector: IConfig.IObjector<Output>;\n        /**\n         * Generator of functions for object types.\n         */\n        generator: IConfig.IGenerator;\n    }\n    namespace IConfig {\n        interface ITypes {\n            input: (type: ts.Type, name?: undefined | string) => ts.TypeNode;\n            output: (type: ts.Type, name?: undefined | string) => ts.TypeNode;\n        }\n        interface IObjector<Output extends ts.ConciseBody = ts.ConciseBody> {\n            /**\n             * Type checker when union object type comes.\n             */\n            checker: (props: {\n                metadata: Metadata;\n                input: ts.Expression;\n                explore: IExplore;\n            }) => ts.Expression;\n            /**\n             * Decoder, function call expression generator of specific typed objects.\n             */\n            decoder: (props: {\n                input: ts.Expression;\n                object: MetadataObjectType;\n                explore: IExplore;\n            }) => ts.Expression;\n            /**\n             * Joiner of expressions from properties.\n             */\n            joiner(props: {\n                entries: IExpressionEntry<Output>[];\n                input?: ts.Expression;\n                object?: MetadataObjectType;\n            }): ts.ConciseBody;\n            /**\n             * Union type specificator.\n             *\n             * Expression of an algorithm specifying object type and calling\n             * the `decoder` function of the specified object type.\n             */\n            unionizer: (props: {\n                objects: MetadataObjectType[];\n                input: ts.Expression;\n                explore: IExplore;\n            }) => ts.Expression;\n            /**\n             * Handler of union type specification failure.\n             *\n             * @param props Properties of failure\n             * @returns Statement of failure\n             */\n            failure(props: {\n                input: ts.Expression;\n                expected: string;\n                explore?: undefined | IExplore;\n            }): ts.Statement;\n            /**\n             * Transformer of type checking expression by discrimination.\n             *\n             * When an object type has been specified by a discrimination without full\n             * iteration, the `unionizer` will decode the object instance after\n             * the last type checking.\n             *\n             * In such circumtance, you can transform the last type checking function.\n             *\n             * @param exp Current expression about type checking\n             * @returns Transformed expression\n             * @deprecated\n             */\n            is?: undefined | ((exp: ts.Expression) => ts.Expression);\n            /**\n             * Transformer of non-undefined type checking by discrimination.\n             *\n             * When specifying an union type of objects, `typia` tries to find\n             * discrimination way just by checking only one property type.\n             * If succeeded to find the discrimination way, `typia` will check the target\n             * property type and in the checking, non-undefined type checking would be\n             * done.\n             *\n             * In such process, you can transform the non-undefined type checking.\n             *\n             * @param exp\n             * @returns Transformed expression\n             * @deprecated\n             */\n            required?: undefined | ((exp: ts.Expression) => ts.Expression);\n            /**\n             * Condition wrapper when unable to specify any object type.\n             *\n             * When failed to specify an object type through discrimination, full\n             * iteration type checking would be happened. In such circumstance, you\n             * can wrap the condition with additional function.\n             *\n             * @param props Properties of condition\n             * @returns The wrapper expression\n             */\n            full?: undefined | ((props: {\n                condition: ts.Expression;\n                input: ts.Expression;\n                expected: string;\n                explore: IExplore;\n            }) => ts.Expression);\n            /**\n             * Return type.\n             */\n            type?: undefined | ts.TypeNode;\n        }\n        interface IGenerator {\n            objects?: undefined | ((collection: MetadataCollection) => ts.VariableStatement[]);\n            unions?: undefined | ((collection: MetadataCollection) => ts.VariableStatement[]);\n            arrays: (collection: MetadataCollection) => ts.VariableStatement[];\n            tuples: (collection: MetadataCollection) => ts.VariableStatement[];\n        }\n    }\n    interface IExplore {\n        tracable: boolean;\n        source: "top" | "function";\n        from: "top" | "array" | "object";\n        postfix: string;\n        start?: undefined | number;\n    }\n    type Decoder<T, Output extends ts.ConciseBody = ts.ConciseBody> = (props: {\n        input: ts.Expression;\n        definition: T;\n        explore: IExplore;\n    }) => Output;\n    interface IComposed {\n        body: ts.ConciseBody;\n        parameters: ts.ParameterDeclaration[];\n        functions: Record<string, ts.VariableStatement>;\n        statements: ts.Statement[];\n        response: ts.TypeNode;\n    }\n    interface IDecomposed {\n        functions: Record<string, ts.VariableStatement>;\n        statements: ts.Statement[];\n        arrow: ts.ArrowFunction;\n    }\n    const compose: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => IComposed;\n    const writeDecomposed: (props: {\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        result: IDecomposed;\n        returnWrapper?: (arrow: ts.ArrowFunction) => ts.Expression;\n    }) => ts.CallExpression;\n    const write: (props: {\n        context: ITypiaContext;\n        config: IConfig;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name?: string | undefined;\n    }) => ts.ArrowFunction;\n    const write_object_functions: (props: {\n        config: IConfig;\n        context: ITypiaContext;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const write_union_functions: (props: {\n        config: IConfig;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const decode_array: (props: {\n        config: Pick<IConfig, "trace" | "path" | "decoder" | "prefix">;\n        functor: FunctionProgrammer;\n        combiner: (next: {\n            input: ts.Expression;\n            arrow: ts.ArrowFunction;\n        }) => ts.Expression;\n        array: MetadataArray;\n        input: ts.Expression;\n        explore: IExplore;\n    }) => ts.Expression;\n    const decode_object: (props: {\n        config: Pick<IConfig, "trace" | "path" | "prefix">;\n        functor: FunctionProgrammer;\n        object: MetadataObjectType;\n        input: ts.Expression;\n        explore: IExplore;\n    }) => ts.CallExpression;\n    const index: (props: {\n        start: number | null;\n        postfix: string;\n        rand: string;\n    }) => string;\n    const argumentsArray: (props: {\n        config: Pick<IConfig, "path" | "trace">;\n        input: ts.Expression;\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.Expression[];\n    const parameterDeclarations: (props: {\n        config: Pick<CheckerProgrammer.IConfig, "path" | "trace">;\n        type: ts.TypeNode;\n        input: ts.Identifier;\n    }) => ts.ParameterDeclaration[];\n}\n'],["file:///node_modules/typia/lib/programmers/ImportProgrammer.d.ts",'import ts from "typescript";\nexport declare class ImportProgrammer {\n    private readonly assets_;\n    private readonly options_;\n    constructor(options?: Partial<ImportProgrammer.IOptions>);\n    default(props: ImportProgrammer.IDefault): ts.Identifier;\n    instance(props: ImportProgrammer.IInstance): ts.Identifier;\n    namespace(props: ImportProgrammer.INamespace): ts.Identifier;\n    type(props: {\n        file: string;\n        name: string | ts.EntityName;\n        arguments?: ts.TypeNode[];\n    }): ts.ImportTypeNode;\n    private alias;\n    toStatements(): ts.ImportDeclaration[];\n}\nexport declare namespace ImportProgrammer {\n    interface IOptions {\n        internalPrefix: string;\n    }\n    interface IDefault {\n        file: string;\n        name: string;\n        type: boolean;\n    }\n    interface IInstance {\n        file: string;\n        name: string;\n        alias: string | null;\n    }\n    interface INamespace {\n        file: string;\n        name: string;\n    }\n}\n'],["file:///node_modules/typia/lib/programmers/IsProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataCollection } from "../factories/MetadataCollection";\nimport { Metadata } from "../schemas/metadata/Metadata";\nimport { MetadataObjectType } from "../schemas/metadata/MetadataObjectType";\nimport { IProgrammerProps } from "../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { CheckerProgrammer } from "./CheckerProgrammer";\nimport { FeatureProgrammer } from "./FeatureProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nimport { IExpressionEntry } from "./helpers/IExpressionEntry";\nexport declare namespace IsProgrammer {\n    const configure: (props: {\n        options?: Partial<CONFIG.IOptions>;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n    }) => CheckerProgrammer.IConfig;\n    namespace CONFIG {\n        interface IOptions {\n            numeric: boolean;\n            undefined: boolean;\n            object: (props: {\n                input: ts.Expression;\n                entries: IExpressionEntry<ts.Expression>[];\n            }) => ts.Expression;\n        }\n    }\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps extends IProgrammerProps {\n        config: IConfig;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        config: IConfig;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n    const write_function_statements: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        collection: MetadataCollection;\n    }) => ts.VariableStatement[];\n    const decode: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        metadata: Metadata;\n        input: ts.Expression;\n        explore: CheckerProgrammer.IExplore;\n    }) => ts.Expression;\n    const decode_object: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        object: MetadataObjectType;\n        input: ts.Expression;\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.CallExpression;\n    const decode_to_json: (props: {\n        input: ts.Expression;\n        checkNull: boolean;\n    }) => ts.Expression;\n    const decode_functional: (input: ts.Expression) => ts.BinaryExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/RandomProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "./FeatureProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nexport declare namespace RandomProgrammer {\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        type: ts.Type;\n        name: string | undefined;\n        init: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init: ts.Expression | undefined;\n    }\n    const decompose: (props: IDecomposeProps) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/TypiaProgrammer.d.ts","export declare namespace TypiaProgrammer {\n    interface ILocation {\n        input: string;\n        output: string;\n        project: string;\n    }\n    const build: (location: TypiaProgrammer.ILocation) => Promise<void>;\n}\n"],["file:///node_modules/typia/lib/programmers/ValidateProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "./FeatureProgrammer";\nimport { FunctionProgrammer } from "./helpers/FunctionProgrammer";\nexport declare namespace ValidateProgrammer {\n    interface IConfig {\n        equals: boolean;\n        standardSchema?: boolean;\n    }\n    interface IProps extends IProgrammerProps {\n        config: IConfig;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        config: IConfig;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalAssertFunctionProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalAssertFunctionProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const errorFactoryWrapper: (props: {\n        context: ITypiaContext;\n        parameters: readonly ts.ParameterDeclaration[];\n        init: ts.Expression | undefined;\n    }) => {\n        name: string;\n        variable: ts.VariableStatement;\n    };\n    const hookPath: (props: {\n        wrapper: string;\n        replacer: string;\n    }) => ts.ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalAssertParametersProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalAssertParametersProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        config: IConfig;\n        modulo: ts.LeftHandSideExpression;\n        parameters: readonly ts.ParameterDeclaration[];\n        wrapper: string;\n    }\n    interface IDecomposeOutput {\n        functions: ts.Statement[];\n        expressions: ts.Expression[];\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalAssertReturnProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionAssertReturnProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        expression: ts.Expression;\n        declaration: ts.FunctionDeclaration;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        expression: ts.Expression;\n        declaration: ts.FunctionDeclaration;\n        wrapper: string;\n    }\n    interface IDecomposeOutput {\n        async: boolean;\n        functions: ts.Statement[];\n        value: ts.Expression;\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalIsFunctionProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalIsFunctionProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const getReturnTypeNode: (props: {\n        declaration: ts.FunctionDeclaration;\n        async: boolean;\n    }) => ts.TypeNode | undefined;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalIsParametersProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalIsParametersProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        config: IConfig;\n        modulo: ts.LeftHandSideExpression;\n        declaration: ts.FunctionDeclaration;\n    }\n    interface IDecomposeOutput {\n        functions: ts.Statement[];\n        statements: ts.Statement[];\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalIsReturnProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalIsReturnProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        expression: ts.Expression;\n        declaration: ts.FunctionDeclaration;\n    }\n    interface IDecomposeOutput {\n        async: boolean;\n        functions: ts.Statement[];\n        statements: ts.Statement[];\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalValidateFunctionProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalValidateFunctionProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const hookErrors: (props: {\n        expression: ts.Expression;\n        replacer: ts.Expression;\n    }) => ts.CallExpression;\n    const getReturnTypeNode: (props: {\n        context: ITypiaContext;\n        declaration: ts.FunctionDeclaration;\n        async: boolean;\n    }) => ts.TypeNode | undefined;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalValidateParametersProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalValidateParametersProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n    }\n    interface IDecomposeOutput {\n        functions: ts.Statement[];\n        statements: ts.Statement[];\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/FunctionalValidateReturnProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace FunctionalValidateReturnProgrammer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface IProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        declaration: ts.FunctionDeclaration;\n        expression: ts.Expression;\n        init?: ts.Expression | undefined;\n    }\n    interface IDecomposeProps {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        config: IConfig;\n        expression: ts.Expression;\n        declaration: ts.FunctionDeclaration;\n    }\n    interface IDecomposeOutput {\n        async: boolean;\n        functions: ts.Statement[];\n        statements: ts.Statement[];\n    }\n    const write: (props: IProps) => ts.CallExpression;\n    const decompose: (props: IDecomposeProps) => IDecomposeOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/functional/internal/FunctionalGeneralProgrammer.d.ts",'import ts from "typescript";\nexport declare namespace FunctionalGeneralProgrammer {\n    interface IProps {\n        checker: ts.TypeChecker;\n        declaration: ts.FunctionDeclaration | ts.SignatureDeclaration;\n    }\n    interface IOutput {\n        type: ts.Type;\n        async: boolean;\n    }\n    const getReturnType: (props: IProps) => IOutput;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/AtomicPredicator.d.ts",'import { Metadata } from "../../schemas/metadata/Metadata";\nimport { Atomic } from "../../typings/Atomic";\nexport declare namespace AtomicPredicator {\n    const constant: (props: {\n        metadata: Metadata;\n        name: Atomic.Literal;\n    }) => boolean;\n    const atomic: (props: {\n        metadata: Metadata;\n        name: Atomic.Literal;\n    }) => boolean;\n    const native: (name: string) => boolean;\n    const template: (metadata: Metadata) => boolean;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/CloneJoiner.d.ts",'import ts from "typescript";\nimport { IExpressionEntry } from "./IExpressionEntry";\nexport declare namespace CloneJoiner {\n    const object: (props: {\n        input: ts.Expression;\n        entries: IExpressionEntry<ts.Expression>[];\n    }) => ts.ConciseBody;\n    const tuple: (props: {\n        elements: ts.Expression[];\n        rest: ts.Expression | null;\n    }) => ts.Expression;\n    const array: (props: {\n        input: ts.Expression;\n        arrow: ts.Expression;\n    }) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/FunctionProgrammer.d.ts",'import ts from "typescript";\nexport declare class FunctionProgrammer {\n    readonly method: string;\n    private readonly local_;\n    private readonly unions_;\n    private readonly variables_;\n    private sequence_;\n    constructor(method: string);\n    useLocal(name: string): string;\n    hasLocal(name: string): boolean;\n    declare(includeUnions?: boolean): ts.Statement[];\n    declareUnions(): ts.Statement[];\n    increment(): number;\n    emplaceUnion(prefix: string, name: string, factory: () => ts.ArrowFunction): string;\n    emplaceVariable(name: string, value: ts.Expression): ts.Expression;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/HttpMetadataUtil.d.ts",'import { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace HttpMetadataUtil {\n    const atomics: (metadata: Metadata) => Set<"boolean" | "bigint" | "number" | "string">;\n    const isUnion: (metadata: Metadata) => boolean;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/ICheckEntry.d.ts",'import ts from "typescript";\nexport interface ICheckEntry {\n    expected: string;\n    expression: ts.Expression | null;\n    conditions: ICheckEntry.ICondition[][];\n}\nexport declare namespace ICheckEntry {\n    interface ICondition {\n        expected: string;\n        expression: ts.Expression;\n    }\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/IExpressionEntry.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport interface IExpressionEntry<Expression extends ts.ConciseBody = ts.ConciseBody> {\n    input: ts.Expression;\n    key: Metadata;\n    meta: Metadata;\n    expression: Expression;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/NotationJoiner.d.ts",'import ts from "typescript";\nimport { IExpressionEntry } from "./IExpressionEntry";\nexport declare namespace NotationJoiner {\n    const object: (props: {\n        rename: (str: string) => string;\n        input: ts.Expression;\n        entries: IExpressionEntry<ts.Expression>[];\n    }) => ts.ConciseBody;\n    const tuple: (props: {\n        elements: ts.Expression[];\n        rest: ts.Expression | null;\n    }) => ts.Expression;\n    const array: (props: {\n        input: ts.Expression;\n        arrow: ts.Expression;\n    }) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/OptionPredicator.d.ts",'import { ITransformOptions } from "../../transformers/ITransformOptions";\nexport declare namespace OptionPredicator {\n    const numeric: (options: ITransformOptions) => boolean;\n    const functional: (options: ITransformOptions) => boolean;\n    const finite: (options: ITransformOptions) => boolean;\n    const undefined: (options: ITransformOptions) => boolean;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/ProtobufUtil.d.ts",'import { IMetadataTypeTag } from "../../schemas/metadata/IMetadataTypeTag";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { MetadataObjectType } from "../../schemas/metadata/MetadataObjectType";\nimport { ProtobufAtomic } from "../../typings/ProtobufAtomic";\nexport declare namespace ProtobufUtil {\n    const isStaticObject: (obj: MetadataObjectType) => boolean;\n    const size: (meta: Metadata) => number;\n    const getSequence: (tags: IMetadataTypeTag[]) => number | null;\n    const isUnion: (meta: Metadata) => boolean;\n    const getAtomics: (meta: Metadata, union?: Map<string, number | null>) => Map<string, number | null>;\n    const getNumbers: (meta: Metadata, union?: Map<string, number | null>) => Map<string, number | null>;\n    const getBigints: (meta: Metadata, union?: Map<string, number | null>) => Map<string, number | null>;\n    const compare: (x: ProtobufAtomic, y: ProtobufAtomic) => number;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/ProtobufWire.d.ts","export declare const enum ProtobufWire {\n    /**\n     * - integers\n     * - bool\n     * - enum\n     */\n    VARIANT = 0,\n    /**\n     * - fixed64\n     * - sfixed64\n     * - double\n     */\n    I64 = 1,\n    /**\n     * - string\n     * - bytes\n     * - mebedded messages\n     * - packed repeated fields\n     */\n    LEN = 2,\n    START_GROUP = 3,\n    END_GROUP = 4,\n    /**\n     * - fixed\n     * - sfixed32\n     * - float\n     */\n    I32 = 5\n}\n"],["file:///node_modules/typia/lib/programmers/helpers/PruneJoiner.d.ts",'import ts from "typescript";\nimport { MetadataObjectType } from "../../schemas/metadata/MetadataObjectType";\nimport { IExpressionEntry } from "./IExpressionEntry";\nexport declare namespace PruneJoiner {\n    const object: (props: {\n        input: ts.Expression;\n        entries: IExpressionEntry[];\n        object: MetadataObjectType;\n    }) => ts.ConciseBody;\n    const array: (props: {\n        input: ts.Expression;\n        arrow: ts.ArrowFunction;\n    }) => ts.CallExpression;\n    const tuple: (props: {\n        elements: ts.ConciseBody[];\n        rest: ts.ConciseBody | null;\n    }) => ts.Block;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/RandomJoiner.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport ts from "typescript";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { MetadataArrayType } from "../../schemas/metadata/MetadataArrayType";\nimport { MetadataObjectType } from "../../schemas/metadata/MetadataObjectType";\nexport declare namespace RandomJoiner {\n    type Decoder = (metadata: Metadata) => ts.Expression;\n    const array: (props: {\n        decode: Decoder;\n        recursive: boolean;\n        expression: ts.Expression;\n        array: MetadataArrayType;\n        schema: Omit<OpenApi.IJsonSchema.IArray, "items"> | undefined;\n    }) => ts.Expression;\n    const tuple: (props: {\n        decode: Decoder;\n        elements: Metadata[];\n    }) => ts.ArrayLiteralExpression;\n    const object: (props: {\n        decode: Decoder;\n        object: MetadataObjectType;\n    }) => ts.ConciseBody;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/StringifyJoinder.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { IExpressionEntry } from "./IExpressionEntry";\nexport declare namespace StringifyJoiner {\n    const object: (props: {\n        context: ITypiaContext;\n        entries: IExpressionEntry<ts.Expression>[];\n    }) => ts.Expression;\n    const array: (props: {\n        input: ts.Expression;\n        arrow: ts.ArrowFunction;\n    }) => ts.Expression;\n    const tuple: (props: {\n        elements: ts.Expression[];\n        rest: ts.Expression | null;\n    }) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/StringifyPredicator.d.ts",'import { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace StringifyPredicator {\n    const require_escape: (value: string) => boolean;\n    const undefindable: (metadata: Metadata) => boolean;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/UnionExplorer.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { MetadataArray } from "../../schemas/metadata/MetadataArray";\nimport { MetadataMap } from "../../schemas/metadata/MetadataMap";\nimport { MetadataObjectType } from "../../schemas/metadata/MetadataObjectType";\nimport { MetadataSet } from "../../schemas/metadata/MetadataSet";\nimport { MetadataTuple } from "../../schemas/metadata/MetadataTuple";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { check_union_array_like } from "../internal/check_union_array_like";\nexport declare namespace UnionExplorer {\n    interface Decoder<T> {\n        (props: {\n            input: ts.Expression;\n            definition: T;\n            explore: FeatureProgrammer.IExplore;\n        }): ts.Expression;\n    }\n    type ObjectCombiner = Decoder<MetadataObjectType[]>;\n    const object: (props: {\n        config: FeatureProgrammer.IConfig;\n        level?: number;\n        objects: MetadataObjectType[];\n        input: ts.Expression;\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.Expression;\n    const tuple: (props: {\n        config: check_union_array_like.IConfig<MetadataTuple, MetadataTuple>;\n        parameters: ts.ParameterDeclaration[];\n        input: ts.Expression;\n        tuples: MetadataTuple[];\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.ArrowFunction;\n    namespace tuple {\n        type IConfig = check_union_array_like.IConfig<MetadataTuple, MetadataTuple>;\n    }\n    const array: (props: {\n        config: array.IConfig;\n        parameters: ts.ParameterDeclaration[];\n        input: ts.Expression;\n        arrays: MetadataArray[];\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.ArrowFunction;\n    namespace array {\n        type IConfig = check_union_array_like.IConfig<MetadataArray, Metadata>;\n    }\n    const array_or_tuple: (props: {\n        config: array_or_tuple.IConfig;\n        parameters: ts.ParameterDeclaration[];\n        input: ts.Expression;\n        definitions: (MetadataArray | MetadataTuple)[];\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.ArrowFunction;\n    namespace array_or_tuple {\n        type IConfig = check_union_array_like.IConfig<MetadataArray | MetadataTuple, Metadata | MetadataTuple>;\n    }\n    const set: (props: {\n        config: set.IConfig;\n        parameters: ts.ParameterDeclaration[];\n        input: ts.Expression;\n        sets: MetadataSet[];\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.ArrowFunction;\n    namespace set {\n        type IConfig = check_union_array_like.IConfig<MetadataArray, Metadata>;\n    }\n    const map: (props: {\n        config: map.IConfig;\n        parameters: ts.ParameterDeclaration[];\n        input: ts.Expression;\n        maps: MetadataMap[];\n        explore: FeatureProgrammer.IExplore;\n    }) => ts.ArrowFunction;\n    namespace map {\n        type IConfig = check_union_array_like.IConfig<MetadataArray, [\n            Metadata,\n            Metadata\n        ]>;\n    }\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/UnionPredicator.d.ts",'import { MetadataObjectType } from "../../schemas/metadata/MetadataObjectType";\nimport { MetadataProperty } from "../../schemas/metadata/MetadataProperty";\nexport declare namespace UnionPredicator {\n    interface ISpecialized {\n        index: number;\n        object: MetadataObjectType;\n        property: MetadataProperty;\n        neighbor: boolean;\n    }\n    const object: (objects: MetadataObjectType[]) => Array<ISpecialized>;\n}\n'],["file:///node_modules/typia/lib/programmers/helpers/disable_function_programmer_declare.d.ts",'import { FunctionProgrammer } from "./FunctionProgrammer";\nexport declare const disable_function_programmer_declare: (functor: FunctionProgrammer) => FunctionProgrammer;\n'],["file:///node_modules/typia/lib/programmers/http/HttpAssertFormDataProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpAssertFormDataProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpAssertHeadersProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpAssertHeadersProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpAssertQueryProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpAssertQueryProgrammer {\n    interface IProps extends IProgrammerProps {\n        allowOptional?: boolean;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n        allowOptional: boolean;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpFormDataProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataFactory } from "../../factories/MetadataFactory";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpFormDataProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n    const validate: (meta: Metadata, explore: MetadataFactory.IExplore) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpHeadersProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataFactory } from "../../factories/MetadataFactory";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpHeadersProgrammer {\n    const INPUT_TYPE = "Record<string, string | string[] | undefined>";\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n    const validate: (metadata: Metadata, explore: MetadataFactory.IExplore) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpIsFormDataProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpIsFormDataProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpIsHeadersProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpIsHeadersProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpIsQueryProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpIsQueryProgrammer {\n    interface IProps extends IProgrammerProps {\n        allowOptional?: boolean;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        allowOptional: boolean;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpParameterProgrammer.d.ts",'import ts from "typescript";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nexport declare namespace HttpParameterProgrammer {\n    const write: (props: IProgrammerProps) => ts.ArrowFunction;\n    const validate: (meta: Metadata) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpQueryProgrammer.d.ts",'import ts from "typescript";\nimport { MetadataFactory } from "../../factories/MetadataFactory";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpQueryProgrammer {\n    interface IProps extends IProgrammerProps {\n        allowOptional?: boolean;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        allowOptional: boolean;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n    const validate: (meta: Metadata, explore: MetadataFactory.IExplore, allowOptional?: boolean) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpValidateFormDataProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpValidateFormDataProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpValidateHeadersProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpValidateHeadersProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/http/HttpValidateQueryProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace HttpValidateQueryProgrammer {\n    interface IProps extends IProgrammerProps {\n        allowOptional?: boolean;\n    }\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        allowOptional: boolean;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/internal/check_array_length.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_bigint.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_dynamic_key.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_dynamic_properties.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_everything.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_native.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_number.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_object.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_string.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_template.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/check_union_array_like.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/decode_union_object.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/feature_object_entries.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/json_schema_alias.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataAlias } from "../../schemas/metadata/MetadataAlias";\nexport declare const json_schema_alias: <BlockNever extends boolean>(props: {\n    blockNever: BlockNever;\n    components: OpenApi.IComponents;\n    alias: MetadataAlias;\n}) => OpenApi.IJsonSchema.IReference[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_array.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataArray } from "../../schemas/metadata/MetadataArray";\nexport declare const json_schema_array: (props: {\n    components: OpenApi.IComponents;\n    array: MetadataArray;\n}) => Array<OpenApi.IJsonSchema.IArray | OpenApi.IJsonSchema.IReference>;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_bigint.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataAtomic } from "../../schemas/metadata/MetadataAtomic";\nexport declare const json_schema_bigint: (atomic: MetadataAtomic) => OpenApi.IJsonSchema.IInteger[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_boolean.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataAtomic } from "../../schemas/metadata/MetadataAtomic";\nexport declare const json_schema_boolean: (atomic: MetadataAtomic) => OpenApi.IJsonSchema.IBoolean[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_constant.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataConstant } from "../../schemas/metadata/MetadataConstant";\nexport declare const json_schema_constant: (constant: MetadataConstant) => OpenApi.IJsonSchema.IConstant[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_description.d.ts",'import { IJsDocTagInfo } from "../../schemas/metadata/IJsDocTagInfo";\nexport declare const json_schema_description: (props: {\n    description?: string | null | undefined;\n    jsDocTags?: IJsDocTagInfo[];\n}) => string | undefined;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_discriminator.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare const json_schema_discriminator: (metadata: Metadata) => OpenApi.IJsonSchema.IOneOf.IDiscriminator | undefined;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_escaped.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/json_schema_native.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataNative } from "../../schemas/metadata/MetadataNative";\nexport declare const json_schema_native: (props: {\n    components: OpenApi.IComponents;\n    native: MetadataNative;\n}) => OpenApi.IJsonSchema[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_number.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataAtomic } from "../../schemas/metadata/MetadataAtomic";\nexport declare const json_schema_number: (atomic: MetadataAtomic) => Array<OpenApi.IJsonSchema.IInteger | OpenApi.IJsonSchema.INumber>;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_object.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/json_schema_plugin.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { IMetadataTypeTag } from "../../schemas/metadata/IMetadataTypeTag";\nexport declare const json_schema_plugin: <Schema extends OpenApi.IJsonSchema>(props: {\n    schema: Schema;\n    tags: IMetadataTypeTag[][];\n}) => Schema[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_station.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare const json_schema_station: <BlockNever extends boolean>(props: {\n    blockNever: BlockNever;\n    components: OpenApi.IComponents;\n    attribute: OpenApi.IJsonSchema.__IAttribute;\n    metadata: Metadata;\n}) => BlockNever extends true ? OpenApi.IJsonSchema | null : OpenApi.IJsonSchema;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_string.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataAtomic } from "../../schemas/metadata/MetadataAtomic";\nexport declare const json_schema_string: (atomic: MetadataAtomic) => OpenApi.IJsonSchema[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_template.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare const json_schema_templates: (metadata: Metadata) => OpenApi.IJsonSchema[];\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_title.d.ts",'import { IJsDocTagInfo } from "../../schemas/metadata/IJsDocTagInfo";\nexport declare const json_schema_title: (schema: {\n    description?: string | null | undefined;\n    jsDocTags?: IJsDocTagInfo[] | undefined;\n}) => string | undefined;\n'],["file:///node_modules/typia/lib/programmers/internal/json_schema_tuple.d.ts",'import { OpenApi } from "@samchon/openapi";\nimport { MetadataTuple } from "../../schemas/metadata/MetadataTuple";\nexport declare const json_schema_tuple: (props: {\n    components: OpenApi.IComponents;\n    tuple: MetadataTuple;\n}) => OpenApi.IJsonSchema.ITuple;\n'],["file:///node_modules/typia/lib/programmers/internal/metadata_to_pattern.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/postfix_of_tuple.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/prune_object_properties.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/stringify_dynamic_properties.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/stringify_native.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/stringify_regular_properties.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/template_to_pattern.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/internal/wrap_metadata_rest_tuple.d.ts","export {};\n"],["file:///node_modules/typia/lib/programmers/json/JsonApplicationProgrammer.d.ts",'import { MetadataFactory } from "../../factories/MetadataFactory";\nimport { __IJsonApplication } from "../../schemas/json/__IJsonApplication";\nimport { IJsDocTagInfo } from "../../schemas/metadata/IJsDocTagInfo";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { MetadataProperty } from "../../schemas/metadata/MetadataProperty";\nexport declare namespace JsonApplicationProgrammer {\n    const validate: (metadata: Metadata, explore: MetadataFactory.IExplore) => string[];\n    const write: <Version extends "3.0" | "3.1">(props: {\n        version: Version;\n        metadata: Metadata;\n        filter?: (prop: MetadataProperty) => boolean;\n    }) => __IJsonApplication<Version>;\n    const writeDescription: <Kind extends "summary" | "title">(props: {\n        description: string | null;\n        jsDocTags: IJsDocTagInfo[];\n        kind: Kind;\n    }) => Kind extends "summary" ? {\n        summary?: string;\n        description?: string;\n    } : {\n        title?: string;\n        description?: string;\n    };\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonAssertParseProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonAssertParseProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonAssertStringifyProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonAssertStringifyProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonIsParseProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonIsParseProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonIsStringifyProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonIsStringifyProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonSchemaProgrammer.d.ts",'import { IJsonSchemaUnit } from "../../schemas/json/IJsonSchemaUnit";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace JsonSchemaProgrammer {\n    const validate: (metadata: Metadata) => string[];\n    const write: <Version extends "3.0" | "3.1">(props: {\n        version: Version;\n        metadata: Metadata;\n    }) => IJsonSchemaUnit<Version>;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonSchemasProgrammer.d.ts",'import { IJsonSchemaCollection } from "../../schemas/json/IJsonSchemaCollection";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace JsonSchemasProgrammer {\n    const validate: (metadata: Metadata) => string[];\n    const write: <Version extends "3.0" | "3.1">(props: {\n        version: Version;\n        metadatas: Array<Metadata>;\n    }) => IJsonSchemaCollection<Version>;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonStringifyProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonStringifyProgrammer {\n    const decompose: (props: {\n        validated: boolean;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonValidateParseProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonValidateParseProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/json/JsonValidateStringifyProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace JsonValidateStringifyProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/llm/LlmApplicationProgrammer.d.ts",'import { ILlmApplication, ILlmSchema } from "@samchon/openapi";\nimport ts from "typescript";\nimport { MetadataFactory } from "../../factories/MetadataFactory";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace LlmApplicationProgrammer {\n    const validate: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n    }) => (metadata: Metadata, explore: MetadataFactory.IExplore) => string[];\n    const write: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        metadata: Metadata;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n        name?: string;\n    }) => ILlmApplication<Model>;\n}\n'],["file:///node_modules/typia/lib/programmers/llm/LlmModelPredicator.d.ts",'import { ILlmSchema } from "@samchon/openapi";\nimport ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace LlmModelPredicator {\n    const getConfig: (props: {\n        context: ITypiaContext;\n        method: string;\n        model: ILlmSchema.Model;\n        node: ts.TypeNode | undefined;\n    }) => Partial<ILlmSchema.ModelConfig[ILlmSchema.Model]> | undefined;\n    const getModel: (props: {\n        checker: ts.TypeChecker;\n        method: string;\n        node: ts.TypeNode | undefined;\n    }) => ILlmSchema.Model;\n}\n'],["file:///node_modules/typia/lib/programmers/llm/LlmParametersProgrammer.d.ts",'import { ILlmSchema } from "@samchon/openapi";\nimport { MetadataFactory } from "../../factories/MetadataFactory";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace LlmParametersProgrammer {\n    const write: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        metadata: Metadata;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n    }) => ILlmSchema.ModelParameters[Model];\n    const validate: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n    }) => (metadata: Metadata, explore: MetadataFactory.IExplore) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/llm/LlmSchemaProgrammer.d.ts",'import { ILlmSchema } from "@samchon/openapi";\nimport { Metadata } from "../../schemas/metadata/Metadata";\nexport declare namespace LlmSchemaProgrammer {\n    interface IOutput<Model extends ILlmSchema.Model> {\n        model: Model;\n        schema: ILlmSchema.ModelSchema[Model];\n        $defs: Record<string, ILlmSchema.ModelSchema[Model]>;\n    }\n    const write: <Model extends ILlmSchema.Model>(props: {\n        model: Model;\n        metadata: Metadata;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n    }) => IOutput<Model>;\n    const validate: <Model extends ILlmSchema.Model>(props: {\n        model: ILlmSchema.Model;\n        config?: Partial<ILlmSchema.ModelConfig[Model]>;\n    }) => (metadata: Metadata) => string[];\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscAssertCloneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscAssertCloneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscAssertPruneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscAssertPruneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscCloneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscCloneProgrammer {\n    const decompose: (props: {\n        validated: boolean;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscIsCloneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscIsCloneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscIsPruneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscIsPruneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscLiteralsProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace MiscLiteralsProgrammer {\n    interface IProps {\n        context: ITypiaContext;\n        type: ts.Type;\n    }\n    const write: (props: IProps) => ts.AsExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscPruneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscPruneProgrammer {\n    const decompose: (props: {\n        validated: boolean;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscValidateCloneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscValidateCloneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/misc/MiscValidatePruneProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace MiscValidatePruneProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/notations/NotationAssertGeneralProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace NotationAssertGeneralProgrammer {\n    interface IProps extends IProgrammerProps {\n        rename: (str: string) => string;\n    }\n    const decompose: (props: {\n        rename: (str: string) => string;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/notations/NotationGeneralProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace NotationGeneralProgrammer {\n    interface IProps extends IProgrammerProps {\n        rename: (str: string) => string;\n    }\n    const returnType: (props: {\n        rename: (str: string) => string;\n        context: ITypiaContext;\n        type: string;\n    }) => ts.ImportTypeNode;\n    const decompose: (props: {\n        rename: (str: string) => string;\n        validated: boolean;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/notations/NotationIsGeneralProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace NotationIsGeneralProgrammer {\n    interface IProps extends IProgrammerProps {\n        rename: (str: string) => string;\n    }\n    const decompose: (props: {\n        rename: (str: string) => string;\n        context: ITypiaContext;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/notations/NotationValidateGeneralProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace NotationValidateGeneralProgrammer {\n    interface IProps extends IProgrammerProps {\n        rename: (str: string) => string;\n    }\n    const decompose: (props: {\n        rename: (str: string) => string;\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufAssertDecodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufAssertDecodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufAssertEncodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufAssertEncodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n        init?: ts.Expression | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufDecodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufDecodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufEncodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufEncodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufIsDecodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufIsDecodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufIsEncodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufIsEncodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufMessageProgrammer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nexport declare namespace ProtobufMessageProgrammer {\n    interface IProps {\n        context: ITypiaContext;\n        type: ts.Type;\n    }\n    const write: (props: IProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufValidateDecodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufValidateDecodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/programmers/protobuf/ProtobufValidateEncodeProgrammer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../../transformers/IProgrammerProps";\nimport { ITypiaContext } from "../../transformers/ITypiaContext";\nimport { FeatureProgrammer } from "../FeatureProgrammer";\nimport { FunctionProgrammer } from "../helpers/FunctionProgrammer";\nexport declare namespace ProtobufValidateEncodeProgrammer {\n    const decompose: (props: {\n        context: ITypiaContext;\n        modulo: ts.LeftHandSideExpression;\n        functor: FunctionProgrammer;\n        type: ts.Type;\n        name: string | undefined;\n    }) => FeatureProgrammer.IDecomposed;\n    const write: (props: IProgrammerProps) => ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/protobuf.d.ts",'import { IValidation } from "./IValidation";\nimport { Resolved } from "./Resolved";\nimport { TypeGuardError } from "./TypeGuardError";\n/**\n * > You must configure the generic argument `T`.\n *\n * Protocol Buffer Message Schema.\n *\n * Creates a Protocol Buffer Message Schema from a TypeScript type. The message\n * schema would be returned as a string value, and it can be used to share with\n * other developers/languages/frameworks.\n *\n * For reference, Protocol Buffer has lots of restrictions, so that expression power\n * of Protocol Buffer is not enough strong to fully meet the TypeScript type specs.\n * In such reason, if you put a TypeScript type that is not compatible with Protocol\n * Buffer, this function would throw compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Target type\n * @returns Protocol Buffer Message Schema.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function message(): never;\n/**\n * Protocol Buffer Message Schema.\n *\n * Creates a Protocol Buffer Message Schema from a TypeScript type. The message\n * schema would be returned as a string value, and it can be used to share with\n * other developers/languages/frameworks.\n *\n * For reference, Protocol Buffer has lots of restrictions, so that expression power\n * of Protocol Buffer is not enough strong to fully meet the TypeScript type specs.\n * In such reason, if you put a TypeScript type that is not compatible with Protocol\n * Buffer, this function would throw compilation errors.\n *\n * @template T Target type\n * @returns Protocol Buffer Message Schema.\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function message<T>(): string;\n/**\n * > You must configure the generic argument `T`.\n *\n * Protocol Buffer Decoder.\n *\n * `typia.protobuf.decode()` is a function decoding a binary data of Protocol Buffer\n * format to a TypeScript instance.\n *\n * For reference, as Protocol Buffer handles binary data directly, there\'s no way\n * when `input` binary data was not encoded from the `T` typed value. In that case,\n * unexpected behavior or internal error would be occurred. Therefore, I recommend you\n * to encode binary data of Protocol Buffer from type safe encode functions like below.\n * Use {@link encode} function only when you can ensure it.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * Also, `typia` is providing type safe decoders like {@link assertDecode}, but it\n * is just for additional type validation like `number & Minimum<7>` or\n * `string & Format<"uuid">` cases, that are represented by\n * [custom tags](https://typia.io/docs/validators/tags). Thus, I repeat that,\n * you\'ve to ensure the type safety when using decoder functions.\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function decode(input: Uint8Array): never;\n/**\n * Protocol Buffer Decoder.\n *\n * `typia.protobuf.decode()` is a function decoding a binary data of Protocol Buffer\n * format to a TypeScript instance.\n *\n * For reference, as Protocol Buffer handles binary data directly, there\'s no way\n * when `input` binary data was not encoded from the `T` typed value. In that case,\n * unexpected behavior or internal error would be occurred. Therefore, I recommend you\n * to encode binary data of Protocol Buffer from type safe encode functions like below.\n * Use {@link encode} function only when you can ensure it.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * Also, `typia` is providing type safe decoders like {@link assertDecode}, but it\n * is just for additional type validation like `number & Minimum<7>` or\n * `string & Format<"uuid">` cases, that are represented by\n * [custom tags](https://typia.io/docs/validators/tags). Thus, I repeat that,\n * you\'ve to ensure the type safety when using decoder functions.\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function decode<T>(input: Uint8Array): Resolved<T>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Protocol Buffer Decoder wity type assertion, but not safe.\n *\n * `typia.protobuf.assertDecode()` is a combination function of {@link decode} and\n * {@link assert} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type assertion process. If decoded value is\n * following the type `T`, it returns the decoded value. Otherwise, it throws\n * {@link TypeGuardError} instead.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type assertion like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.assertDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertDecode(input: Uint8Array, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Protocol Buffer Decoder wity type assertion, but not safe.\n *\n * `typia.protobuf.assertDecode()` is a combination function of {@link decode} and\n * {@link assert} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type assertion process. If decoded value is\n * following the type `T`, it returns the decoded value. Otherwise, it throws\n * {@link TypeGuardError} instead.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type assertion like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.assertDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertDecode<T>(input: Uint8Array, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Resolved<T>;\n/**\n * > You must configure the generic argument `T`.\n *\n * Protocol Buffer Decoder wity type checking, but not safe.\n *\n * `typia.protobuf.isDecode()` is a combination function of {@link decode} and\n * {@link is} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type checking process. If decoded value is\n * following the type `T`, it returns the decoded value. Otherwise, it returns\n * `null` value instead.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type checking like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.isDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isDecode(input: Uint8Array): never;\n/**\n * Protocol Buffer Decoder wity type checking, but not safe.\n *\n * `typia.protobuf.isDecode()` is a combination function of {@link decode} and\n * {@link is} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type checking process. If decoded value is\n * following the type `T`, it returns the decoded value. Otherwise, it returns\n * `null` value instead.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type checking like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.isDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isDecode<T>(input: Uint8Array): Resolved<T> | null;\n/**\n * > You must configure the generic argument `T`.\n *\n * Protocol Buffer Decoder wity type validation, but not safe.\n *\n * `typia.protobuf.validateDecode()` is a combination function of {@link decode} and\n * {@link validate} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type validation process. If decoded value is\n * following the type `T`, it returns the decoded value with\n * {@link IValidation.ISuccess} typed instance. Otherwise, it returns\n * {@link IValidation.IFailure} value instead with detailed error reasons.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type validation like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.validateDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateDecode(input: Uint8Array): never;\n/**\n * Protocol Buffer Decoder wity type validation, but not safe.\n *\n * `typia.protobuf.validateDecode()` is a combination function of {@link decode} and\n * {@link validate} function. Therefore, it decodes a binary data of Protocol Buffer to\n * a TypeScript instance, and performs type validation process. If decoded value is\n * following the type `T`, it returns the decoded value with\n * {@link IValidation.ISuccess} typed instance. Otherwise, it returns\n * {@link IValidation.IFailure} value instead with detailed error reasons.\n *\n * However, note that, this validation is not always safe. It just performs additional\n * type validation like `number & Minimum<7>` or `string & Format<"uuid">` cases,\n * that are represented by [custom tags](https://typia.io/docs/validators/tags).\n * Therefore, when using `typia.protobuf.validateDecode<T>()` function, you have to\n * ensure the type safety by yourself.\n *\n * In such type safety reason, I recommend you to use type safe encode functions.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * @template T Expected type of decoded value\n * @param input Protobuf Buffer binary data\n * @returns Decoded value\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateDecode<T>(input: Uint8Array): IValidation<Resolved<T>>;\n/**\n * Protocol Buffer Encoder.\n *\n * Converts an input value to a binary data of Protocol Buffer format.\n *\n * For reference, this `typia.protobuf.encode()` does not validate the `input` value.\n * It just believes that the `input` value is valid and converts it to a binary data\n * directly. Therefore, if you can\'t ensure the `input` value type, it would better to\n * call one of below functions instead.\n *\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function encode<T>(input: T): Uint8Array;\n/**\n * Protocol Buffer Encoder with type assertion.\n *\n * `typia.protobuf.assertEncode()` is a combination function of {@link assert} and\n * {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type assertion. If `input` value is not valid, it throws\n * {@link TypeGuardError}. Otherwise, there\'s no problem on the `input` value,\n * Protocol Buffer binary data would be returned.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEncode<T>(input: T, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Uint8Array;\n/**\n * Protocol Buffer Encoder with type assertion.\n *\n * `typia.protobuf.assertEncode()` is a combination function of {@link assert} and\n * {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type assertion. If `input` value is not valid, it throws\n * {@link TypeGuardError}. Otherwise, there\'s no problem on the `input` value,\n * Protocol Buffer binary data would be returned.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link isEncode}\n *  - {@link validateEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function assertEncode<T>(input: unknown, errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): Uint8Array;\n/**\n * Protocol Buffer Encoder with type checking.\n *\n * `typia.protobuf.isEncode()` is a combination function of {@link is} and\n * {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type checking. If `input` value is not valid, it returns\n * `null` value. Otherwise, there\'s no problem on the `input` value, Protocol\n * Buffer binary data would be returned.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link assertEncode}\n *  - {@link validateEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isEncode<T>(input: T): Uint8Array | null;\n/**\n * Protocol Buffer Encoder with type checking.\n *\n * `typia.protobuf.isEncode()` is a combination function of {@link is} and\n * {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type checking. If `input` value is not valid, it returns\n * `null` value. Otherwise, there\'s no problem on the `input` value, Protocol\n * Buffer binary data would be returned.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link assertEncode}\n *  - {@link validateEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function isEncode<T>(input: unknown): Uint8Array | null;\n/**\n * Protocol Buffer Encoder with type validation.\n *\n * `typia.protobuf.validateEncode()` is a combination function of\n * {@link validation} and {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type validation. If `input` value is not valid, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise, there\'s\n * no problem on the `input` value, Protocol Buffer binary data would be stored in\n * `data` property of the output {@link IValidation.ISuccess} instance.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEncode<T>(input: T): IValidation<Uint8Array>;\n/**\n * Protocol Buffer Encoder with type validation.\n *\n * `typia.protobuf.validateEncode()` is a combination function of\n * {@link validation} and {@link encode}.\n *\n * Therefore, it converts an `input` value to a binary data of\n * Protocol Buffer, with type validation. If `input` value is not valid, it returns\n * {@link IValidation.IFailure} value with detailed error reasons. Otherwise, there\'s\n * no problem on the `input` value, Protocol Buffer binary data would be stored in\n * `data` property of the output {@link IValidation.ISuccess} instance.\n *\n * If you can trust `input` value, or want to perform other type of validation, use\n * below functions instead.\n *\n *  - {@link encode}\n *  - {@link assertEncode}\n *  - {@link isEncode}\n *\n * By the way, you know what? Expression power of Protocol Buffer is not enough strong\n * to fully meet the TypeScript type specs. In such reason, if you put a TypeScript\n * type that is not compatible with Protocol Buffer, this function would throw\n * compilation errors.\n *\n *  - [Restrictions of Protocol Buffer](https://typia.io/docs/protobuf/message/#restrictions)\n *\n * @template T Type of the value input\n * @param input A value to encode\n * @returns Encoded binary data\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function validateEncode<T>(input: unknown): IValidation<Uint8Array>;\n/**\n * Creates a reusable {@link decode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createDecode(): never;\n/**\n * Creates a reusable {@link decode} function.\n *\n * @template T Target type\n * @returns A reusable `decode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createDecode<T>(): (input: Uint8Array) => Resolved<T>;\n/**\n * Creates a reusable {@link isDecode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsDecode(): never;\n/**\n * Creates a reusable {@link isDecode} function.\n *\n * @template T Target type\n * @returns A reusable `isDecode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsDecode<T>(): (input: Uint8Array) => Resolved<T> | null;\n/**\n * Creates a reusable {@link assertDecode} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertDecode(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertDecode} function.\n *\n * @template T Target type\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertDecode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertDecode<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: Uint8Array) => Resolved<T>;\n/**\n * Creates a reusable {@link validateDecode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateDecode(): never;\n/**\n * Creates a reusable {@link validateDecode} function.\n *\n * @template T Target type\n * @returns A reusable `validateDecode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateDecode<T>(): (input: Uint8Array) => IValidation<Resolved<T>>;\n/**\n * Creates a reusable {@link encode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createEncode(): never;\n/**\n * Creates a reusable {@link encode} function.\n *\n * @template T Target type\n * @returns A reusable `encode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createEncode<T>(): (input: T) => Uint8Array;\n/**\n * Creates a reusable {@link isEncode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsEncode(): never;\n/**\n * Creates a reusable {@link isEncode} function.\n *\n * @template T Target type\n * @returns A reusable `isEncode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createIsEncode<T>(): (input: T) => Uint8Array | null;\n/**\n * Creates a reusable {@link assertEncode} function.\n *\n * @danger You must configure the generic argument `T`\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertEncode(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): never;\n/**\n * Creates a reusable {@link assertEncode} function.\n *\n * @template T Target type\n * @param errorFactory Custom error factory. Default is `TypeGuardError`\n * @returns A reusable `assertEncode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createAssertEncode<T>(errorFactory?: undefined | ((props: TypeGuardError.IProps) => Error)): (input: T) => Uint8Array;\n/**\n * Creates a reusable {@link validateEncode} function.\n *\n * @danger You must configure the generic argument `T`\n * @returns Nothing until you configure the generic argument `T`\n * @throws compile error\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateEncode(): never;\n/**\n * Creates a reusable {@link validateEncode} function.\n *\n * @template T Target type\n * @returns A reusable `validateEncode` function\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function createValidateEncode<T>(): (input: T) => IValidation<Uint8Array>;\n'],["file:///node_modules/typia/lib/reflect.d.ts",'import { IMetadataApplication } from "./schemas/metadata/IMetadataApplication";\n/**\n * > You must configure the generic argument `Types`.\n *\n * Metadata Application.\n *\n * Creates a Metadata application which contains the metadata and components.\n *\n * Note that, all of the collection types like Array, Tuple and Objects are\n * stored in the {@link IMetadataApplication.components} property. Also, alias\n * types are stored in the {@link IMetadataApplication.aliases} property, too.\n *\n * @template Types Tuple of target types\n * @returns Metadata application\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function metadata(): never;\n/**\n * Metadata Application.\n *\n * Creates a Metadata application which contains the metadata and components.\n *\n * Note that, all of the collection types like Array, Tuple and Objects are\n * stored in the {@link IMetadataApplication.components} property. Also, alias\n * types are stored in the {@link IMetadataApplication.aliases} property, too.\n *\n * @template Types Tuple of target types\n * @returns Metadata application\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport declare function metadata<Types extends unknown[]>(): IMetadataApplication;\nexport declare function name<T, Regular extends boolean = false>(): string;\nexport declare function name(): never;\n'],["file:///node_modules/typia/lib/schemas/json/IJsonApplication.d.ts",'import { IJsonSchemaCollection } from "./IJsonSchemaCollection";\n/**\n * Collection of JSON schemas.\n *\n * @deprecated Use {@link IJsonSchemaCollection} instead please.\n *             This interface type would be changed to {@link ILlmApplication} like\n *             structure in the future version (maybe next v8 major update).\n * @template Version Version of the OpenAPI specification.\n * @template Types Original TypeScript types used in the JSON schemas.\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IJsonApplication = IJsonSchemaCollection;\nexport declare namespace IJsonApplication {\n    type IV3_0 = IJsonSchemaCollection.IV3_0;\n    type IV3_1 = IJsonSchemaCollection.IV3_1;\n}\n'],["file:///node_modules/typia/lib/schemas/json/IJsonSchemaCollection.d.ts",'import type { OpenApi, OpenApiV3 } from "@samchon/openapi";\n/**\n * Collection of JSON schemas with OpenAPI specification support.\n *\n * `IJsonSchemaCollection` represents a comprehensive collection of JSON schemas\n * that can be generated from TypeScript types using the `typia.json.schemas()` function.\n * This interface supports both OpenAPI v3.0 and v3.1 specifications, with the ability\n * to automatically generate appropriate schema definitions based on the specified version.\n *\n * The collection includes:\n * - Generated JSON schemas array containing schema definitions for the specified types\n * - Reusable components that can be referenced across different schemas\n * - Version-specific formatting that adheres to either OpenAPI v3.0 or v3.1 standards\n *\n * Key differences between versions:\n * - OpenAPI v3.0: Uses {@link OpenApiV3.IJsonSchema} format with limited tuple support\n * - OpenAPI v3.1: Uses {@link OpenApi.IJsonSchema} format with full JSON Schema Draft 2020-12 compatibility\n *\n * @template Version The OpenAPI specification version to target ("3.0" or "3.1").\n *                   Defaults to "3.1" for enhanced JSON Schema compatibility.\n * @template Types   Array of original TypeScript types that were analyzed to generate\n *                   the JSON schemas. This provides type safety and traceability\n *                   back to the source TypeScript definitions.\n *\n * @example\n * ```typescript\n * // Generate schemas for OpenAPI v3.1 (default)\n * const schemas = typia.json.schemas<[User, Product]>();\n * // Type: IJsonSchemaCollection<"3.1", [User, Product]>\n *\n * // Generate schemas for OpenAPI v3.0 (Swagger compatibility)\n * const swaggerSchemas = typia.json.schemas<[User, Product], "3.0">();\n * // Type: IJsonSchemaCollection<"3.0", [User, Product]>\n * ```\n *\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IJsonSchemaCollection<Version extends "3.0" | "3.1" = "3.1", Types = unknown[]> = Version extends "3.0" ? IJsonSchemaCollection.IV3_0<Types> : IJsonSchemaCollection.IV3_1<Types>;\nexport declare namespace IJsonSchemaCollection {\n    /**\n     * JSON Schema collection formatted for OpenAPI v3.0 specification.\n     *\n     * This interface represents a collection of JSON schemas that comply with\n     * OpenAPI v3.0 standards, which are compatible with Swagger tools and\n     * legacy OpenAPI implementations. OpenAPI v3.0 has some limitations\n     * compared to v3.1, particularly around tuple types and pattern properties.\n     *\n     * Key characteristics of v3.0:\n     * - Cannot express tuple types natively (falls back to array representations)\n     * - Cannot express pattern properties in object schemas\n     * - Uses nullable property instead of union with null type\n     * - Limited JSON Schema Draft compatibility (based on Draft 4)\n     *\n     * @template Types Array of original TypeScript types used to generate the schemas.\n     *                 This provides compile-time type information about what types\n     *                 were analyzed during schema generation.\n     */\n    interface IV3_0<Types = unknown[]> {\n        /**\n         * OpenAPI specification version identifier.\n         *\n         * Always set to "3.0" to indicate this collection uses OpenAPI v3.0\n         * schema format and constraints.\n         */\n        version: "3.0";\n        /**\n         * Array of generated JSON schemas.\n         *\n         * Contains the actual JSON schema definitions generated from the input TypeScript types.\n         * Each schema in this array corresponds to one of the types specified in the `Types`\n         * template parameter. The schemas follow OpenAPI v3.0 format and may contain\n         * references to components defined in the {@link components} property.\n         *\n         * Schema references typically use the format: `{ "$ref": "#/components/schemas/TypeName" }`\n         */\n        schemas: OpenApiV3.IJsonSchema[];\n        /**\n         * Reusable schema components for OpenAPI v3.0.\n         *\n         * Contains reusable schema definitions, security schemes, and other components\n         * that can be referenced from the main schemas. This follows the OpenAPI v3.0\n         * components structure and enables schema reuse and modularity.\n         *\n         * Components include:\n         * - schemas: Named type definitions that can be referenced via $ref\n         * - securitySchemes: Authentication and authorization schemes\n         * - parameters: Reusable parameter definitions\n         * - requestBodies: Reusable request body definitions\n         * - responses: Reusable response definitions\n         * - headers: Reusable header definitions\n         * - examples: Reusable example definitions\n         */\n        components: OpenApiV3.IComponents;\n        /**\n         * Type metadata for compile-time type tracking.\n         *\n         * This optional property stores the original TypeScript types that were\n         * used to generate the JSON schemas. It\'s primarily used for type safety\n         * and doesn\'t affect runtime behavior. The property is marked as optional\n         * and undefined to prevent it from appearing in serialized JSON output.\n         *\n         * This enables:\n         * - Compile-time type checking against the original types\n         * - IDE intellisense and autocompletion\n         * - Type-safe schema validation and usage\n         */\n        __types?: Types | undefined;\n    }\n    /**\n     * JSON Schema collection formatted for OpenAPI v3.1 specification.\n     *\n     * This interface represents a collection of JSON schemas that comply with\n     * OpenAPI v3.1 standards, which provide enhanced JSON Schema compatibility\n     * and support for modern JSON Schema features. OpenAPI v3.1 is based on\n     * JSON Schema Draft 2020-12 and offers significant improvements over v3.0.\n     *\n     * Key advantages of v3.1:\n     * - Full tuple type support with prefixItems\n     * - Pattern properties support for dynamic object keys\n     * - Proper null type handling via union types\n     * - Enhanced JSON Schema Draft 2020-12 compatibility\n     * - Better const, enum, and validation support\n     *\n     * @template Types Array of original TypeScript types used to generate the schemas.\n     *                 This provides compile-time type information about what types\n     *                 were analyzed during schema generation.\n     */\n    interface IV3_1<Types = unknown[]> {\n        /**\n         * OpenAPI specification version identifier.\n         *\n         * Always set to "3.1" to indicate this collection uses OpenAPI v3.1\n         * schema format with enhanced JSON Schema compatibility.\n         */\n        version: "3.1";\n        /**\n         * Reusable schema components for OpenAPI v3.1.\n         *\n         * Contains reusable schema definitions and other components following the\n         * OpenAPI v3.1 specification. This structure is similar to v3.0 but supports\n         * enhanced JSON Schema features and improved type definitions.\n         *\n         * Components include:\n         * - schemas: Named type definitions with enhanced JSON Schema support\n         * - securitySchemes: Authentication and authorization schemes\n         *\n         * The emended OpenAPI v3.1 format used here removes ambiguous expressions\n         * and standardizes certain patterns for better tooling compatibility.\n         */\n        components: OpenApi.IComponents;\n        /**\n         * Array of generated JSON schemas with v3.1 enhancements.\n         *\n         * Contains JSON schema definitions that take advantage of OpenAPI v3.1\'s\n         * enhanced capabilities. These schemas can express more complex TypeScript\n         * types accurately, including:\n         * - Tuple types using prefixItems\n         * - Union types with proper null handling\n         * - Complex nested object structures\n         * - Pattern-based property definitions\n         *\n         * Each schema corresponds to one of the input TypeScript types and may\n         * reference components defined in the {@link components} property.\n         */\n        schemas: OpenApi.IJsonSchema[];\n        /**\n         * Type metadata for compile-time type tracking.\n         *\n         * This optional property stores the original TypeScript types that were\n         * used to generate the JSON schemas. It provides compile-time type safety\n         * and enables better development experience without affecting runtime behavior.\n         *\n         * Benefits include:\n         * - Strong typing connection to original TypeScript definitions\n         * - Enhanced IDE support and autocompletion\n         * - Compile-time validation of schema usage\n         * - Type-safe integration with validation libraries\n         */\n        __types?: Types | undefined;\n    }\n}\n'],["file:///node_modules/typia/lib/schemas/json/IJsonSchemaUnit.d.ts",'import { OpenApi, OpenApiV3 } from "@samchon/openapi";\n/**\n * Single unit of JSON schema representation.\n *\n * `IJsonSchemaUnit` represents a self-contained JSON schema unit that encapsulates\n * a single schema definition along with its associated reusable components. This is\n * typically used when generating a JSON schema for a single TypeScript type, as\n * opposed to a collection of multiple types.\n *\n * Unlike {@link IJsonSchemaCollection} which handles multiple schemas, `IJsonSchemaUnit`\n * focuses on representing a single schema with its dependencies. This makes it ideal\n * for scenarios where you need to work with individual type definitions or when\n * integrating with systems that expect single schema documents.\n *\n * The unit contains:\n * - A single JSON schema definition for the specified TypeScript type\n * - All necessary reusable components that the schema may reference\n * - Version-specific formatting for either OpenAPI v3.0 or v3.1 compatibility\n * - Optional type metadata for compile-time type safety\n *\n * Key differences from collection:\n * - Contains only one schema instead of an array of schemas\n * - More lightweight for single-type use cases\n * - Simpler structure for direct schema consumption\n * - Still maintains full component reference support\n *\n * @template Version The OpenAPI specification version to target ("3.0" or "3.1").\n *                   Defaults to "3.1" for enhanced JSON Schema Draft 2020-12 compatibility.\n *                   This determines the schema format, validation capabilities, and\n *                   available features like tuple support and null type handling.\n * @template Type    The original TypeScript type that was analyzed to generate this\n *                   JSON schema unit. This provides compile-time type safety and\n *                   enables IDEs to provide better intellisense and validation.\n *\n * @example\n * ```typescript\n * interface User {\n *   id: string;\n *   name: string;\n *   email?: string;\n * }\n *\n * // Generate a single schema unit for OpenAPI v3.1 (default)\n * const userSchema = typia.json.schema<User>();\n * // Type: IJsonSchemaUnit<"3.1", User>\n *\n * // Generate a single schema unit for OpenAPI v3.0 (Swagger compatibility)\n * const swaggerUserSchema = typia.json.schema<User, "3.0">();\n * // Type: IJsonSchemaUnit<"3.0", User>\n * ```\n *\n * @see {@link IJsonSchemaCollection} For handling multiple schemas at once\n * @author Jeongho Nam - https://github.com/samchon\n */\nexport type IJsonSchemaUnit<Version extends "3.0" | "3.1" = "3.1", Type = unknown> = Version extends "3.0" ? IJsonSchemaUnit.IV3_0<Type> : IJsonSchemaUnit.IV3_1<Type>;\nexport declare namespace IJsonSchemaUnit {\n    /**\n     * JSON Schema unit formatted for OpenAPI v3.0 specification.\n     *\n     * This interface represents a single JSON schema unit that complies with\n     * OpenAPI v3.0 standards. It contains one schema definition along with\n     * any reusable components that the schema references, formatted according\n     * to OpenAPI v3.0 constraints and limitations.\n     *\n     * OpenAPI v3.0 characteristics affecting this unit:\n     * - Schema follows OpenAPI v3.0 JSON Schema subset\n     * - Limited support for advanced JSON Schema features\n     * - Uses nullable property for optional null values\n     * - Cannot natively express tuple types or pattern properties\n     * - Based on JSON Schema Draft 4 with OpenAPI-specific extensions\n     *\n     * Use cases for v3.0:\n     * - Integration with legacy Swagger tooling\n     * - Compatibility with older OpenAPI implementations\n     * - Systems that specifically require OpenAPI v3.0 format\n     * - Code generation tools that expect v3.0 schemas\n     *\n     * @template Type The original TypeScript type represented by this schema unit.\n     *                Provides compile-time type information and enables type-safe\n     *                operations on the schema.\n     */\n    interface IV3_0<Type> {\n        /**\n         * OpenAPI specification version identifier.\n         *\n         * Always set to "3.0" to indicate this schema unit uses OpenAPI v3.0\n         * format and adheres to its specific constraints and limitations.\n         */\n        version: "3.0";\n        /**\n         * The primary JSON schema definition.\n         *\n         * Contains the main JSON schema that represents the TypeScript type specified\n         * in the `Type` template parameter. This schema follows OpenAPI v3.0 format\n         * and may contain references to reusable components defined in the\n         * {@link components} property.\n         *\n         * The schema structure includes:\n         * - Type definitions following OpenAPI v3.0 constraints\n         * - Property definitions with v3.0-compatible validation rules\n         * - References to shared components using $ref syntax\n         * - Nullable properties for optional fields that can be null\n         *\n         * Example schema reference: `{ "$ref": "#/components/schemas/NestedType" }`\n         */\n        schema: OpenApiV3.IJsonSchema;\n        /**\n         * Reusable schema components for OpenAPI v3.0.\n         *\n         * Contains all reusable schema definitions and components that may be\n         * referenced by the main schema. This enables schema modularity and\n         * prevents duplication when the same types are used in multiple places\n         * within the schema definition.\n         *\n         * Component categories include:\n         * - schemas: Named type definitions for complex objects, arrays, and unions\n         * - securitySchemes: Authentication and authorization definitions\n         * - parameters: Reusable parameter specifications\n         * - requestBodies: Reusable request body definitions\n         * - responses: Reusable response specifications\n         * - headers: Reusable header definitions\n         * - examples: Reusable example values\n         *\n         * All components follow OpenAPI v3.0 format restrictions and capabilities.\n         */\n        components: OpenApiV3.IComponents;\n        /**\n         * Type metadata for compile-time type safety.\n         *\n         * This optional property maintains a reference to the original TypeScript\n         * type that was used to generate this schema unit. It provides compile-time\n         * type information without affecting the runtime JSON representation.\n         *\n         * Benefits of type metadata:\n         * - Enables type-safe schema validation and usage\n         * - Provides IDE intellisense and autocompletion\n         * - Allows compile-time checking of schema operations\n         * - Maintains traceability to original TypeScript definitions\n         *\n         * The property is intentionally marked as optional and undefined to ensure\n         * it doesn\'t appear in serialized JSON output while preserving type information\n         * at compile time.\n         */\n        __type?: Type | undefined;\n    }\n    /**\n     * JSON Schema unit formatted for OpenAPI v3.1 specification.\n     *\n     * This interface represents a single JSON schema unit that takes advantage\n     * of OpenAPI v3.1\'s enhanced capabilities and improved JSON Schema compatibility.\n     * It provides a more feature-rich and accurate representation of TypeScript\n     * types compared to the v3.0 format.\n     *\n     * OpenAPI v3.1 advantages for this unit:\n     * - Full JSON Schema Draft 2020-12 compatibility\n     * - Native tuple type support using prefixItems\n     * - Proper null type handling via union types\n     * - Pattern properties for dynamic object keys\n     * - Enhanced const, enum, and validation capabilities\n     * - Better support for complex nested structures\n     *\n     * Use cases for v3.1:\n     * - Modern OpenAPI implementations and tooling\n     * - Systems requiring accurate TypeScript type representation\n     * - Applications needing advanced JSON Schema features\n     * - New projects without legacy compatibility requirements\n     *\n     * @template Type The original TypeScript type represented by this schema unit.\n     *                Enables compile-time type safety and provides enhanced\n     *                development experience with better IDE support.\n     */\n    interface IV3_1<Type> {\n        /**\n         * OpenAPI specification version identifier.\n         *\n         * Always set to "3.1" to indicate this schema unit uses OpenAPI v3.1\n         * format with enhanced JSON Schema compatibility and modern features.\n         */\n        version: "3.1";\n        /**\n         * The primary JSON schema definition with v3.1 enhancements.\n         *\n         * Contains the main JSON schema that accurately represents the TypeScript\n         * type using OpenAPI v3.1\'s enhanced capabilities. This schema can express\n         * complex TypeScript constructs that were not possible or accurate in v3.0.\n         *\n         * Enhanced schema features include:\n         * - Tuple types using prefixItems for exact array structure\n         * - Union types with proper null handling via oneOf\n         * - Const values for literal types\n         * - Pattern properties for Record<string, T> types\n         * - Advanced validation constraints and metadata\n         * - Recursive type definitions with proper $ref handling\n         *\n         * The schema follows the emended OpenAPI v3.1 format used by typia,\n         * which removes ambiguous expressions while maintaining full compatibility.\n         */\n        schema: OpenApi.IJsonSchema;\n        /**\n         * Reusable schema components for OpenAPI v3.1.\n         *\n         * Contains reusable schema definitions and components that leverage\n         * OpenAPI v3.1\'s enhanced capabilities. These components provide better\n         * type representation and more accurate schema definitions compared to v3.0.\n         *\n         * Enhanced component features:\n         * - schemas: More accurate type definitions with v3.1 JSON Schema features\n         * - securitySchemes: Enhanced authentication scheme definitions\n         * - Better support for complex nested references\n         * - Improved handling of recursive and circular type dependencies\n         *\n         * The components structure follows the emended OpenAPI v3.1 specification\n         * that simplifies certain patterns while maintaining full expressiveness.\n         */\n        components: OpenApi.IComponents;\n        /**\n         * Type metadata for enhanced compile-time type safety.\n         *\n         * This optional property preserves the original TypeScript type information\n         * for compile-time type checking and enhanced development experience. It\n         * enables type-safe operations and better IDE support without affecting\n         * the runtime JSON schema representation.\n         *\n         * Enhanced type safety features:\n         * - Strong typing connection to original TypeScript definitions\n         * - Better IDE intellisense and error detection\n         * - Compile-time validation of schema usage patterns\n         * - Type-safe integration with validation and serialization libraries\n         * - Enhanced debugging and development experience\n         *\n         * The property remains optional and undefined to maintain clean JSON\n         * serialization while preserving valuable compile-time information.\n         */\n        __type?: Type | undefined;\n    }\n}\n'],["file:///node_modules/typia/lib/schemas/json/__IJsonApplication.d.ts",'import { OpenApi, OpenApiV3 } from "@samchon/openapi";\nexport interface __IJsonApplication<Version extends "3.0" | "3.1" = "3.1", App extends any = object> {\n    version: Version;\n    components: __IJsonApplication.IComponents<__IJsonApplication.Schema<Version>>;\n    functions: __IJsonApplication.IFunction<__IJsonApplication.Schema<Version>>[];\n    __application?: App | undefined;\n}\nexport declare namespace __IJsonApplication {\n    type Schema<Version extends "3.0" | "3.1"> = Version extends "3.1" ? OpenApi.IJsonSchema : OpenApiV3.IJsonSchema;\n    interface IComponents<Schema extends OpenApi.IJsonSchema | OpenApiV3.IJsonSchema = OpenApi.IJsonSchema> {\n        schemas?: Record<string, Schema>;\n    }\n    interface IFunction<Schema extends OpenApi.IJsonSchema | OpenApiV3.IJsonSchema = OpenApi.IJsonSchema> {\n        async: boolean;\n        name: string;\n        parameters: IParameter<Schema>[];\n        output: IOutput<Schema> | undefined;\n        summary?: string | undefined;\n        description?: string | undefined;\n        deprecated?: boolean;\n        tags?: string[];\n    }\n    interface IParameter<Schema extends OpenApi.IJsonSchema | OpenApiV3.IJsonSchema = OpenApi.IJsonSchema> {\n        name: string;\n        required: boolean;\n        schema: Schema;\n        title?: string | undefined;\n        description?: string | undefined;\n    }\n    interface IOutput<Schema extends OpenApi.IJsonSchema | OpenApiV3.IJsonSchema = OpenApi.IJsonSchema> {\n        schema: Schema;\n        required: boolean;\n        description?: string | undefined;\n    }\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IJsDocTagInfo.d.ts","export interface IJsDocTagInfo {\n    name: string;\n    text?: IJsDocTagInfo.IText[];\n}\nexport declare namespace IJsDocTagInfo {\n    interface IText {\n        text: string;\n        kind: string;\n    }\n}\n"],["file:///node_modules/typia/lib/schemas/metadata/IMetadata.d.ts",'import { IMetadataAlias } from "./IMetadataAlias";\nimport { IMetadataArray } from "./IMetadataArray";\nimport { IMetadataAtomic } from "./IMetadataAtomic";\nimport { IMetadataConstant } from "./IMetadataConstant";\nimport { IMetadataEscaped } from "./IMetadataEscaped";\nimport { IMetadataFunction } from "./IMetadataFunction";\nimport { IMetadataMap } from "./IMetadataMap";\nimport { IMetadataNative } from "./IMetadataNative";\nimport { IMetadataObject } from "./IMetadataObject";\nimport { IMetadataSet } from "./IMetadataSet";\nimport { IMetadataTemplate } from "./IMetadataTemplate";\nimport { IMetadataTuple } from "./IMetadataTuple";\nexport interface IMetadata {\n    any: boolean;\n    required: boolean;\n    optional: boolean;\n    nullable: boolean;\n    functions: IMetadataFunction[];\n    atomics: IMetadataAtomic[];\n    constants: IMetadataConstant[];\n    templates: IMetadataTemplate[];\n    escaped: IMetadataEscaped | null;\n    rest: IMetadata | null;\n    arrays: IMetadataArray[];\n    tuples: IMetadataTuple[];\n    objects: IMetadataObject[];\n    aliases: IMetadataAlias[];\n    natives: IMetadataNative[];\n    sets: IMetadataSet[];\n    maps: IMetadataMap[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataAlias.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataAlias {\n    name: string;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataAliasType.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadata } from "./IMetadata";\nexport interface IMetadataAliasType {\n    name: string;\n    value: IMetadata;\n    nullables: boolean[];\n    description: string | null;\n    jsDocTags: IJsDocTagInfo[];\n    recursive: boolean;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataApplication.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataComponents } from "./IMetadataComponents";\nexport interface IMetadataApplication {\n    metadatas: IMetadata[];\n    components: IMetadataComponents;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataArray.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataArray {\n    name: string;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataArrayType.d.ts",'import { IMetadata } from "./IMetadata";\nexport interface IMetadataArrayType {\n    name: string;\n    value: IMetadata;\n    nullables: boolean[];\n    recursive: boolean;\n    index: number | null;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataAtomic.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataAtomic {\n    type: "boolean" | "bigint" | "number" | "string";\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataComponents.d.ts",'import { IMetadataAliasType } from "./IMetadataAliasType";\nimport { IMetadataArrayType } from "./IMetadataArrayType";\nimport { IMetadataObjectType } from "./IMetadataObjectType";\nimport { IMetadataTupleType } from "./IMetadataTupleType";\nexport interface IMetadataComponents {\n    objects: IMetadataObjectType[];\n    aliases: IMetadataAliasType[];\n    arrays: IMetadataArrayType[];\n    tuples: IMetadataTupleType[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataConstant.d.ts",'import { Atomic } from "../../typings/Atomic";\nimport { IMetadataConstantValue } from "./IMetadataConstantValue";\nexport type IMetadataConstant = IMetadataConstant.IBase<"boolean", boolean> | IMetadataConstant.IBase<"number", number> | IMetadataConstant.IBase<"string", string> | IMetadataConstant.IBase<"bigint", string>;\nexport declare namespace IMetadataConstant {\n    interface IBase<Type extends Atomic.Literal, Value extends Atomic.Type> {\n        type: Type;\n        values: IMetadataConstantValue<Value>[];\n    }\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataConstantValue.d.ts",'import { Atomic } from "../../typings/Atomic";\nimport { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataConstantValue<T extends Atomic.Type> {\n    value: T;\n    tags: IMetadataTypeTag[][];\n    description?: string | null;\n    jsDocTags?: IJsDocTagInfo[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataDictionary.d.ts",'import { MetadataAliasType } from "./MetadataAliasType";\nimport { MetadataArrayType } from "./MetadataArrayType";\nimport { MetadataObjectType } from "./MetadataObjectType";\nimport { MetadataTupleType } from "./MetadataTupleType";\nexport interface IMetadataDictionary {\n    objects: Map<string, MetadataObjectType>;\n    aliases: Map<string, MetadataAliasType>;\n    arrays: Map<string, MetadataArrayType>;\n    tuples: Map<string, MetadataTupleType>;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataEscaped.d.ts",'import { IMetadata } from "./IMetadata";\nexport interface IMetadataEscaped {\n    original: IMetadata;\n    returns: IMetadata;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataFunction.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataParameter } from "./IMetadataParameter";\nexport interface IMetadataFunction {\n    parameters: IMetadataParameter[];\n    output: IMetadata;\n    async: boolean;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataMap.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataMap {\n    key: IMetadata;\n    value: IMetadata;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataNative.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataNative {\n    name: string;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataObject.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataObject {\n    name: string;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataObjectType.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataProperty } from "./IMetadataProperty";\nexport interface IMetadataObjectType {\n    name: string;\n    properties: IMetadataProperty[];\n    description?: undefined | string;\n    jsDocTags: IJsDocTagInfo[];\n    index: number;\n    recursive: boolean;\n    nullables: boolean[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataParameter.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadata } from "./IMetadata";\nexport interface IMetadataParameter {\n    name: string;\n    type: IMetadata;\n    description: string | null;\n    jsDocTags: IJsDocTagInfo[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataProperty.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadata } from "./IMetadata";\nexport interface IMetadataProperty {\n    key: IMetadata;\n    value: IMetadata;\n    description: string | null;\n    jsDocTags: IJsDocTagInfo[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataSet.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataSet {\n    value: IMetadata;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataTemplate.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataTemplate {\n    row: IMetadata[];\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataTuple.d.ts",'import { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport interface IMetadataTuple {\n    name: string;\n    tags: IMetadataTypeTag[][];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataTupleType.d.ts",'import { IMetadata } from "./IMetadata";\nexport interface IMetadataTupleType {\n    name: string;\n    elements: IMetadata[];\n    index: number | null;\n    recursive: boolean;\n    nullables: boolean[];\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/IMetadataTypeTag.d.ts",'export interface IMetadataTypeTag {\n    target: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n    name: string;\n    kind: string;\n    exclusive: boolean | string[];\n    value?: any;\n    validate?: string | undefined;\n    schema?: object | undefined;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/Metadata.d.ts",'import { IMetadata } from "./IMetadata";\nimport { IMetadataDictionary } from "./IMetadataDictionary";\nimport { MetadataAlias } from "./MetadataAlias";\nimport { MetadataArray } from "./MetadataArray";\nimport { MetadataAtomic } from "./MetadataAtomic";\nimport { MetadataConstant } from "./MetadataConstant";\nimport { MetadataEscaped } from "./MetadataEscaped";\nimport { MetadataFunction } from "./MetadataFunction";\nimport { MetadataMap } from "./MetadataMap";\nimport { MetadataNative } from "./MetadataNative";\nimport { MetadataObject } from "./MetadataObject";\nimport { MetadataSet } from "./MetadataSet";\nimport { MetadataTemplate } from "./MetadataTemplate";\nimport { MetadataTuple } from "./MetadataTuple";\nexport declare class Metadata {\n    any: boolean;\n    required: boolean;\n    optional: boolean;\n    nullable: boolean;\n    escaped: MetadataEscaped | null;\n    atomics: MetadataAtomic[];\n    constants: MetadataConstant[];\n    templates: MetadataTemplate[];\n    rest: Metadata | null;\n    aliases: MetadataAlias[];\n    arrays: MetadataArray[];\n    tuples: MetadataTuple[];\n    objects: MetadataObject[];\n    functions: MetadataFunction[];\n    natives: MetadataNative[];\n    sets: MetadataSet[];\n    maps: MetadataMap[];\n    /**\n     * @hidden\n     */\n    private constructor();\n    toJSON(): IMetadata;\n    static from(meta: IMetadata, dict: IMetadataDictionary): Metadata;\n    getName(): string;\n    empty(): boolean;\n    size(): number;\n    bucket(): number;\n    isConstant(): boolean;\n    isRequired(): boolean;\n    isSoleLiteral(): boolean;\n}\nexport declare namespace Metadata {\n    const intersects: (x: Metadata, y: Metadata) => boolean;\n    const covers: (x: Metadata, y: Metadata, level?: number, escaped?: boolean) => boolean;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataAlias.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataAlias } from "./IMetadataAlias";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { MetadataAliasType } from "./MetadataAliasType";\nexport declare class MetadataAlias {\n    readonly type: MetadataAliasType;\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataAlias>): MetadataAlias;\n    getName(): string;\n    toJSON(): IMetadataAlias;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataAliasType.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataAliasType } from "./IMetadataAliasType";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataAliasType {\n    readonly name: string;\n    readonly value: Metadata;\n    readonly description: string | null;\n    readonly jsDocTags: IJsDocTagInfo[];\n    readonly recursive: boolean;\n    readonly nullables: boolean[];\n    /**\n     * @hidden\n     */\n    private constructor();\n    toJSON(): IMetadataAliasType;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataApplication.d.ts",'import { IMetadataApplication } from "./IMetadataApplication";\nimport { Metadata } from "./Metadata";\nimport { MetadataComponents } from "./MetadataComponents";\nexport declare class MetadataApplication {\n    readonly metadatas: Metadata[];\n    readonly components: MetadataComponents;\n    /**\n     * @hidden\n     */\n    private constructor();\n    static from(app: IMetadataApplication): MetadataApplication;\n    toJSON(): IMetadataApplication;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataArray.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataArray } from "./IMetadataArray";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { MetadataArrayType } from "./MetadataArrayType";\nexport declare class MetadataArray {\n    readonly type: MetadataArrayType;\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    /**\n     * @hidden\n     */\n    private constructor();\n    static create(props: ClassProperties<MetadataArray>): MetadataArray;\n    getName(): string;\n    toJSON(): IMetadataArray;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataArrayType.d.ts",'import { IMetadataArrayType } from "./IMetadataArrayType";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataArrayType {\n    readonly name: string;\n    readonly value: Metadata;\n    readonly nullables: boolean[];\n    readonly recursive: boolean;\n    readonly index: number | null;\n    /**\n     * @hidden\n     */\n    private constructor();\n    toJSON(): IMetadataArrayType;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataAtomic.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataAtomic } from "./IMetadataAtomic";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport declare class MetadataAtomic {\n    readonly type: "boolean" | "bigint" | "number" | "string";\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    static create(props: ClassProperties<MetadataAtomic>): MetadataAtomic;\n    static from(json: IMetadataAtomic): MetadataAtomic;\n    getName(): string;\n    toJSON(): IMetadataAtomic;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataComponents.d.ts",'import { IMetadataComponents } from "./IMetadataComponents";\nimport { IMetadataDictionary } from "./IMetadataDictionary";\nimport { MetadataAliasType } from "./MetadataAliasType";\nimport { MetadataArrayType } from "./MetadataArrayType";\nimport { MetadataObjectType } from "./MetadataObjectType";\nimport { MetadataTupleType } from "./MetadataTupleType";\nexport declare class MetadataComponents {\n    readonly aliases: MetadataAliasType[];\n    readonly objects: MetadataObjectType[];\n    readonly arrays: MetadataArrayType[];\n    readonly tuples: MetadataTupleType[];\n    readonly dictionary: IMetadataDictionary;\n    private constructor();\n    static from(json: IMetadataComponents): MetadataComponents;\n    toJSON(): IMetadataComponents;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataConstant.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataConstant } from "./IMetadataConstant";\nimport { MetadataConstantValue } from "./MetadataConstantValue";\nexport declare class MetadataConstant {\n    readonly type: "boolean" | "bigint" | "number" | "string";\n    readonly values: MetadataConstantValue[];\n    private constructor();\n    static create(props: ClassProperties<MetadataConstant>): MetadataConstant;\n    static from(json: IMetadataConstant): MetadataConstant;\n    toJSON(): IMetadataConstant;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataConstantValue.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataConstantValue } from "./IMetadataConstantValue";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport declare class MetadataConstantValue {\n    readonly value: boolean | bigint | number | string;\n    tags: IMetadataTypeTag[][];\n    readonly description?: string | null;\n    readonly jsDocTags?: IJsDocTagInfo[];\n    private name_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataConstantValue>): MetadataConstantValue;\n    static from(json: IMetadataConstantValue<any>): MetadataConstantValue;\n    getName(): string;\n    toJSON(): IMetadataConstantValue<any>;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataEscaped.d.ts",'import { IMetadataEscaped } from "./IMetadataEscaped";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataEscaped {\n    readonly original: Metadata;\n    readonly returns: Metadata;\n    /**\n     * @hidden\n     */\n    private constructor();\n    getName(): string;\n    toJSON(): IMetadataEscaped;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataFunction.d.ts",'import { IMetadataDictionary } from "./IMetadataDictionary";\nimport { IMetadataFunction } from "./IMetadataFunction";\nimport { Metadata } from "./Metadata";\nimport { MetadataParameter } from "./MetadataParameter";\nexport declare class MetadataFunction {\n    parameters: MetadataParameter[];\n    output: Metadata;\n    async: boolean;\n    /**\n     * @hidden\n     */\n    private constructor();\n    static from(json: IMetadataFunction, dict: IMetadataDictionary): MetadataFunction;\n    toJSON(): IMetadataFunction;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataMap.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataMap } from "./IMetadataMap";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataMap {\n    readonly key: Metadata;\n    readonly value: Metadata;\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataMap>): MetadataMap;\n    getName(): string;\n    toJSON(): IMetadataMap;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataNative.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataNative } from "./IMetadataNative";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nexport declare class MetadataNative {\n    readonly name: string;\n    readonly tags: IMetadataTypeTag[][];\n    private typeName_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataNative>): MetadataNative;\n    getName(): string;\n    toJSON(): IMetadataNative;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataObject.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataObject } from "./IMetadataObject";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { MetadataObjectType } from "./MetadataObjectType";\nexport declare class MetadataObject {\n    readonly type: MetadataObjectType;\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    /**\n     * @hidden\n     */\n    private constructor();\n    static create(props: ClassProperties<MetadataObject>): MetadataObject;\n    getName(): string;\n    toJSON(): IMetadataObject;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataObjectType.d.ts",'import { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataObjectType } from "./IMetadataObjectType";\nimport { MetadataProperty } from "./MetadataProperty";\nexport declare class MetadataObjectType {\n    readonly name: string;\n    readonly properties: Array<MetadataProperty>;\n    readonly description: string | undefined;\n    readonly jsDocTags: IJsDocTagInfo[];\n    readonly index: number;\n    validated: boolean;\n    recursive: boolean;\n    nullables: boolean[];\n    /**\n     * @hidden\n     */\n    private constructor();\n    isPlain(level?: number): boolean;\n    isLiteral(): boolean;\n    toJSON(): IMetadataObjectType;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataParameter.d.ts",'import ts from "typescript";\nimport { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataDictionary } from "./IMetadataDictionary";\nimport { IMetadataParameter } from "./IMetadataParameter";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataParameter {\n    name: string;\n    type: Metadata;\n    description: string | null;\n    jsDocTags: IJsDocTagInfo[];\n    tsType?: ts.Type;\n    private constructor();\n    static from(json: IMetadataParameter, dict: IMetadataDictionary): MetadataParameter;\n    toJSON(): IMetadataParameter;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataProperty.d.ts",'import { IProtobufProperty } from "../protobuf/IProtobufProperty";\nimport { IJsDocTagInfo } from "./IJsDocTagInfo";\nimport { IMetadataProperty } from "./IMetadataProperty";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataProperty {\n    readonly key: Metadata;\n    readonly value: Metadata;\n    readonly description: string | null;\n    readonly jsDocTags: IJsDocTagInfo[];\n    of_protobuf_?: IProtobufProperty;\n    /**\n     * @hidden\n     */\n    private constructor();\n    toJSON(): IMetadataProperty;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataSet.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataSet } from "./IMetadataSet";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataSet {\n    readonly value: Metadata;\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataSet>): MetadataSet;\n    getName(): string;\n    toJSON(): IMetadataSet;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataTemplate.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataDictionary } from "./IMetadataDictionary";\nimport { IMetadataTemplate } from "./IMetadataTemplate";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataTemplate {\n    readonly row: Metadata[];\n    readonly tags: IMetadataTypeTag[][];\n    private name_?;\n    private constructor();\n    static create(props: ClassProperties<MetadataTemplate>): MetadataTemplate;\n    static from(json: IMetadataTemplate, dict: IMetadataDictionary): MetadataTemplate;\n    getName(): string;\n    toJSON(): IMetadataTemplate;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataTuple.d.ts",'import { IMetadataTuple } from "./IMetadataTuple";\nimport { IMetadataTypeTag } from "./IMetadataTypeTag";\nimport { MetadataTupleType } from "./MetadataTupleType";\nexport declare class MetadataTuple {\n    readonly type: MetadataTupleType;\n    readonly tags: IMetadataTypeTag[][];\n    /**\n     * @hidden\n     */\n    private constructor();\n    toJSON(): IMetadataTuple;\n}\n'],["file:///node_modules/typia/lib/schemas/metadata/MetadataTupleType.d.ts",'import { ClassProperties } from "../../typings/ClassProperties";\nimport { IMetadataTupleType } from "./IMetadataTupleType";\nimport { Metadata } from "./Metadata";\nexport declare class MetadataTupleType {\n    readonly name: string;\n    readonly elements: Metadata[];\n    readonly index: number | null;\n    readonly recursive: boolean;\n    readonly nullables: boolean[];\n    static create(props: ClassProperties<MetadataTupleType>): MetadataTupleType;\n    isRest(): boolean;\n    toJSON(): IMetadataTupleType;\n}\n'],["file:///node_modules/typia/lib/schemas/protobuf/IProtobufProperty.d.ts",'import { IProtobufPropertyType } from "./IProtobufPropertyType";\nexport interface IProtobufProperty {\n    fixed: boolean;\n    union: IProtobufPropertyType[];\n}\n'],["file:///node_modules/typia/lib/schemas/protobuf/IProtobufPropertyType.d.ts",'import { IProtobufSchema } from "./IProtobufSchema";\nexport type IProtobufPropertyType = IProtobufPropertyType.IByte | IProtobufPropertyType.IBoolean | IProtobufPropertyType.IBigint | IProtobufPropertyType.INumber | IProtobufPropertyType.IString | IProtobufPropertyType.IArray | IProtobufPropertyType.IObject | IProtobufPropertyType.IMap;\nexport declare namespace IProtobufPropertyType {\n    interface IByte extends IProtobufSchema.IByte {\n        index: number;\n    }\n    interface IBoolean extends IProtobufSchema.IBoolean {\n        index: number;\n    }\n    interface IBigint extends IProtobufSchema.IBigint {\n        index: number;\n    }\n    interface INumber extends IProtobufSchema.INumber {\n        index: number;\n    }\n    interface IString extends IProtobufSchema.IString {\n        index: number;\n    }\n    interface IArray extends IProtobufSchema.IArray {\n        index: number;\n    }\n    interface IObject extends IProtobufSchema.IObject {\n        index: number;\n    }\n    interface IMap extends IProtobufSchema.IMap {\n        index: number;\n    }\n}\n'],["file:///node_modules/typia/lib/schemas/protobuf/IProtobufSchema.d.ts",'import { MetadataArrayType } from "../metadata/MetadataArrayType";\nimport { MetadataMap } from "../metadata/MetadataMap";\nimport { MetadataObjectType } from "../metadata/MetadataObjectType";\nexport type IProtobufSchema = IProtobufSchema.IByte | IProtobufSchema.IBoolean | IProtobufSchema.IBigint | IProtobufSchema.INumber | IProtobufSchema.IString | IProtobufSchema.IArray | IProtobufSchema.IObject | IProtobufSchema.IMap;\nexport declare namespace IProtobufSchema {\n    interface IByte {\n        type: "bytes";\n    }\n    interface IBoolean {\n        type: "bool";\n    }\n    interface IBigint {\n        type: "bigint";\n        name: "int64" | "uint64";\n    }\n    interface INumber {\n        type: "number";\n        name: "int32" | "int64" | "uint32" | "uint64" | "float" | "double";\n    }\n    interface IString {\n        type: "string";\n    }\n    interface IArray {\n        type: "array";\n        array: MetadataArrayType;\n        value: Exclude<IProtobufSchema, IArray | IMap>;\n    }\n    interface IObject {\n        type: "object";\n        object: MetadataObjectType;\n    }\n    interface IMap {\n        type: "map";\n        map: MetadataMap | MetadataObjectType;\n        key: IProtobufSchema.IBoolean | IProtobufSchema.INumber | IProtobufSchema.IString;\n        value: Exclude<IProtobufSchema, IArray | IMap>;\n    }\n}\n'],["file:///node_modules/typia/lib/tags/Constant.d.ts",'import { TagBase } from "./TagBase";\nexport type Constant<Value extends boolean | number | string | bigint, Content extends {\n    title?: string | undefined;\n    description?: string | undefined;\n}> = Value & TagBase<{\n    target: "string" | "boolean" | "number" | "bigint";\n    kind: "constant";\n    value: undefined;\n    schema: Content;\n}>;\n'],["file:///node_modules/typia/lib/tags/ContentMediaType.d.ts",'import { TagBase } from "./TagBase";\nexport type ContentMediaType<Value extends string> = TagBase<{\n    target: "string";\n    kind: "contentMediaType";\n    value: undefined;\n    schema: {\n        contentMediaType: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/Default.d.ts",'import { TagBase } from "./TagBase";\nexport type Default<Value extends boolean | bigint | number | string> = TagBase<{\n    target: Value extends boolean ? "boolean" : Value extends bigint ? "bigint" : Value extends number ? "number" : "string";\n    kind: "default";\n    value: Value;\n    exclusive: true;\n    schema: Value extends bigint ? {\n        default: Numeric<Value>;\n    } : {\n        default: Value;\n    };\n}>;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/Example.d.ts",'import { TagBase } from "./TagBase";\nexport type Example<Value extends boolean | bigint | number | string | object | Array<unknown> | null> = TagBase<{\n    target: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n    kind: "example";\n    value: Value;\n    exclusive: true;\n    schema: Value extends bigint ? {\n        example: Numeric<Value>;\n    } : {\n        example: Value;\n    };\n}>;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/Examples.d.ts",'import { TagBase } from "./TagBase";\nexport type Examples<Value extends Record<string, boolean | bigint | number | string | object | Array<unknown> | null>> = TagBase<{\n    target: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n    kind: "examples";\n    value: Value;\n    exclusive: true;\n    schema: {\n        examples: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/ExclusiveMaximum.d.ts",'import { TagBase } from "./TagBase";\nexport type ExclusiveMaximum<Value extends number | bigint> = TagBase<{\n    target: Value extends bigint ? "bigint" : "number";\n    kind: "exclusiveMaximum";\n    value: Value;\n    validate: `$input < ${Cast<Value>}`;\n    exclusive: ["exclusiveMaximum", "maximum"];\n    schema: Value extends bigint ? {\n        exclusiveMaximum: Numeric<Value>;\n    } : {\n        exclusiveMaximum: Value;\n    };\n}>;\ntype Cast<Value extends number | bigint> = Value extends number ? Value : `BigInt(${Value})`;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/ExclusiveMinimum.d.ts",'import { TagBase } from "./TagBase";\nexport type ExclusiveMinimum<Value extends number | bigint> = TagBase<{\n    target: Value extends bigint ? "bigint" : "number";\n    kind: "exclusiveMinimum";\n    value: Value;\n    validate: `${Cast<Value>} < $input`;\n    exclusive: ["exclusiveMinimum", "minimum"];\n    schema: Value extends bigint ? {\n        exclusiveMinimum: Numeric<Value>;\n    } : {\n        exclusiveMinimum: Value;\n    };\n}>;\ntype Cast<Value extends number | bigint> = Value extends number ? Value : `BigInt(${Value})`;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/Format.d.ts",'import type { TagBase } from "./TagBase";\nexport type Format<Value extends Format.Value> = TagBase<{\n    target: "string";\n    kind: "format";\n    value: Value;\n    validate: `$importInternal("isFormat${PascalizeString<Value>}")($input)`;\n    exclusive: ["format", "pattern"];\n    schema: {\n        format: Value;\n    };\n}>;\nexport declare namespace Format {\n    type Value = "byte" | "password" | "regex" | "uuid" | "email" | "hostname" | "idn-email" | "idn-hostname" | "iri" | "iri-reference" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "uri-template" | "url" | "date-time" | "date" | "time" | "duration" | "json-pointer" | "relative-json-pointer";\n}\ntype PascalizeString<Key extends string> = Key extends `-${infer R}` ? `${PascalizeString<R>}` : Key extends `${infer _F}-${infer _R}` ? PascalizeSnakeString<Key> : Capitalize<Key>;\ntype PascalizeSnakeString<Key extends string> = Key extends `-${infer R}` ? PascalizeSnakeString<R> : Key extends `${infer F}${infer M}-${infer R}` ? `${Uppercase<F>}${Lowercase<M>}${PascalizeSnakeString<R>}` : Key extends `${infer F}${infer R}` ? `${Uppercase<F>}${Lowercase<R>}` : Key;\nexport {};\n'],["file:///node_modules/typia/lib/tags/JsonSchemaPlugin.d.ts",'import { TagBase } from "./TagBase";\nexport type JsonSchemaPlugin<Schema extends object> = TagBase<{\n    target: "string" | "boolean" | "bigint" | "number" | "array" | "object";\n    kind: "jsonPlugin";\n    value: undefined;\n    schema: Schema;\n}>;\n'],["file:///node_modules/typia/lib/tags/MaxItems.d.ts",'import { TagBase } from "./TagBase";\nexport type MaxItems<Value extends number> = TagBase<{\n    target: "array";\n    kind: "maxItems";\n    value: Value;\n    validate: `$input.length <= ${Value}`;\n    exclusive: true;\n    schema: {\n        maxItems: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/MaxLength.d.ts",'import { TagBase } from "./TagBase";\nexport type MaxLength<Value extends number> = TagBase<{\n    target: "string";\n    kind: "maxLength";\n    value: Value;\n    validate: `$input.length <= ${Value}`;\n    exclusive: true;\n    schema: {\n        maxLength: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/Maximum.d.ts",'import { TagBase } from "./TagBase";\nexport type Maximum<Value extends number | bigint> = TagBase<{\n    target: Value extends bigint ? "bigint" : "number";\n    kind: "maximum";\n    value: Value;\n    validate: `$input <= ${Cast<Value>}`;\n    exclusive: ["maximum", "exclusiveMaximum"];\n    schema: Value extends bigint ? {\n        maximum: Numeric<Value>;\n    } : {\n        maximum: Value;\n    };\n}>;\ntype Cast<Value extends number | bigint> = Value extends number ? Value : `BigInt(${Value})`;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/MinItems.d.ts",'import { TagBase } from "./TagBase";\nexport type MinItems<Value extends number> = TagBase<{\n    target: "array";\n    kind: "minItems";\n    value: Value;\n    validate: `${Value} <= $input.length`;\n    exclusive: true;\n    schema: {\n        minItems: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/MinLength.d.ts",'import { TagBase } from "./TagBase";\nexport type MinLength<Value extends number> = TagBase<{\n    target: "string";\n    kind: "minLength";\n    value: Value;\n    validate: `${Value} <= $input.length`;\n    exclusive: true;\n    schema: {\n        minLength: Value;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/Minimum.d.ts",'import { TagBase } from "./TagBase";\nexport type Minimum<Value extends number | bigint> = TagBase<{\n    target: Value extends bigint ? "bigint" : "number";\n    kind: "minimum";\n    value: Value;\n    validate: `${Cast<Value>} <= $input`;\n    exclusive: ["minimum", "exclusiveMinimum"];\n    schema: Value extends bigint ? {\n        minimum: Numeric<Value>;\n    } : {\n        minimum: Value;\n    };\n}>;\ntype Cast<Value extends number | bigint> = Value extends number ? Value : `BigInt(${Value})`;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/MultipleOf.d.ts",'import { TagBase } from "./TagBase";\nexport type MultipleOf<Value extends number | bigint> = TagBase<{\n    target: Value extends bigint ? "bigint" : "number";\n    kind: "multipleOf";\n    value: Value;\n    validate: `$input % ${Cast<Value>} === ${Value extends bigint ? Cast<0n> : 0}`;\n    exclusive: true;\n    schema: Value extends bigint ? {\n        multipleOf: Numeric<Value>;\n    } : {\n        multipleOf: Value;\n    };\n}>;\ntype Cast<Value extends number | bigint> = Value extends number ? Value : `BigInt(${Value})`;\ntype Numeric<T extends bigint> = `${T}` extends `${infer N extends number}` ? N : never;\nexport {};\n'],["file:///node_modules/typia/lib/tags/Pattern.d.ts",'import { TagBase } from "./TagBase";\nexport type Pattern<Value extends string> = TagBase<{\n    target: "string";\n    kind: "pattern";\n    value: Value;\n    validate: `RegExp("${Serialize<Value>}").test($input)`;\n    exclusive: ["format", "pattern"];\n    schema: {\n        pattern: Value;\n    };\n}>;\ntype Serialize<T extends string, Output extends string = ""> = string extends T ? never : T extends "" ? Output : T extends `${infer P}${infer R}` ? Serialize<R, `${Output}${P extends keyof Escaper ? Escaper[P] : P}`> : never;\ntype Escaper = {\n    \'"\': \'\\\\"\';\n    "\\\\": "\\\\\\\\";\n    "\\b": "\\\\b";\n    "\\f": "\\\\f";\n    "\\n": "\\\\n";\n    "\\r": "\\\\r";\n    "\\t": "\\\\t";\n};\nexport {};\n'],["file:///node_modules/typia/lib/tags/Sequence.d.ts",'import { TagBase } from "./TagBase";\nexport type Sequence<N extends number> = TagBase<{\n    target: "boolean" | "bigint" | "number" | "string" | "array" | "object";\n    kind: "sequence";\n    value: N;\n    schema: {\n        "x-protobuf-sequence": N;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/TagBase.d.ts",'export type TagBase<Props extends TagBase.IProps<any, any, any, any, any, any>> = {\n    /**\n     * This is a dummy property for compilation.\n     *\n     * It does not mean anything in runtime.\n     */\n    "typia.tag"?: Props;\n};\nexport declare namespace TagBase {\n    interface IProps<Target extends "boolean" | "bigint" | "number" | "string" | "array" | "object", Kind extends string, Value extends boolean | bigint | number | string | undefined, Validate extends string | {\n        [key in Target]?: string;\n    }, Exclusive extends boolean | string[], Schema extends object | undefined> {\n        /**\n         * Target type.\n         *\n         * If user tries to adapt this tag to a different type, it would be a compile\n         * error.\n         *\n         * For example, you\'ve configured target type as `string`, but user adapted it\n         * onto a `number` type (`number & YourCustomTag<Value>`), then it would be\n         * blocked by TypeScript compiler.\n         */\n        target: Target;\n        /**\n         * What kind of tag is this?\n         */\n        kind: Kind;\n        /**\n         * Value to be configured by user.\n         */\n        value: Value;\n        /**\n         * Validation script.\n         *\n         * This script would be inserted into the generated validation function.\n         * In here script, target variable name must be `$input`. The variable name\n         * `$input` would be transformed to the suitable when compilation.\n         *\n         * Also, If you\'ve take a mistake on this script, compile error would be\n         * occurred. So, define it with confidence. Compiler will block all your\n         * mistakes.\n         */\n        validate?: Validate;\n        /**\n         * Exclusive option.\n         *\n         * If this property configured as `true`, same {@link kind} tag cannot be\n         * duplicated in the target type. Otherwise, if you\'ve configured this\n         * property as string array, all of the {@link kind} value assigned\n         * tags cannot be compatible in the target type.\n         *\n         * @default false\n         */\n        exclusive?: Exclusive | string[];\n        /**\n         * Additional schema info assigned to the {@link IJsonSchema} object.\n         */\n        schema?: Schema;\n    }\n}\n'],["file:///node_modules/typia/lib/tags/Type.d.ts",'import { TagBase } from "./TagBase";\nexport type Type<Value extends "int32" | "uint32" | "int64" | "uint64" | "float" | "double"> = TagBase<{\n    target: Value extends "int64" | "uint64" ? "bigint" | "number" : "number";\n    kind: "type";\n    value: Value;\n    validate: Value extends "int32" ? `$importInternal("isTypeInt32")($input)` : Value extends "uint32" ? `$importInternal("isTypeUint32")($input)` : Value extends "int64" ? {\n        number: `$importInternal("isTypeInt64")($input)`;\n        bigint: `true`;\n    } : Value extends "uint64" ? {\n        number: `$importInternal("isTypeUint64")($input)`;\n        bigint: `BigInt(0) <= $input`;\n    } : Value extends "float" ? `$importInternal("isTypeFloat")($input)` : `true`;\n    exclusive: true;\n    schema: Value extends "uint32" | "uint64" ? {\n        type: "integer";\n        minimum: 0;\n    } : {\n        type: Value extends "int32" | "uint32" | "int64" | "uint64" ? "integer" : "number";\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/UniqueItems.d.ts",'import { TagBase } from "./TagBase";\nexport type UniqueItems<Value extends boolean = true> = TagBase<{\n    target: "array";\n    kind: "uniqueItems";\n    value: Value;\n    validate: Value extends true ? `$importInternal("isUniqueItems")($input)` : undefined;\n    exclusive: true;\n    schema: {\n        uniqueItems: true;\n    };\n}>;\n'],["file:///node_modules/typia/lib/tags/index.d.ts",'export * from "./Constant";\nexport * from "./ContentMediaType";\nexport * from "./Default";\nexport * from "./Example";\nexport * from "./Examples";\nexport * from "./ExclusiveMaximum";\nexport * from "./ExclusiveMinimum";\nexport * from "./Format";\nexport * from "./JsonSchemaPlugin";\nexport * from "./Maximum";\nexport * from "./MaxItems";\nexport * from "./MaxLength";\nexport * from "./Minimum";\nexport * from "./MinItems";\nexport * from "./MinLength";\nexport * from "./MultipleOf";\nexport * from "./Pattern";\nexport * from "./Sequence";\nexport * from "./TagBase";\nexport * from "./Type";\nexport * from "./UniqueItems";\n'],["file:///node_modules/typia/lib/tags/internal/FormatCheatSheet.d.ts",'/**\n * @reference https://github.dev/ajv-validator/ajv-formats/blob/master/src/formats.ts\n */\nexport declare const FormatCheatSheet: {\n    readonly byte: "/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm.test($input)";\n    readonly password: "true";\n    readonly regex: "(() => { try { new RegExp($input); return true; } catch { return false; } })()";\n    readonly uuid: "/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i.test($input)";\n    readonly email: "/^[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test($input)";\n    readonly hostname: "/^(?=.{1,253}\\\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\\\.?$/i.test($input)";\n    readonly "idn-email": "/^(([^<>()[\\\\]\\\\.,;:\\\\s@\\\\\\"]+(\\\\.[^<>()[\\\\]\\\\.,;:\\\\s@\\\\\\"]+)*)|(\\\\\\".+\\\\\\"))@(([^<>()[\\\\]\\\\.,;:\\\\s@\\\\\\"]+\\\\.)+[^<>()[\\\\]\\\\.,;:\\\\s@\\\\\\"]{2,})$/i.test($input)";\n    readonly "idn-hostname": "/^([a-z0-9\\\\u00a1-\\\\uffff0-9]+(-[a-z0-9\\\\u00a1-\\\\uffff0-9]+)*\\\\.)+[a-z\\\\u00a1-\\\\uffff]{2,}$/i.test($input)";\n    readonly iri: "/^[A-Za-z][\\\\d+-.A-Za-z]*:[^\\\\u0000-\\\\u0020\\"<>\\\\\\\\^`{|}]*$/u.test($input)";\n    readonly "iri-reference": "/^[A-Za-z][\\\\d+-.A-Za-z]*:[^\\\\u0000-\\\\u0020\\"<>\\\\\\\\^`{|}]*$/u.test($input)";\n    readonly ipv4: "/^(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)$/.test($input)";\n    readonly ipv6: "/^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))$/i.test($input)";\n    readonly uri: "/\\\\/|:/.test($input) && /^(?:[a-z][a-z0-9+\\\\-.]*:)(?:\\\\/?\\\\/(?:(?:[a-z0-9\\\\-._~!$&\'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\\\.[a-z0-9\\\\-._~!$&\'()*+,;=:]+)\\\\]|(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)|(?:[a-z0-9\\\\-._~!$&\'()*+,;=]|%[0-9a-f]{2})*)(?::\\\\d*)?(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@]|%[0-9a-f]{2})*)*|\\\\/(?:(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\\\?(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\\\-._~!$&\'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i.test($input)";\n    readonly "uri-reference": "/^(?:[a-z][a-z0-9+\\\\-.]*:)?(?:\\\\/?\\\\/(?:(?:[a-z0-9\\\\-._~!$&\'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\\\.[a-z0-9\\\\-._~!$&\'()*+,;=:]+)\\\\]|(?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d\\\\d?)|(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=]|%[0-9a-f]{2})*)(?::\\\\d*)?(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\\\/(?:(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\/(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\\\?(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\\\-._~!$&\'\\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i.test($input)";\n    readonly "uri-template": "/^(?:(?:[^\\\\x00-\\\\x20\\"\'<>%\\\\\\\\^`{|}]|%[0-9a-f]{2})|\\\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\\\*)?)*\\\\})*$/i.test($input)";\n    readonly url: "/^(?:https?|ftp):\\\\/\\\\/(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u{00a1}-\\\\u{ffff}]+-)*[a-z0-9\\\\u{00a1}-\\\\u{ffff}]+)(?:\\\\.(?:[a-z0-9\\\\u{00a1}-\\\\u{ffff}]+-)*[a-z0-9\\\\u{00a1}-\\\\u{ffff}]+)*(?:\\\\.(?:[a-z\\\\u{00a1}-\\\\u{ffff}]{2,})))(?::\\\\d{2,5})?(?:\\\\/[^\\\\s]*)?$/iu.test($input)";\n    readonly "date-time": "/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])(T|\\\\s)([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](?:\\\\.[0-9]{1,9})?(Z|[+-]([01][0-9]|2[0-3]):[0-5][0-9])$/i.test($input)";\n    readonly date: "/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/.test($input)";\n    readonly time: "/^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](?:\\\\.[0-9]{1,9})?(Z|[+-]([01][0-9]|2[0-3]):[0-5][0-9])$/i.test($input)";\n    readonly duration: "/^P(?!$)((\\\\d+Y)?(\\\\d+M)?(\\\\d+D)?(T(?=\\\\d)(\\\\d+H)?(\\\\d+M)?(\\\\d+S)?)?|(\\\\d+W)?)$/.test($input)";\n    readonly "json-pointer": "/^(?:\\\\/(?:[^~/]|~0|~1)*)*$/.test($input)";\n    readonly "relative-json-pointer": "/^(?:0|[1-9][0-9]*)(?:#|(?:\\\\/(?:[^~/]|~0|~1)*)*)$/.test($input)";\n};\n'],["file:///node_modules/typia/lib/transform.d.ts",'import ts from "typescript";\nimport { ITransformOptions } from "./transformers/ITransformOptions";\nimport { ITypiaContext } from "./transformers/ITypiaContext";\nexport declare const transform: (program: ts.Program, options: ITransformOptions | undefined, extras: ITypiaContext["extras"]) => ts.TransformerFactory<ts.SourceFile>;\nexport default transform;\n'],["file:///node_modules/typia/lib/transformers/CallExpressionTransformer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "./ITypiaContext";\nexport declare namespace CallExpressionTransformer {\n    const transform: (props: {\n        context: ITypiaContext;\n        expression: ts.CallExpression;\n    }) => ts.Expression | null;\n}\n'],["file:///node_modules/typia/lib/transformers/FileTransformer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "./ITypiaContext";\nexport declare namespace FileTransformer {\n    const transform: (environments: Omit<ITypiaContext, "transformer" | "importer">) => (transformer: ts.TransformationContext) => (file: ts.SourceFile) => ts.SourceFile;\n}\n'],["file:///node_modules/typia/lib/transformers/IProgrammerProps.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "./ITypiaContext";\nexport interface IProgrammerProps {\n    context: ITypiaContext;\n    modulo: ts.LeftHandSideExpression;\n    type: ts.Type;\n    name: string | undefined;\n    init?: ts.Expression | undefined;\n}\n'],["file:///node_modules/typia/lib/transformers/ITransformOptions.d.ts","export interface ITransformOptions {\n    /**\n     * Whether to validate finite number or not.\n     *\n     * If configured true, number typed values would be validated by Number.isNaN().\n     *\n     * However, whatever you configure, it would be ignored when marshaling or parsing.\n     *\n     *   - when marshaling, always be true\n     *     - assertStringify()\n     *     - validateEncode()\n     *   - when parsing, always be false\n     *     - assertParse()\n     *     - isDecode()\n     *\n     * @default false\n     */\n    finite?: undefined | boolean;\n    /**\n     * Whether to validate finite number or not.\n     *\n     * If configured true, number typed values would be validated by Number.isFinite().\n     *\n     * However, whatever you configure, it can be ignored in below case.\n     *\n     *   - when `finite` option is true, this option would be ignored\n     *   - when marshaling, always be true\n     *     - assertStringify()\n     *     - validateEncode()\n     *   - when parsing, always be false\n     *     - assertParse()\n     *     - isDecode()\n     *\n     * @default false\n     */\n    numeric?: undefined | boolean;\n    /**\n     * Whether to validate functional type or not.\n     *\n     * However, whatever you configure, it becomes false when marshaling or parsing.\n     *\n     * @default false\n     */\n    functional?: undefined | boolean;\n    /**\n     * Whether to check undefined value or not.\n     *\n     * JavaScript can assign `undefined` value to a specific property and it is an\n     * issue when validating without allowing superfluous properties. Should undefined\n     * value assigned superfluous property be allowed or not?\n     *\n     * Note that, this option only works on {@link equals} function. Other function\n     * like {@link assertEquals} or {@link validateEquals} would ignore this option\n     * value and always allow the `undefined` value.\n     *\n     * @default true\n     */\n    undefined?: undefined | boolean;\n}\n"],["file:///node_modules/typia/lib/transformers/ITransformProps.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "./ITypiaContext";\nexport interface ITransformProps {\n    context: ITypiaContext;\n    modulo: ts.LeftHandSideExpression;\n    expression: ts.CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/ITypiaContext.d.ts",'import ts from "typescript";\nimport { ImportProgrammer } from "../programmers/ImportProgrammer";\nimport { ITransformOptions } from "./ITransformOptions";\nexport interface ITypiaContext {\n    program: ts.Program;\n    compilerOptions: ts.CompilerOptions;\n    checker: ts.TypeChecker;\n    printer: ts.Printer;\n    options: ITransformOptions;\n    transformer: ts.TransformationContext;\n    importer: ImportProgrammer;\n    extras: {\n        addDiagnostic: (diag: ts.Diagnostic) => number;\n    };\n}\n'],["file:///node_modules/typia/lib/transformers/ImportTransformer.d.ts",'import ts from "typescript";\nexport declare namespace ImportTransformer {\n    const transform: (props: {\n        from: string;\n        to: string;\n    }) => (context: ts.TransformationContext) => (file: ts.SourceFile) => ts.SourceFile;\n}\n'],["file:///node_modules/typia/lib/transformers/NoTransformConfigurationError.d.ts","export {};\n"],["file:///node_modules/typia/lib/transformers/NodeTransformer.d.ts",'import ts from "typescript";\nimport { ITypiaContext } from "./ITypiaContext";\nexport declare namespace NodeTransformer {\n    const transform: (props: {\n        context: ITypiaContext;\n        node: ts.Node;\n    }) => ts.Node | null;\n}\n'],["file:///node_modules/typia/lib/transformers/TransformerError.d.ts",'import { MetadataFactory } from "../factories/MetadataFactory";\nexport declare class TransformerError extends Error {\n    readonly code: string;\n    constructor(props: TransformerError.IProps);\n}\nexport declare namespace TransformerError {\n    interface IProps {\n        code: string;\n        message: string;\n    }\n    const from: (props: {\n        code: string;\n        errors: MetadataFactory.IError[];\n    }) => TransformerError;\n}\n'],["file:///node_modules/typia/lib/transformers/features/AssertTransformer.d.ts",'import { AssertProgrammer } from "../../programmers/AssertProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace AssertTransformer {\n    const transform: (config: AssertProgrammer.IConfig) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/CreateAssertTransformer.d.ts",'import { AssertProgrammer } from "../../programmers/AssertProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace CreateAssertTransformer {\n    const transform: (config: AssertProgrammer.IConfig) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/CreateIsTransformer.d.ts",'import { IsProgrammer } from "../../programmers/IsProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace CreateIsTransformer {\n    const transform: (config: IsProgrammer.IConfig) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/CreateRandomTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace CreateRandomTransformer {\n    const transform: (props: ITransformProps) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/CreateValidateTransformer.d.ts",'import { ValidateProgrammer } from "../../programmers/ValidateProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace CreateValidateTransformer {\n    const transform: (config: ValidateProgrammer.IConfig) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/IsTransformer.d.ts",'import { IsProgrammer } from "../../programmers/IsProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace IsTransformer {\n    const transform: (config: IsProgrammer.IConfig) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/RandomTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace RandomTransformer {\n    const transform: (props: ITransformProps) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/ValidateTransformer.d.ts",'import { ValidateProgrammer } from "../../programmers/ValidateProgrammer";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace ValidateTransformer {\n    const transform: (config: ValidateProgrammer.IConfig) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/functional/FunctionalGenericTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nimport { ITypiaContext } from "../../ITypiaContext";\nexport declare namespace FunctionalGenericTransformer {\n    interface IConfig {\n        equals: boolean;\n    }\n    interface ISpecification {\n        method: string;\n        config: IConfig;\n        programmer: (p: {\n            context: ITypiaContext;\n            modulo: ts.LeftHandSideExpression;\n            expression: ts.Expression;\n            declaration: ts.FunctionDeclaration;\n            config: IConfig;\n            init?: ts.Expression;\n        }) => ts.Expression;\n    }\n    const transform: (spec: ISpecification) => (props: ITransformProps) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpAssertFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpAssertFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpAssertHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpAssertHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpAssertQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpAssertQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpIsFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpIsFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpIsHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpIsHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpIsQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpIsQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpParameterTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpParameterTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpValidateFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpValidateFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpValidateHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpValidateHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/CreateHttpValidateQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace CreateHttpValidateQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpAssertFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpAssertFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpAssertHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpAssertHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpAssertQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpAssertQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpIsFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpIsFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpIsHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpIsHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpIsQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpIsQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpParameterTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpParameterTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpValidateFormDataTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpValidateFormDataTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpValidateHeadersTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpValidateHeadersTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/http/HttpValidateQueryTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace HttpValidateQueryTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonApplicationTransformer.d.ts",""],["file:///node_modules/typia/lib/transformers/features/json/JsonAssertParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonAssertParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonAssertStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonAssertStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateAssertParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateAssertParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateAssertStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateAssertStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateIsParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateIsParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateIsStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateIsStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateValidateParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateValidateParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonCreateValidateStringifyProgrammer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonCreateValidateStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonIsParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonIsParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonIsStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonIsStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonSchemaTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonSchemaTransformer {\n    const transform: (props: Pick<ITransformProps, "context" | "expression">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonSchemasTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonSchemasTransformer {\n    const transform: (props: Pick<ITransformProps, "context" | "expression">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonValidateParseTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonValidateParseTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/json/JsonValidateStringifyTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace JsonValidateStringifyTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/llm/LlmApplicationTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace LlmApplicationTransformer {\n    const transform: (props: ITransformProps) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/llm/LlmControllerTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace LlmControllerTransformer {\n    const transform: (props: ITransformProps) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/llm/LlmParametersTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace LlmParametersTransformer {\n    const transform: (props: Omit<ITransformProps, "modulo">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/llm/LlmSchemaTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace LlmSchemaTransformer {\n    const transform: (props: Omit<ITransformProps, "modulo">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscAssertCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscAssertCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscAssertPruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscAssertPruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateAssertCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateAssertCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateAssertPruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateAssertPruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateIsCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateIsCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateIsPruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateIsPruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreatePruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreatePruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateValidateCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateValidateCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscCreateValidatePruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscCreateValidatePruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscIsCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscIsCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscIsPruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscIsPruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscLiteralsTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscLiteralsTransformer {\n    const transform: (props: Omit<ITransformProps, "modulo">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscPruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscPruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscValidateCloneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscValidateCloneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/misc/MiscValidatePruneTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace MiscValidatePruneTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationAssertGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationAssertGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationCreateAssertGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationCreateAssertGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationCreateGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationCreateGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationCreateIsGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationCreateIsGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationCreateValidateGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationCreateValidateGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationIsGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationIsGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/notations/NotationValidateGeneralTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace NotationValidateGeneralTransformer {\n    const transform: (rename: (str: string) => string) => (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufAssertDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufAssertDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufAssertEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufAssertEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateAssertDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateAssertDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateAssertEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateAssertEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateIsDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateIsDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateIsEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateIsEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateValidateDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateValidateDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufCreateValidateEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufCreateValidateEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").Expression | import("typescript").ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufIsDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufIsDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufIsEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufIsEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufMessageTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufMessageTransformer {\n    const transform: (props: Pick<ITransformProps, "context" | "expression">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufValidateDecodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufValidateDecodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/protobuf/ProtobufValidateEncodeTransformer.d.ts",'import { ITransformProps } from "../../ITransformProps";\nexport declare namespace ProtobufValidateEncodeTransformer {\n    const transform: (props: ITransformProps) => import("typescript").CallExpression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/reflect/ReflectMetadataTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace ReflectMetadataTransformer {\n    const transform: (props: Pick<ITransformProps, "context" | "expression">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/features/reflect/ReflectNameTransformer.d.ts",'import ts from "typescript";\nimport { ITransformProps } from "../../ITransformProps";\nexport declare namespace ReflectNameTransformer {\n    const transform: (props: Pick<ITransformProps, "context" | "expression">) => ts.Expression;\n}\n'],["file:///node_modules/typia/lib/transformers/internal/GenericTransformer.d.ts",'import ts from "typescript";\nimport { IProgrammerProps } from "../IProgrammerProps";\nimport { ITransformProps } from "../ITransformProps";\nexport declare namespace GenericTransformer {\n    interface IProps extends ITransformProps {\n        method: string;\n        write: (props: IProgrammerProps) => ts.Expression | ts.ArrowFunction;\n    }\n    const scalar: (props: IProps) => ts.CallExpression;\n    const factory: (props: IProps) => ts.Expression | ts.ArrowFunction;\n}\n'],["file:///node_modules/typia/lib/typings/Atomic.d.ts",'export declare namespace Atomic {\n    type Type = boolean | number | string | bigint;\n    type Literal = "boolean" | "integer" | "number" | "string" | "bigint";\n    type Mapper = {\n        boolean: boolean;\n        integer: number;\n        number: number;\n        string: string;\n        bigint: bigint;\n    };\n}\n'],["file:///node_modules/typia/lib/typings/ClassProperties.d.ts",'import { OmitNever } from "./OmitNever";\nexport type ClassProperties<T extends object> = OmitNever<{\n    [K in keyof T]: T[K] extends Function ? never : T[K];\n}>;\n'],["file:///node_modules/typia/lib/typings/Customizable.d.ts","export type Customizable = {\n    number: number;\n    string: string;\n    bigint: bigint;\n};\n"],["file:///node_modules/typia/lib/typings/Equal.d.ts","/**\n * Compare the equivalence of the two types X and Y.\n *\n * The two types X and Y refer to any type that can be expressed in the type script, such as the union type and the object type.\n *\n * @template X One of the types to compare\n * @template Y One of the types to compare\n *\n * ```ts\n * type Answer = Equal<1 | 2, 1 | 2>; // true\n * ```\n *\n * @author Kyungsu Kang - https://github.com/kakasoo\n */\nexport type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? true : false;\n"],["file:///node_modules/typia/lib/typings/IsTuple.d.ts",'export type IsTuple<T extends readonly any[] | {\n    length: number;\n}> = [\n    T\n] extends [never] ? false : T extends readonly any[] ? number extends T["length"] ? false : true : false;\n'],["file:///node_modules/typia/lib/typings/NativeClass.d.ts","export type NativeClass = Date | Set<any> | Map<any, any> | WeakSet<any> | WeakMap<any, any> | Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array | BigUint64Array | Int8Array | Int16Array | Int32Array | BigInt64Array | Float32Array | Float64Array | ArrayBuffer | SharedArrayBuffer | DataView | Blob | File | RegExp;\n"],["file:///node_modules/typia/lib/typings/OmitNever.d.ts",'import { SpecialFields } from "./SpecialFields";\nexport type OmitNever<T extends object> = Omit<T, SpecialFields<T, never>>;\n'],["file:///node_modules/typia/lib/typings/ProtobufAtomic.d.ts",'export type ProtobufAtomic = "bool" | "int32" | "uint32" | "int64" | "uint64" | "float" | "double" | "string";\nexport declare namespace ProtobufAtomic {\n    type Numeric = "int32" | "uint32" | "int64" | "uint64" | "float" | "double";\n    type BigNumeric = "int64" | "uint64";\n}\n'],["file:///node_modules/typia/lib/typings/SpecialFields.d.ts","export type SpecialFields<Instance extends object, Target> = {\n    [P in keyof Instance]: Instance[P] extends Target ? P : never;\n}[keyof Instance & string];\n"],["file:///node_modules/typia/lib/typings/ValidationPipe.d.ts","export type ValidationPipe<T, E> = {\n    success: true;\n    data: T;\n} | {\n    success: false;\n    errors: E[];\n};\n"],["file:///node_modules/typia/lib/typings/ValueOf.d.ts","export type ValueOf<Instance> = IsValueOf<Instance, Boolean> extends true ? boolean : IsValueOf<Instance, Number> extends true ? number : IsValueOf<Instance, String> extends true ? string : Instance;\ntype IsValueOf<Instance, Object extends IValueOf<any>> = Instance extends Object ? Object extends IValueOf<infer Primitive> ? Instance extends Primitive ? false : true : false : false;\ninterface IValueOf<T> {\n    valueOf(): T;\n}\nexport {};\n"],["file:///node_modules/typia/lib/typings/Writable.d.ts",'import { ClassProperties } from "./ClassProperties";\nexport type Writable<T extends object> = {\n    -readonly [P in keyof T]: T[P];\n};\nexport declare function Writable<T extends object>(elem: T): Writable<ClassProperties<T>>;\n'],["file:///node_modules/typia/lib/utils/ArrayUtil.d.ts","export declare namespace ArrayUtil {\n    const has: <T>(array: T[], pred: (elem: T) => boolean) => boolean;\n    const add: <T>(array: T[], value: T, pred?: (x: T, y: T) => boolean) => boolean;\n    const set: <Key, T>(array: T[], value: T, key: (elem: T) => Key) => void;\n    const take: <T>(array: T[], pred: (elem: T) => boolean, init: () => T) => T;\n    const repeat: <T>(count: number, closure: (index: number, count: number) => T) => T[];\n}\n"],["file:///node_modules/typia/lib/utils/Escaper.d.ts","export declare namespace Escaper {\n    const variable: (str: string) => boolean;\n    const reserved: (str: string) => boolean;\n}\n"],["file:///node_modules/typia/lib/utils/MapUtil.d.ts","export declare namespace MapUtil {\n    const take: <Key, T>(dict: Map<Key, T>, key: Key, generator: () => T) => T;\n}\n"],["file:///node_modules/typia/lib/utils/NamingConvention.d.ts","export declare namespace NamingConvention {\n    function snake(str: string): string;\n    function camel(str: string): string;\n    function pascal(str: string): string;\n}\n"],["file:///node_modules/typia/lib/utils/PatternUtil.d.ts",'export declare namespace PatternUtil {\n    const fix: (str: string) => string;\n    const escape: (str: string) => string;\n    const NUMBER: string;\n    const BOOLEAN = "true|false";\n    const STRING = "(.*)";\n}\n'],["file:///node_modules/typia/lib/utils/ProtobufNameEncoder.d.ts","export declare namespace ProtobufNameEncoder {\n    const encode: (str: string) => string;\n    const decode: (str: string) => string;\n}\n"],["file:///node_modules/typia/lib/utils/Singleton.d.ts","export declare class Singleton<T, Args extends any[] = []> {\n    private readonly closure_;\n    private value_;\n    constructor(closure: (...args: Args) => T);\n    get(...args: Args): T;\n}\n"],["file:///node_modules/typia/lib/utils/StringUtil.d.ts","export declare namespace StringUtil {\n    const capitalize: (str: string) => string;\n    const escapeDuplicate: (props: {\n        keep: string[];\n        input: string;\n        escape?: (str: string) => string;\n    }) => string;\n}\n"],["file:///node_modules/typescript/lib/lib.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es5" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n'],["file:///node_modules/typescript/lib/lib.decorators.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/**\n * The decorator context types provided to class element decorators.\n */\ntype ClassMemberDecoratorContext =\n    | ClassMethodDecoratorContext\n    | ClassGetterDecoratorContext\n    | ClassSetterDecoratorContext\n    | ClassFieldDecoratorContext\n    | ClassAccessorDecoratorContext;\n\n/**\n * The decorator context types provided to any decorator.\n */\ntype DecoratorContext =\n    | ClassDecoratorContext\n    | ClassMemberDecoratorContext;\n\ntype DecoratorMetadataObject = Record<PropertyKey, unknown> & object;\n\ntype DecoratorMetadata = typeof globalThis extends { Symbol: { readonly metadata: symbol; }; } ? DecoratorMetadataObject : DecoratorMetadataObject | undefined;\n\n/**\n * Context provided to a class decorator.\n * @template Class The type of the decorated class associated with this context.\n */\ninterface ClassDecoratorContext<\n    Class extends abstract new (...args: any) => any = abstract new (...args: any) => any,\n> {\n    /** The kind of element that was decorated. */\n    readonly kind: "class";\n\n    /** The name of the decorated class. */\n    readonly name: string | undefined;\n\n    /**\n     * Adds a callback to be invoked after the class definition has been finalized.\n     *\n     * @example\n     * ```ts\n     * function customElement(name: string): ClassDecoratorFunction {\n     *   return (target, context) => {\n     *     context.addInitializer(function () {\n     *       customElements.define(name, this);\n     *     });\n     *   }\n     * }\n     *\n     * @customElement("my-element")\n     * class MyElement {}\n     * ```\n     */\n    addInitializer(initializer: (this: Class) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n\n/**\n * Context provided to a class method decorator.\n * @template This The type on which the class element will be defined. For a static class element, this will be\n * the type of the constructor. For a non-static class element, this will be the type of the instance.\n * @template Value The type of the decorated class method.\n */\ninterface ClassMethodDecoratorContext<\n    This = unknown,\n    Value extends (this: This, ...args: any) => any = (this: This, ...args: any) => any,\n> {\n    /** The kind of class element that was decorated. */\n    readonly kind: "method";\n\n    /** The name of the decorated class element. */\n    readonly name: string | symbol;\n\n    /** A value indicating whether the class element is a static (`true`) or instance (`false`) element. */\n    readonly static: boolean;\n\n    /** A value indicating whether the class element has a private name. */\n    readonly private: boolean;\n\n    /** An object that can be used to access the current value of the class element at runtime. */\n    readonly access: {\n        /**\n         * Determines whether an object has a property with the same name as the decorated element.\n         */\n        has(object: This): boolean;\n        /**\n         * Gets the current value of the method from the provided object.\n         *\n         * @example\n         * let fn = context.access.get(instance);\n         */\n        get(object: This): Value;\n    };\n\n    /**\n     * Adds a callback to be invoked either after static methods are defined but before\n     * static initializers are run (when decorating a `static` element), or before instance\n     * initializers are run (when decorating a non-`static` element).\n     *\n     * @example\n     * ```ts\n     * const bound: ClassMethodDecoratorFunction = (value, context) {\n     *   if (context.private) throw new TypeError("Not supported on private methods.");\n     *   context.addInitializer(function () {\n     *     this[context.name] = this[context.name].bind(this);\n     *   });\n     * }\n     *\n     * class C {\n     *   message = "Hello";\n     *\n     *   @bound\n     *   m() {\n     *     console.log(this.message);\n     *   }\n     * }\n     * ```\n     */\n    addInitializer(initializer: (this: This) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n\n/**\n * Context provided to a class getter decorator.\n * @template This The type on which the class element will be defined. For a static class element, this will be\n * the type of the constructor. For a non-static class element, this will be the type of the instance.\n * @template Value The property type of the decorated class getter.\n */\ninterface ClassGetterDecoratorContext<\n    This = unknown,\n    Value = unknown,\n> {\n    /** The kind of class element that was decorated. */\n    readonly kind: "getter";\n\n    /** The name of the decorated class element. */\n    readonly name: string | symbol;\n\n    /** A value indicating whether the class element is a static (`true`) or instance (`false`) element. */\n    readonly static: boolean;\n\n    /** A value indicating whether the class element has a private name. */\n    readonly private: boolean;\n\n    /** An object that can be used to access the current value of the class element at runtime. */\n    readonly access: {\n        /**\n         * Determines whether an object has a property with the same name as the decorated element.\n         */\n        has(object: This): boolean;\n        /**\n         * Invokes the getter on the provided object.\n         *\n         * @example\n         * let value = context.access.get(instance);\n         */\n        get(object: This): Value;\n    };\n\n    /**\n     * Adds a callback to be invoked either after static methods are defined but before\n     * static initializers are run (when decorating a `static` element), or before instance\n     * initializers are run (when decorating a non-`static` element).\n     */\n    addInitializer(initializer: (this: This) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n\n/**\n * Context provided to a class setter decorator.\n * @template This The type on which the class element will be defined. For a static class element, this will be\n * the type of the constructor. For a non-static class element, this will be the type of the instance.\n * @template Value The type of the decorated class setter.\n */\ninterface ClassSetterDecoratorContext<\n    This = unknown,\n    Value = unknown,\n> {\n    /** The kind of class element that was decorated. */\n    readonly kind: "setter";\n\n    /** The name of the decorated class element. */\n    readonly name: string | symbol;\n\n    /** A value indicating whether the class element is a static (`true`) or instance (`false`) element. */\n    readonly static: boolean;\n\n    /** A value indicating whether the class element has a private name. */\n    readonly private: boolean;\n\n    /** An object that can be used to access the current value of the class element at runtime. */\n    readonly access: {\n        /**\n         * Determines whether an object has a property with the same name as the decorated element.\n         */\n        has(object: This): boolean;\n        /**\n         * Invokes the setter on the provided object.\n         *\n         * @example\n         * context.access.set(instance, value);\n         */\n        set(object: This, value: Value): void;\n    };\n\n    /**\n     * Adds a callback to be invoked either after static methods are defined but before\n     * static initializers are run (when decorating a `static` element), or before instance\n     * initializers are run (when decorating a non-`static` element).\n     */\n    addInitializer(initializer: (this: This) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n\n/**\n * Context provided to a class `accessor` field decorator.\n * @template This The type on which the class element will be defined. For a static class element, this will be\n * the type of the constructor. For a non-static class element, this will be the type of the instance.\n * @template Value The type of decorated class field.\n */\ninterface ClassAccessorDecoratorContext<\n    This = unknown,\n    Value = unknown,\n> {\n    /** The kind of class element that was decorated. */\n    readonly kind: "accessor";\n\n    /** The name of the decorated class element. */\n    readonly name: string | symbol;\n\n    /** A value indicating whether the class element is a static (`true`) or instance (`false`) element. */\n    readonly static: boolean;\n\n    /** A value indicating whether the class element has a private name. */\n    readonly private: boolean;\n\n    /** An object that can be used to access the current value of the class element at runtime. */\n    readonly access: {\n        /**\n         * Determines whether an object has a property with the same name as the decorated element.\n         */\n        has(object: This): boolean;\n\n        /**\n         * Invokes the getter on the provided object.\n         *\n         * @example\n         * let value = context.access.get(instance);\n         */\n        get(object: This): Value;\n\n        /**\n         * Invokes the setter on the provided object.\n         *\n         * @example\n         * context.access.set(instance, value);\n         */\n        set(object: This, value: Value): void;\n    };\n\n    /**\n     * Adds a callback to be invoked immediately after the auto `accessor` being\n     * decorated is initialized (regardless if the `accessor` is `static` or not).\n     */\n    addInitializer(initializer: (this: This) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n\n/**\n * Describes the target provided to class `accessor` field decorators.\n * @template This The `this` type to which the target applies.\n * @template Value The property type for the class `accessor` field.\n */\ninterface ClassAccessorDecoratorTarget<This, Value> {\n    /**\n     * Invokes the getter that was defined prior to decorator application.\n     *\n     * @example\n     * let value = target.get.call(instance);\n     */\n    get(this: This): Value;\n\n    /**\n     * Invokes the setter that was defined prior to decorator application.\n     *\n     * @example\n     * target.set.call(instance, value);\n     */\n    set(this: This, value: Value): void;\n}\n\n/**\n * Describes the allowed return value from a class `accessor` field decorator.\n * @template This The `this` type to which the target applies.\n * @template Value The property type for the class `accessor` field.\n */\ninterface ClassAccessorDecoratorResult<This, Value> {\n    /**\n     * An optional replacement getter function. If not provided, the existing getter function is used instead.\n     */\n    get?(this: This): Value;\n\n    /**\n     * An optional replacement setter function. If not provided, the existing setter function is used instead.\n     */\n    set?(this: This, value: Value): void;\n\n    /**\n     * An optional initializer mutator that is invoked when the underlying field initializer is evaluated.\n     * @param value The incoming initializer value.\n     * @returns The replacement initializer value.\n     */\n    init?(this: This, value: Value): Value;\n}\n\n/**\n * Context provided to a class field decorator.\n * @template This The type on which the class element will be defined. For a static class element, this will be\n * the type of the constructor. For a non-static class element, this will be the type of the instance.\n * @template Value The type of the decorated class field.\n */\ninterface ClassFieldDecoratorContext<\n    This = unknown,\n    Value = unknown,\n> {\n    /** The kind of class element that was decorated. */\n    readonly kind: "field";\n\n    /** The name of the decorated class element. */\n    readonly name: string | symbol;\n\n    /** A value indicating whether the class element is a static (`true`) or instance (`false`) element. */\n    readonly static: boolean;\n\n    /** A value indicating whether the class element has a private name. */\n    readonly private: boolean;\n\n    /** An object that can be used to access the current value of the class element at runtime. */\n    readonly access: {\n        /**\n         * Determines whether an object has a property with the same name as the decorated element.\n         */\n        has(object: This): boolean;\n\n        /**\n         * Gets the value of the field on the provided object.\n         */\n        get(object: This): Value;\n\n        /**\n         * Sets the value of the field on the provided object.\n         */\n        set(object: This, value: Value): void;\n    };\n\n    /**\n     * Adds a callback to be invoked immediately after the field being decorated\n     * is initialized (regardless if the field is `static` or not).\n     */\n    addInitializer(initializer: (this: This) => void): void;\n\n    readonly metadata: DecoratorMetadata;\n}\n'],["file:///node_modules/typescript/lib/lib.decorators.legacy.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\ndeclare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;\ndeclare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\ndeclare type ParameterDecorator = (target: Object, propertyKey: string | symbol | undefined, parameterIndex: number) => void;\n'],["file:///node_modules/typescript/lib/lib.dom.asynciterable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Window Async Iterable APIs\n/////////////////////////////\n\ninterface FileSystemDirectoryHandleAsyncIterator<T> extends AsyncIteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.asyncIterator](): FileSystemDirectoryHandleAsyncIterator<T>;\n}\n\ninterface FileSystemDirectoryHandle {\n    [Symbol.asyncIterator](): FileSystemDirectoryHandleAsyncIterator<[string, FileSystemHandle]>;\n    entries(): FileSystemDirectoryHandleAsyncIterator<[string, FileSystemHandle]>;\n    keys(): FileSystemDirectoryHandleAsyncIterator<string>;\n    values(): FileSystemDirectoryHandleAsyncIterator<FileSystemHandle>;\n}\n\ninterface ReadableStreamAsyncIterator<T> extends AsyncIteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.asyncIterator](): ReadableStreamAsyncIterator<T>;\n}\n\ninterface ReadableStream<R = any> {\n    [Symbol.asyncIterator](options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n    values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n}\n'],["file:///node_modules/typescript/lib/lib.dom.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Window APIs\n/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface AddressErrors {\n    addressLine?: string;\n    city?: string;\n    country?: string;\n    dependentLocality?: string;\n    organization?: string;\n    phone?: string;\n    postalCode?: string;\n    recipient?: string;\n    region?: string;\n    sortingCode?: string;\n}\n\ninterface AesCbcParams extends Algorithm {\n    iv: BufferSource;\n}\n\ninterface AesCtrParams extends Algorithm {\n    counter: BufferSource;\n    length: number;\n}\n\ninterface AesDerivedKeyParams extends Algorithm {\n    length: number;\n}\n\ninterface AesGcmParams extends Algorithm {\n    additionalData?: BufferSource;\n    iv: BufferSource;\n    tagLength?: number;\n}\n\ninterface AesKeyAlgorithm extends KeyAlgorithm {\n    length: number;\n}\n\ninterface AesKeyGenParams extends Algorithm {\n    length: number;\n}\n\ninterface Algorithm {\n    name: string;\n}\n\ninterface AnalyserOptions extends AudioNodeOptions {\n    fftSize?: number;\n    maxDecibels?: number;\n    minDecibels?: number;\n    smoothingTimeConstant?: number;\n}\n\ninterface AnimationEventInit extends EventInit {\n    animationName?: string;\n    elapsedTime?: number;\n    pseudoElement?: string;\n}\n\ninterface AnimationPlaybackEventInit extends EventInit {\n    currentTime?: CSSNumberish | null;\n    timelineTime?: CSSNumberish | null;\n}\n\ninterface AssignedNodesOptions {\n    flatten?: boolean;\n}\n\ninterface AudioBufferOptions {\n    length: number;\n    numberOfChannels?: number;\n    sampleRate: number;\n}\n\ninterface AudioBufferSourceOptions {\n    buffer?: AudioBuffer | null;\n    detune?: number;\n    loop?: boolean;\n    loopEnd?: number;\n    loopStart?: number;\n    playbackRate?: number;\n}\n\ninterface AudioConfiguration {\n    bitrate?: number;\n    channels?: string;\n    contentType: string;\n    samplerate?: number;\n    spatialRendering?: boolean;\n}\n\ninterface AudioContextOptions {\n    latencyHint?: AudioContextLatencyCategory | number;\n    sampleRate?: number;\n}\n\ninterface AudioDataCopyToOptions {\n    format?: AudioSampleFormat;\n    frameCount?: number;\n    frameOffset?: number;\n    planeIndex: number;\n}\n\ninterface AudioDataInit {\n    data: BufferSource;\n    format: AudioSampleFormat;\n    numberOfChannels: number;\n    numberOfFrames: number;\n    sampleRate: number;\n    timestamp: number;\n    transfer?: ArrayBuffer[];\n}\n\ninterface AudioDecoderConfig {\n    codec: string;\n    description?: BufferSource;\n    numberOfChannels: number;\n    sampleRate: number;\n}\n\ninterface AudioDecoderInit {\n    error: WebCodecsErrorCallback;\n    output: AudioDataOutputCallback;\n}\n\ninterface AudioDecoderSupport {\n    config?: AudioDecoderConfig;\n    supported?: boolean;\n}\n\ninterface AudioEncoderConfig {\n    bitrate?: number;\n    bitrateMode?: BitrateMode;\n    codec: string;\n    numberOfChannels: number;\n    opus?: OpusEncoderConfig;\n    sampleRate: number;\n}\n\ninterface AudioEncoderInit {\n    error: WebCodecsErrorCallback;\n    output: EncodedAudioChunkOutputCallback;\n}\n\ninterface AudioEncoderSupport {\n    config?: AudioEncoderConfig;\n    supported?: boolean;\n}\n\ninterface AudioNodeOptions {\n    channelCount?: number;\n    channelCountMode?: ChannelCountMode;\n    channelInterpretation?: ChannelInterpretation;\n}\n\ninterface AudioProcessingEventInit extends EventInit {\n    inputBuffer: AudioBuffer;\n    outputBuffer: AudioBuffer;\n    playbackTime: number;\n}\n\ninterface AudioTimestamp {\n    contextTime?: number;\n    performanceTime?: DOMHighResTimeStamp;\n}\n\ninterface AudioWorkletNodeOptions extends AudioNodeOptions {\n    numberOfInputs?: number;\n    numberOfOutputs?: number;\n    outputChannelCount?: number[];\n    parameterData?: Record<string, number>;\n    processorOptions?: any;\n}\n\ninterface AuthenticationExtensionsClientInputs {\n    appid?: string;\n    credProps?: boolean;\n    hmacCreateSecret?: boolean;\n    minPinLength?: boolean;\n    prf?: AuthenticationExtensionsPRFInputs;\n}\n\ninterface AuthenticationExtensionsClientInputsJSON {\n}\n\ninterface AuthenticationExtensionsClientOutputs {\n    appid?: boolean;\n    credProps?: CredentialPropertiesOutput;\n    hmacCreateSecret?: boolean;\n    prf?: AuthenticationExtensionsPRFOutputs;\n}\n\ninterface AuthenticationExtensionsPRFInputs {\n    eval?: AuthenticationExtensionsPRFValues;\n    evalByCredential?: Record<string, AuthenticationExtensionsPRFValues>;\n}\n\ninterface AuthenticationExtensionsPRFOutputs {\n    enabled?: boolean;\n    results?: AuthenticationExtensionsPRFValues;\n}\n\ninterface AuthenticationExtensionsPRFValues {\n    first: BufferSource;\n    second?: BufferSource;\n}\n\ninterface AuthenticatorSelectionCriteria {\n    authenticatorAttachment?: AuthenticatorAttachment;\n    requireResidentKey?: boolean;\n    residentKey?: ResidentKeyRequirement;\n    userVerification?: UserVerificationRequirement;\n}\n\ninterface AvcEncoderConfig {\n    format?: AvcBitstreamFormat;\n}\n\ninterface BiquadFilterOptions extends AudioNodeOptions {\n    Q?: number;\n    detune?: number;\n    frequency?: number;\n    gain?: number;\n    type?: BiquadFilterType;\n}\n\ninterface BlobEventInit {\n    data: Blob;\n    timecode?: DOMHighResTimeStamp;\n}\n\ninterface BlobPropertyBag {\n    endings?: EndingType;\n    type?: string;\n}\n\ninterface CSSMatrixComponentOptions {\n    is2D?: boolean;\n}\n\ninterface CSSNumericType {\n    angle?: number;\n    flex?: number;\n    frequency?: number;\n    length?: number;\n    percent?: number;\n    percentHint?: CSSNumericBaseType;\n    resolution?: number;\n    time?: number;\n}\n\ninterface CSSStyleSheetInit {\n    baseURL?: string;\n    disabled?: boolean;\n    media?: MediaList | string;\n}\n\ninterface CacheQueryOptions {\n    ignoreMethod?: boolean;\n    ignoreSearch?: boolean;\n    ignoreVary?: boolean;\n}\n\ninterface CanvasRenderingContext2DSettings {\n    alpha?: boolean;\n    colorSpace?: PredefinedColorSpace;\n    desynchronized?: boolean;\n    willReadFrequently?: boolean;\n}\n\ninterface CaretPositionFromPointOptions {\n    shadowRoots?: ShadowRoot[];\n}\n\ninterface ChannelMergerOptions extends AudioNodeOptions {\n    numberOfInputs?: number;\n}\n\ninterface ChannelSplitterOptions extends AudioNodeOptions {\n    numberOfOutputs?: number;\n}\n\ninterface CheckVisibilityOptions {\n    checkOpacity?: boolean;\n    checkVisibilityCSS?: boolean;\n    contentVisibilityAuto?: boolean;\n    opacityProperty?: boolean;\n    visibilityProperty?: boolean;\n}\n\ninterface ClientQueryOptions {\n    includeUncontrolled?: boolean;\n    type?: ClientTypes;\n}\n\ninterface ClipboardEventInit extends EventInit {\n    clipboardData?: DataTransfer | null;\n}\n\ninterface ClipboardItemOptions {\n    presentationStyle?: PresentationStyle;\n}\n\ninterface CloseEventInit extends EventInit {\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\ninterface CompositionEventInit extends UIEventInit {\n    data?: string;\n}\n\ninterface ComputedEffectTiming extends EffectTiming {\n    activeDuration?: CSSNumberish;\n    currentIteration?: number | null;\n    endTime?: CSSNumberish;\n    localTime?: CSSNumberish | null;\n    progress?: number | null;\n    startTime?: CSSNumberish;\n}\n\ninterface ComputedKeyframe {\n    composite: CompositeOperationOrAuto;\n    computedOffset: number;\n    easing: string;\n    offset: number | null;\n    [property: string]: string | number | null | undefined;\n}\n\ninterface ConstantSourceOptions {\n    offset?: number;\n}\n\ninterface ConstrainBooleanParameters {\n    exact?: boolean;\n    ideal?: boolean;\n}\n\ninterface ConstrainDOMStringParameters {\n    exact?: string | string[];\n    ideal?: string | string[];\n}\n\ninterface ConstrainDoubleRange extends DoubleRange {\n    exact?: number;\n    ideal?: number;\n}\n\ninterface ConstrainULongRange extends ULongRange {\n    exact?: number;\n    ideal?: number;\n}\n\ninterface ContentVisibilityAutoStateChangeEventInit extends EventInit {\n    skipped?: boolean;\n}\n\ninterface ConvolverOptions extends AudioNodeOptions {\n    buffer?: AudioBuffer | null;\n    disableNormalization?: boolean;\n}\n\ninterface CredentialCreationOptions {\n    publicKey?: PublicKeyCredentialCreationOptions;\n    signal?: AbortSignal;\n}\n\ninterface CredentialPropertiesOutput {\n    rk?: boolean;\n}\n\ninterface CredentialRequestOptions {\n    mediation?: CredentialMediationRequirement;\n    publicKey?: PublicKeyCredentialRequestOptions;\n    signal?: AbortSignal;\n}\n\ninterface CryptoKeyPair {\n    privateKey: CryptoKey;\n    publicKey: CryptoKey;\n}\n\ninterface CustomEventInit<T = any> extends EventInit {\n    detail?: T;\n}\n\ninterface DOMMatrix2DInit {\n    a?: number;\n    b?: number;\n    c?: number;\n    d?: number;\n    e?: number;\n    f?: number;\n    m11?: number;\n    m12?: number;\n    m21?: number;\n    m22?: number;\n    m41?: number;\n    m42?: number;\n}\n\ninterface DOMMatrixInit extends DOMMatrix2DInit {\n    is2D?: boolean;\n    m13?: number;\n    m14?: number;\n    m23?: number;\n    m24?: number;\n    m31?: number;\n    m32?: number;\n    m33?: number;\n    m34?: number;\n    m43?: number;\n    m44?: number;\n}\n\ninterface DOMPointInit {\n    w?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\ninterface DOMQuadInit {\n    p1?: DOMPointInit;\n    p2?: DOMPointInit;\n    p3?: DOMPointInit;\n    p4?: DOMPointInit;\n}\n\ninterface DOMRectInit {\n    height?: number;\n    width?: number;\n    x?: number;\n    y?: number;\n}\n\ninterface DelayOptions extends AudioNodeOptions {\n    delayTime?: number;\n    maxDelayTime?: number;\n}\n\ninterface DeviceMotionEventAccelerationInit {\n    x?: number | null;\n    y?: number | null;\n    z?: number | null;\n}\n\ninterface DeviceMotionEventInit extends EventInit {\n    acceleration?: DeviceMotionEventAccelerationInit;\n    accelerationIncludingGravity?: DeviceMotionEventAccelerationInit;\n    interval?: number;\n    rotationRate?: DeviceMotionEventRotationRateInit;\n}\n\ninterface DeviceMotionEventRotationRateInit {\n    alpha?: number | null;\n    beta?: number | null;\n    gamma?: number | null;\n}\n\ninterface DeviceOrientationEventInit extends EventInit {\n    absolute?: boolean;\n    alpha?: number | null;\n    beta?: number | null;\n    gamma?: number | null;\n}\n\ninterface DisplayMediaStreamOptions {\n    audio?: boolean | MediaTrackConstraints;\n    video?: boolean | MediaTrackConstraints;\n}\n\ninterface DocumentTimelineOptions {\n    originTime?: DOMHighResTimeStamp;\n}\n\ninterface DoubleRange {\n    max?: number;\n    min?: number;\n}\n\ninterface DragEventInit extends MouseEventInit {\n    dataTransfer?: DataTransfer | null;\n}\n\ninterface DynamicsCompressorOptions extends AudioNodeOptions {\n    attack?: number;\n    knee?: number;\n    ratio?: number;\n    release?: number;\n    threshold?: number;\n}\n\ninterface EcKeyAlgorithm extends KeyAlgorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyGenParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyImportParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcdhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface EcdsaParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface EffectTiming {\n    delay?: number;\n    direction?: PlaybackDirection;\n    duration?: number | CSSNumericValue | string;\n    easing?: string;\n    endDelay?: number;\n    fill?: FillMode;\n    iterationStart?: number;\n    iterations?: number;\n    playbackRate?: number;\n}\n\ninterface ElementCreationOptions {\n    is?: string;\n}\n\ninterface ElementDefinitionOptions {\n    extends?: string;\n}\n\ninterface EncodedAudioChunkInit {\n    data: AllowSharedBufferSource;\n    duration?: number;\n    timestamp: number;\n    transfer?: ArrayBuffer[];\n    type: EncodedAudioChunkType;\n}\n\ninterface EncodedAudioChunkMetadata {\n    decoderConfig?: AudioDecoderConfig;\n}\n\ninterface EncodedVideoChunkInit {\n    data: AllowSharedBufferSource;\n    duration?: number;\n    timestamp: number;\n    type: EncodedVideoChunkType;\n}\n\ninterface EncodedVideoChunkMetadata {\n    decoderConfig?: VideoDecoderConfig;\n}\n\ninterface ErrorEventInit extends EventInit {\n    colno?: number;\n    error?: any;\n    filename?: string;\n    lineno?: number;\n    message?: string;\n}\n\ninterface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n}\n\ninterface EventListenerOptions {\n    capture?: boolean;\n}\n\ninterface EventModifierInit extends UIEventInit {\n    altKey?: boolean;\n    ctrlKey?: boolean;\n    metaKey?: boolean;\n    modifierAltGraph?: boolean;\n    modifierCapsLock?: boolean;\n    modifierFn?: boolean;\n    modifierFnLock?: boolean;\n    modifierHyper?: boolean;\n    modifierNumLock?: boolean;\n    modifierScrollLock?: boolean;\n    modifierSuper?: boolean;\n    modifierSymbol?: boolean;\n    modifierSymbolLock?: boolean;\n    shiftKey?: boolean;\n}\n\ninterface EventSourceInit {\n    withCredentials?: boolean;\n}\n\ninterface FilePropertyBag extends BlobPropertyBag {\n    lastModified?: number;\n}\n\ninterface FileSystemCreateWritableOptions {\n    keepExistingData?: boolean;\n}\n\ninterface FileSystemFlags {\n    create?: boolean;\n    exclusive?: boolean;\n}\n\ninterface FileSystemGetDirectoryOptions {\n    create?: boolean;\n}\n\ninterface FileSystemGetFileOptions {\n    create?: boolean;\n}\n\ninterface FileSystemRemoveOptions {\n    recursive?: boolean;\n}\n\ninterface FocusEventInit extends UIEventInit {\n    relatedTarget?: EventTarget | null;\n}\n\ninterface FocusOptions {\n    preventScroll?: boolean;\n}\n\ninterface FontFaceDescriptors {\n    ascentOverride?: string;\n    descentOverride?: string;\n    display?: FontDisplay;\n    featureSettings?: string;\n    lineGapOverride?: string;\n    stretch?: string;\n    style?: string;\n    unicodeRange?: string;\n    weight?: string;\n}\n\ninterface FontFaceSetLoadEventInit extends EventInit {\n    fontfaces?: FontFace[];\n}\n\ninterface FormDataEventInit extends EventInit {\n    formData: FormData;\n}\n\ninterface FullscreenOptions {\n    navigationUI?: FullscreenNavigationUI;\n}\n\ninterface GainOptions extends AudioNodeOptions {\n    gain?: number;\n}\n\ninterface GamepadEffectParameters {\n    duration?: number;\n    leftTrigger?: number;\n    rightTrigger?: number;\n    startDelay?: number;\n    strongMagnitude?: number;\n    weakMagnitude?: number;\n}\n\ninterface GamepadEventInit extends EventInit {\n    gamepad: Gamepad;\n}\n\ninterface GetAnimationsOptions {\n    subtree?: boolean;\n}\n\ninterface GetHTMLOptions {\n    serializableShadowRoots?: boolean;\n    shadowRoots?: ShadowRoot[];\n}\n\ninterface GetNotificationOptions {\n    tag?: string;\n}\n\ninterface GetRootNodeOptions {\n    composed?: boolean;\n}\n\ninterface HashChangeEventInit extends EventInit {\n    newURL?: string;\n    oldURL?: string;\n}\n\ninterface HkdfParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    info: BufferSource;\n    salt: BufferSource;\n}\n\ninterface HmacImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface HmacKeyAlgorithm extends KeyAlgorithm {\n    hash: KeyAlgorithm;\n    length: number;\n}\n\ninterface HmacKeyGenParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\ninterface IDBIndexParameters {\n    multiEntry?: boolean;\n    unique?: boolean;\n}\n\ninterface IDBObjectStoreParameters {\n    autoIncrement?: boolean;\n    keyPath?: string | string[] | null;\n}\n\ninterface IDBTransactionOptions {\n    durability?: IDBTransactionDurability;\n}\n\ninterface IDBVersionChangeEventInit extends EventInit {\n    newVersion?: number | null;\n    oldVersion?: number;\n}\n\ninterface IIRFilterOptions extends AudioNodeOptions {\n    feedback: number[];\n    feedforward: number[];\n}\n\ninterface IdleRequestOptions {\n    timeout?: number;\n}\n\ninterface ImageBitmapOptions {\n    colorSpaceConversion?: ColorSpaceConversion;\n    imageOrientation?: ImageOrientation;\n    premultiplyAlpha?: PremultiplyAlpha;\n    resizeHeight?: number;\n    resizeQuality?: ResizeQuality;\n    resizeWidth?: number;\n}\n\ninterface ImageBitmapRenderingContextSettings {\n    alpha?: boolean;\n}\n\ninterface ImageDataSettings {\n    colorSpace?: PredefinedColorSpace;\n}\n\ninterface ImageDecodeOptions {\n    completeFramesOnly?: boolean;\n    frameIndex?: number;\n}\n\ninterface ImageDecodeResult {\n    complete: boolean;\n    image: VideoFrame;\n}\n\ninterface ImageDecoderInit {\n    colorSpaceConversion?: ColorSpaceConversion;\n    data: ImageBufferSource;\n    desiredHeight?: number;\n    desiredWidth?: number;\n    preferAnimation?: boolean;\n    transfer?: ArrayBuffer[];\n    type: string;\n}\n\ninterface ImageEncodeOptions {\n    quality?: number;\n    type?: string;\n}\n\ninterface InputEventInit extends UIEventInit {\n    data?: string | null;\n    dataTransfer?: DataTransfer | null;\n    inputType?: string;\n    isComposing?: boolean;\n    targetRanges?: StaticRange[];\n}\n\ninterface IntersectionObserverInit {\n    root?: Element | Document | null;\n    rootMargin?: string;\n    threshold?: number | number[];\n}\n\ninterface JsonWebKey {\n    alg?: string;\n    crv?: string;\n    d?: string;\n    dp?: string;\n    dq?: string;\n    e?: string;\n    ext?: boolean;\n    k?: string;\n    key_ops?: string[];\n    kty?: string;\n    n?: string;\n    oth?: RsaOtherPrimesInfo[];\n    p?: string;\n    q?: string;\n    qi?: string;\n    use?: string;\n    x?: string;\n    y?: string;\n}\n\ninterface KeyAlgorithm {\n    name: string;\n}\n\ninterface KeyboardEventInit extends EventModifierInit {\n    /** @deprecated */\n    charCode?: number;\n    code?: string;\n    isComposing?: boolean;\n    key?: string;\n    /** @deprecated */\n    keyCode?: number;\n    location?: number;\n    repeat?: boolean;\n}\n\ninterface Keyframe {\n    composite?: CompositeOperationOrAuto;\n    easing?: string;\n    offset?: number | null;\n    [property: string]: string | number | null | undefined;\n}\n\ninterface KeyframeAnimationOptions extends KeyframeEffectOptions {\n    id?: string;\n    timeline?: AnimationTimeline | null;\n}\n\ninterface KeyframeEffectOptions extends EffectTiming {\n    composite?: CompositeOperation;\n    iterationComposite?: IterationCompositeOperation;\n    pseudoElement?: string | null;\n}\n\ninterface LockInfo {\n    clientId?: string;\n    mode?: LockMode;\n    name?: string;\n}\n\ninterface LockManagerSnapshot {\n    held?: LockInfo[];\n    pending?: LockInfo[];\n}\n\ninterface LockOptions {\n    ifAvailable?: boolean;\n    mode?: LockMode;\n    signal?: AbortSignal;\n    steal?: boolean;\n}\n\ninterface MIDIConnectionEventInit extends EventInit {\n    port?: MIDIPort;\n}\n\ninterface MIDIMessageEventInit extends EventInit {\n    data?: Uint8Array;\n}\n\ninterface MIDIOptions {\n    software?: boolean;\n    sysex?: boolean;\n}\n\ninterface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaDecodingConfiguration;\n}\n\ninterface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaEncodingConfiguration;\n}\n\ninterface MediaCapabilitiesInfo {\n    powerEfficient: boolean;\n    smooth: boolean;\n    supported: boolean;\n}\n\ninterface MediaConfiguration {\n    audio?: AudioConfiguration;\n    video?: VideoConfiguration;\n}\n\ninterface MediaDecodingConfiguration extends MediaConfiguration {\n    type: MediaDecodingType;\n}\n\ninterface MediaElementAudioSourceOptions {\n    mediaElement: HTMLMediaElement;\n}\n\ninterface MediaEncodingConfiguration extends MediaConfiguration {\n    type: MediaEncodingType;\n}\n\ninterface MediaEncryptedEventInit extends EventInit {\n    initData?: ArrayBuffer | null;\n    initDataType?: string;\n}\n\ninterface MediaImage {\n    sizes?: string;\n    src: string;\n    type?: string;\n}\n\ninterface MediaKeyMessageEventInit extends EventInit {\n    message: ArrayBuffer;\n    messageType: MediaKeyMessageType;\n}\n\ninterface MediaKeySystemConfiguration {\n    audioCapabilities?: MediaKeySystemMediaCapability[];\n    distinctiveIdentifier?: MediaKeysRequirement;\n    initDataTypes?: string[];\n    label?: string;\n    persistentState?: MediaKeysRequirement;\n    sessionTypes?: string[];\n    videoCapabilities?: MediaKeySystemMediaCapability[];\n}\n\ninterface MediaKeySystemMediaCapability {\n    contentType?: string;\n    encryptionScheme?: string | null;\n    robustness?: string;\n}\n\ninterface MediaKeysPolicy {\n    minHdcpVersion?: string;\n}\n\ninterface MediaMetadataInit {\n    album?: string;\n    artist?: string;\n    artwork?: MediaImage[];\n    title?: string;\n}\n\ninterface MediaPositionState {\n    duration?: number;\n    playbackRate?: number;\n    position?: number;\n}\n\ninterface MediaQueryListEventInit extends EventInit {\n    matches?: boolean;\n    media?: string;\n}\n\ninterface MediaRecorderOptions {\n    audioBitsPerSecond?: number;\n    bitsPerSecond?: number;\n    mimeType?: string;\n    videoBitsPerSecond?: number;\n}\n\ninterface MediaSessionActionDetails {\n    action: MediaSessionAction;\n    fastSeek?: boolean;\n    seekOffset?: number;\n    seekTime?: number;\n}\n\ninterface MediaStreamAudioSourceOptions {\n    mediaStream: MediaStream;\n}\n\ninterface MediaStreamConstraints {\n    audio?: boolean | MediaTrackConstraints;\n    peerIdentity?: string;\n    preferCurrentTab?: boolean;\n    video?: boolean | MediaTrackConstraints;\n}\n\ninterface MediaStreamTrackEventInit extends EventInit {\n    track: MediaStreamTrack;\n}\n\ninterface MediaTrackCapabilities {\n    aspectRatio?: DoubleRange;\n    autoGainControl?: boolean[];\n    backgroundBlur?: boolean[];\n    channelCount?: ULongRange;\n    deviceId?: string;\n    displaySurface?: string;\n    echoCancellation?: boolean[];\n    facingMode?: string[];\n    frameRate?: DoubleRange;\n    groupId?: string;\n    height?: ULongRange;\n    noiseSuppression?: boolean[];\n    sampleRate?: ULongRange;\n    sampleSize?: ULongRange;\n    width?: ULongRange;\n}\n\ninterface MediaTrackConstraintSet {\n    aspectRatio?: ConstrainDouble;\n    autoGainControl?: ConstrainBoolean;\n    backgroundBlur?: ConstrainBoolean;\n    channelCount?: ConstrainULong;\n    deviceId?: ConstrainDOMString;\n    displaySurface?: ConstrainDOMString;\n    echoCancellation?: ConstrainBoolean;\n    facingMode?: ConstrainDOMString;\n    frameRate?: ConstrainDouble;\n    groupId?: ConstrainDOMString;\n    height?: ConstrainULong;\n    noiseSuppression?: ConstrainBoolean;\n    sampleRate?: ConstrainULong;\n    sampleSize?: ConstrainULong;\n    width?: ConstrainULong;\n}\n\ninterface MediaTrackConstraints extends MediaTrackConstraintSet {\n    advanced?: MediaTrackConstraintSet[];\n}\n\ninterface MediaTrackSettings {\n    aspectRatio?: number;\n    autoGainControl?: boolean;\n    backgroundBlur?: boolean;\n    channelCount?: number;\n    deviceId?: string;\n    displaySurface?: string;\n    echoCancellation?: boolean;\n    facingMode?: string;\n    frameRate?: number;\n    groupId?: string;\n    height?: number;\n    noiseSuppression?: boolean;\n    sampleRate?: number;\n    sampleSize?: number;\n    width?: number;\n}\n\ninterface MediaTrackSupportedConstraints {\n    aspectRatio?: boolean;\n    autoGainControl?: boolean;\n    backgroundBlur?: boolean;\n    channelCount?: boolean;\n    deviceId?: boolean;\n    displaySurface?: boolean;\n    echoCancellation?: boolean;\n    facingMode?: boolean;\n    frameRate?: boolean;\n    groupId?: boolean;\n    height?: boolean;\n    noiseSuppression?: boolean;\n    sampleRate?: boolean;\n    sampleSize?: boolean;\n    width?: boolean;\n}\n\ninterface MessageEventInit<T = any> extends EventInit {\n    data?: T;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: MessageEventSource | null;\n}\n\ninterface MouseEventInit extends EventModifierInit {\n    button?: number;\n    buttons?: number;\n    clientX?: number;\n    clientY?: number;\n    movementX?: number;\n    movementY?: number;\n    relatedTarget?: EventTarget | null;\n    screenX?: number;\n    screenY?: number;\n}\n\ninterface MultiCacheQueryOptions extends CacheQueryOptions {\n    cacheName?: string;\n}\n\ninterface MutationObserverInit {\n    /** Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted. */\n    attributeFilter?: string[];\n    /** Set to true if attributes is true or omitted and target\'s attribute value before the mutation needs to be recorded. */\n    attributeOldValue?: boolean;\n    /** Set to true if mutations to target\'s attributes are to be observed. Can be omitted if attributeOldValue or attributeFilter is specified. */\n    attributes?: boolean;\n    /** Set to true if mutations to target\'s data are to be observed. Can be omitted if characterDataOldValue is specified. */\n    characterData?: boolean;\n    /** Set to true if characterData is set to true or omitted and target\'s data before the mutation needs to be recorded. */\n    characterDataOldValue?: boolean;\n    /** Set to true if mutations to target\'s children are to be observed. */\n    childList?: boolean;\n    /** Set to true if mutations to not just target, but also target\'s descendants are to be observed. */\n    subtree?: boolean;\n}\n\ninterface NavigationPreloadState {\n    enabled?: boolean;\n    headerValue?: string;\n}\n\ninterface NotificationOptions {\n    badge?: string;\n    body?: string;\n    data?: any;\n    dir?: NotificationDirection;\n    icon?: string;\n    lang?: string;\n    requireInteraction?: boolean;\n    silent?: boolean | null;\n    tag?: string;\n}\n\ninterface OfflineAudioCompletionEventInit extends EventInit {\n    renderedBuffer: AudioBuffer;\n}\n\ninterface OfflineAudioContextOptions {\n    length: number;\n    numberOfChannels?: number;\n    sampleRate: number;\n}\n\ninterface OptionalEffectTiming {\n    delay?: number;\n    direction?: PlaybackDirection;\n    duration?: number | string;\n    easing?: string;\n    endDelay?: number;\n    fill?: FillMode;\n    iterationStart?: number;\n    iterations?: number;\n    playbackRate?: number;\n}\n\ninterface OpusEncoderConfig {\n    complexity?: number;\n    format?: OpusBitstreamFormat;\n    frameDuration?: number;\n    packetlossperc?: number;\n    usedtx?: boolean;\n    useinbandfec?: boolean;\n}\n\ninterface OscillatorOptions extends AudioNodeOptions {\n    detune?: number;\n    frequency?: number;\n    periodicWave?: PeriodicWave;\n    type?: OscillatorType;\n}\n\ninterface PageRevealEventInit extends EventInit {\n    viewTransition?: ViewTransition | null;\n}\n\ninterface PageSwapEventInit extends EventInit {\n    activation?: NavigationActivation | null;\n    viewTransition?: ViewTransition | null;\n}\n\ninterface PageTransitionEventInit extends EventInit {\n    persisted?: boolean;\n}\n\ninterface PannerOptions extends AudioNodeOptions {\n    coneInnerAngle?: number;\n    coneOuterAngle?: number;\n    coneOuterGain?: number;\n    distanceModel?: DistanceModelType;\n    maxDistance?: number;\n    orientationX?: number;\n    orientationY?: number;\n    orientationZ?: number;\n    panningModel?: PanningModelType;\n    positionX?: number;\n    positionY?: number;\n    positionZ?: number;\n    refDistance?: number;\n    rolloffFactor?: number;\n}\n\ninterface PayerErrors {\n    email?: string;\n    name?: string;\n    phone?: string;\n}\n\ninterface PaymentCurrencyAmount {\n    currency: string;\n    value: string;\n}\n\ninterface PaymentDetailsBase {\n    displayItems?: PaymentItem[];\n    modifiers?: PaymentDetailsModifier[];\n    shippingOptions?: PaymentShippingOption[];\n}\n\ninterface PaymentDetailsInit extends PaymentDetailsBase {\n    id?: string;\n    total: PaymentItem;\n}\n\ninterface PaymentDetailsModifier {\n    additionalDisplayItems?: PaymentItem[];\n    data?: any;\n    supportedMethods: string;\n    total?: PaymentItem;\n}\n\ninterface PaymentDetailsUpdate extends PaymentDetailsBase {\n    error?: string;\n    paymentMethodErrors?: any;\n    shippingAddressErrors?: AddressErrors;\n    total?: PaymentItem;\n}\n\ninterface PaymentItem {\n    amount: PaymentCurrencyAmount;\n    label: string;\n    pending?: boolean;\n}\n\ninterface PaymentMethodChangeEventInit extends PaymentRequestUpdateEventInit {\n    methodDetails?: any;\n    methodName?: string;\n}\n\ninterface PaymentMethodData {\n    data?: any;\n    supportedMethods: string;\n}\n\ninterface PaymentOptions {\n    requestPayerEmail?: boolean;\n    requestPayerName?: boolean;\n    requestPayerPhone?: boolean;\n    requestShipping?: boolean;\n    shippingType?: PaymentShippingType;\n}\n\ninterface PaymentRequestUpdateEventInit extends EventInit {\n}\n\ninterface PaymentShippingOption {\n    amount: PaymentCurrencyAmount;\n    id: string;\n    label: string;\n    selected?: boolean;\n}\n\ninterface PaymentValidationErrors {\n    error?: string;\n    payer?: PayerErrors;\n    shippingAddress?: AddressErrors;\n}\n\ninterface Pbkdf2Params extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    iterations: number;\n    salt: BufferSource;\n}\n\ninterface PerformanceMarkOptions {\n    detail?: any;\n    startTime?: DOMHighResTimeStamp;\n}\n\ninterface PerformanceMeasureOptions {\n    detail?: any;\n    duration?: DOMHighResTimeStamp;\n    end?: string | DOMHighResTimeStamp;\n    start?: string | DOMHighResTimeStamp;\n}\n\ninterface PerformanceObserverInit {\n    buffered?: boolean;\n    entryTypes?: string[];\n    type?: string;\n}\n\ninterface PeriodicWaveConstraints {\n    disableNormalization?: boolean;\n}\n\ninterface PeriodicWaveOptions extends PeriodicWaveConstraints {\n    imag?: number[] | Float32Array;\n    real?: number[] | Float32Array;\n}\n\ninterface PermissionDescriptor {\n    name: PermissionName;\n}\n\ninterface PictureInPictureEventInit extends EventInit {\n    pictureInPictureWindow: PictureInPictureWindow;\n}\n\ninterface PlaneLayout {\n    offset: number;\n    stride: number;\n}\n\ninterface PointerEventInit extends MouseEventInit {\n    altitudeAngle?: number;\n    azimuthAngle?: number;\n    coalescedEvents?: PointerEvent[];\n    height?: number;\n    isPrimary?: boolean;\n    pointerId?: number;\n    pointerType?: string;\n    predictedEvents?: PointerEvent[];\n    pressure?: number;\n    tangentialPressure?: number;\n    tiltX?: number;\n    tiltY?: number;\n    twist?: number;\n    width?: number;\n}\n\ninterface PointerLockOptions {\n    unadjustedMovement?: boolean;\n}\n\ninterface PopStateEventInit extends EventInit {\n    state?: any;\n}\n\ninterface PositionOptions {\n    enableHighAccuracy?: boolean;\n    maximumAge?: number;\n    timeout?: number;\n}\n\ninterface ProgressEventInit extends EventInit {\n    lengthComputable?: boolean;\n    loaded?: number;\n    total?: number;\n}\n\ninterface PromiseRejectionEventInit extends EventInit {\n    promise: Promise<any>;\n    reason?: any;\n}\n\ninterface PropertyDefinition {\n    inherits: boolean;\n    initialValue?: string;\n    name: string;\n    syntax?: string;\n}\n\ninterface PropertyIndexedKeyframes {\n    composite?: CompositeOperationOrAuto | CompositeOperationOrAuto[];\n    easing?: string | string[];\n    offset?: number | (number | null)[];\n    [property: string]: string | string[] | number | null | (number | null)[] | undefined;\n}\n\ninterface PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n}\n\ninterface PublicKeyCredentialCreationOptionsJSON {\n    attestation?: string;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: Base64URLString;\n    excludeCredentials?: PublicKeyCredentialDescriptorJSON[];\n    extensions?: AuthenticationExtensionsClientInputsJSON;\n    hints?: string[];\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntityJSON;\n}\n\ninterface PublicKeyCredentialDescriptor {\n    id: BufferSource;\n    transports?: AuthenticatorTransport[];\n    type: PublicKeyCredentialType;\n}\n\ninterface PublicKeyCredentialDescriptorJSON {\n    id: Base64URLString;\n    transports?: string[];\n    type: string;\n}\n\ninterface PublicKeyCredentialEntity {\n    name: string;\n}\n\ninterface PublicKeyCredentialParameters {\n    alg: COSEAlgorithmIdentifier;\n    type: PublicKeyCredentialType;\n}\n\ninterface PublicKeyCredentialRequestOptions {\n    allowCredentials?: PublicKeyCredentialDescriptor[];\n    challenge: BufferSource;\n    extensions?: AuthenticationExtensionsClientInputs;\n    rpId?: string;\n    timeout?: number;\n    userVerification?: UserVerificationRequirement;\n}\n\ninterface PublicKeyCredentialRequestOptionsJSON {\n    allowCredentials?: PublicKeyCredentialDescriptorJSON[];\n    challenge: Base64URLString;\n    extensions?: AuthenticationExtensionsClientInputsJSON;\n    hints?: string[];\n    rpId?: string;\n    timeout?: number;\n    userVerification?: string;\n}\n\ninterface PublicKeyCredentialRpEntity extends PublicKeyCredentialEntity {\n    id?: string;\n}\n\ninterface PublicKeyCredentialUserEntity extends PublicKeyCredentialEntity {\n    displayName: string;\n    id: BufferSource;\n}\n\ninterface PublicKeyCredentialUserEntityJSON {\n    displayName: string;\n    id: Base64URLString;\n    name: string;\n}\n\ninterface PushSubscriptionJSON {\n    endpoint?: string;\n    expirationTime?: EpochTimeStamp | null;\n    keys?: Record<string, string>;\n}\n\ninterface PushSubscriptionOptionsInit {\n    applicationServerKey?: BufferSource | string | null;\n    userVisibleOnly?: boolean;\n}\n\ninterface QueuingStrategy<T = any> {\n    highWaterMark?: number;\n    size?: QueuingStrategySize<T>;\n}\n\ninterface QueuingStrategyInit {\n    /**\n     * Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n     *\n     * Note that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw.\n     */\n    highWaterMark: number;\n}\n\ninterface RTCAnswerOptions extends RTCOfferAnswerOptions {\n}\n\ninterface RTCCertificateExpiration {\n    expires?: number;\n}\n\ninterface RTCConfiguration {\n    bundlePolicy?: RTCBundlePolicy;\n    certificates?: RTCCertificate[];\n    iceCandidatePoolSize?: number;\n    iceServers?: RTCIceServer[];\n    iceTransportPolicy?: RTCIceTransportPolicy;\n    rtcpMuxPolicy?: RTCRtcpMuxPolicy;\n}\n\ninterface RTCDTMFToneChangeEventInit extends EventInit {\n    tone?: string;\n}\n\ninterface RTCDataChannelEventInit extends EventInit {\n    channel: RTCDataChannel;\n}\n\ninterface RTCDataChannelInit {\n    id?: number;\n    maxPacketLifeTime?: number;\n    maxRetransmits?: number;\n    negotiated?: boolean;\n    ordered?: boolean;\n    protocol?: string;\n}\n\ninterface RTCDtlsFingerprint {\n    algorithm?: string;\n    value?: string;\n}\n\ninterface RTCEncodedAudioFrameMetadata {\n    contributingSources?: number[];\n    payloadType?: number;\n    sequenceNumber?: number;\n    synchronizationSource?: number;\n}\n\ninterface RTCEncodedVideoFrameMetadata {\n    contributingSources?: number[];\n    dependencies?: number[];\n    frameId?: number;\n    height?: number;\n    payloadType?: number;\n    spatialIndex?: number;\n    synchronizationSource?: number;\n    temporalIndex?: number;\n    timestamp?: number;\n    width?: number;\n}\n\ninterface RTCErrorEventInit extends EventInit {\n    error: RTCError;\n}\n\ninterface RTCErrorInit {\n    errorDetail: RTCErrorDetailType;\n    httpRequestStatusCode?: number;\n    receivedAlert?: number;\n    sctpCauseCode?: number;\n    sdpLineNumber?: number;\n    sentAlert?: number;\n}\n\ninterface RTCIceCandidateInit {\n    candidate?: string;\n    sdpMLineIndex?: number | null;\n    sdpMid?: string | null;\n    usernameFragment?: string | null;\n}\n\ninterface RTCIceCandidatePairStats extends RTCStats {\n    availableIncomingBitrate?: number;\n    availableOutgoingBitrate?: number;\n    bytesDiscardedOnSend?: number;\n    bytesReceived?: number;\n    bytesSent?: number;\n    consentRequestsSent?: number;\n    currentRoundTripTime?: number;\n    lastPacketReceivedTimestamp?: DOMHighResTimeStamp;\n    lastPacketSentTimestamp?: DOMHighResTimeStamp;\n    localCandidateId: string;\n    nominated?: boolean;\n    packetsDiscardedOnSend?: number;\n    packetsReceived?: number;\n    packetsSent?: number;\n    remoteCandidateId: string;\n    requestsReceived?: number;\n    requestsSent?: number;\n    responsesReceived?: number;\n    responsesSent?: number;\n    state: RTCStatsIceCandidatePairState;\n    totalRoundTripTime?: number;\n    transportId: string;\n}\n\ninterface RTCIceServer {\n    credential?: string;\n    urls: string | string[];\n    username?: string;\n}\n\ninterface RTCInboundRtpStreamStats extends RTCReceivedRtpStreamStats {\n    audioLevel?: number;\n    bytesReceived?: number;\n    concealedSamples?: number;\n    concealmentEvents?: number;\n    decoderImplementation?: string;\n    estimatedPlayoutTimestamp?: DOMHighResTimeStamp;\n    fecBytesReceived?: number;\n    fecPacketsDiscarded?: number;\n    fecPacketsReceived?: number;\n    fecSsrc?: number;\n    firCount?: number;\n    frameHeight?: number;\n    frameWidth?: number;\n    framesAssembledFromMultiplePackets?: number;\n    framesDecoded?: number;\n    framesDropped?: number;\n    framesPerSecond?: number;\n    framesReceived?: number;\n    framesRendered?: number;\n    freezeCount?: number;\n    headerBytesReceived?: number;\n    insertedSamplesForDeceleration?: number;\n    jitterBufferDelay?: number;\n    jitterBufferEmittedCount?: number;\n    jitterBufferMinimumDelay?: number;\n    jitterBufferTargetDelay?: number;\n    keyFramesDecoded?: number;\n    lastPacketReceivedTimestamp?: DOMHighResTimeStamp;\n    mid?: string;\n    nackCount?: number;\n    packetsDiscarded?: number;\n    pauseCount?: number;\n    playoutId?: string;\n    pliCount?: number;\n    qpSum?: number;\n    remoteId?: string;\n    removedSamplesForAcceleration?: number;\n    retransmittedBytesReceived?: number;\n    retransmittedPacketsReceived?: number;\n    rtxSsrc?: number;\n    silentConcealedSamples?: number;\n    totalAssemblyTime?: number;\n    totalAudioEnergy?: number;\n    totalDecodeTime?: number;\n    totalFreezesDuration?: number;\n    totalInterFrameDelay?: number;\n    totalPausesDuration?: number;\n    totalProcessingDelay?: number;\n    totalSamplesDuration?: number;\n    totalSamplesReceived?: number;\n    totalSquaredInterFrameDelay?: number;\n    trackIdentifier: string;\n}\n\ninterface RTCLocalSessionDescriptionInit {\n    sdp?: string;\n    type?: RTCSdpType;\n}\n\ninterface RTCOfferAnswerOptions {\n}\n\ninterface RTCOfferOptions extends RTCOfferAnswerOptions {\n    iceRestart?: boolean;\n    offerToReceiveAudio?: boolean;\n    offerToReceiveVideo?: boolean;\n}\n\ninterface RTCOutboundRtpStreamStats extends RTCSentRtpStreamStats {\n    active?: boolean;\n    firCount?: number;\n    frameHeight?: number;\n    frameWidth?: number;\n    framesEncoded?: number;\n    framesPerSecond?: number;\n    framesSent?: number;\n    headerBytesSent?: number;\n    hugeFramesSent?: number;\n    keyFramesEncoded?: number;\n    mediaSourceId?: string;\n    mid?: string;\n    nackCount?: number;\n    pliCount?: number;\n    qpSum?: number;\n    qualityLimitationDurations?: Record<string, number>;\n    qualityLimitationReason?: RTCQualityLimitationReason;\n    qualityLimitationResolutionChanges?: number;\n    remoteId?: string;\n    retransmittedBytesSent?: number;\n    retransmittedPacketsSent?: number;\n    rid?: string;\n    rtxSsrc?: number;\n    scalabilityMode?: string;\n    targetBitrate?: number;\n    totalEncodeTime?: number;\n    totalEncodedBytesTarget?: number;\n    totalPacketSendDelay?: number;\n}\n\ninterface RTCPeerConnectionIceErrorEventInit extends EventInit {\n    address?: string | null;\n    errorCode: number;\n    errorText?: string;\n    port?: number | null;\n    url?: string;\n}\n\ninterface RTCPeerConnectionIceEventInit extends EventInit {\n    candidate?: RTCIceCandidate | null;\n    url?: string | null;\n}\n\ninterface RTCReceivedRtpStreamStats extends RTCRtpStreamStats {\n    jitter?: number;\n    packetsLost?: number;\n    packetsReceived?: number;\n}\n\ninterface RTCRtcpParameters {\n    cname?: string;\n    reducedSize?: boolean;\n}\n\ninterface RTCRtpCapabilities {\n    codecs: RTCRtpCodec[];\n    headerExtensions: RTCRtpHeaderExtensionCapability[];\n}\n\ninterface RTCRtpCodec {\n    channels?: number;\n    clockRate: number;\n    mimeType: string;\n    sdpFmtpLine?: string;\n}\n\ninterface RTCRtpCodecParameters extends RTCRtpCodec {\n    payloadType: number;\n}\n\ninterface RTCRtpCodingParameters {\n    rid?: string;\n}\n\ninterface RTCRtpContributingSource {\n    audioLevel?: number;\n    rtpTimestamp: number;\n    source: number;\n    timestamp: DOMHighResTimeStamp;\n}\n\ninterface RTCRtpEncodingParameters extends RTCRtpCodingParameters {\n    active?: boolean;\n    maxBitrate?: number;\n    maxFramerate?: number;\n    networkPriority?: RTCPriorityType;\n    priority?: RTCPriorityType;\n    scaleResolutionDownBy?: number;\n}\n\ninterface RTCRtpHeaderExtensionCapability {\n    uri: string;\n}\n\ninterface RTCRtpHeaderExtensionParameters {\n    encrypted?: boolean;\n    id: number;\n    uri: string;\n}\n\ninterface RTCRtpParameters {\n    codecs: RTCRtpCodecParameters[];\n    headerExtensions: RTCRtpHeaderExtensionParameters[];\n    rtcp: RTCRtcpParameters;\n}\n\ninterface RTCRtpReceiveParameters extends RTCRtpParameters {\n}\n\ninterface RTCRtpSendParameters extends RTCRtpParameters {\n    degradationPreference?: RTCDegradationPreference;\n    encodings: RTCRtpEncodingParameters[];\n    transactionId: string;\n}\n\ninterface RTCRtpStreamStats extends RTCStats {\n    codecId?: string;\n    kind: string;\n    ssrc: number;\n    transportId?: string;\n}\n\ninterface RTCRtpSynchronizationSource extends RTCRtpContributingSource {\n}\n\ninterface RTCRtpTransceiverInit {\n    direction?: RTCRtpTransceiverDirection;\n    sendEncodings?: RTCRtpEncodingParameters[];\n    streams?: MediaStream[];\n}\n\ninterface RTCSentRtpStreamStats extends RTCRtpStreamStats {\n    bytesSent?: number;\n    packetsSent?: number;\n}\n\ninterface RTCSessionDescriptionInit {\n    sdp?: string;\n    type: RTCSdpType;\n}\n\ninterface RTCSetParameterOptions {\n}\n\ninterface RTCStats {\n    id: string;\n    timestamp: DOMHighResTimeStamp;\n    type: RTCStatsType;\n}\n\ninterface RTCTrackEventInit extends EventInit {\n    receiver: RTCRtpReceiver;\n    streams?: MediaStream[];\n    track: MediaStreamTrack;\n    transceiver: RTCRtpTransceiver;\n}\n\ninterface RTCTransportStats extends RTCStats {\n    bytesReceived?: number;\n    bytesSent?: number;\n    dtlsCipher?: string;\n    dtlsRole?: RTCDtlsRole;\n    dtlsState: RTCDtlsTransportState;\n    iceLocalUsernameFragment?: string;\n    iceRole?: RTCIceRole;\n    iceState?: RTCIceTransportState;\n    localCertificateId?: string;\n    packetsReceived?: number;\n    packetsSent?: number;\n    remoteCertificateId?: string;\n    selectedCandidatePairChanges?: number;\n    selectedCandidatePairId?: string;\n    srtpCipher?: string;\n    tlsVersion?: string;\n}\n\ninterface ReadableStreamGetReaderOptions {\n    /**\n     * Creates a ReadableStreamBYOBReader and locks the stream to the new reader.\n     *\n     * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams, i.e. streams which were constructed specifically with the ability to handle "bring your own buffer" reading. The returned BYOB reader provides the ability to directly read individual chunks from the stream via its read() method, into developer-supplied buffers, allowing more precise control over allocation.\n     */\n    mode?: ReadableStreamReaderMode;\n}\n\ninterface ReadableStreamIteratorOptions {\n    /**\n     * Asynchronously iterates over the chunks in the stream\'s internal queue.\n     *\n     * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader. The lock will be released if the async iterator\'s return() method is called, e.g. by breaking out of the loop.\n     *\n     * By default, calling the async iterator\'s return() method will also cancel the stream. To prevent this, use the stream\'s values() method, passing true for the preventCancel option.\n     */\n    preventCancel?: boolean;\n}\n\ninterface ReadableStreamReadDoneResult<T> {\n    done: true;\n    value?: T;\n}\n\ninterface ReadableStreamReadValueResult<T> {\n    done: false;\n    value: T;\n}\n\ninterface ReadableWritablePair<R = any, W = any> {\n    readable: ReadableStream<R>;\n    /**\n     * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     */\n    writable: WritableStream<W>;\n}\n\ninterface RegistrationOptions {\n    scope?: string;\n    type?: WorkerType;\n    updateViaCache?: ServiceWorkerUpdateViaCache;\n}\n\ninterface ReportingObserverOptions {\n    buffered?: boolean;\n    types?: string[];\n}\n\ninterface RequestInit {\n    /** A BodyInit object or null to set request\'s body. */\n    body?: BodyInit | null;\n    /** A string indicating how the request will interact with the browser\'s cache to set request\'s cache. */\n    cache?: RequestCache;\n    /** A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials. */\n    credentials?: RequestCredentials;\n    /** A Headers object, an object literal, or an array of two-item arrays to set request\'s headers. */\n    headers?: HeadersInit;\n    /** A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity. */\n    integrity?: string;\n    /** A boolean to set request\'s keepalive. */\n    keepalive?: boolean;\n    /** A string to set request\'s method. */\n    method?: string;\n    /** A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode. */\n    mode?: RequestMode;\n    priority?: RequestPriority;\n    /** A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect. */\n    redirect?: RequestRedirect;\n    /** A string whose value is a same-origin URL, "about:client", or the empty string, to set request\'s referrer. */\n    referrer?: string;\n    /** A referrer policy to set request\'s referrerPolicy. */\n    referrerPolicy?: ReferrerPolicy;\n    /** An AbortSignal to set request\'s signal. */\n    signal?: AbortSignal | null;\n    /** Can only be null. Used to disassociate request from any Window. */\n    window?: null;\n}\n\ninterface ResizeObserverOptions {\n    box?: ResizeObserverBoxOptions;\n}\n\ninterface ResponseInit {\n    headers?: HeadersInit;\n    status?: number;\n    statusText?: string;\n}\n\ninterface RsaHashedImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {\n    hash: KeyAlgorithm;\n}\n\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaKeyAlgorithm extends KeyAlgorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaKeyGenParams extends Algorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaOaepParams extends Algorithm {\n    label?: BufferSource;\n}\n\ninterface RsaOtherPrimesInfo {\n    d?: string;\n    r?: string;\n    t?: string;\n}\n\ninterface RsaPssParams extends Algorithm {\n    saltLength: number;\n}\n\ninterface SVGBoundingBoxOptions {\n    clipped?: boolean;\n    fill?: boolean;\n    markers?: boolean;\n    stroke?: boolean;\n}\n\ninterface ScrollIntoViewOptions extends ScrollOptions {\n    block?: ScrollLogicalPosition;\n    inline?: ScrollLogicalPosition;\n}\n\ninterface ScrollOptions {\n    behavior?: ScrollBehavior;\n}\n\ninterface ScrollToOptions extends ScrollOptions {\n    left?: number;\n    top?: number;\n}\n\ninterface SecurityPolicyViolationEventInit extends EventInit {\n    blockedURI?: string;\n    columnNumber?: number;\n    disposition?: SecurityPolicyViolationEventDisposition;\n    documentURI?: string;\n    effectiveDirective?: string;\n    lineNumber?: number;\n    originalPolicy?: string;\n    referrer?: string;\n    sample?: string;\n    sourceFile?: string;\n    statusCode?: number;\n    violatedDirective?: string;\n}\n\ninterface ShadowRootInit {\n    delegatesFocus?: boolean;\n    mode: ShadowRootMode;\n    serializable?: boolean;\n    slotAssignment?: SlotAssignmentMode;\n}\n\ninterface ShareData {\n    files?: File[];\n    text?: string;\n    title?: string;\n    url?: string;\n}\n\ninterface SpeechSynthesisErrorEventInit extends SpeechSynthesisEventInit {\n    error: SpeechSynthesisErrorCode;\n}\n\ninterface SpeechSynthesisEventInit extends EventInit {\n    charIndex?: number;\n    charLength?: number;\n    elapsedTime?: number;\n    name?: string;\n    utterance: SpeechSynthesisUtterance;\n}\n\ninterface StaticRangeInit {\n    endContainer: Node;\n    endOffset: number;\n    startContainer: Node;\n    startOffset: number;\n}\n\ninterface StereoPannerOptions extends AudioNodeOptions {\n    pan?: number;\n}\n\ninterface StorageEstimate {\n    quota?: number;\n    usage?: number;\n}\n\ninterface StorageEventInit extends EventInit {\n    key?: string | null;\n    newValue?: string | null;\n    oldValue?: string | null;\n    storageArea?: Storage | null;\n    url?: string;\n}\n\ninterface StreamPipeOptions {\n    preventAbort?: boolean;\n    preventCancel?: boolean;\n    /**\n     * Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     *\n     * Errors and closures of the source and destination streams propagate as follows:\n     *\n     * An error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source\'s error, or with any error that occurs during aborting the destination.\n     *\n     * An error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination\'s error, or with any error that occurs during canceling the source.\n     *\n     * When this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n     *\n     * If destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n     *\n     * The signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n     */\n    preventClose?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface StructuredSerializeOptions {\n    transfer?: Transferable[];\n}\n\ninterface SubmitEventInit extends EventInit {\n    submitter?: HTMLElement | null;\n}\n\ninterface TextDecodeOptions {\n    stream?: boolean;\n}\n\ninterface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n}\n\ninterface TextEncoderEncodeIntoResult {\n    read: number;\n    written: number;\n}\n\ninterface ToggleEventInit extends EventInit {\n    newState?: string;\n    oldState?: string;\n}\n\ninterface TouchEventInit extends EventModifierInit {\n    changedTouches?: Touch[];\n    targetTouches?: Touch[];\n    touches?: Touch[];\n}\n\ninterface TouchInit {\n    altitudeAngle?: number;\n    azimuthAngle?: number;\n    clientX?: number;\n    clientY?: number;\n    force?: number;\n    identifier: number;\n    pageX?: number;\n    pageY?: number;\n    radiusX?: number;\n    radiusY?: number;\n    rotationAngle?: number;\n    screenX?: number;\n    screenY?: number;\n    target: EventTarget;\n    touchType?: TouchType;\n}\n\ninterface TrackEventInit extends EventInit {\n    track?: TextTrack | null;\n}\n\ninterface Transformer<I = any, O = any> {\n    flush?: TransformerFlushCallback<O>;\n    readableType?: undefined;\n    start?: TransformerStartCallback<O>;\n    transform?: TransformerTransformCallback<I, O>;\n    writableType?: undefined;\n}\n\ninterface TransitionEventInit extends EventInit {\n    elapsedTime?: number;\n    propertyName?: string;\n    pseudoElement?: string;\n}\n\ninterface UIEventInit extends EventInit {\n    detail?: number;\n    view?: Window | null;\n    /** @deprecated */\n    which?: number;\n}\n\ninterface ULongRange {\n    max?: number;\n    min?: number;\n}\n\ninterface UnderlyingByteSource {\n    autoAllocateChunkSize?: number;\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;\n    start?: (controller: ReadableByteStreamController) => any;\n    type: "bytes";\n}\n\ninterface UnderlyingDefaultSource<R = any> {\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: (controller: ReadableStreamDefaultController<R>) => void | PromiseLike<void>;\n    start?: (controller: ReadableStreamDefaultController<R>) => any;\n    type?: undefined;\n}\n\ninterface UnderlyingSink<W = any> {\n    abort?: UnderlyingSinkAbortCallback;\n    close?: UnderlyingSinkCloseCallback;\n    start?: UnderlyingSinkStartCallback;\n    type?: undefined;\n    write?: UnderlyingSinkWriteCallback<W>;\n}\n\ninterface UnderlyingSource<R = any> {\n    autoAllocateChunkSize?: number;\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: UnderlyingSourcePullCallback<R>;\n    start?: UnderlyingSourceStartCallback<R>;\n    type?: ReadableStreamType;\n}\n\ninterface ValidityStateFlags {\n    badInput?: boolean;\n    customError?: boolean;\n    patternMismatch?: boolean;\n    rangeOverflow?: boolean;\n    rangeUnderflow?: boolean;\n    stepMismatch?: boolean;\n    tooLong?: boolean;\n    tooShort?: boolean;\n    typeMismatch?: boolean;\n    valueMissing?: boolean;\n}\n\ninterface VideoColorSpaceInit {\n    fullRange?: boolean | null;\n    matrix?: VideoMatrixCoefficients | null;\n    primaries?: VideoColorPrimaries | null;\n    transfer?: VideoTransferCharacteristics | null;\n}\n\ninterface VideoConfiguration {\n    bitrate: number;\n    colorGamut?: ColorGamut;\n    contentType: string;\n    framerate: number;\n    hasAlphaChannel?: boolean;\n    hdrMetadataType?: HdrMetadataType;\n    height: number;\n    scalabilityMode?: string;\n    transferFunction?: TransferFunction;\n    width: number;\n}\n\ninterface VideoDecoderConfig {\n    codec: string;\n    codedHeight?: number;\n    codedWidth?: number;\n    colorSpace?: VideoColorSpaceInit;\n    description?: AllowSharedBufferSource;\n    displayAspectHeight?: number;\n    displayAspectWidth?: number;\n    hardwareAcceleration?: HardwareAcceleration;\n    optimizeForLatency?: boolean;\n}\n\ninterface VideoDecoderInit {\n    error: WebCodecsErrorCallback;\n    output: VideoFrameOutputCallback;\n}\n\ninterface VideoDecoderSupport {\n    config?: VideoDecoderConfig;\n    supported?: boolean;\n}\n\ninterface VideoEncoderConfig {\n    alpha?: AlphaOption;\n    avc?: AvcEncoderConfig;\n    bitrate?: number;\n    bitrateMode?: VideoEncoderBitrateMode;\n    codec: string;\n    contentHint?: string;\n    displayHeight?: number;\n    displayWidth?: number;\n    framerate?: number;\n    hardwareAcceleration?: HardwareAcceleration;\n    height: number;\n    latencyMode?: LatencyMode;\n    scalabilityMode?: string;\n    width: number;\n}\n\ninterface VideoEncoderEncodeOptions {\n    avc?: VideoEncoderEncodeOptionsForAvc;\n    keyFrame?: boolean;\n}\n\ninterface VideoEncoderEncodeOptionsForAvc {\n    quantizer?: number | null;\n}\n\ninterface VideoEncoderInit {\n    error: WebCodecsErrorCallback;\n    output: EncodedVideoChunkOutputCallback;\n}\n\ninterface VideoEncoderSupport {\n    config?: VideoEncoderConfig;\n    supported?: boolean;\n}\n\ninterface VideoFrameBufferInit {\n    codedHeight: number;\n    codedWidth: number;\n    colorSpace?: VideoColorSpaceInit;\n    displayHeight?: number;\n    displayWidth?: number;\n    duration?: number;\n    format: VideoPixelFormat;\n    layout?: PlaneLayout[];\n    timestamp: number;\n    visibleRect?: DOMRectInit;\n}\n\ninterface VideoFrameCallbackMetadata {\n    captureTime?: DOMHighResTimeStamp;\n    expectedDisplayTime: DOMHighResTimeStamp;\n    height: number;\n    mediaTime: number;\n    presentationTime: DOMHighResTimeStamp;\n    presentedFrames: number;\n    processingDuration?: number;\n    receiveTime?: DOMHighResTimeStamp;\n    rtpTimestamp?: number;\n    width: number;\n}\n\ninterface VideoFrameCopyToOptions {\n    colorSpace?: PredefinedColorSpace;\n    format?: VideoPixelFormat;\n    layout?: PlaneLayout[];\n    rect?: DOMRectInit;\n}\n\ninterface VideoFrameInit {\n    alpha?: AlphaOption;\n    displayHeight?: number;\n    displayWidth?: number;\n    duration?: number;\n    timestamp?: number;\n    visibleRect?: DOMRectInit;\n}\n\ninterface WaveShaperOptions extends AudioNodeOptions {\n    curve?: number[] | Float32Array;\n    oversample?: OverSampleType;\n}\n\ninterface WebGLContextAttributes {\n    alpha?: boolean;\n    antialias?: boolean;\n    depth?: boolean;\n    desynchronized?: boolean;\n    failIfMajorPerformanceCaveat?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    stencil?: boolean;\n}\n\ninterface WebGLContextEventInit extends EventInit {\n    statusMessage?: string;\n}\n\ninterface WebTransportCloseInfo {\n    closeCode?: number;\n    reason?: string;\n}\n\ninterface WebTransportErrorOptions {\n    source?: WebTransportErrorSource;\n    streamErrorCode?: number | null;\n}\n\ninterface WebTransportHash {\n    algorithm?: string;\n    value?: BufferSource;\n}\n\ninterface WebTransportOptions {\n    allowPooling?: boolean;\n    congestionControl?: WebTransportCongestionControl;\n    requireUnreliable?: boolean;\n    serverCertificateHashes?: WebTransportHash[];\n}\n\ninterface WebTransportSendStreamOptions {\n    sendOrder?: number;\n}\n\ninterface WheelEventInit extends MouseEventInit {\n    deltaMode?: number;\n    deltaX?: number;\n    deltaY?: number;\n    deltaZ?: number;\n}\n\ninterface WindowPostMessageOptions extends StructuredSerializeOptions {\n    targetOrigin?: string;\n}\n\ninterface WorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\ninterface WorkletOptions {\n    credentials?: RequestCredentials;\n}\n\ninterface WriteParams {\n    data?: BufferSource | Blob | string | null;\n    position?: number | null;\n    size?: number | null;\n    type: WriteCommandType;\n}\n\ntype NodeFilter = ((node: Node) => number) | { acceptNode(node: Node): number; };\n\ndeclare var NodeFilter: {\n    readonly FILTER_ACCEPT: 1;\n    readonly FILTER_REJECT: 2;\n    readonly FILTER_SKIP: 3;\n    readonly SHOW_ALL: 0xFFFFFFFF;\n    readonly SHOW_ELEMENT: 0x1;\n    readonly SHOW_ATTRIBUTE: 0x2;\n    readonly SHOW_TEXT: 0x4;\n    readonly SHOW_CDATA_SECTION: 0x8;\n    readonly SHOW_ENTITY_REFERENCE: 0x10;\n    readonly SHOW_ENTITY: 0x20;\n    readonly SHOW_PROCESSING_INSTRUCTION: 0x40;\n    readonly SHOW_COMMENT: 0x80;\n    readonly SHOW_DOCUMENT: 0x100;\n    readonly SHOW_DOCUMENT_TYPE: 0x200;\n    readonly SHOW_DOCUMENT_FRAGMENT: 0x400;\n    readonly SHOW_NOTATION: 0x800;\n};\n\ntype XPathNSResolver = ((prefix: string | null) => string | null) | { lookupNamespaceURI(prefix: string | null): string | null; };\n\n/**\n * The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays)\n */\ninterface ANGLE_instanced_arrays {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE) */\n    drawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE) */\n    drawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, primcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE) */\n    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88FE;\n}\n\ninterface ARIAMixin {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic) */\n    ariaAtomic: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete) */\n    ariaAutoComplete: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel) */\n    ariaBrailleLabel: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription) */\n    ariaBrailleRoleDescription: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy) */\n    ariaBusy: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked) */\n    ariaChecked: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount) */\n    ariaColCount: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex) */\n    ariaColIndex: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText) */\n    ariaColIndexText: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan) */\n    ariaColSpan: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent) */\n    ariaCurrent: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription) */\n    ariaDescription: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled) */\n    ariaDisabled: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded) */\n    ariaExpanded: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup) */\n    ariaHasPopup: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden) */\n    ariaHidden: string | null;\n    ariaInvalid: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts) */\n    ariaKeyShortcuts: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel) */\n    ariaLabel: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel) */\n    ariaLevel: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive) */\n    ariaLive: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal) */\n    ariaModal: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine) */\n    ariaMultiLine: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable) */\n    ariaMultiSelectable: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation) */\n    ariaOrientation: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder) */\n    ariaPlaceholder: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet) */\n    ariaPosInSet: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed) */\n    ariaPressed: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly) */\n    ariaReadOnly: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant) */\n    ariaRelevant: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired) */\n    ariaRequired: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription) */\n    ariaRoleDescription: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount) */\n    ariaRowCount: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex) */\n    ariaRowIndex: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText) */\n    ariaRowIndexText: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan) */\n    ariaRowSpan: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected) */\n    ariaSelected: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize) */\n    ariaSetSize: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort) */\n    ariaSort: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax) */\n    ariaValueMax: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin) */\n    ariaValueMin: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow) */\n    ariaValueNow: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText) */\n    ariaValueText: string | null;\n    role: string | null;\n}\n\n/**\n * A controller object that allows you to abort one or more DOM requests as and when desired.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController)\n */\ninterface AbortController {\n    /**\n     * Returns the AbortSignal object associated with this object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/signal)\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Invoking this method will set this object\'s AbortSignal\'s aborted flag and signal to any observers that the associated activity is to be aborted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)\n     */\n    abort(reason?: any): void;\n}\n\ndeclare var AbortController: {\n    prototype: AbortController;\n    new(): AbortController;\n};\n\ninterface AbortSignalEventMap {\n    "abort": Event;\n}\n\n/**\n * A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)\n */\ninterface AbortSignal extends EventTarget {\n    /**\n     * Returns true if this AbortSignal\'s AbortController has signaled to abort, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)\n     */\n    readonly aborted: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event) */\n    onabort: ((this: AbortSignal, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason) */\n    readonly reason: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted) */\n    throwIfAborted(): void;\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AbortSignal: {\n    prototype: AbortSignal;\n    new(): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static) */\n    abort(reason?: any): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static) */\n    any(signals: AbortSignal[]): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static) */\n    timeout(milliseconds: number): AbortSignal;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange) */\ninterface AbstractRange {\n    /**\n     * Returns true if range is collapsed, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/collapsed)\n     */\n    readonly collapsed: boolean;\n    /**\n     * Returns range\'s end node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/endContainer)\n     */\n    readonly endContainer: Node;\n    /**\n     * Returns range\'s end offset.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/endOffset)\n     */\n    readonly endOffset: number;\n    /**\n     * Returns range\'s start node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/startContainer)\n     */\n    readonly startContainer: Node;\n    /**\n     * Returns range\'s start offset.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbstractRange/startOffset)\n     */\n    readonly startOffset: number;\n}\n\ndeclare var AbstractRange: {\n    prototype: AbstractRange;\n    new(): AbstractRange;\n};\n\ninterface AbstractWorkerEventMap {\n    "error": ErrorEvent;\n}\n\ninterface AbstractWorker {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event) */\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/**\n * A node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode)\n */\ninterface AnalyserNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/fftSize) */\n    fftSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/frequencyBinCount) */\n    readonly frequencyBinCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/maxDecibels) */\n    maxDecibels: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/minDecibels) */\n    minDecibels: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/smoothingTimeConstant) */\n    smoothingTimeConstant: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getByteFrequencyData) */\n    getByteFrequencyData(array: Uint8Array): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getByteTimeDomainData) */\n    getByteTimeDomainData(array: Uint8Array): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getFloatFrequencyData) */\n    getFloatFrequencyData(array: Float32Array): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnalyserNode/getFloatTimeDomainData) */\n    getFloatTimeDomainData(array: Float32Array): void;\n}\n\ndeclare var AnalyserNode: {\n    prototype: AnalyserNode;\n    new(context: BaseAudioContext, options?: AnalyserOptions): AnalyserNode;\n};\n\ninterface Animatable {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate) */\n    animate(keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeAnimationOptions): Animation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations) */\n    getAnimations(options?: GetAnimationsOptions): Animation[];\n}\n\ninterface AnimationEventMap {\n    "cancel": AnimationPlaybackEvent;\n    "finish": AnimationPlaybackEvent;\n    "remove": AnimationPlaybackEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation) */\ninterface Animation extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/currentTime) */\n    currentTime: CSSNumberish | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/effect) */\n    effect: AnimationEffect | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finished) */\n    readonly finished: Promise<Animation>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/id) */\n    id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel_event) */\n    oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish_event) */\n    onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/remove_event) */\n    onremove: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/pending) */\n    readonly pending: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/playState) */\n    readonly playState: AnimationPlayState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/playbackRate) */\n    playbackRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/ready) */\n    readonly ready: Promise<Animation>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/replaceState) */\n    readonly replaceState: AnimationReplaceState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/startTime) */\n    startTime: CSSNumberish | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/timeline) */\n    timeline: AnimationTimeline | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/cancel) */\n    cancel(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/commitStyles) */\n    commitStyles(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/finish) */\n    finish(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/pause) */\n    pause(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/persist) */\n    persist(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/play) */\n    play(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/reverse) */\n    reverse(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Animation/updatePlaybackRate) */\n    updatePlaybackRate(playbackRate: number): void;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Animation: {\n    prototype: Animation;\n    new(effect?: AnimationEffect | null, timeline?: AnimationTimeline | null): Animation;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect) */\ninterface AnimationEffect {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/getComputedTiming) */\n    getComputedTiming(): ComputedEffectTiming;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/getTiming) */\n    getTiming(): EffectTiming;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEffect/updateTiming) */\n    updateTiming(timing?: OptionalEffectTiming): void;\n}\n\ndeclare var AnimationEffect: {\n    prototype: AnimationEffect;\n    new(): AnimationEffect;\n};\n\n/**\n * Events providing information related to animations.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent)\n */\ninterface AnimationEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/animationName) */\n    readonly animationName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/elapsedTime) */\n    readonly elapsedTime: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationEvent/pseudoElement) */\n    readonly pseudoElement: string;\n}\n\ndeclare var AnimationEvent: {\n    prototype: AnimationEvent;\n    new(type: string, animationEventInitDict?: AnimationEventInit): AnimationEvent;\n};\n\ninterface AnimationFrameProvider {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame) */\n    cancelAnimationFrame(handle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame) */\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationPlaybackEvent) */\ninterface AnimationPlaybackEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationPlaybackEvent/currentTime) */\n    readonly currentTime: CSSNumberish | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationPlaybackEvent/timelineTime) */\n    readonly timelineTime: CSSNumberish | null;\n}\n\ndeclare var AnimationPlaybackEvent: {\n    prototype: AnimationPlaybackEvent;\n    new(type: string, eventInitDict?: AnimationPlaybackEventInit): AnimationPlaybackEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationTimeline) */\ninterface AnimationTimeline {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AnimationTimeline/currentTime) */\n    readonly currentTime: CSSNumberish | null;\n}\n\ndeclare var AnimationTimeline: {\n    prototype: AnimationTimeline;\n    new(): AnimationTimeline;\n};\n\n/**\n * A DOM element\'s attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr)\n */\ninterface Attr extends Node {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/localName) */\n    readonly localName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/namespaceURI) */\n    readonly namespaceURI: string | null;\n    readonly ownerDocument: Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/ownerElement) */\n    readonly ownerElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/prefix) */\n    readonly prefix: string | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/specified)\n     */\n    readonly specified: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Attr/value) */\n    value: string;\n}\n\ndeclare var Attr: {\n    prototype: Attr;\n    new(): Attr;\n};\n\n/**\n * A short audio asset residing in memory, created from an audio file using the AudioContext.decodeAudioData() method, or from raw data using AudioContext.createBuffer(). Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer)\n */\ninterface AudioBuffer {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/duration) */\n    readonly duration: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/numberOfChannels) */\n    readonly numberOfChannels: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/sampleRate) */\n    readonly sampleRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/copyFromChannel) */\n    copyFromChannel(destination: Float32Array, channelNumber: number, bufferOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/copyToChannel) */\n    copyToChannel(source: Float32Array, channelNumber: number, bufferOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBuffer/getChannelData) */\n    getChannelData(channel: number): Float32Array;\n}\n\ndeclare var AudioBuffer: {\n    prototype: AudioBuffer;\n    new(options: AudioBufferOptions): AudioBuffer;\n};\n\n/**\n * An AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer. It\'s especially useful for playing back audio which has particularly stringent timing accuracy requirements, such as for sounds that must match a specific rhythm and can be kept in memory rather than being played from disk or the network.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode)\n */\ninterface AudioBufferSourceNode extends AudioScheduledSourceNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/buffer) */\n    buffer: AudioBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/detune) */\n    readonly detune: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loop) */\n    loop: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loopEnd) */\n    loopEnd: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/loopStart) */\n    loopStart: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/playbackRate) */\n    readonly playbackRate: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioBufferSourceNode/start) */\n    start(when?: number, offset?: number, duration?: number): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioBufferSourceNode: {\n    prototype: AudioBufferSourceNode;\n    new(context: BaseAudioContext, options?: AudioBufferSourceOptions): AudioBufferSourceNode;\n};\n\n/**\n * An audio-processing graph built from audio modules linked together, each represented by an AudioNode.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext)\n */\ninterface AudioContext extends BaseAudioContext {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/baseLatency) */\n    readonly baseLatency: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/outputLatency) */\n    readonly outputLatency: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaElementSource) */\n    createMediaElementSource(mediaElement: HTMLMediaElement): MediaElementAudioSourceNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaStreamDestination) */\n    createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/createMediaStreamSource) */\n    createMediaStreamSource(mediaStream: MediaStream): MediaStreamAudioSourceNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/getOutputTimestamp) */\n    getOutputTimestamp(): AudioTimestamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/resume) */\n    resume(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioContext/suspend) */\n    suspend(): Promise<void>;\n    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioContext: {\n    prototype: AudioContext;\n    new(contextOptions?: AudioContextOptions): AudioContext;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData) */\ninterface AudioData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/duration) */\n    readonly duration: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/format) */\n    readonly format: AudioSampleFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfChannels) */\n    readonly numberOfChannels: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfFrames) */\n    readonly numberOfFrames: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/sampleRate) */\n    readonly sampleRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/allocationSize) */\n    allocationSize(options: AudioDataCopyToOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/clone) */\n    clone(): AudioData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/copyTo) */\n    copyTo(destination: AllowSharedBufferSource, options: AudioDataCopyToOptions): void;\n}\n\ndeclare var AudioData: {\n    prototype: AudioData;\n    new(init: AudioDataInit): AudioData;\n};\n\ninterface AudioDecoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder)\n */\ninterface AudioDecoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decodeQueueSize) */\n    readonly decodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event) */\n    ondequeue: ((this: AudioDecoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/configure) */\n    configure(config: AudioDecoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decode) */\n    decode(chunk: EncodedAudioChunk): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof AudioDecoderEventMap>(type: K, listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioDecoderEventMap>(type: K, listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioDecoder: {\n    prototype: AudioDecoder;\n    new(init: AudioDecoderInit): AudioDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/isConfigSupported_static) */\n    isConfigSupported(config: AudioDecoderConfig): Promise<AudioDecoderSupport>;\n};\n\n/**\n * AudioDestinationNode has no output (as it is the output, no more AudioNode can be linked after it in the audio graph) and one input. The number of channels in the input must be between 0 and the maxChannelCount value or an exception is raised.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDestinationNode)\n */\ninterface AudioDestinationNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDestinationNode/maxChannelCount) */\n    readonly maxChannelCount: number;\n}\n\ndeclare var AudioDestinationNode: {\n    prototype: AudioDestinationNode;\n    new(): AudioDestinationNode;\n};\n\ninterface AudioEncoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder)\n */\ninterface AudioEncoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encodeQueueSize) */\n    readonly encodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event) */\n    ondequeue: ((this: AudioEncoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/configure) */\n    configure(config: AudioEncoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encode) */\n    encode(data: AudioData): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof AudioEncoderEventMap>(type: K, listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioEncoderEventMap>(type: K, listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioEncoder: {\n    prototype: AudioEncoder;\n    new(init: AudioEncoderInit): AudioEncoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/isConfigSupported_static) */\n    isConfigSupported(config: AudioEncoderConfig): Promise<AudioEncoderSupport>;\n};\n\n/**\n * The position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the BaseAudioContext.listener attribute.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener)\n */\ninterface AudioListener {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardX) */\n    readonly forwardX: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardY) */\n    readonly forwardY: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/forwardZ) */\n    readonly forwardZ: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionX) */\n    readonly positionX: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionY) */\n    readonly positionY: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/positionZ) */\n    readonly positionZ: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upX) */\n    readonly upX: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upY) */\n    readonly upY: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/upZ) */\n    readonly upZ: AudioParam;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/setOrientation)\n     */\n    setOrientation(x: number, y: number, z: number, xUp: number, yUp: number, zUp: number): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioListener/setPosition)\n     */\n    setPosition(x: number, y: number, z: number): void;\n}\n\ndeclare var AudioListener: {\n    prototype: AudioListener;\n    new(): AudioListener;\n};\n\n/**\n * A generic interface for representing an audio processing module. Examples include:\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode)\n */\ninterface AudioNode extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelCount) */\n    channelCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelCountMode) */\n    channelCountMode: ChannelCountMode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/channelInterpretation) */\n    channelInterpretation: ChannelInterpretation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/context) */\n    readonly context: BaseAudioContext;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/numberOfInputs) */\n    readonly numberOfInputs: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/numberOfOutputs) */\n    readonly numberOfOutputs: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/connect) */\n    connect(destinationNode: AudioNode, output?: number, input?: number): AudioNode;\n    connect(destinationParam: AudioParam, output?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioNode/disconnect) */\n    disconnect(): void;\n    disconnect(output: number): void;\n    disconnect(destinationNode: AudioNode): void;\n    disconnect(destinationNode: AudioNode, output: number): void;\n    disconnect(destinationNode: AudioNode, output: number, input: number): void;\n    disconnect(destinationParam: AudioParam): void;\n    disconnect(destinationParam: AudioParam, output: number): void;\n}\n\ndeclare var AudioNode: {\n    prototype: AudioNode;\n    new(): AudioNode;\n};\n\n/**\n * The Web Audio API\'s AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as GainNode.gain).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam)\n */\ninterface AudioParam {\n    automationRate: AutomationRate;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/defaultValue) */\n    readonly defaultValue: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/maxValue) */\n    readonly maxValue: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/minValue) */\n    readonly minValue: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/value) */\n    value: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/cancelAndHoldAtTime) */\n    cancelAndHoldAtTime(cancelTime: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/cancelScheduledValues) */\n    cancelScheduledValues(cancelTime: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/exponentialRampToValueAtTime) */\n    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/linearRampToValueAtTime) */\n    linearRampToValueAtTime(value: number, endTime: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setTargetAtTime) */\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueAtTime) */\n    setValueAtTime(value: number, startTime: number): AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueCurveAtTime) */\n    setValueCurveAtTime(values: number[] | Float32Array, startTime: number, duration: number): AudioParam;\n}\n\ndeclare var AudioParam: {\n    prototype: AudioParam;\n    new(): AudioParam;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParamMap) */\ninterface AudioParamMap {\n    forEach(callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void, thisArg?: any): void;\n}\n\ndeclare var AudioParamMap: {\n    prototype: AudioParamMap;\n    new(): AudioParamMap;\n};\n\n/**\n * The Web Audio API events that occur when a ScriptProcessorNode input buffer is ready to be processed.\n * @deprecated As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and is soon to be replaced by AudioWorklet.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioProcessingEvent)\n */\ninterface AudioProcessingEvent extends Event {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioProcessingEvent/inputBuffer)\n     */\n    readonly inputBuffer: AudioBuffer;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioProcessingEvent/outputBuffer)\n     */\n    readonly outputBuffer: AudioBuffer;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioProcessingEvent/playbackTime)\n     */\n    readonly playbackTime: number;\n}\n\n/** @deprecated */\ndeclare var AudioProcessingEvent: {\n    prototype: AudioProcessingEvent;\n    new(type: string, eventInitDict: AudioProcessingEventInit): AudioProcessingEvent;\n};\n\ninterface AudioScheduledSourceNodeEventMap {\n    "ended": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode) */\ninterface AudioScheduledSourceNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/ended_event) */\n    onended: ((this: AudioScheduledSourceNode, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/start) */\n    start(when?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioScheduledSourceNode/stop) */\n    stop(when?: number): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioScheduledSourceNode: {\n    prototype: AudioScheduledSourceNode;\n    new(): AudioScheduledSourceNode;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorklet)\n */\ninterface AudioWorklet extends Worklet {\n}\n\ndeclare var AudioWorklet: {\n    prototype: AudioWorklet;\n    new(): AudioWorklet;\n};\n\ninterface AudioWorkletNodeEventMap {\n    "processorerror": ErrorEvent;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode)\n */\ninterface AudioWorkletNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/processorerror_event) */\n    onprocessorerror: ((this: AudioWorkletNode, ev: ErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/parameters) */\n    readonly parameters: AudioParamMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioWorkletNode/port) */\n    readonly port: MessagePort;\n    addEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioWorkletNode: {\n    prototype: AudioWorkletNode;\n    new(context: BaseAudioContext, name: string, options?: AudioWorkletNodeOptions): AudioWorkletNode;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse)\n */\ninterface AuthenticatorAssertionResponse extends AuthenticatorResponse {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData) */\n    readonly authenticatorData: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/signature) */\n    readonly signature: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAssertionResponse/userHandle) */\n    readonly userHandle: ArrayBuffer | null;\n}\n\ndeclare var AuthenticatorAssertionResponse: {\n    prototype: AuthenticatorAssertionResponse;\n    new(): AuthenticatorAssertionResponse;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse)\n */\ninterface AuthenticatorAttestationResponse extends AuthenticatorResponse {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/attestationObject) */\n    readonly attestationObject: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getAuthenticatorData) */\n    getAuthenticatorData(): ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getPublicKey) */\n    getPublicKey(): ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getPublicKeyAlgorithm) */\n    getPublicKeyAlgorithm(): COSEAlgorithmIdentifier;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorAttestationResponse/getTransports) */\n    getTransports(): string[];\n}\n\ndeclare var AuthenticatorAttestationResponse: {\n    prototype: AuthenticatorAttestationResponse;\n    new(): AuthenticatorAttestationResponse;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorResponse)\n */\ninterface AuthenticatorResponse {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AuthenticatorResponse/clientDataJSON) */\n    readonly clientDataJSON: ArrayBuffer;\n}\n\ndeclare var AuthenticatorResponse: {\n    prototype: AuthenticatorResponse;\n    new(): AuthenticatorResponse;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BarProp) */\ninterface BarProp {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BarProp/visible) */\n    readonly visible: boolean;\n}\n\ndeclare var BarProp: {\n    prototype: BarProp;\n    new(): BarProp;\n};\n\ninterface BaseAudioContextEventMap {\n    "statechange": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext) */\ninterface BaseAudioContext extends EventTarget {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/audioWorklet)\n     */\n    readonly audioWorklet: AudioWorklet;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/currentTime) */\n    readonly currentTime: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/destination) */\n    readonly destination: AudioDestinationNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/listener) */\n    readonly listener: AudioListener;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/statechange_event) */\n    onstatechange: ((this: BaseAudioContext, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/sampleRate) */\n    readonly sampleRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/state) */\n    readonly state: AudioContextState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createAnalyser) */\n    createAnalyser(): AnalyserNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBiquadFilter) */\n    createBiquadFilter(): BiquadFilterNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBuffer) */\n    createBuffer(numberOfChannels: number, length: number, sampleRate: number): AudioBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createBufferSource) */\n    createBufferSource(): AudioBufferSourceNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createChannelMerger) */\n    createChannelMerger(numberOfInputs?: number): ChannelMergerNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createChannelSplitter) */\n    createChannelSplitter(numberOfOutputs?: number): ChannelSplitterNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createConstantSource) */\n    createConstantSource(): ConstantSourceNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createConvolver) */\n    createConvolver(): ConvolverNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createDelay) */\n    createDelay(maxDelayTime?: number): DelayNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createDynamicsCompressor) */\n    createDynamicsCompressor(): DynamicsCompressorNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createGain) */\n    createGain(): GainNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createIIRFilter) */\n    createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createOscillator) */\n    createOscillator(): OscillatorNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPanner) */\n    createPanner(): PannerNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPeriodicWave) */\n    createPeriodicWave(real: number[] | Float32Array, imag: number[] | Float32Array, constraints?: PeriodicWaveConstraints): PeriodicWave;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createScriptProcessor)\n     */\n    createScriptProcessor(bufferSize?: number, numberOfInputChannels?: number, numberOfOutputChannels?: number): ScriptProcessorNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createStereoPanner) */\n    createStereoPanner(): StereoPannerNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createWaveShaper) */\n    createWaveShaper(): WaveShaperNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/decodeAudioData) */\n    decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback | null, errorCallback?: DecodeErrorCallback | null): Promise<AudioBuffer>;\n    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BaseAudioContext: {\n    prototype: BaseAudioContext;\n    new(): BaseAudioContext;\n};\n\n/**\n * The beforeunload event is fired when the window, the document and its resources are about to be unloaded.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent)\n */\ninterface BeforeUnloadEvent extends Event {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BeforeUnloadEvent/returnValue)\n     */\n    returnValue: any;\n}\n\ndeclare var BeforeUnloadEvent: {\n    prototype: BeforeUnloadEvent;\n    new(): BeforeUnloadEvent;\n};\n\n/**\n * A simple low-order filter, and is created using the AudioContext.createBiquadFilter() method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode)\n */\ninterface BiquadFilterNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/Q) */\n    readonly Q: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/detune) */\n    readonly detune: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/frequency) */\n    readonly frequency: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/gain) */\n    readonly gain: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/type) */\n    type: BiquadFilterType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BiquadFilterNode/getFrequencyResponse) */\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\n}\n\ndeclare var BiquadFilterNode: {\n    prototype: BiquadFilterNode;\n    new(context: BaseAudioContext, options?: BiquadFilterOptions): BiquadFilterNode;\n};\n\n/**\n * A file-like object of immutable, raw data. Blobs represent data that isn\'t necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user\'s system.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)\n */\ninterface Blob {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/arrayBuffer) */\n    arrayBuffer(): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/bytes) */\n    bytes(): Promise<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/stream) */\n    stream(): ReadableStream<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n    text(): Promise<string>;\n}\n\ndeclare var Blob: {\n    prototype: Blob;\n    new(blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent) */\ninterface BlobEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent/data) */\n    readonly data: Blob;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BlobEvent/timecode) */\n    readonly timecode: DOMHighResTimeStamp;\n}\n\ndeclare var BlobEvent: {\n    prototype: BlobEvent;\n    new(type: string, eventInitDict: BlobEventInit): BlobEvent;\n};\n\ninterface Body {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body) */\n    readonly body: ReadableStream<Uint8Array> | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed) */\n    readonly bodyUsed: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/arrayBuffer) */\n    arrayBuffer(): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/blob) */\n    blob(): Promise<Blob>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bytes) */\n    bytes(): Promise<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/formData) */\n    formData(): Promise<FormData>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */\n    json(): Promise<any>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */\n    text(): Promise<string>;\n}\n\ninterface BroadcastChannelEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel) */\ninterface BroadcastChannel extends EventTarget {\n    /**\n     * Returns the channel name (as passed to the constructor).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/name)\n     */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event) */\n    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event) */\n    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /**\n     * Closes the BroadcastChannel object, opening it up to garbage collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/close)\n     */\n    close(): void;\n    /**\n     * Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)\n     */\n    postMessage(message: any): void;\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BroadcastChannel: {\n    prototype: BroadcastChannel;\n    new(name: string): BroadcastChannel;\n};\n\n/**\n * This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy)\n */\ninterface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/highWaterMark) */\n    readonly highWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/size) */\n    readonly size: QueuingStrategySize<ArrayBufferView>;\n}\n\ndeclare var ByteLengthQueuingStrategy: {\n    prototype: ByteLengthQueuingStrategy;\n    new(init: QueuingStrategyInit): ByteLengthQueuingStrategy;\n};\n\n/**\n * A CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and & don’t need escaping as they normally do when inside a CDATA section.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CDATASection)\n */\ninterface CDATASection extends Text {\n}\n\ndeclare var CDATASection: {\n    prototype: CDATASection;\n    new(): CDATASection;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSAnimation) */\ninterface CSSAnimation extends Animation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSAnimation/animationName) */\n    readonly animationName: string;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CSSAnimation: {\n    prototype: CSSAnimation;\n    new(): CSSAnimation;\n};\n\n/**\n * A single condition CSS at-rule, which consists of a condition and a statement block. It is a child of CSSGroupingRule.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSConditionRule)\n */\ninterface CSSConditionRule extends CSSGroupingRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSConditionRule/conditionText) */\n    readonly conditionText: string;\n}\n\ndeclare var CSSConditionRule: {\n    prototype: CSSConditionRule;\n    new(): CSSConditionRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSContainerRule) */\ninterface CSSContainerRule extends CSSConditionRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSContainerRule/containerName) */\n    readonly containerName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSContainerRule/containerQuery) */\n    readonly containerQuery: string;\n}\n\ndeclare var CSSContainerRule: {\n    prototype: CSSContainerRule;\n    new(): CSSContainerRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule) */\ninterface CSSCounterStyleRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/additiveSymbols) */\n    additiveSymbols: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/fallback) */\n    fallback: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/name) */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/negative) */\n    negative: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/pad) */\n    pad: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/prefix) */\n    prefix: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/range) */\n    range: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/speakAs) */\n    speakAs: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/suffix) */\n    suffix: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/symbols) */\n    symbols: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSCounterStyleRule/system) */\n    system: string;\n}\n\ndeclare var CSSCounterStyleRule: {\n    prototype: CSSCounterStyleRule;\n    new(): CSSCounterStyleRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontFaceRule) */\ninterface CSSFontFaceRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontFaceRule/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n}\n\ndeclare var CSSFontFaceRule: {\n    prototype: CSSFontFaceRule;\n    new(): CSSFontFaceRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontFeatureValuesRule) */\ninterface CSSFontFeatureValuesRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontFeatureValuesRule/fontFamily) */\n    fontFamily: string;\n}\n\ndeclare var CSSFontFeatureValuesRule: {\n    prototype: CSSFontFeatureValuesRule;\n    new(): CSSFontFeatureValuesRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule) */\ninterface CSSFontPaletteValuesRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/basePalette) */\n    readonly basePalette: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/fontFamily) */\n    readonly fontFamily: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSFontPaletteValuesRule/overrideColors) */\n    readonly overrideColors: string;\n}\n\ndeclare var CSSFontPaletteValuesRule: {\n    prototype: CSSFontPaletteValuesRule;\n    new(): CSSFontPaletteValuesRule;\n};\n\n/**\n * Any CSS at-rule that contains other rules nested within it.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule)\n */\ninterface CSSGroupingRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/cssRules) */\n    readonly cssRules: CSSRuleList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/deleteRule) */\n    deleteRule(index: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSGroupingRule/insertRule) */\n    insertRule(rule: string, index?: number): number;\n}\n\ndeclare var CSSGroupingRule: {\n    prototype: CSSGroupingRule;\n    new(): CSSGroupingRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */\ninterface CSSImageValue extends CSSStyleValue {\n}\n\ndeclare var CSSImageValue: {\n    prototype: CSSImageValue;\n    new(): CSSImageValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule) */\ninterface CSSImportRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/href) */\n    readonly href: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/layerName) */\n    readonly layerName: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/media) */\n    get media(): MediaList;\n    set media(mediaText: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/styleSheet) */\n    readonly styleSheet: CSSStyleSheet | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImportRule/supportsText) */\n    readonly supportsText: string | null;\n}\n\ndeclare var CSSImportRule: {\n    prototype: CSSImportRule;\n    new(): CSSImportRule;\n};\n\n/**\n * An object representing a set of style for a given keyframe. It corresponds to the contains of a single keyframe of a @keyframes at-rule. It implements the CSSRule interface with a type value of 8 (CSSRule.KEYFRAME_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframeRule)\n */\ninterface CSSKeyframeRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframeRule/keyText) */\n    keyText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframeRule/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n}\n\ndeclare var CSSKeyframeRule: {\n    prototype: CSSKeyframeRule;\n    new(): CSSKeyframeRule;\n};\n\n/**\n * An object representing a complete set of keyframes for a CSS animation. It corresponds to the contains of a whole @keyframes at-rule. It implements the CSSRule interface with a type value of 7 (CSSRule.KEYFRAMES_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule)\n */\ninterface CSSKeyframesRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/cssRules) */\n    readonly cssRules: CSSRuleList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/name) */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/appendRule) */\n    appendRule(rule: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/deleteRule) */\n    deleteRule(select: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeyframesRule/findRule) */\n    findRule(select: string): CSSKeyframeRule | null;\n    [index: number]: CSSKeyframeRule;\n}\n\ndeclare var CSSKeyframesRule: {\n    prototype: CSSKeyframesRule;\n    new(): CSSKeyframesRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeywordValue) */\ninterface CSSKeywordValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeywordValue/value) */\n    value: string;\n}\n\ndeclare var CSSKeywordValue: {\n    prototype: CSSKeywordValue;\n    new(value: string): CSSKeywordValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerBlockRule) */\ninterface CSSLayerBlockRule extends CSSGroupingRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerBlockRule/name) */\n    readonly name: string;\n}\n\ndeclare var CSSLayerBlockRule: {\n    prototype: CSSLayerBlockRule;\n    new(): CSSLayerBlockRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerStatementRule) */\ninterface CSSLayerStatementRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSLayerStatementRule/nameList) */\n    readonly nameList: ReadonlyArray<string>;\n}\n\ndeclare var CSSLayerStatementRule: {\n    prototype: CSSLayerStatementRule;\n    new(): CSSLayerStatementRule;\n};\n\ninterface CSSMathClamp extends CSSMathValue {\n    readonly lower: CSSNumericValue;\n    readonly upper: CSSNumericValue;\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathClamp: {\n    prototype: CSSMathClamp;\n    new(lower: CSSNumberish, value: CSSNumberish, upper: CSSNumberish): CSSMathClamp;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathInvert) */\ninterface CSSMathInvert extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathInvert/value) */\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathInvert: {\n    prototype: CSSMathInvert;\n    new(arg: CSSNumberish): CSSMathInvert;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMax) */\ninterface CSSMathMax extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMax/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathMax: {\n    prototype: CSSMathMax;\n    new(...args: CSSNumberish[]): CSSMathMax;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */\ninterface CSSMathMin extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathMin: {\n    prototype: CSSMathMin;\n    new(...args: CSSNumberish[]): CSSMathMin;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */\ninterface CSSMathNegate extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate/value) */\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathNegate: {\n    prototype: CSSMathNegate;\n    new(arg: CSSNumberish): CSSMathNegate;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathProduct) */\ninterface CSSMathProduct extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathProduct/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathProduct: {\n    prototype: CSSMathProduct;\n    new(...args: CSSNumberish[]): CSSMathProduct;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */\ninterface CSSMathSum extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathSum: {\n    prototype: CSSMathSum;\n    new(...args: CSSNumberish[]): CSSMathSum;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */\ninterface CSSMathValue extends CSSNumericValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue/operator) */\n    readonly operator: CSSMathOperator;\n}\n\ndeclare var CSSMathValue: {\n    prototype: CSSMathValue;\n    new(): CSSMathValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMatrixComponent) */\ninterface CSSMatrixComponent extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMatrixComponent/matrix) */\n    matrix: DOMMatrix;\n}\n\ndeclare var CSSMatrixComponent: {\n    prototype: CSSMatrixComponent;\n    new(matrix: DOMMatrixReadOnly, options?: CSSMatrixComponentOptions): CSSMatrixComponent;\n};\n\n/**\n * A single CSS @media rule. It implements the CSSConditionRule interface, and therefore the CSSGroupingRule and the CSSRule interface with a type value of 4 (CSSRule.MEDIA_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMediaRule)\n */\ninterface CSSMediaRule extends CSSConditionRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMediaRule/media) */\n    get media(): MediaList;\n    set media(mediaText: string);\n}\n\ndeclare var CSSMediaRule: {\n    prototype: CSSMediaRule;\n    new(): CSSMediaRule;\n};\n\n/**\n * An object representing a single CSS @namespace at-rule. It implements the CSSRule interface, with a type value of 10 (CSSRule.NAMESPACE_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNamespaceRule)\n */\ninterface CSSNamespaceRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNamespaceRule/namespaceURI) */\n    readonly namespaceURI: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNamespaceRule/prefix) */\n    readonly prefix: string;\n}\n\ndeclare var CSSNamespaceRule: {\n    prototype: CSSNamespaceRule;\n    new(): CSSNamespaceRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNestedDeclarations) */\ninterface CSSNestedDeclarations extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNestedDeclarations/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n}\n\ndeclare var CSSNestedDeclarations: {\n    prototype: CSSNestedDeclarations;\n    new(): CSSNestedDeclarations;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericArray) */\ninterface CSSNumericArray {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericArray/length) */\n    readonly length: number;\n    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;\n    [index: number]: CSSNumericValue;\n}\n\ndeclare var CSSNumericArray: {\n    prototype: CSSNumericArray;\n    new(): CSSNumericArray;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue) */\ninterface CSSNumericValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add) */\n    add(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div) */\n    div(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals) */\n    equals(...value: CSSNumberish[]): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max) */\n    max(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min) */\n    min(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul) */\n    mul(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub) */\n    sub(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to) */\n    to(unit: string): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum) */\n    toSum(...units: string[]): CSSMathSum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type) */\n    type(): CSSNumericType;\n}\n\ndeclare var CSSNumericValue: {\n    prototype: CSSNumericValue;\n    new(): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/parse_static) */\n    parse(cssText: string): CSSNumericValue;\n};\n\n/**\n * CSSPageRule is an interface representing a single CSS @page rule. It implements the CSSRule interface with a type value of 6 (CSSRule.PAGE_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPageRule)\n */\ninterface CSSPageRule extends CSSGroupingRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPageRule/selectorText) */\n    selectorText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPageRule/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n}\n\ndeclare var CSSPageRule: {\n    prototype: CSSPageRule;\n    new(): CSSPageRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPerspective) */\ninterface CSSPerspective extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPerspective/length) */\n    length: CSSPerspectiveValue;\n}\n\ndeclare var CSSPerspective: {\n    prototype: CSSPerspective;\n    new(length: CSSPerspectiveValue): CSSPerspective;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule) */\ninterface CSSPropertyRule extends CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/inherits) */\n    readonly inherits: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/initialValue) */\n    readonly initialValue: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPropertyRule/syntax) */\n    readonly syntax: string;\n}\n\ndeclare var CSSPropertyRule: {\n    prototype: CSSPropertyRule;\n    new(): CSSPropertyRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate) */\ninterface CSSRotate extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/angle) */\n    angle: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/x) */\n    x: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/y) */\n    y: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/z) */\n    z: CSSNumberish;\n}\n\ndeclare var CSSRotate: {\n    prototype: CSSRotate;\n    new(angle: CSSNumericValue): CSSRotate;\n    new(x: CSSNumberish, y: CSSNumberish, z: CSSNumberish, angle: CSSNumericValue): CSSRotate;\n};\n\n/**\n * A single CSS rule. There are several types of rules, listed in the Type constants section below.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule)\n */\ninterface CSSRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/cssText) */\n    cssText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/parentRule) */\n    readonly parentRule: CSSRule | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/parentStyleSheet) */\n    readonly parentStyleSheet: CSSStyleSheet | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRule/type)\n     */\n    readonly type: number;\n    readonly STYLE_RULE: 1;\n    readonly CHARSET_RULE: 2;\n    readonly IMPORT_RULE: 3;\n    readonly MEDIA_RULE: 4;\n    readonly FONT_FACE_RULE: 5;\n    readonly PAGE_RULE: 6;\n    readonly NAMESPACE_RULE: 10;\n    readonly KEYFRAMES_RULE: 7;\n    readonly KEYFRAME_RULE: 8;\n    readonly SUPPORTS_RULE: 12;\n    readonly COUNTER_STYLE_RULE: 11;\n    readonly FONT_FEATURE_VALUES_RULE: 14;\n}\n\ndeclare var CSSRule: {\n    prototype: CSSRule;\n    new(): CSSRule;\n    readonly STYLE_RULE: 1;\n    readonly CHARSET_RULE: 2;\n    readonly IMPORT_RULE: 3;\n    readonly MEDIA_RULE: 4;\n    readonly FONT_FACE_RULE: 5;\n    readonly PAGE_RULE: 6;\n    readonly NAMESPACE_RULE: 10;\n    readonly KEYFRAMES_RULE: 7;\n    readonly KEYFRAME_RULE: 8;\n    readonly SUPPORTS_RULE: 12;\n    readonly COUNTER_STYLE_RULE: 11;\n    readonly FONT_FEATURE_VALUES_RULE: 14;\n};\n\n/**\n * A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRuleList)\n */\ninterface CSSRuleList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRuleList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRuleList/item) */\n    item(index: number): CSSRule | null;\n    [index: number]: CSSRule;\n}\n\ndeclare var CSSRuleList: {\n    prototype: CSSRuleList;\n    new(): CSSRuleList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale) */\ninterface CSSScale extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/x) */\n    x: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/y) */\n    y: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/z) */\n    z: CSSNumberish;\n}\n\ndeclare var CSSScale: {\n    prototype: CSSScale;\n    new(x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScopeRule) */\ninterface CSSScopeRule extends CSSGroupingRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScopeRule/end) */\n    readonly end: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScopeRule/start) */\n    readonly start: string | null;\n}\n\ndeclare var CSSScopeRule: {\n    prototype: CSSScopeRule;\n    new(): CSSScopeRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew) */\ninterface CSSSkew extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ax) */\n    ax: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ay) */\n    ay: CSSNumericValue;\n}\n\ndeclare var CSSSkew: {\n    prototype: CSSSkew;\n    new(ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewX) */\ninterface CSSSkewX extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewX/ax) */\n    ax: CSSNumericValue;\n}\n\ndeclare var CSSSkewX: {\n    prototype: CSSSkewX;\n    new(ax: CSSNumericValue): CSSSkewX;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewY) */\ninterface CSSSkewY extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewY/ay) */\n    ay: CSSNumericValue;\n}\n\ndeclare var CSSSkewY: {\n    prototype: CSSSkewY;\n    new(ay: CSSNumericValue): CSSSkewY;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStartingStyleRule) */\ninterface CSSStartingStyleRule extends CSSGroupingRule {\n}\n\ndeclare var CSSStartingStyleRule: {\n    prototype: CSSStartingStyleRule;\n    new(): CSSStartingStyleRule;\n};\n\n/**\n * An object that is a CSS declaration block, and exposes style information and various style-related methods and properties.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration)\n */\ninterface CSSStyleDeclaration {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/accent-color) */\n    accentColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-content) */\n    alignContent: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-items) */\n    alignItems: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-self) */\n    alignSelf: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/alignment-baseline) */\n    alignmentBaseline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/all) */\n    all: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation) */\n    animation: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-composition) */\n    animationComposition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-delay) */\n    animationDelay: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-direction) */\n    animationDirection: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-duration) */\n    animationDuration: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode) */\n    animationFillMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count) */\n    animationIterationCount: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-name) */\n    animationName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-play-state) */\n    animationPlayState: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-timing-function) */\n    animationTimingFunction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/appearance) */\n    appearance: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/aspect-ratio) */\n    aspectRatio: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/backdrop-filter) */\n    backdropFilter: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/backface-visibility) */\n    backfaceVisibility: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background) */\n    background: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-attachment) */\n    backgroundAttachment: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-blend-mode) */\n    backgroundBlendMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-clip) */\n    backgroundClip: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-color) */\n    backgroundColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-image) */\n    backgroundImage: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-origin) */\n    backgroundOrigin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position) */\n    backgroundPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position-x) */\n    backgroundPositionX: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-position-y) */\n    backgroundPositionY: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-repeat) */\n    backgroundRepeat: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-size) */\n    backgroundSize: string;\n    baselineShift: string;\n    baselineSource: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/block-size) */\n    blockSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border) */\n    border: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block) */\n    borderBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-color) */\n    borderBlockColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end) */\n    borderBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-color) */\n    borderBlockEndColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-style) */\n    borderBlockEndStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-end-width) */\n    borderBlockEndWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start) */\n    borderBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-color) */\n    borderBlockStartColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-style) */\n    borderBlockStartStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-start-width) */\n    borderBlockStartWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-style) */\n    borderBlockStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-block-width) */\n    borderBlockWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom) */\n    borderBottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-color) */\n    borderBottomColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius) */\n    borderBottomLeftRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius) */\n    borderBottomRightRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-style) */\n    borderBottomStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-width) */\n    borderBottomWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-collapse) */\n    borderCollapse: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-color) */\n    borderColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius) */\n    borderEndEndRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius) */\n    borderEndStartRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image) */\n    borderImage: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-outset) */\n    borderImageOutset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-repeat) */\n    borderImageRepeat: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-slice) */\n    borderImageSlice: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-source) */\n    borderImageSource: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-image-width) */\n    borderImageWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline) */\n    borderInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-color) */\n    borderInlineColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end) */\n    borderInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color) */\n    borderInlineEndColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style) */\n    borderInlineEndStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width) */\n    borderInlineEndWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start) */\n    borderInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color) */\n    borderInlineStartColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style) */\n    borderInlineStartStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width) */\n    borderInlineStartWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-style) */\n    borderInlineStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-inline-width) */\n    borderInlineWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left) */\n    borderLeft: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-color) */\n    borderLeftColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-style) */\n    borderLeftStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-left-width) */\n    borderLeftWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-radius) */\n    borderRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right) */\n    borderRight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-color) */\n    borderRightColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-style) */\n    borderRightStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-right-width) */\n    borderRightWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-spacing) */\n    borderSpacing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius) */\n    borderStartEndRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius) */\n    borderStartStartRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-style) */\n    borderStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top) */\n    borderTop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-color) */\n    borderTopColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius) */\n    borderTopLeftRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius) */\n    borderTopRightRadius: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-style) */\n    borderTopStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-width) */\n    borderTopWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-width) */\n    borderWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/bottom) */\n    bottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-decoration-break) */\n    boxDecorationBreak: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-shadow) */\n    boxShadow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-sizing) */\n    boxSizing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-after) */\n    breakAfter: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-before) */\n    breakBefore: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/break-inside) */\n    breakInside: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/caption-side) */\n    captionSide: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/caret-color) */\n    caretColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clear) */\n    clear: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clip)\n     */\n    clip: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clip-path) */\n    clipPath: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/clip-rule) */\n    clipRule: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color) */\n    color: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-interpolation) */\n    colorInterpolation: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-interpolation-filters) */\n    colorInterpolationFilters: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/color-scheme) */\n    colorScheme: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-count) */\n    columnCount: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-fill) */\n    columnFill: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-gap) */\n    columnGap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule) */\n    columnRule: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-color) */\n    columnRuleColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-style) */\n    columnRuleStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-rule-width) */\n    columnRuleWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-span) */\n    columnSpan: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/column-width) */\n    columnWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/columns) */\n    columns: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain) */\n    contain: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-block-size) */\n    containIntrinsicBlockSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-height) */\n    containIntrinsicHeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-inline-size) */\n    containIntrinsicInlineSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-size) */\n    containIntrinsicSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-width) */\n    containIntrinsicWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container) */\n    container: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container-name) */\n    containerName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/container-type) */\n    containerType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/content) */\n    content: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/content-visibility) */\n    contentVisibility: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-increment) */\n    counterIncrement: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-reset) */\n    counterReset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/counter-set) */\n    counterSet: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/cssFloat) */\n    cssFloat: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/cssText) */\n    cssText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cursor) */\n    cursor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cx) */\n    cx: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/cy) */\n    cy: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/d) */\n    d: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/direction) */\n    direction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/display) */\n    display: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/dominant-baseline) */\n    dominantBaseline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/empty-cells) */\n    emptyCells: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill) */\n    fill: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill-opacity) */\n    fillOpacity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/fill-rule) */\n    fillRule: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/filter) */\n    filter: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex) */\n    flex: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-basis) */\n    flexBasis: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-direction) */\n    flexDirection: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-flow) */\n    flexFlow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-grow) */\n    flexGrow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-shrink) */\n    flexShrink: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-wrap) */\n    flexWrap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/float) */\n    float: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flood-color) */\n    floodColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flood-opacity) */\n    floodOpacity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font) */\n    font: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-family) */\n    fontFamily: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-feature-settings) */\n    fontFeatureSettings: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-kerning) */\n    fontKerning: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing) */\n    fontOpticalSizing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-palette) */\n    fontPalette: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-size) */\n    fontSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-size-adjust) */\n    fontSizeAdjust: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-stretch) */\n    fontStretch: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-style) */\n    fontStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis) */\n    fontSynthesis: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-small-caps) */\n    fontSynthesisSmallCaps: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-style) */\n    fontSynthesisStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-synthesis-weight) */\n    fontSynthesisWeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant) */\n    fontVariant: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates) */\n    fontVariantAlternates: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-caps) */\n    fontVariantCaps: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian) */\n    fontVariantEastAsian: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures) */\n    fontVariantLigatures: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric) */\n    fontVariantNumeric: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variant-position) */\n    fontVariantPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-variation-settings) */\n    fontVariationSettings: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/font-weight) */\n    fontWeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust) */\n    forcedColorAdjust: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/gap) */\n    gap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid) */\n    grid: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-area) */\n    gridArea: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns) */\n    gridAutoColumns: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow) */\n    gridAutoFlow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows) */\n    gridAutoRows: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column) */\n    gridColumn: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column-end) */\n    gridColumnEnd: string;\n    /** @deprecated This is a legacy alias of `columnGap`. */\n    gridColumnGap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-column-start) */\n    gridColumnStart: string;\n    /** @deprecated This is a legacy alias of `gap`. */\n    gridGap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row) */\n    gridRow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row-end) */\n    gridRowEnd: string;\n    /** @deprecated This is a legacy alias of `rowGap`. */\n    gridRowGap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-row-start) */\n    gridRowStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template) */\n    gridTemplate: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-areas) */\n    gridTemplateAreas: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-columns) */\n    gridTemplateColumns: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/grid-template-rows) */\n    gridTemplateRows: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/height) */\n    height: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/hyphenate-character) */\n    hyphenateCharacter: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/hyphens) */\n    hyphens: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/image-orientation)\n     */\n    imageOrientation: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/image-rendering) */\n    imageRendering: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inline-size) */\n    inlineSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset) */\n    inset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block) */\n    insetBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block-end) */\n    insetBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-block-start) */\n    insetBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline) */\n    insetInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline-end) */\n    insetInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/inset-inline-start) */\n    insetInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/isolation) */\n    isolation: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-content) */\n    justifyContent: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-items) */\n    justifyItems: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-self) */\n    justifySelf: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/left) */\n    left: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/letter-spacing) */\n    letterSpacing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/lighting-color) */\n    lightingColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/line-break) */\n    lineBreak: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/line-height) */\n    lineHeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style) */\n    listStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-image) */\n    listStyleImage: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-position) */\n    listStylePosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/list-style-type) */\n    listStyleType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin) */\n    margin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block) */\n    marginBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block-end) */\n    marginBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-block-start) */\n    marginBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-bottom) */\n    marginBottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline) */\n    marginInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline-end) */\n    marginInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-inline-start) */\n    marginInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-left) */\n    marginLeft: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-right) */\n    marginRight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/margin-top) */\n    marginTop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker) */\n    marker: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-end) */\n    markerEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-mid) */\n    markerMid: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/marker-start) */\n    markerStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask) */\n    mask: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-clip) */\n    maskClip: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-composite) */\n    maskComposite: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-image) */\n    maskImage: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-mode) */\n    maskMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-origin) */\n    maskOrigin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-position) */\n    maskPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-repeat) */\n    maskRepeat: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-size) */\n    maskSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-type) */\n    maskType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/math-depth) */\n    mathDepth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/math-style) */\n    mathStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-block-size) */\n    maxBlockSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-height) */\n    maxHeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-inline-size) */\n    maxInlineSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/max-width) */\n    maxWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-block-size) */\n    minBlockSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-height) */\n    minHeight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-inline-size) */\n    minInlineSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/min-width) */\n    minWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode) */\n    mixBlendMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/object-fit) */\n    objectFit: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/object-position) */\n    objectPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset) */\n    offset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-anchor) */\n    offsetAnchor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-distance) */\n    offsetDistance: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-path) */\n    offsetPath: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-position) */\n    offsetPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/offset-rotate) */\n    offsetRotate: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/opacity) */\n    opacity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/order) */\n    order: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/orphans) */\n    orphans: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline) */\n    outline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-color) */\n    outlineColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-offset) */\n    outlineOffset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-style) */\n    outlineStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/outline-width) */\n    outlineWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow) */\n    overflow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-anchor) */\n    overflowAnchor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin) */\n    overflowClipMargin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-wrap) */\n    overflowWrap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-x) */\n    overflowX: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-y) */\n    overflowY: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior) */\n    overscrollBehavior: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block) */\n    overscrollBehaviorBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline) */\n    overscrollBehaviorInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x) */\n    overscrollBehaviorX: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y) */\n    overscrollBehaviorY: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding) */\n    padding: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block) */\n    paddingBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block-end) */\n    paddingBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-block-start) */\n    paddingBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-bottom) */\n    paddingBottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline) */\n    paddingInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline-end) */\n    paddingInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-inline-start) */\n    paddingInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-left) */\n    paddingLeft: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-right) */\n    paddingRight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/padding-top) */\n    paddingTop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/page) */\n    page: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/page-break-after)\n     */\n    pageBreakAfter: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/page-break-before)\n     */\n    pageBreakBefore: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/page-break-inside)\n     */\n    pageBreakInside: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/paint-order) */\n    paintOrder: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/parentRule) */\n    readonly parentRule: CSSRule | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective) */\n    perspective: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective-origin) */\n    perspectiveOrigin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-content) */\n    placeContent: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-items) */\n    placeItems: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/place-self) */\n    placeSelf: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/pointer-events) */\n    pointerEvents: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/position) */\n    position: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/print-color-adjust) */\n    printColorAdjust: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/quotes) */\n    quotes: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/r) */\n    r: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/resize) */\n    resize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/right) */\n    right: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/rotate) */\n    rotate: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/row-gap) */\n    rowGap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ruby-align) */\n    rubyAlign: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ruby-position) */\n    rubyPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/rx) */\n    rx: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/ry) */\n    ry: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scale) */\n    scale: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-behavior) */\n    scrollBehavior: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin) */\n    scrollMargin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block) */\n    scrollMarginBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end) */\n    scrollMarginBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start) */\n    scrollMarginBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom) */\n    scrollMarginBottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline) */\n    scrollMarginInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end) */\n    scrollMarginInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start) */\n    scrollMarginInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left) */\n    scrollMarginLeft: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right) */\n    scrollMarginRight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top) */\n    scrollMarginTop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding) */\n    scrollPadding: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block) */\n    scrollPaddingBlock: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end) */\n    scrollPaddingBlockEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start) */\n    scrollPaddingBlockStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom) */\n    scrollPaddingBottom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline) */\n    scrollPaddingInline: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end) */\n    scrollPaddingInlineEnd: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start) */\n    scrollPaddingInlineStart: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left) */\n    scrollPaddingLeft: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right) */\n    scrollPaddingRight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top) */\n    scrollPaddingTop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align) */\n    scrollSnapAlign: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop) */\n    scrollSnapStop: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type) */\n    scrollSnapType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-color) */\n    scrollbarColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter) */\n    scrollbarGutter: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/scrollbar-width) */\n    scrollbarWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold) */\n    shapeImageThreshold: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-margin) */\n    shapeMargin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-outside) */\n    shapeOutside: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/shape-rendering) */\n    shapeRendering: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stop-color) */\n    stopColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stop-opacity) */\n    stopOpacity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke) */\n    stroke: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-dasharray) */\n    strokeDasharray: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-dashoffset) */\n    strokeDashoffset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-linecap) */\n    strokeLinecap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-linejoin) */\n    strokeLinejoin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-miterlimit) */\n    strokeMiterlimit: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-opacity) */\n    strokeOpacity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/stroke-width) */\n    strokeWidth: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/tab-size) */\n    tabSize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/table-layout) */\n    tableLayout: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-align) */\n    textAlign: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-align-last) */\n    textAlignLast: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-anchor) */\n    textAnchor: string;\n    textBox: string;\n    textBoxEdge: string;\n    textBoxTrim: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-combine-upright) */\n    textCombineUpright: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration) */\n    textDecoration: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-color) */\n    textDecorationColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-line) */\n    textDecorationLine: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink) */\n    textDecorationSkipInk: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-style) */\n    textDecorationStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness) */\n    textDecorationThickness: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis) */\n    textEmphasis: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color) */\n    textEmphasisColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position) */\n    textEmphasisPosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style) */\n    textEmphasisStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-indent) */\n    textIndent: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-orientation) */\n    textOrientation: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-overflow) */\n    textOverflow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-rendering) */\n    textRendering: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-shadow) */\n    textShadow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-transform) */\n    textTransform: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-underline-offset) */\n    textUnderlineOffset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-underline-position) */\n    textUnderlinePosition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap) */\n    textWrap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap-mode) */\n    textWrapMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-wrap-style) */\n    textWrapStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/top) */\n    top: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/touch-action) */\n    touchAction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform) */\n    transform: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-box) */\n    transformBox: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-origin) */\n    transformOrigin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-style) */\n    transformStyle: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition) */\n    transition: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-behavior) */\n    transitionBehavior: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-delay) */\n    transitionDelay: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-duration) */\n    transitionDuration: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-property) */\n    transitionProperty: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-timing-function) */\n    transitionTimingFunction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/translate) */\n    translate: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/unicode-bidi) */\n    unicodeBidi: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/user-select) */\n    userSelect: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/vector-effect) */\n    vectorEffect: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/vertical-align) */\n    verticalAlign: string;\n    viewTransitionClass: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/view-transition-name) */\n    viewTransitionName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/visibility) */\n    visibility: string;\n    /**\n     * @deprecated This is a legacy alias of `alignContent`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-content)\n     */\n    webkitAlignContent: string;\n    /**\n     * @deprecated This is a legacy alias of `alignItems`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-items)\n     */\n    webkitAlignItems: string;\n    /**\n     * @deprecated This is a legacy alias of `alignSelf`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/align-self)\n     */\n    webkitAlignSelf: string;\n    /**\n     * @deprecated This is a legacy alias of `animation`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation)\n     */\n    webkitAnimation: string;\n    /**\n     * @deprecated This is a legacy alias of `animationDelay`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-delay)\n     */\n    webkitAnimationDelay: string;\n    /**\n     * @deprecated This is a legacy alias of `animationDirection`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-direction)\n     */\n    webkitAnimationDirection: string;\n    /**\n     * @deprecated This is a legacy alias of `animationDuration`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-duration)\n     */\n    webkitAnimationDuration: string;\n    /**\n     * @deprecated This is a legacy alias of `animationFillMode`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode)\n     */\n    webkitAnimationFillMode: string;\n    /**\n     * @deprecated This is a legacy alias of `animationIterationCount`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count)\n     */\n    webkitAnimationIterationCount: string;\n    /**\n     * @deprecated This is a legacy alias of `animationName`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-name)\n     */\n    webkitAnimationName: string;\n    /**\n     * @deprecated This is a legacy alias of `animationPlayState`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-play-state)\n     */\n    webkitAnimationPlayState: string;\n    /**\n     * @deprecated This is a legacy alias of `animationTimingFunction`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/animation-timing-function)\n     */\n    webkitAnimationTimingFunction: string;\n    /**\n     * @deprecated This is a legacy alias of `appearance`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/appearance)\n     */\n    webkitAppearance: string;\n    /**\n     * @deprecated This is a legacy alias of `backfaceVisibility`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/backface-visibility)\n     */\n    webkitBackfaceVisibility: string;\n    /**\n     * @deprecated This is a legacy alias of `backgroundClip`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-clip)\n     */\n    webkitBackgroundClip: string;\n    /**\n     * @deprecated This is a legacy alias of `backgroundOrigin`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-origin)\n     */\n    webkitBackgroundOrigin: string;\n    /**\n     * @deprecated This is a legacy alias of `backgroundSize`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/background-size)\n     */\n    webkitBackgroundSize: string;\n    /**\n     * @deprecated This is a legacy alias of `borderBottomLeftRadius`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius)\n     */\n    webkitBorderBottomLeftRadius: string;\n    /**\n     * @deprecated This is a legacy alias of `borderBottomRightRadius`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius)\n     */\n    webkitBorderBottomRightRadius: string;\n    /**\n     * @deprecated This is a legacy alias of `borderRadius`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-radius)\n     */\n    webkitBorderRadius: string;\n    /**\n     * @deprecated This is a legacy alias of `borderTopLeftRadius`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius)\n     */\n    webkitBorderTopLeftRadius: string;\n    /**\n     * @deprecated This is a legacy alias of `borderTopRightRadius`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius)\n     */\n    webkitBorderTopRightRadius: string;\n    /**\n     * @deprecated This is a legacy alias of `boxAlign`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-align)\n     */\n    webkitBoxAlign: string;\n    /**\n     * @deprecated This is a legacy alias of `boxFlex`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-flex)\n     */\n    webkitBoxFlex: string;\n    /**\n     * @deprecated This is a legacy alias of `boxOrdinalGroup`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-ordinal-group)\n     */\n    webkitBoxOrdinalGroup: string;\n    /**\n     * @deprecated This is a legacy alias of `boxOrient`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-orient)\n     */\n    webkitBoxOrient: string;\n    /**\n     * @deprecated This is a legacy alias of `boxPack`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-pack)\n     */\n    webkitBoxPack: string;\n    /**\n     * @deprecated This is a legacy alias of `boxShadow`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-shadow)\n     */\n    webkitBoxShadow: string;\n    /**\n     * @deprecated This is a legacy alias of `boxSizing`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/box-sizing)\n     */\n    webkitBoxSizing: string;\n    /**\n     * @deprecated This is a legacy alias of `filter`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/filter)\n     */\n    webkitFilter: string;\n    /**\n     * @deprecated This is a legacy alias of `flex`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex)\n     */\n    webkitFlex: string;\n    /**\n     * @deprecated This is a legacy alias of `flexBasis`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-basis)\n     */\n    webkitFlexBasis: string;\n    /**\n     * @deprecated This is a legacy alias of `flexDirection`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-direction)\n     */\n    webkitFlexDirection: string;\n    /**\n     * @deprecated This is a legacy alias of `flexFlow`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-flow)\n     */\n    webkitFlexFlow: string;\n    /**\n     * @deprecated This is a legacy alias of `flexGrow`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-grow)\n     */\n    webkitFlexGrow: string;\n    /**\n     * @deprecated This is a legacy alias of `flexShrink`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-shrink)\n     */\n    webkitFlexShrink: string;\n    /**\n     * @deprecated This is a legacy alias of `flexWrap`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/flex-wrap)\n     */\n    webkitFlexWrap: string;\n    /**\n     * @deprecated This is a legacy alias of `justifyContent`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/justify-content)\n     */\n    webkitJustifyContent: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp) */\n    webkitLineClamp: string;\n    /**\n     * @deprecated This is a legacy alias of `mask`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask)\n     */\n    webkitMask: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorder`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border)\n     */\n    webkitMaskBoxImage: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorderOutset`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border-outset)\n     */\n    webkitMaskBoxImageOutset: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorderRepeat`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat)\n     */\n    webkitMaskBoxImageRepeat: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorderSlice`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border-slice)\n     */\n    webkitMaskBoxImageSlice: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorderSource`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border-source)\n     */\n    webkitMaskBoxImageSource: string;\n    /**\n     * @deprecated This is a legacy alias of `maskBorderWidth`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-border-width)\n     */\n    webkitMaskBoxImageWidth: string;\n    /**\n     * @deprecated This is a legacy alias of `maskClip`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-clip)\n     */\n    webkitMaskClip: string;\n    /**\n     * @deprecated This is a legacy alias of `maskComposite`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-composite)\n     */\n    webkitMaskComposite: string;\n    /**\n     * @deprecated This is a legacy alias of `maskImage`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-image)\n     */\n    webkitMaskImage: string;\n    /**\n     * @deprecated This is a legacy alias of `maskOrigin`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-origin)\n     */\n    webkitMaskOrigin: string;\n    /**\n     * @deprecated This is a legacy alias of `maskPosition`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-position)\n     */\n    webkitMaskPosition: string;\n    /**\n     * @deprecated This is a legacy alias of `maskRepeat`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-repeat)\n     */\n    webkitMaskRepeat: string;\n    /**\n     * @deprecated This is a legacy alias of `maskSize`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/mask-size)\n     */\n    webkitMaskSize: string;\n    /**\n     * @deprecated This is a legacy alias of `order`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/order)\n     */\n    webkitOrder: string;\n    /**\n     * @deprecated This is a legacy alias of `perspective`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective)\n     */\n    webkitPerspective: string;\n    /**\n     * @deprecated This is a legacy alias of `perspectiveOrigin`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/perspective-origin)\n     */\n    webkitPerspectiveOrigin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color) */\n    webkitTextFillColor: string;\n    /**\n     * @deprecated This is a legacy alias of `textSizeAdjust`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/text-size-adjust)\n     */\n    webkitTextSizeAdjust: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke) */\n    webkitTextStroke: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color) */\n    webkitTextStrokeColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width) */\n    webkitTextStrokeWidth: string;\n    /**\n     * @deprecated This is a legacy alias of `transform`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform)\n     */\n    webkitTransform: string;\n    /**\n     * @deprecated This is a legacy alias of `transformOrigin`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-origin)\n     */\n    webkitTransformOrigin: string;\n    /**\n     * @deprecated This is a legacy alias of `transformStyle`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transform-style)\n     */\n    webkitTransformStyle: string;\n    /**\n     * @deprecated This is a legacy alias of `transition`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition)\n     */\n    webkitTransition: string;\n    /**\n     * @deprecated This is a legacy alias of `transitionDelay`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-delay)\n     */\n    webkitTransitionDelay: string;\n    /**\n     * @deprecated This is a legacy alias of `transitionDuration`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-duration)\n     */\n    webkitTransitionDuration: string;\n    /**\n     * @deprecated This is a legacy alias of `transitionProperty`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-property)\n     */\n    webkitTransitionProperty: string;\n    /**\n     * @deprecated This is a legacy alias of `transitionTimingFunction`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/transition-timing-function)\n     */\n    webkitTransitionTimingFunction: string;\n    /**\n     * @deprecated This is a legacy alias of `userSelect`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/user-select)\n     */\n    webkitUserSelect: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/white-space) */\n    whiteSpace: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/white-space-collapse) */\n    whiteSpaceCollapse: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/widows) */\n    widows: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/width) */\n    width: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/will-change) */\n    willChange: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/word-break) */\n    wordBreak: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/word-spacing) */\n    wordSpacing: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/overflow-wrap)\n     */\n    wordWrap: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/writing-mode) */\n    writingMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/x) */\n    x: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/y) */\n    y: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/z-index) */\n    zIndex: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/CSS/zoom) */\n    zoom: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/getPropertyPriority) */\n    getPropertyPriority(property: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/getPropertyValue) */\n    getPropertyValue(property: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/item) */\n    item(index: number): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/removeProperty) */\n    removeProperty(property: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/setProperty) */\n    setProperty(property: string, value: string | null, priority?: string): void;\n    [index: number]: string;\n}\n\ndeclare var CSSStyleDeclaration: {\n    prototype: CSSStyleDeclaration;\n    new(): CSSStyleDeclaration;\n};\n\n/**\n * CSSStyleRule represents a single CSS style rule. It implements the CSSRule interface with a type value of 1 (CSSRule.STYLE_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule)\n */\ninterface CSSStyleRule extends CSSGroupingRule {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule/selectorText) */\n    selectorText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleRule/styleMap) */\n    readonly styleMap: StylePropertyMap;\n}\n\ndeclare var CSSStyleRule: {\n    prototype: CSSStyleRule;\n    new(): CSSStyleRule;\n};\n\n/**\n * A single CSS style sheet. It inherits properties and methods from its parent, StyleSheet.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet)\n */\ninterface CSSStyleSheet extends StyleSheet {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/cssRules) */\n    readonly cssRules: CSSRuleList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/ownerRule) */\n    readonly ownerRule: CSSRule | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/rules)\n     */\n    readonly rules: CSSRuleList;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/addRule)\n     */\n    addRule(selector?: string, style?: string, index?: number): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/deleteRule) */\n    deleteRule(index: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/insertRule) */\n    insertRule(rule: string, index?: number): number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/removeRule)\n     */\n    removeRule(index?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/replace) */\n    replace(text: string): Promise<CSSStyleSheet>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleSheet/replaceSync) */\n    replaceSync(text: string): void;\n}\n\ndeclare var CSSStyleSheet: {\n    prototype: CSSStyleSheet;\n    new(options?: CSSStyleSheetInit): CSSStyleSheet;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleValue) */\ninterface CSSStyleValue {\n    toString(): string;\n}\n\ndeclare var CSSStyleValue: {\n    prototype: CSSStyleValue;\n    new(): CSSStyleValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleValue/parse_static) */\n    parse(property: string, cssText: string): CSSStyleValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleValue/parseAll_static) */\n    parseAll(property: string, cssText: string): CSSStyleValue[];\n};\n\n/**\n * An object representing a single CSS @supports at-rule. It implements the CSSConditionRule interface, and therefore the CSSRule and CSSGroupingRule interfaces with a type value of 12 (CSSRule.SUPPORTS_RULE).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSupportsRule)\n */\ninterface CSSSupportsRule extends CSSConditionRule {\n}\n\ndeclare var CSSSupportsRule: {\n    prototype: CSSSupportsRule;\n    new(): CSSSupportsRule;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent) */\ninterface CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/is2D) */\n    is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/toMatrix) */\n    toMatrix(): DOMMatrix;\n    toString(): string;\n}\n\ndeclare var CSSTransformComponent: {\n    prototype: CSSTransformComponent;\n    new(): CSSTransformComponent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue) */\ninterface CSSTransformValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/is2D) */\n    readonly is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/toMatrix) */\n    toMatrix(): DOMMatrix;\n    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;\n    [index: number]: CSSTransformComponent;\n}\n\ndeclare var CSSTransformValue: {\n    prototype: CSSTransformValue;\n    new(transforms: CSSTransformComponent[]): CSSTransformValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransition) */\ninterface CSSTransition extends Animation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransition/transitionProperty) */\n    readonly transitionProperty: string;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CSSTransition: {\n    prototype: CSSTransition;\n    new(): CSSTransition;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate) */\ninterface CSSTranslate extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/x) */\n    x: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/y) */\n    y: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/z) */\n    z: CSSNumericValue;\n}\n\ndeclare var CSSTranslate: {\n    prototype: CSSTranslate;\n    new(x: CSSNumericValue, y: CSSNumericValue, z?: CSSNumericValue): CSSTranslate;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue) */\ninterface CSSUnitValue extends CSSNumericValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/unit) */\n    readonly unit: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/value) */\n    value: number;\n}\n\ndeclare var CSSUnitValue: {\n    prototype: CSSUnitValue;\n    new(value: number, unit: string): CSSUnitValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnparsedValue) */\ninterface CSSUnparsedValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnparsedValue/length) */\n    readonly length: number;\n    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;\n    [index: number]: CSSUnparsedSegment;\n}\n\ndeclare var CSSUnparsedValue: {\n    prototype: CSSUnparsedValue;\n    new(members: CSSUnparsedSegment[]): CSSUnparsedValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue) */\ninterface CSSVariableReferenceValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/fallback) */\n    readonly fallback: CSSUnparsedValue | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/variable) */\n    variable: string;\n}\n\ndeclare var CSSVariableReferenceValue: {\n    prototype: CSSVariableReferenceValue;\n    new(variable: string, fallback?: CSSUnparsedValue | null): CSSVariableReferenceValue;\n};\n\ninterface CSSViewTransitionRule extends CSSRule {\n    readonly navigation: string;\n    readonly types: ReadonlyArray<string>;\n}\n\ndeclare var CSSViewTransitionRule: {\n    prototype: CSSViewTransitionRule;\n    new(): CSSViewTransitionRule;\n};\n\n/**\n * Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don\'t have to use it in conjunction with service workers, even though it is defined in the service worker spec.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache)\n */\ninterface Cache {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */\n    add(request: RequestInfo | URL): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */\n    addAll(requests: RequestInfo[]): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */\n    delete(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/keys) */\n    keys(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Request>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/match) */\n    match(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<Response | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/matchAll) */\n    matchAll(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Response>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/put) */\n    put(request: RequestInfo | URL, response: Response): Promise<void>;\n}\n\ndeclare var Cache: {\n    prototype: Cache;\n    new(): Cache;\n};\n\n/**\n * The storage for Cache objects.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage)\n */\ninterface CacheStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/delete) */\n    delete(cacheName: string): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/has) */\n    has(cacheName: string): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/keys) */\n    keys(): Promise<string[]>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/match) */\n    match(request: RequestInfo | URL, options?: MultiCacheQueryOptions): Promise<Response | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/open) */\n    open(cacheName: string): Promise<Cache>;\n}\n\ndeclare var CacheStorage: {\n    prototype: CacheStorage;\n    new(): CacheStorage;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasCaptureMediaStreamTrack) */\ninterface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasCaptureMediaStreamTrack/canvas) */\n    readonly canvas: HTMLCanvasElement;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasCaptureMediaStreamTrack/requestFrame) */\n    requestFrame(): void;\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CanvasCaptureMediaStreamTrack: {\n    prototype: CanvasCaptureMediaStreamTrack;\n    new(): CanvasCaptureMediaStreamTrack;\n};\n\ninterface CanvasCompositing {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalAlpha) */\n    globalAlpha: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation) */\n    globalCompositeOperation: GlobalCompositeOperation;\n}\n\ninterface CanvasDrawImage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/drawImage) */\n    drawImage(image: CanvasImageSource, dx: number, dy: number): void;\n    drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number): void;\n    drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number): void;\n}\n\ninterface CanvasDrawPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/beginPath) */\n    beginPath(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clip) */\n    clip(fillRule?: CanvasFillRule): void;\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fill) */\n    fill(fillRule?: CanvasFillRule): void;\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInPath) */\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInStroke) */\n    isPointInStroke(x: number, y: number): boolean;\n    isPointInStroke(path: Path2D, x: number, y: number): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/stroke) */\n    stroke(): void;\n    stroke(path: Path2D): void;\n}\n\ninterface CanvasFillStrokeStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillStyle) */\n    fillStyle: string | CanvasGradient | CanvasPattern;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeStyle) */\n    strokeStyle: string | CanvasGradient | CanvasPattern;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createConicGradient) */\n    createConicGradient(startAngle: number, x: number, y: number): CanvasGradient;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createLinearGradient) */\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createPattern) */\n    createPattern(image: CanvasImageSource, repetition: string | null): CanvasPattern | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createRadialGradient) */\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n}\n\ninterface CanvasFilters {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/filter) */\n    filter: string;\n}\n\n/**\n * An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasGradient)\n */\ninterface CanvasGradient {\n    /**\n     * Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n     *\n     * Throws an "IndexSizeError" DOMException if the offset is out of range. Throws a "SyntaxError" DOMException if the color cannot be parsed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasGradient/addColorStop)\n     */\n    addColorStop(offset: number, color: string): void;\n}\n\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new(): CanvasGradient;\n};\n\ninterface CanvasImageData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createImageData) */\n    createImageData(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    createImageData(imagedata: ImageData): ImageData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getImageData) */\n    getImageData(sx: number, sy: number, sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/putImageData) */\n    putImageData(imagedata: ImageData, dx: number, dy: number): void;\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void;\n}\n\ninterface CanvasImageSmoothing {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled) */\n    imageSmoothingEnabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality) */\n    imageSmoothingQuality: ImageSmoothingQuality;\n}\n\ninterface CanvasPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arc) */\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arcTo) */\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo) */\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/closePath) */\n    closePath(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/ellipse) */\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineTo) */\n    lineTo(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/moveTo) */\n    moveTo(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo) */\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rect) */\n    rect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/roundRect) */\n    roundRect(x: number, y: number, w: number, h: number, radii?: number | DOMPointInit | (number | DOMPointInit)[]): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineCap) */\n    lineCap: CanvasLineCap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineDashOffset) */\n    lineDashOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineJoin) */\n    lineJoin: CanvasLineJoin;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineWidth) */\n    lineWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/miterLimit) */\n    miterLimit: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash) */\n    getLineDash(): number[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */\n    setLineDash(segments: number[]): void;\n}\n\n/**\n * An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasPattern)\n */\ninterface CanvasPattern {\n    /**\n     * Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasPattern/setTransform)\n     */\n    setTransform(transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new(): CanvasPattern;\n};\n\ninterface CanvasRect {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clearRect) */\n    clearRect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillRect) */\n    fillRect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeRect) */\n    strokeRect(x: number, y: number, w: number, h: number): void;\n}\n\n/**\n * The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element. It is used for drawing shapes, text, images, and other objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D)\n */\ninterface CanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDrawPath, CanvasFillStrokeStyles, CanvasFilters, CanvasImageData, CanvasImageSmoothing, CanvasPath, CanvasPathDrawingStyles, CanvasRect, CanvasSettings, CanvasShadowStyles, CanvasState, CanvasText, CanvasTextDrawingStyles, CanvasTransform, CanvasUserInterface {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/canvas) */\n    readonly canvas: HTMLCanvasElement;\n}\n\ndeclare var CanvasRenderingContext2D: {\n    prototype: CanvasRenderingContext2D;\n    new(): CanvasRenderingContext2D;\n};\n\ninterface CanvasSettings {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getContextAttributes) */\n    getContextAttributes(): CanvasRenderingContext2DSettings;\n}\n\ninterface CanvasShadowStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowBlur) */\n    shadowBlur: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowColor) */\n    shadowColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX) */\n    shadowOffsetX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY) */\n    shadowOffsetY: number;\n}\n\ninterface CanvasState {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isContextLost) */\n    isContextLost(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/reset) */\n    reset(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/restore) */\n    restore(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/save) */\n    save(): void;\n}\n\ninterface CanvasText {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillText) */\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/measureText) */\n    measureText(text: string): TextMetrics;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeText) */\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\n}\n\ninterface CanvasTextDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/direction) */\n    direction: CanvasDirection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/font) */\n    font: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontKerning) */\n    fontKerning: CanvasFontKerning;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontStretch) */\n    fontStretch: CanvasFontStretch;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps) */\n    fontVariantCaps: CanvasFontVariantCaps;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/letterSpacing) */\n    letterSpacing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textAlign) */\n    textAlign: CanvasTextAlign;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textBaseline) */\n    textBaseline: CanvasTextBaseline;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textRendering) */\n    textRendering: CanvasTextRendering;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/wordSpacing) */\n    wordSpacing: string;\n}\n\ninterface CanvasTransform {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getTransform) */\n    getTransform(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/resetTransform) */\n    resetTransform(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rotate) */\n    rotate(angle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/scale) */\n    scale(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setTransform) */\n    setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    setTransform(transform?: DOMMatrix2DInit): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/transform) */\n    transform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/translate) */\n    translate(x: number, y: number): void;\n}\n\ninterface CanvasUserInterface {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded) */\n    drawFocusIfNeeded(element: Element): void;\n    drawFocusIfNeeded(path: Path2D, element: Element): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CaretPosition) */\ninterface CaretPosition {\n    readonly offset: number;\n    readonly offsetNode: Node;\n    getClientRect(): DOMRect | null;\n}\n\ndeclare var CaretPosition: {\n    prototype: CaretPosition;\n    new(): CaretPosition;\n};\n\n/**\n * The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ChannelMergerNode)\n */\ninterface ChannelMergerNode extends AudioNode {\n}\n\ndeclare var ChannelMergerNode: {\n    prototype: ChannelMergerNode;\n    new(context: BaseAudioContext, options?: ChannelMergerOptions): ChannelMergerNode;\n};\n\n/**\n * The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ChannelSplitterNode)\n */\ninterface ChannelSplitterNode extends AudioNode {\n}\n\ndeclare var ChannelSplitterNode: {\n    prototype: ChannelSplitterNode;\n    new(context: BaseAudioContext, options?: ChannelSplitterOptions): ChannelSplitterNode;\n};\n\n/**\n * The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren\'t any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren\'t abstract.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData)\n */\ninterface CharacterData extends Node, ChildNode, NonDocumentTypeChildNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/data) */\n    data: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/length) */\n    readonly length: number;\n    readonly ownerDocument: Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/appendData) */\n    appendData(data: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/deleteData) */\n    deleteData(offset: number, count: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/insertData) */\n    insertData(offset: number, data: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceData) */\n    replaceData(offset: number, count: number, data: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/substringData) */\n    substringData(offset: number, count: number): string;\n}\n\ndeclare var CharacterData: {\n    prototype: CharacterData;\n    new(): CharacterData;\n};\n\ninterface ChildNode extends Node {\n    /**\n     * Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)\n     */\n    after(...nodes: (Node | string)[]): void;\n    /**\n     * Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)\n     */\n    before(...nodes: (Node | string)[]): void;\n    /**\n     * Removes node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)\n     */\n    remove(): void;\n    /**\n     * Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)\n     */\n    replaceWith(...nodes: (Node | string)[]): void;\n}\n\n/** @deprecated */\ninterface ClientRect extends DOMRect {\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard)\n */\ninterface Clipboard extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/read) */\n    read(): Promise<ClipboardItems>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/readText) */\n    readText(): Promise<string>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/write) */\n    write(data: ClipboardItems): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clipboard/writeText) */\n    writeText(data: string): Promise<void>;\n}\n\ndeclare var Clipboard: {\n    prototype: Clipboard;\n    new(): Clipboard;\n};\n\n/**\n * Events providing information related to modification of the clipboard, that is cut, copy, and paste events.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardEvent)\n */\ninterface ClipboardEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardEvent/clipboardData) */\n    readonly clipboardData: DataTransfer | null;\n}\n\ndeclare var ClipboardEvent: {\n    prototype: ClipboardEvent;\n    new(type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem)\n */\ninterface ClipboardItem {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/presentationStyle) */\n    readonly presentationStyle: PresentationStyle;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/types) */\n    readonly types: ReadonlyArray<string>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/getType) */\n    getType(type: string): Promise<Blob>;\n}\n\ndeclare var ClipboardItem: {\n    prototype: ClipboardItem;\n    new(items: Record<string, string | Blob | PromiseLike<string | Blob>>, options?: ClipboardItemOptions): ClipboardItem;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/supports_static) */\n    supports(type: string): boolean;\n};\n\n/**\n * A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object\'s onclose attribute.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent)\n */\ninterface CloseEvent extends Event {\n    /**\n     * Returns the WebSocket connection close code provided by the server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/code)\n     */\n    readonly code: number;\n    /**\n     * Returns the WebSocket connection close reason provided by the server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/reason)\n     */\n    readonly reason: string;\n    /**\n     * Returns true if the connection closed cleanly; false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/wasClean)\n     */\n    readonly wasClean: boolean;\n}\n\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\n};\n\n/**\n * Textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Comment)\n */\ninterface Comment extends CharacterData {\n}\n\ndeclare var Comment: {\n    prototype: Comment;\n    new(data?: string): Comment;\n};\n\n/**\n * The DOM CompositionEvent represents events that occur due to the user indirectly entering text.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent)\n */\ninterface CompositionEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent/data) */\n    readonly data: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent/initCompositionEvent)\n     */\n    initCompositionEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: WindowProxy | null, dataArg?: string): void;\n}\n\ndeclare var CompositionEvent: {\n    prototype: CompositionEvent;\n    new(type: string, eventInitDict?: CompositionEventInit): CompositionEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream) */\ninterface CompressionStream extends GenericTransformStream {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var CompressionStream: {\n    prototype: CompressionStream;\n    new(format: CompressionFormat): CompressionStream;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ConstantSourceNode) */\ninterface ConstantSourceNode extends AudioScheduledSourceNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ConstantSourceNode/offset) */\n    readonly offset: AudioParam;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ConstantSourceNode: {\n    prototype: ConstantSourceNode;\n    new(context: BaseAudioContext, options?: ConstantSourceOptions): ConstantSourceNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContentVisibilityAutoStateChangeEvent) */\ninterface ContentVisibilityAutoStateChangeEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContentVisibilityAutoStateChangeEvent/skipped) */\n    readonly skipped: boolean;\n}\n\ndeclare var ContentVisibilityAutoStateChangeEvent: {\n    prototype: ContentVisibilityAutoStateChangeEvent;\n    new(type: string, eventInitDict?: ContentVisibilityAutoStateChangeEventInit): ContentVisibilityAutoStateChangeEvent;\n};\n\n/**\n * An AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ConvolverNode)\n */\ninterface ConvolverNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ConvolverNode/buffer) */\n    buffer: AudioBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ConvolverNode/normalize) */\n    normalize: boolean;\n}\n\ndeclare var ConvolverNode: {\n    prototype: ConvolverNode;\n    new(context: BaseAudioContext, options?: ConvolverOptions): ConvolverNode;\n};\n\n/**\n * This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy)\n */\ninterface CountQueuingStrategy extends QueuingStrategy {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/highWaterMark) */\n    readonly highWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/size) */\n    readonly size: QueuingStrategySize;\n}\n\ndeclare var CountQueuingStrategy: {\n    prototype: CountQueuingStrategy;\n    new(init: QueuingStrategyInit): CountQueuingStrategy;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Credential)\n */\ninterface Credential {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Credential/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Credential/type) */\n    readonly type: string;\n}\n\ndeclare var Credential: {\n    prototype: Credential;\n    new(): Credential;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer)\n */\ninterface CredentialsContainer {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/create) */\n    create(options?: CredentialCreationOptions): Promise<Credential | null>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/get) */\n    get(options?: CredentialRequestOptions): Promise<Credential | null>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/preventSilentAccess) */\n    preventSilentAccess(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CredentialsContainer/store) */\n    store(credential: Credential): Promise<void>;\n}\n\ndeclare var CredentialsContainer: {\n    prototype: CredentialsContainer;\n    new(): CredentialsContainer;\n};\n\n/**\n * Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto)\n */\ninterface Crypto {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/subtle)\n     */\n    readonly subtle: SubtleCrypto;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/getRandomValues) */\n    getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/randomUUID)\n     */\n    randomUUID(): `${string}-${string}-${string}-${string}-${string}`;\n}\n\ndeclare var Crypto: {\n    prototype: Crypto;\n    new(): Crypto;\n};\n\n/**\n * The CryptoKey dictionary of the Web Crypto API represents a cryptographic key.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey)\n */\ninterface CryptoKey {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/algorithm) */\n    readonly algorithm: KeyAlgorithm;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/extractable) */\n    readonly extractable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/type) */\n    readonly type: KeyType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages) */\n    readonly usages: KeyUsage[];\n}\n\ndeclare var CryptoKey: {\n    prototype: CryptoKey;\n    new(): CryptoKey;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry) */\ninterface CustomElementRegistry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/define) */\n    define(name: string, constructor: CustomElementConstructor, options?: ElementDefinitionOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/get) */\n    get(name: string): CustomElementConstructor | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/getName) */\n    getName(constructor: CustomElementConstructor): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/upgrade) */\n    upgrade(root: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomElementRegistry/whenDefined) */\n    whenDefined(name: string): Promise<CustomElementConstructor>;\n}\n\ndeclare var CustomElementRegistry: {\n    prototype: CustomElementRegistry;\n    new(): CustomElementRegistry;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */\ninterface CustomEvent<T = any> extends Event {\n    /**\n     * Returns any custom data event was created with. Typically used for synthetic events.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent/detail)\n     */\n    readonly detail: T;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent/initCustomEvent)\n     */\n    initCustomEvent(type: string, bubbles?: boolean, cancelable?: boolean, detail?: T): void;\n}\n\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new<T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomStateSet) */\ninterface CustomStateSet {\n    forEach(callbackfn: (value: string, key: string, parent: CustomStateSet) => void, thisArg?: any): void;\n}\n\ndeclare var CustomStateSet: {\n    prototype: CustomStateSet;\n    new(): CustomStateSet;\n};\n\n/**\n * An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException)\n */\ninterface DOMException extends Error {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/code)\n     */\n    readonly code: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/message) */\n    readonly message: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/name) */\n    readonly name: string;\n    readonly INDEX_SIZE_ERR: 1;\n    readonly DOMSTRING_SIZE_ERR: 2;\n    readonly HIERARCHY_REQUEST_ERR: 3;\n    readonly WRONG_DOCUMENT_ERR: 4;\n    readonly INVALID_CHARACTER_ERR: 5;\n    readonly NO_DATA_ALLOWED_ERR: 6;\n    readonly NO_MODIFICATION_ALLOWED_ERR: 7;\n    readonly NOT_FOUND_ERR: 8;\n    readonly NOT_SUPPORTED_ERR: 9;\n    readonly INUSE_ATTRIBUTE_ERR: 10;\n    readonly INVALID_STATE_ERR: 11;\n    readonly SYNTAX_ERR: 12;\n    readonly INVALID_MODIFICATION_ERR: 13;\n    readonly NAMESPACE_ERR: 14;\n    readonly INVALID_ACCESS_ERR: 15;\n    readonly VALIDATION_ERR: 16;\n    readonly TYPE_MISMATCH_ERR: 17;\n    readonly SECURITY_ERR: 18;\n    readonly NETWORK_ERR: 19;\n    readonly ABORT_ERR: 20;\n    readonly URL_MISMATCH_ERR: 21;\n    readonly QUOTA_EXCEEDED_ERR: 22;\n    readonly TIMEOUT_ERR: 23;\n    readonly INVALID_NODE_TYPE_ERR: 24;\n    readonly DATA_CLONE_ERR: 25;\n}\n\ndeclare var DOMException: {\n    prototype: DOMException;\n    new(message?: string, name?: string): DOMException;\n    readonly INDEX_SIZE_ERR: 1;\n    readonly DOMSTRING_SIZE_ERR: 2;\n    readonly HIERARCHY_REQUEST_ERR: 3;\n    readonly WRONG_DOCUMENT_ERR: 4;\n    readonly INVALID_CHARACTER_ERR: 5;\n    readonly NO_DATA_ALLOWED_ERR: 6;\n    readonly NO_MODIFICATION_ALLOWED_ERR: 7;\n    readonly NOT_FOUND_ERR: 8;\n    readonly NOT_SUPPORTED_ERR: 9;\n    readonly INUSE_ATTRIBUTE_ERR: 10;\n    readonly INVALID_STATE_ERR: 11;\n    readonly SYNTAX_ERR: 12;\n    readonly INVALID_MODIFICATION_ERR: 13;\n    readonly NAMESPACE_ERR: 14;\n    readonly INVALID_ACCESS_ERR: 15;\n    readonly VALIDATION_ERR: 16;\n    readonly TYPE_MISMATCH_ERR: 17;\n    readonly SECURITY_ERR: 18;\n    readonly NETWORK_ERR: 19;\n    readonly ABORT_ERR: 20;\n    readonly URL_MISMATCH_ERR: 21;\n    readonly QUOTA_EXCEEDED_ERR: 22;\n    readonly TIMEOUT_ERR: 23;\n    readonly INVALID_NODE_TYPE_ERR: 24;\n    readonly DATA_CLONE_ERR: 25;\n};\n\n/**\n * An object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation)\n */\ninterface DOMImplementation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createDocument) */\n    createDocument(namespace: string | null, qualifiedName: string | null, doctype?: DocumentType | null): XMLDocument;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createDocumentType) */\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument) */\n    createHTMLDocument(title?: string): Document;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMImplementation/hasFeature)\n     */\n    hasFeature(...args: any[]): true;\n}\n\ndeclare var DOMImplementation: {\n    prototype: DOMImplementation;\n    new(): DOMImplementation;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix) */\ninterface DOMMatrix extends DOMMatrixReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    a: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    b: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    c: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    d: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    e: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    f: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m11: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m12: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m13: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m14: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m21: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m22: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m23: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m24: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m31: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m32: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m33: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m34: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m41: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m42: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m43: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m44: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/invertSelf) */\n    invertSelf(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/multiplySelf) */\n    multiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/preMultiplySelf) */\n    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    rotateAxisAngleSelf(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/rotateSelf) */\n    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    scale3dSelf(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scaleSelf(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/setMatrixValue) */\n    setMatrixValue(transformList: string): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewXSelf) */\n    skewXSelf(sx?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewYSelf) */\n    skewYSelf(sy?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/translateSelf) */\n    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrix: {\n    prototype: DOMMatrix;\n    new(init?: string | number[]): DOMMatrix;\n    fromFloat32Array(array32: Float32Array): DOMMatrix;\n    fromFloat64Array(array64: Float64Array): DOMMatrix;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrix;\n};\n\ntype SVGMatrix = DOMMatrix;\ndeclare var SVGMatrix: typeof DOMMatrix;\n\ntype WebKitCSSMatrix = DOMMatrix;\ndeclare var WebKitCSSMatrix: typeof DOMMatrix;\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly) */\ninterface DOMMatrixReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly a: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly b: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly c: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly d: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly e: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly f: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/is2D) */\n    readonly is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/isIdentity) */\n    readonly isIdentity: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m11: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m12: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m13: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m14: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m21: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m22: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m23: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m24: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m31: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m32: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m33: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m34: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m41: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m42: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m43: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m44: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipX) */\n    flipX(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipY) */\n    flipY(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/inverse) */\n    inverse(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/multiply) */\n    multiply(other?: DOMMatrixInit): DOMMatrix;\n    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    rotateAxisAngle(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVector(x?: number, y?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/scale) */\n    scale(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scale3d(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** @deprecated */\n    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;\n    skewX(sx?: number): DOMMatrix;\n    skewY(sy?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat32Array) */\n    toFloat32Array(): Float32Array;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat64Array) */\n    toFloat64Array(): Float64Array;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toJSON) */\n    toJSON(): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/transformPoint) */\n    transformPoint(point?: DOMPointInit): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/translate) */\n    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;\n    toString(): string;\n}\n\ndeclare var DOMMatrixReadOnly: {\n    prototype: DOMMatrixReadOnly;\n    new(init?: string | number[]): DOMMatrixReadOnly;\n    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;\n    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;\n};\n\n/**\n * Provides the ability to parse XML or HTML source code from a string into a DOM Document.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMParser)\n */\ninterface DOMParser {\n    /**\n     * Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be "text/html" (which will invoke the HTML parser), or any of "text/xml", "application/xml", "application/xhtml+xml", or "image/svg+xml" (which will invoke the XML parser).\n     *\n     * For the XML parser, if string cannot be parsed, then the returned Document will contain elements describing the resulting error.\n     *\n     * Note that script elements are not evaluated during parsing, and the resulting document\'s encoding will always be UTF-8.\n     *\n     * Values other than the above for type will cause a TypeError exception to be thrown.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMParser/parseFromString)\n     */\n    parseFromString(string: string, type: DOMParserSupportedType): Document;\n}\n\ndeclare var DOMParser: {\n    prototype: DOMParser;\n    new(): DOMParser;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint) */\ninterface DOMPoint extends DOMPointReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/w) */\n    w: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/x) */\n    x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/y) */\n    y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/z) */\n    z: number;\n}\n\ndeclare var DOMPoint: {\n    prototype: DOMPoint;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/fromPoint_static) */\n    fromPoint(other?: DOMPointInit): DOMPoint;\n};\n\ntype SVGPoint = DOMPoint;\ndeclare var SVGPoint: typeof DOMPoint;\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly) */\ninterface DOMPointReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/w) */\n    readonly w: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/z) */\n    readonly z: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/matrixTransform) */\n    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMPointReadOnly: {\n    prototype: DOMPointReadOnly;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/fromPoint_static) */\n    fromPoint(other?: DOMPointInit): DOMPointReadOnly;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad) */\ninterface DOMQuad {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p1) */\n    readonly p1: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p2) */\n    readonly p2: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p3) */\n    readonly p3: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p4) */\n    readonly p4: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/getBounds) */\n    getBounds(): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMQuad: {\n    prototype: DOMQuad;\n    new(p1?: DOMPointInit, p2?: DOMPointInit, p3?: DOMPointInit, p4?: DOMPointInit): DOMQuad;\n    fromQuad(other?: DOMQuadInit): DOMQuad;\n    fromRect(other?: DOMRectInit): DOMQuad;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect) */\ninterface DOMRect extends DOMRectReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/height) */\n    height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/width) */\n    width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/x) */\n    x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/y) */\n    y: number;\n}\n\ndeclare var DOMRect: {\n    prototype: DOMRect;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/fromRect_static) */\n    fromRect(other?: DOMRectInit): DOMRect;\n};\n\ntype SVGRect = DOMRect;\ndeclare var SVGRect: typeof DOMRect;\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectList) */\ninterface DOMRectList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectList/item) */\n    item(index: number): DOMRect | null;\n    [index: number]: DOMRect;\n}\n\ndeclare var DOMRectList: {\n    prototype: DOMRectList;\n    new(): DOMRectList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly) */\ninterface DOMRectReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/bottom) */\n    readonly bottom: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/left) */\n    readonly left: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/right) */\n    readonly right: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/top) */\n    readonly top: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/width) */\n    readonly width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMRectReadOnly: {\n    prototype: DOMRectReadOnly;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/fromRect_static) */\n    fromRect(other?: DOMRectInit): DOMRectReadOnly;\n};\n\n/**\n * A type returned by some APIs which contains a list of DOMString (strings).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList)\n */\ninterface DOMStringList {\n    /**\n     * Returns the number of strings in strings.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/length)\n     */\n    readonly length: number;\n    /**\n     * Returns true if strings contains string, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/contains)\n     */\n    contains(string: string): boolean;\n    /**\n     * Returns the string with index index from strings.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/item)\n     */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new(): DOMStringList;\n};\n\n/**\n * Used by the dataset\xa0HTML\xa0attribute to represent data for custom attributes added to elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringMap)\n */\ninterface DOMStringMap {\n    [name: string]: string | undefined;\n}\n\ndeclare var DOMStringMap: {\n    prototype: DOMStringMap;\n    new(): DOMStringMap;\n};\n\n/**\n * A set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList)\n */\ninterface DOMTokenList {\n    /**\n     * Returns the number of tokens.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/length)\n     */\n    readonly length: number;\n    /**\n     * Returns the associated set as string.\n     *\n     * Can be set, to change the associated attribute.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/value)\n     */\n    value: string;\n    toString(): string;\n    /**\n     * Adds all arguments passed, except those already present.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/add)\n     */\n    add(...tokens: string[]): void;\n    /**\n     * Returns true if token is present, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/contains)\n     */\n    contains(token: string): boolean;\n    /**\n     * Returns the token with index index.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/item)\n     */\n    item(index: number): string | null;\n    /**\n     * Removes arguments passed, if they are present.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/remove)\n     */\n    remove(...tokens: string[]): void;\n    /**\n     * Replaces token with newToken.\n     *\n     * Returns true if token was replaced with newToken, and false otherwise.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/replace)\n     */\n    replace(token: string, newToken: string): boolean;\n    /**\n     * Returns true if token is in the associated attribute\'s supported tokens. Returns false otherwise.\n     *\n     * Throws a TypeError if the associated attribute has no supported tokens defined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/supports)\n     */\n    supports(token: string): boolean;\n    /**\n     * If force is not given, "toggles" token, removing it if it\'s present and adding it if it\'s not present. If force is true, adds token (same as add()). If force is false, removes token (same as remove()).\n     *\n     * Returns true if token is now present, and false otherwise.\n     *\n     * Throws a "SyntaxError" DOMException if token is empty.\n     *\n     * Throws an "InvalidCharacterError" DOMException if token contains any spaces.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMTokenList/toggle)\n     */\n    toggle(token: string, force?: boolean): boolean;\n    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): void;\n    [index: number]: string;\n}\n\ndeclare var DOMTokenList: {\n    prototype: DOMTokenList;\n    new(): DOMTokenList;\n};\n\n/**\n * Used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer)\n */\ninterface DataTransfer {\n    /**\n     * Returns the kind of operation that is currently selected. If the kind of operation isn\'t one of those that is allowed by the effectAllowed attribute, then the operation will fail.\n     *\n     * Can be set, to change the selected operation.\n     *\n     * The possible values are "none", "copy", "link", and "move".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/dropEffect)\n     */\n    dropEffect: "none" | "copy" | "link" | "move";\n    /**\n     * Returns the kinds of operations that are to be allowed.\n     *\n     * Can be set (during the dragstart event), to change the allowed operations.\n     *\n     * The possible values are "none", "copy", "copyLink", "copyMove", "link", "linkMove", "move", "all", and "uninitialized",\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/effectAllowed)\n     */\n    effectAllowed: "none" | "copy" | "copyLink" | "copyMove" | "link" | "linkMove" | "move" | "all" | "uninitialized";\n    /**\n     * Returns a FileList of the files being dragged, if any.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/files)\n     */\n    readonly files: FileList;\n    /**\n     * Returns a DataTransferItemList object, with the drag data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/items)\n     */\n    readonly items: DataTransferItemList;\n    /**\n     * Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being dragged, then one of the types will be the string "Files".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/types)\n     */\n    readonly types: ReadonlyArray<string>;\n    /**\n     * Removes the data of the specified formats. Removes all data if the argument is omitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/clearData)\n     */\n    clearData(format?: string): void;\n    /**\n     * Returns the specified data. If there is no such data, returns the empty string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/getData)\n     */\n    getData(format: string): string;\n    /**\n     * Adds the specified data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/setData)\n     */\n    setData(format: string, data: string): void;\n    /**\n     * Uses the given element to update the drag feedback, replacing any previously specified feedback.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransfer/setDragImage)\n     */\n    setDragImage(image: Element, x: number, y: number): void;\n}\n\ndeclare var DataTransfer: {\n    prototype: DataTransfer;\n    new(): DataTransfer;\n};\n\n/**\n * One drag data item. During a drag operation, each drag event has a dataTransfer property which contains a list of drag data items. Each item in the list is a DataTransferItem object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem)\n */\ninterface DataTransferItem {\n    /**\n     * Returns the drag data item kind, one of: "string", "file".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/kind)\n     */\n    readonly kind: string;\n    /**\n     * Returns the drag data item type string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/type)\n     */\n    readonly type: string;\n    /**\n     * Returns a File object, if the drag data item kind is File.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/getAsFile)\n     */\n    getAsFile(): File | null;\n    /**\n     * Invokes the callback with the string data as the argument, if the drag data item kind is text.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/getAsString)\n     */\n    getAsString(callback: FunctionStringCallback | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItem/webkitGetAsEntry) */\n    webkitGetAsEntry(): FileSystemEntry | null;\n}\n\ndeclare var DataTransferItem: {\n    prototype: DataTransferItem;\n    new(): DataTransferItem;\n};\n\n/**\n * A list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a dataTransfer property and that property is a DataTransferItemList.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList)\n */\ninterface DataTransferItemList {\n    /**\n     * Returns the number of items in the drag data store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/length)\n     */\n    readonly length: number;\n    /**\n     * Adds a new entry for the given data to the drag data store. If the data is plain text then a type string has to be provided also.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/add)\n     */\n    add(data: string, type: string): DataTransferItem | null;\n    add(data: File): DataTransferItem | null;\n    /**\n     * Removes all the entries in the drag data store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/clear)\n     */\n    clear(): void;\n    /**\n     * Removes the indexth entry in the drag data store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DataTransferItemList/remove)\n     */\n    remove(index: number): void;\n    [index: number]: DataTransferItem;\n}\n\ndeclare var DataTransferItemList: {\n    prototype: DataTransferItemList;\n    new(): DataTransferItemList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DecompressionStream) */\ninterface DecompressionStream extends GenericTransformStream {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var DecompressionStream: {\n    prototype: DecompressionStream;\n    new(format: CompressionFormat): DecompressionStream;\n};\n\n/**\n * A delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DelayNode)\n */\ninterface DelayNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DelayNode/delayTime) */\n    readonly delayTime: AudioParam;\n}\n\ndeclare var DelayNode: {\n    prototype: DelayNode;\n    new(context: BaseAudioContext, options?: DelayOptions): DelayNode;\n};\n\n/**\n * The DeviceMotionEvent provides web developers with information about the speed of changes for the device\'s position and orientation.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent)\n */\ninterface DeviceMotionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/acceleration) */\n    readonly acceleration: DeviceMotionEventAcceleration | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/accelerationIncludingGravity) */\n    readonly accelerationIncludingGravity: DeviceMotionEventAcceleration | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/interval) */\n    readonly interval: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEvent/rotationRate) */\n    readonly rotationRate: DeviceMotionEventRotationRate | null;\n}\n\ndeclare var DeviceMotionEvent: {\n    prototype: DeviceMotionEvent;\n    new(type: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration)\n */\ninterface DeviceMotionEventAcceleration {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/x) */\n    readonly x: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/y) */\n    readonly y: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventAcceleration/z) */\n    readonly z: number | null;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate)\n */\ninterface DeviceMotionEventRotationRate {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/alpha) */\n    readonly alpha: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/beta) */\n    readonly beta: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceMotionEventRotationRate/gamma) */\n    readonly gamma: number | null;\n}\n\n/**\n * The DeviceOrientationEvent provides web developers with information from the physical orientation of the device running the web page.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent)\n */\ninterface DeviceOrientationEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/absolute) */\n    readonly absolute: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/alpha) */\n    readonly alpha: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/beta) */\n    readonly beta: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DeviceOrientationEvent/gamma) */\n    readonly gamma: number | null;\n}\n\ndeclare var DeviceOrientationEvent: {\n    prototype: DeviceOrientationEvent;\n    new(type: string, eventInitDict?: DeviceOrientationEventInit): DeviceOrientationEvent;\n};\n\ninterface DocumentEventMap extends GlobalEventHandlersEventMap {\n    "DOMContentLoaded": Event;\n    "fullscreenchange": Event;\n    "fullscreenerror": Event;\n    "pointerlockchange": Event;\n    "pointerlockerror": Event;\n    "readystatechange": Event;\n    "visibilitychange": Event;\n}\n\n/**\n * Any web page loaded in the browser and serves as an entry point into the web page\'s content, which is the DOM tree.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document)\n */\ninterface Document extends Node, DocumentOrShadowRoot, FontFaceSource, GlobalEventHandlers, NonElementParentNode, ParentNode, XPathEvaluatorBase {\n    /**\n     * Sets or gets the URL for the current document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/URL)\n     */\n    readonly URL: string;\n    /**\n     * Sets or gets the color of all active links in the document.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/alinkColor)\n     */\n    alinkColor: string;\n    /**\n     * Returns a reference to the collection of elements contained by the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/all)\n     */\n    readonly all: HTMLAllCollection;\n    /**\n     * Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/anchors)\n     */\n    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;\n    /**\n     * Retrieves a collection of all applet objects in the document.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/applets)\n     */\n    readonly applets: HTMLCollection;\n    /**\n     * Deprecated. Sets or retrieves a value that indicates the background color behind the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/bgColor)\n     */\n    bgColor: string;\n    /**\n     * Specifies the beginning and end of the document body.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/body)\n     */\n    body: HTMLElement;\n    /**\n     * Returns document\'s encoding.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/characterSet)\n     */\n    readonly characterSet: string;\n    /**\n     * Gets or sets the character set used to encode the object.\n     * @deprecated This is a legacy alias of `characterSet`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/characterSet)\n     */\n    readonly charset: string;\n    /**\n     * Gets a value that indicates whether standards-compliant mode is switched on for the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/compatMode)\n     */\n    readonly compatMode: string;\n    /**\n     * Returns document\'s content type.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/contentType)\n     */\n    readonly contentType: string;\n    /**\n     * Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can\'t be applied to this resource, the empty string will be returned.\n     *\n     * Can be set, to add a new cookie to the element\'s set of HTTP cookies.\n     *\n     * If the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a "SecurityError" DOMException will be thrown on getting and setting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/cookie)\n     */\n    cookie: string;\n    /**\n     * Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n     *\n     * Returns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/currentScript)\n     */\n    readonly currentScript: HTMLOrSVGScriptElement | null;\n    /**\n     * Returns the Window object of the active document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/defaultView)\n     */\n    readonly defaultView: (WindowProxy & typeof globalThis) | null;\n    /**\n     * Sets or gets a value that indicates whether the document can be edited.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/designMode)\n     */\n    designMode: string;\n    /**\n     * Sets or retrieves a value that indicates the reading order of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/dir)\n     */\n    dir: string;\n    /**\n     * Gets an object representing the document type declaration associated with the current document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/doctype)\n     */\n    readonly doctype: DocumentType | null;\n    /**\n     * Gets a reference to the root node of the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/documentElement)\n     */\n    readonly documentElement: HTMLElement;\n    /**\n     * Returns document\'s URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/documentURI)\n     */\n    readonly documentURI: string;\n    /**\n     * Sets or gets the security domain of the document.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/domain)\n     */\n    domain: string;\n    /**\n     * Retrieves a collection of all embed objects in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/embeds)\n     */\n    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;\n    /**\n     * Sets or gets the foreground (text) color of the document.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fgColor)\n     */\n    fgColor: string;\n    /**\n     * Retrieves a collection, in source order, of all form objects in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/forms)\n     */\n    readonly forms: HTMLCollectionOf<HTMLFormElement>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fragmentDirective) */\n    readonly fragmentDirective: FragmentDirective;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreen)\n     */\n    readonly fullscreen: boolean;\n    /**\n     * Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenEnabled)\n     */\n    readonly fullscreenEnabled: boolean;\n    /**\n     * Returns the head element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/head)\n     */\n    readonly head: HTMLHeadElement;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hidden) */\n    readonly hidden: boolean;\n    /**\n     * Retrieves a collection, in source order, of img objects in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/images)\n     */\n    readonly images: HTMLCollectionOf<HTMLImageElement>;\n    /**\n     * Gets the implementation object of the current document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/implementation)\n     */\n    readonly implementation: DOMImplementation;\n    /**\n     * Returns the character encoding used to create the webpage that is loaded into the document object.\n     * @deprecated This is a legacy alias of `characterSet`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/characterSet)\n     */\n    readonly inputEncoding: string;\n    /**\n     * Gets the date that the page was last modified, if the page supplies one.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastModified)\n     */\n    readonly lastModified: string;\n    /**\n     * Sets or gets the color of the document links.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/linkColor)\n     */\n    linkColor: string;\n    /**\n     * Retrieves a collection of all a objects that specify the href property and all area objects in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/links)\n     */\n    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;\n    /**\n     * Contains information about the current URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/location)\n     */\n    get location(): Location;\n    set location(href: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenchange_event) */\n    onfullscreenchange: ((this: Document, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenerror_event) */\n    onfullscreenerror: ((this: Document, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockchange_event) */\n    onpointerlockchange: ((this: Document, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerlockerror_event) */\n    onpointerlockerror: ((this: Document, ev: Event) => any) | null;\n    /**\n     * Fires when the state of the object has changed.\n     * @param ev The event\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/readystatechange_event)\n     */\n    onreadystatechange: ((this: Document, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event) */\n    onvisibilitychange: ((this: Document, ev: Event) => any) | null;\n    readonly ownerDocument: null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pictureInPictureEnabled) */\n    readonly pictureInPictureEnabled: boolean;\n    /**\n     * Return an HTMLCollection of the embed elements in the Document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/plugins)\n     */\n    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;\n    /**\n     * Retrieves a value that indicates the current state of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/readyState)\n     */\n    readonly readyState: DocumentReadyState;\n    /**\n     * Gets the URL of the location that referred the user to the current page.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/referrer)\n     */\n    readonly referrer: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/rootElement)\n     */\n    readonly rootElement: SVGSVGElement | null;\n    /**\n     * Retrieves a collection of all script objects in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scripts)\n     */\n    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollingElement) */\n    readonly scrollingElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/timeline) */\n    readonly timeline: DocumentTimeline;\n    /**\n     * Contains the title of the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/title)\n     */\n    title: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/visibilityState) */\n    readonly visibilityState: DocumentVisibilityState;\n    /**\n     * Sets or gets the color of the links that the user has visited.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/vlinkColor)\n     */\n    vlinkColor: string;\n    /**\n     * Moves node from another document and returns it.\n     *\n     * If node is a document, throws a "NotSupportedError" DOMException or, if node is a shadow root, throws a "HierarchyRequestError" DOMException.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptNode)\n     */\n    adoptNode<T extends Node>(node: T): T;\n    /** @deprecated */\n    captureEvents(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/caretPositionFromPoint) */\n    caretPositionFromPoint(x: number, y: number, options?: CaretPositionFromPointOptions): CaretPosition | null;\n    /** @deprecated */\n    caretRangeFromPoint(x: number, y: number): Range | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/clear)\n     */\n    clear(): void;\n    /**\n     * Closes an output stream and forces the sent data to display.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/close)\n     */\n    close(): void;\n    /**\n     * Creates an attribute object with a specified name.\n     * @param name String that sets the attribute object\'s name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createAttribute)\n     */\n    createAttribute(localName: string): Attr;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createAttributeNS) */\n    createAttributeNS(namespace: string | null, qualifiedName: string): Attr;\n    /**\n     * Returns a CDATASection node whose data is data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createCDATASection)\n     */\n    createCDATASection(data: string): CDATASection;\n    /**\n     * Creates a comment object with the specified data.\n     * @param data Sets the comment object\'s data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createComment)\n     */\n    createComment(data: string): Comment;\n    /**\n     * Creates a new document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createDocumentFragment)\n     */\n    createDocumentFragment(): DocumentFragment;\n    /**\n     * Creates an instance of the element for the specified tag.\n     * @param tagName The name of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createElement)\n     */\n    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K];\n    /** @deprecated */\n    createElement<K extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementDeprecatedTagNameMap[K];\n    createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;\n    /**\n     * Returns an element with namespace namespace. Its namespace prefix will be everything before ":" (U+003E) in qualifiedName or null. Its local name will be everything after ":" (U+003E) in qualifiedName or qualifiedName.\n     *\n     * If localName does not match the Name production an "InvalidCharacterError" DOMException will be thrown.\n     *\n     * If one of the following conditions is true a "NamespaceError" DOMException will be thrown:\n     *\n     * localName does not match the QName production.\n     * Namespace prefix is not null and namespace is the empty string.\n     * Namespace prefix is "xml" and namespace is not the XML namespace.\n     * qualifiedName or namespace prefix is "xmlns" and namespace is not the XMLNS namespace.\n     * namespace is the XMLNS namespace and neither qualifiedName nor namespace prefix is "xmlns".\n     *\n     * When supplied, options\'s is can be used to create a customized built-in element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createElementNS)\n     */\n    createElementNS(namespaceURI: "http://www.w3.org/1999/xhtml", qualifiedName: string): HTMLElement;\n    createElementNS<K extends keyof SVGElementTagNameMap>(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: K): SVGElementTagNameMap[K];\n    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: string): SVGElement;\n    createElementNS<K extends keyof MathMLElementTagNameMap>(namespaceURI: "http://www.w3.org/1998/Math/MathML", qualifiedName: K): MathMLElementTagNameMap[K];\n    createElementNS(namespaceURI: "http://www.w3.org/1998/Math/MathML", qualifiedName: string): MathMLElement;\n    createElementNS(namespaceURI: string | null, qualifiedName: string, options?: ElementCreationOptions): Element;\n    createElementNS(namespace: string | null, qualifiedName: string, options?: string | ElementCreationOptions): Element;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createEvent)\n     */\n    createEvent(eventInterface: "AnimationEvent"): AnimationEvent;\n    createEvent(eventInterface: "AnimationPlaybackEvent"): AnimationPlaybackEvent;\n    createEvent(eventInterface: "AudioProcessingEvent"): AudioProcessingEvent;\n    createEvent(eventInterface: "BeforeUnloadEvent"): BeforeUnloadEvent;\n    createEvent(eventInterface: "BlobEvent"): BlobEvent;\n    createEvent(eventInterface: "ClipboardEvent"): ClipboardEvent;\n    createEvent(eventInterface: "CloseEvent"): CloseEvent;\n    createEvent(eventInterface: "CompositionEvent"): CompositionEvent;\n    createEvent(eventInterface: "ContentVisibilityAutoStateChangeEvent"): ContentVisibilityAutoStateChangeEvent;\n    createEvent(eventInterface: "CustomEvent"): CustomEvent;\n    createEvent(eventInterface: "DeviceMotionEvent"): DeviceMotionEvent;\n    createEvent(eventInterface: "DeviceOrientationEvent"): DeviceOrientationEvent;\n    createEvent(eventInterface: "DragEvent"): DragEvent;\n    createEvent(eventInterface: "ErrorEvent"): ErrorEvent;\n    createEvent(eventInterface: "Event"): Event;\n    createEvent(eventInterface: "Events"): Event;\n    createEvent(eventInterface: "FocusEvent"): FocusEvent;\n    createEvent(eventInterface: "FontFaceSetLoadEvent"): FontFaceSetLoadEvent;\n    createEvent(eventInterface: "FormDataEvent"): FormDataEvent;\n    createEvent(eventInterface: "GamepadEvent"): GamepadEvent;\n    createEvent(eventInterface: "HashChangeEvent"): HashChangeEvent;\n    createEvent(eventInterface: "IDBVersionChangeEvent"): IDBVersionChangeEvent;\n    createEvent(eventInterface: "InputEvent"): InputEvent;\n    createEvent(eventInterface: "KeyboardEvent"): KeyboardEvent;\n    createEvent(eventInterface: "MIDIConnectionEvent"): MIDIConnectionEvent;\n    createEvent(eventInterface: "MIDIMessageEvent"): MIDIMessageEvent;\n    createEvent(eventInterface: "MediaEncryptedEvent"): MediaEncryptedEvent;\n    createEvent(eventInterface: "MediaKeyMessageEvent"): MediaKeyMessageEvent;\n    createEvent(eventInterface: "MediaQueryListEvent"): MediaQueryListEvent;\n    createEvent(eventInterface: "MediaStreamTrackEvent"): MediaStreamTrackEvent;\n    createEvent(eventInterface: "MessageEvent"): MessageEvent;\n    createEvent(eventInterface: "MouseEvent"): MouseEvent;\n    createEvent(eventInterface: "MouseEvents"): MouseEvent;\n    createEvent(eventInterface: "OfflineAudioCompletionEvent"): OfflineAudioCompletionEvent;\n    createEvent(eventInterface: "PageRevealEvent"): PageRevealEvent;\n    createEvent(eventInterface: "PageSwapEvent"): PageSwapEvent;\n    createEvent(eventInterface: "PageTransitionEvent"): PageTransitionEvent;\n    createEvent(eventInterface: "PaymentMethodChangeEvent"): PaymentMethodChangeEvent;\n    createEvent(eventInterface: "PaymentRequestUpdateEvent"): PaymentRequestUpdateEvent;\n    createEvent(eventInterface: "PictureInPictureEvent"): PictureInPictureEvent;\n    createEvent(eventInterface: "PointerEvent"): PointerEvent;\n    createEvent(eventInterface: "PopStateEvent"): PopStateEvent;\n    createEvent(eventInterface: "ProgressEvent"): ProgressEvent;\n    createEvent(eventInterface: "PromiseRejectionEvent"): PromiseRejectionEvent;\n    createEvent(eventInterface: "RTCDTMFToneChangeEvent"): RTCDTMFToneChangeEvent;\n    createEvent(eventInterface: "RTCDataChannelEvent"): RTCDataChannelEvent;\n    createEvent(eventInterface: "RTCErrorEvent"): RTCErrorEvent;\n    createEvent(eventInterface: "RTCPeerConnectionIceErrorEvent"): RTCPeerConnectionIceErrorEvent;\n    createEvent(eventInterface: "RTCPeerConnectionIceEvent"): RTCPeerConnectionIceEvent;\n    createEvent(eventInterface: "RTCTrackEvent"): RTCTrackEvent;\n    createEvent(eventInterface: "SecurityPolicyViolationEvent"): SecurityPolicyViolationEvent;\n    createEvent(eventInterface: "SpeechSynthesisErrorEvent"): SpeechSynthesisErrorEvent;\n    createEvent(eventInterface: "SpeechSynthesisEvent"): SpeechSynthesisEvent;\n    createEvent(eventInterface: "StorageEvent"): StorageEvent;\n    createEvent(eventInterface: "SubmitEvent"): SubmitEvent;\n    createEvent(eventInterface: "TextEvent"): TextEvent;\n    createEvent(eventInterface: "ToggleEvent"): ToggleEvent;\n    createEvent(eventInterface: "TouchEvent"): TouchEvent;\n    createEvent(eventInterface: "TrackEvent"): TrackEvent;\n    createEvent(eventInterface: "TransitionEvent"): TransitionEvent;\n    createEvent(eventInterface: "UIEvent"): UIEvent;\n    createEvent(eventInterface: "UIEvents"): UIEvent;\n    createEvent(eventInterface: "WebGLContextEvent"): WebGLContextEvent;\n    createEvent(eventInterface: "WheelEvent"): WheelEvent;\n    createEvent(eventInterface: string): Event;\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     * @param root The root element or node to start traversing on.\n     * @param whatToShow The type of nodes or elements to appear in the node list\n     * @param filter A custom NodeFilter function to use. For more information, see filter. Use null for no filter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createNodeIterator)\n     */\n    createNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter | null): NodeIterator;\n    /**\n     * Returns a ProcessingInstruction node whose target is target and data is data. If target does not match the Name production an "InvalidCharacterError" DOMException will be thrown. If data contains "?>" an "InvalidCharacterError" DOMException will be thrown.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createProcessingInstruction)\n     */\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\n    /**\n     *  Returns an empty range object that has both of its boundary points positioned at the beginning of the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createRange)\n     */\n    createRange(): Range;\n    /**\n     * Creates a text string from the specified value.\n     * @param data String that specifies the nodeValue property of the text node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createTextNode)\n     */\n    createTextNode(data: string): Text;\n    /**\n     * Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.\n     * @param root The root element or node to start traversing on.\n     * @param whatToShow The type of nodes or elements to appear in the node list. For more information, see whatToShow.\n     * @param filter A custom NodeFilter function to use.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createTreeWalker)\n     */\n    createTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter | null): TreeWalker;\n    /**\n     * Executes a command on the current document, current selection, or the given range.\n     * @param commandId String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.\n     * @param showUI Display the user interface, defaults to false.\n     * @param value Value to assign.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/execCommand)\n     */\n    execCommand(commandId: string, showUI?: boolean, value?: string): boolean;\n    /**\n     * Stops document\'s fullscreen element from being displayed fullscreen and resolves promise when done.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitFullscreen)\n     */\n    exitFullscreen(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitPictureInPicture) */\n    exitPictureInPicture(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/exitPointerLock) */\n    exitPointerLock(): void;\n    /**\n     * Returns a reference to the first object with the specified value of the ID attribute.\n     * @param elementId String that specifies the ID value.\n     */\n    getElementById(elementId: string): HTMLElement | null;\n    /**\n     * Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByClassName)\n     */\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\n    /**\n     * Gets a collection of objects based on the value of the NAME or ID attribute.\n     * @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByName)\n     */\n    getElementsByName(elementName: string): NodeListOf<HTMLElement>;\n    /**\n     * Retrieves a collection of objects based on the specified element name.\n     * @param name Specifies the name of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByTagName)\n     */\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<SVGElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<MathMLElementTagNameMap[K]>;\n    /** @deprecated */\n    getElementsByTagName<K extends keyof HTMLElementDeprecatedTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K]>;\n    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;\n    /**\n     * If namespace and localName are "*" returns a HTMLCollection of all descendant elements.\n     *\n     * If only namespace is "*" returns a HTMLCollection of all descendant elements whose local name is localName.\n     *\n     * If only localName is "*" returns a HTMLCollection of all descendant elements whose namespace is namespace.\n     *\n     * Otherwise, returns a HTMLCollection of all descendant elements whose namespace is namespace and local name is localName.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementsByTagNameNS)\n     */\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1998/Math/MathML", localName: string): HTMLCollectionOf<MathMLElement>;\n    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Element>;\n    /**\n     * Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getSelection)\n     */\n    getSelection(): Selection | null;\n    /**\n     * Gets a value indicating whether the object currently has focus.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hasFocus)\n     */\n    hasFocus(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/hasStorageAccess) */\n    hasStorageAccess(): Promise<boolean>;\n    /**\n     * Returns a copy of node. If deep is true, the copy also includes the node\'s descendants.\n     *\n     * If node is a document or a shadow root, throws a "NotSupportedError" DOMException.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/importNode)\n     */\n    importNode<T extends Node>(node: T, subtree?: boolean): T;\n    /**\n     * Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.\n     * @param url Specifies a MIME type for the document.\n     * @param name Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.\n     * @param features Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, "fullscreen=yes, toolbar=yes"). The following values are supported.\n     * @param replace Specifies whether the existing entry for the document is replaced in the history list.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/open)\n     */\n    open(unused1?: string, unused2?: string): Document;\n    open(url: string | URL, name: string, features: string): WindowProxy | null;\n    /**\n     * Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.\n     * @param commandId Specifies a command identifier.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/queryCommandEnabled)\n     */\n    queryCommandEnabled(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates whether the specified command is in the indeterminate state.\n     * @param commandId String that specifies a command identifier.\n     * @deprecated\n     */\n    queryCommandIndeterm(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates the current state of the command.\n     * @param commandId String that specifies a command identifier.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/queryCommandState)\n     */\n    queryCommandState(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates whether the current command is supported on the current range.\n     * @param commandId Specifies a command identifier.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/queryCommandSupported)\n     */\n    queryCommandSupported(commandId: string): boolean;\n    /**\n     * Returns the current value of the document, range, or current selection for the given command.\n     * @param commandId String that specifies a command identifier.\n     * @deprecated\n     */\n    queryCommandValue(commandId: string): string;\n    /** @deprecated */\n    releaseEvents(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/requestStorageAccess) */\n    requestStorageAccess(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/startViewTransition) */\n    startViewTransition(callbackOptions?: ViewTransitionUpdateCallback): ViewTransition;\n    /**\n     * Writes one or more HTML expressions to a document in the specified window.\n     * @param content Specifies the text and HTML tags to write.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/write)\n     */\n    write(...text: string[]): void;\n    /**\n     * Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.\n     * @param content The text and HTML tags to write.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/writeln)\n     */\n    writeln(...text: string[]): void;\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Document: {\n    prototype: Document;\n    new(): Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/parseHTMLUnsafe_static) */\n    parseHTMLUnsafe(html: string): Document;\n};\n\n/**\n * A minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is that because the document fragment isn\'t part of the active document tree structure, changes made to the fragment don\'t affect the document, cause reflow, or incur any performance impact that can occur when changes are made.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentFragment)\n */\ninterface DocumentFragment extends Node, NonElementParentNode, ParentNode {\n    readonly ownerDocument: Document;\n    getElementById(elementId: string): HTMLElement | null;\n}\n\ndeclare var DocumentFragment: {\n    prototype: DocumentFragment;\n    new(): DocumentFragment;\n};\n\ninterface DocumentOrShadowRoot {\n    /**\n     * Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n     *\n     * For the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe\'s node document.\n     *\n     * Similarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that\'s located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/activeElement)\n     */\n    readonly activeElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets) */\n    adoptedStyleSheets: CSSStyleSheet[];\n    /**\n     * Returns document\'s fullscreen element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fullscreenElement)\n     */\n    readonly fullscreenElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pictureInPictureElement) */\n    readonly pictureInPictureElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/pointerLockElement) */\n    readonly pointerLockElement: Element | null;\n    /**\n     * Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/styleSheets)\n     */\n    readonly styleSheets: StyleSheetList;\n    /**\n     * Returns the element for the specified x coordinate and the specified y coordinate.\n     * @param x The x-offset\n     * @param y The y-offset\n     */\n    elementFromPoint(x: number, y: number): Element | null;\n    elementsFromPoint(x: number, y: number): Element[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getAnimations) */\n    getAnimations(): Animation[];\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentTimeline) */\ninterface DocumentTimeline extends AnimationTimeline {\n}\n\ndeclare var DocumentTimeline: {\n    prototype: DocumentTimeline;\n    new(options?: DocumentTimelineOptions): DocumentTimeline;\n};\n\n/**\n * A Node containing a doctype.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType)\n */\ninterface DocumentType extends Node, ChildNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/name) */\n    readonly name: string;\n    readonly ownerDocument: Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/publicId) */\n    readonly publicId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DocumentType/systemId) */\n    readonly systemId: string;\n}\n\ndeclare var DocumentType: {\n    prototype: DocumentType;\n    new(): DocumentType;\n};\n\n/**\n * A DOM event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DragEvent)\n */\ninterface DragEvent extends MouseEvent {\n    /**\n     * Returns the DataTransfer object for the event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DragEvent/dataTransfer)\n     */\n    readonly dataTransfer: DataTransfer | null;\n}\n\ndeclare var DragEvent: {\n    prototype: DragEvent;\n    new(type: string, eventInitDict?: DragEventInit): DragEvent;\n};\n\n/**\n * Inherits properties from its parent, AudioNode.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode)\n */\ninterface DynamicsCompressorNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/attack) */\n    readonly attack: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/knee) */\n    readonly knee: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/ratio) */\n    readonly ratio: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/reduction) */\n    readonly reduction: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/release) */\n    readonly release: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DynamicsCompressorNode/threshold) */\n    readonly threshold: AudioParam;\n}\n\ndeclare var DynamicsCompressorNode: {\n    prototype: DynamicsCompressorNode;\n    new(context: BaseAudioContext, options?: DynamicsCompressorOptions): DynamicsCompressorNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_blend_minmax) */\ninterface EXT_blend_minmax {\n    readonly MIN_EXT: 0x8007;\n    readonly MAX_EXT: 0x8008;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_color_buffer_float) */\ninterface EXT_color_buffer_float {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_color_buffer_half_float) */\ninterface EXT_color_buffer_half_float {\n    readonly RGBA16F_EXT: 0x881A;\n    readonly RGB16F_EXT: 0x881B;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;\n    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_float_blend) */\ninterface EXT_float_blend {\n}\n\n/**\n * The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_frag_depth)\n */\ninterface EXT_frag_depth {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_sRGB) */\ninterface EXT_sRGB {\n    readonly SRGB_EXT: 0x8C40;\n    readonly SRGB_ALPHA_EXT: 0x8C42;\n    readonly SRGB8_ALPHA8_EXT: 0x8C43;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_shader_texture_lod) */\ninterface EXT_shader_texture_lod {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_compression_bptc) */\ninterface EXT_texture_compression_bptc {\n    readonly COMPRESSED_RGBA_BPTC_UNORM_EXT: 0x8E8C;\n    readonly COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT: 0x8E8D;\n    readonly COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT: 0x8E8E;\n    readonly COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT: 0x8E8F;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_compression_rgtc) */\ninterface EXT_texture_compression_rgtc {\n    readonly COMPRESSED_RED_RGTC1_EXT: 0x8DBB;\n    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8DBC;\n    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8DBD;\n    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8DBE;\n}\n\n/**\n * The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_filter_anisotropic)\n */\ninterface EXT_texture_filter_anisotropic {\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE;\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_norm16) */\ninterface EXT_texture_norm16 {\n    readonly R16_EXT: 0x822A;\n    readonly RG16_EXT: 0x822C;\n    readonly RGB16_EXT: 0x8054;\n    readonly RGBA16_EXT: 0x805B;\n    readonly R16_SNORM_EXT: 0x8F98;\n    readonly RG16_SNORM_EXT: 0x8F99;\n    readonly RGB16_SNORM_EXT: 0x8F9A;\n    readonly RGBA16_SNORM_EXT: 0x8F9B;\n}\n\ninterface ElementEventMap {\n    "fullscreenchange": Event;\n    "fullscreenerror": Event;\n}\n\n/**\n * Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element)\n */\ninterface Element extends Node, ARIAMixin, Animatable, ChildNode, NonDocumentTypeChildNode, ParentNode, Slottable {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes) */\n    readonly attributes: NamedNodeMap;\n    /**\n     * Allows for manipulation of element\'s class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/classList)\n     */\n    get classList(): DOMTokenList;\n    set classList(value: string);\n    /**\n     * Returns the value of element\'s class content attribute. Can be set to change it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)\n     */\n    className: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight) */\n    readonly clientHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft) */\n    readonly clientLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop) */\n    readonly clientTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth) */\n    readonly clientWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom) */\n    readonly currentCSSZoom: number;\n    /**\n     * Returns the value of element\'s id content attribute. Can be set to change it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)\n     */\n    id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML) */\n    innerHTML: string;\n    /**\n     * Returns the local name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)\n     */\n    readonly localName: string;\n    /**\n     * Returns the namespace.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)\n     */\n    readonly namespaceURI: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event) */\n    onfullscreenchange: ((this: Element, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event) */\n    onfullscreenerror: ((this: Element, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML) */\n    outerHTML: string;\n    readonly ownerDocument: Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/part) */\n    get part(): DOMTokenList;\n    set part(value: string);\n    /**\n     * Returns the namespace prefix.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)\n     */\n    readonly prefix: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight) */\n    readonly scrollHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft) */\n    scrollLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop) */\n    scrollTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth) */\n    readonly scrollWidth: number;\n    /**\n     * Returns element\'s shadow root, if any, and if shadow root\'s mode is "open", and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)\n     */\n    readonly shadowRoot: ShadowRoot | null;\n    /**\n     * Returns the value of element\'s slot content attribute. Can be set to change it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)\n     */\n    slot: string;\n    /**\n     * Returns the HTML-uppercased qualified name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)\n     */\n    readonly tagName: string;\n    /**\n     * Creates a shadow root for element and returns it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)\n     */\n    attachShadow(init: ShadowRootInit): ShadowRoot;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility) */\n    checkVisibility(options?: CheckVisibilityOptions): boolean;\n    /**\n     * Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)\n     */\n    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null;\n    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;\n    closest<K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K] | null;\n    closest<E extends Element = Element>(selectors: string): E | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap) */\n    computedStyleMap(): StylePropertyMapReadOnly;\n    /**\n     * Returns element\'s first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)\n     */\n    getAttribute(qualifiedName: string): string | null;\n    /**\n     * Returns element\'s attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)\n     */\n    getAttributeNS(namespace: string | null, localName: string): string | null;\n    /**\n     * Returns the qualified names of all element\'s attributes. Can contain duplicates.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)\n     */\n    getAttributeNames(): string[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode) */\n    getAttributeNode(qualifiedName: string): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS) */\n    getAttributeNodeNS(namespace: string | null, localName: string): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect) */\n    getBoundingClientRect(): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects) */\n    getClientRects(): DOMRectList;\n    /**\n     * Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)\n     */\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName) */\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<SVGElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<MathMLElementTagNameMap[K]>;\n    /** @deprecated */\n    getElementsByTagName<K extends keyof HTMLElementDeprecatedTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K]>;\n    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS) */\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1998/Math/MathML", localName: string): HTMLCollectionOf<MathMLElement>;\n    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Element>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML) */\n    getHTML(options?: GetHTMLOptions): string;\n    /**\n     * Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)\n     */\n    hasAttribute(qualifiedName: string): boolean;\n    /**\n     * Returns true if element has an attribute whose namespace is namespace and local name is localName.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)\n     */\n    hasAttributeNS(namespace: string | null, localName: string): boolean;\n    /**\n     * Returns true if element has attributes, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)\n     */\n    hasAttributes(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture) */\n    hasPointerCapture(pointerId: number): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement) */\n    insertAdjacentElement(where: InsertPosition, element: Element): Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML) */\n    insertAdjacentHTML(position: InsertPosition, string: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText) */\n    insertAdjacentText(where: InsertPosition, data: string): void;\n    /**\n     * Returns true if matching selectors against element\'s root yields element, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)\n     */\n    matches(selectors: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture) */\n    releasePointerCapture(pointerId: number): void;\n    /**\n     * Removes element\'s first attribute whose qualified name is qualifiedName.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)\n     */\n    removeAttribute(qualifiedName: string): void;\n    /**\n     * Removes element\'s attribute whose namespace is namespace and local name is localName.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)\n     */\n    removeAttributeNS(namespace: string | null, localName: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode) */\n    removeAttributeNode(attr: Attr): Attr;\n    /**\n     * Displays element fullscreen and resolves promise when done.\n     *\n     * When supplied, options\'s navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to "show", navigation simplicity is preferred over screen space, and if set to "hide", more screen space is preferred. User agents are always free to honor user preference over the application\'s. The default value "auto" indicates no application preference.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)\n     */\n    requestFullscreen(options?: FullscreenOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock) */\n    requestPointerLock(options?: PointerLockOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll) */\n    scroll(options?: ScrollToOptions): void;\n    scroll(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy) */\n    scrollBy(options?: ScrollToOptions): void;\n    scrollBy(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView) */\n    scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo) */\n    scrollTo(options?: ScrollToOptions): void;\n    scrollTo(x: number, y: number): void;\n    /**\n     * Sets the value of element\'s first attribute whose qualified name is qualifiedName to value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)\n     */\n    setAttribute(qualifiedName: string, value: string): void;\n    /**\n     * Sets the value of element\'s attribute whose namespace is namespace and local name is localName to value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)\n     */\n    setAttributeNS(namespace: string | null, qualifiedName: string, value: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode) */\n    setAttributeNode(attr: Attr): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS) */\n    setAttributeNodeNS(attr: Attr): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe) */\n    setHTMLUnsafe(html: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture) */\n    setPointerCapture(pointerId: number): void;\n    /**\n     * If force is not given, "toggles" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n     *\n     * Returns true if qualifiedName is now present, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)\n     */\n    toggleAttribute(qualifiedName: string, force?: boolean): boolean;\n    /**\n     * @deprecated This is a legacy alias of `matches`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)\n     */\n    webkitMatchesSelector(selectors: string): boolean;\n    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Element: {\n    prototype: Element;\n    new(): Element;\n};\n\ninterface ElementCSSInlineStyle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap) */\n    readonly attributeStyleMap: StylePropertyMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/style) */\n    get style(): CSSStyleDeclaration;\n    set style(cssText: string);\n}\n\ninterface ElementContentEditable {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable) */\n    contentEditable: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint) */\n    enterKeyHint: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode) */\n    inputMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable) */\n    readonly isContentEditable: boolean;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals) */\ninterface ElementInternals extends ARIAMixin {\n    /**\n     * Returns the form owner of internals\'s target element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Returns a NodeList of all the label elements that internals\'s target element is associated with.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/labels)\n     */\n    readonly labels: NodeList;\n    /**\n     * Returns the ShadowRoot for internals\'s target element, if the target element is a shadow host, or null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/shadowRoot)\n     */\n    readonly shadowRoot: ShadowRoot | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/states) */\n    readonly states: CustomStateSet;\n    /**\n     * Returns the error message that would be shown to the user if internals\'s target element was to be checked for validity.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns the ValidityState object for internals\'s target element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Returns true if internals\'s target element will be validated when the form is submitted; false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Returns true if internals\'s target element has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/checkValidity)\n     */\n    checkValidity(): boolean;\n    /**\n     * Returns true if internals\'s target element has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn\'t canceled) reports the problem to the user.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/reportValidity)\n     */\n    reportValidity(): boolean;\n    /**\n     * Sets both the state and submission value of internals\'s target element to value.\n     *\n     * If value is null, the element won\'t participate in form submission.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/setFormValue)\n     */\n    setFormValue(value: File | string | FormData | null, state?: File | string | FormData | null): void;\n    /**\n     * Marks internals\'s target element as suffering from the constraints indicated by the flags argument, and sets the element\'s validation message to message. If anchor is specified, the user agent might use it to indicate problems with the constraints of internals\'s target element when the form owner is validated interactively or reportValidity() is called.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ElementInternals/setValidity)\n     */\n    setValidity(flags?: ValidityStateFlags, message?: string, anchor?: HTMLElement): void;\n}\n\ndeclare var ElementInternals: {\n    prototype: ElementInternals;\n    new(): ElementInternals;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk) */\ninterface EncodedAudioChunk {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/byteLength) */\n    readonly byteLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/type) */\n    readonly type: EncodedAudioChunkType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/copyTo) */\n    copyTo(destination: AllowSharedBufferSource): void;\n}\n\ndeclare var EncodedAudioChunk: {\n    prototype: EncodedAudioChunk;\n    new(init: EncodedAudioChunkInit): EncodedAudioChunk;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk) */\ninterface EncodedVideoChunk {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/byteLength) */\n    readonly byteLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/type) */\n    readonly type: EncodedVideoChunkType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/copyTo) */\n    copyTo(destination: AllowSharedBufferSource): void;\n}\n\ndeclare var EncodedVideoChunk: {\n    prototype: EncodedVideoChunk;\n    new(init: EncodedVideoChunkInit): EncodedVideoChunk;\n};\n\n/**\n * Events providing information related to errors in scripts or in files.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent)\n */\ninterface ErrorEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/colno) */\n    readonly colno: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/error) */\n    readonly error: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/filename) */\n    readonly filename: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/lineno) */\n    readonly lineno: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/message) */\n    readonly message: string;\n}\n\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new(type: string, eventInitDict?: ErrorEventInit): ErrorEvent;\n};\n\n/**\n * An event which takes place in the DOM.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event)\n */\ninterface Event {\n    /**\n     * Returns true or false depending on how event was initialized. True if event goes through its target\'s ancestors in reverse tree order, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/bubbles)\n     */\n    readonly bubbles: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/cancelBubble)\n     */\n    cancelBubble: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/cancelable)\n     */\n    readonly cancelable: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composed)\n     */\n    readonly composed: boolean;\n    /**\n     * Returns the object whose event listener\'s callback is currently being invoked.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/currentTarget)\n     */\n    readonly currentTarget: EventTarget | null;\n    /**\n     * Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/defaultPrevented)\n     */\n    readonly defaultPrevented: boolean;\n    /**\n     * Returns the event\'s phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/eventPhase)\n     */\n    readonly eventPhase: number;\n    /**\n     * Returns true if event was dispatched by the user agent, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/isTrusted)\n     */\n    readonly isTrusted: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/returnValue)\n     */\n    returnValue: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/srcElement)\n     */\n    readonly srcElement: EventTarget | null;\n    /**\n     * Returns the object to which event is dispatched (its target).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/target)\n     */\n    readonly target: EventTarget | null;\n    /**\n     * Returns the event\'s timestamp as the number of milliseconds measured relative to the time origin.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/timeStamp)\n     */\n    readonly timeStamp: DOMHighResTimeStamp;\n    /**\n     * Returns the type of event, e.g. "click", "hashchange", or "submit".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/type)\n     */\n    readonly type: string;\n    /**\n     * Returns the invocation target objects of event\'s path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root\'s mode is "closed" that are not reachable from event\'s currentTarget.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composedPath)\n     */\n    composedPath(): EventTarget[];\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/initEvent)\n     */\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\n    /**\n     * If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/preventDefault)\n     */\n    preventDefault(): void;\n    /**\n     * Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopImmediatePropagation)\n     */\n    stopImmediatePropagation(): void;\n    /**\n     * When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopPropagation)\n     */\n    stopPropagation(): void;\n    readonly NONE: 0;\n    readonly CAPTURING_PHASE: 1;\n    readonly AT_TARGET: 2;\n    readonly BUBBLING_PHASE: 3;\n}\n\ndeclare var Event: {\n    prototype: Event;\n    new(type: string, eventInitDict?: EventInit): Event;\n    readonly NONE: 0;\n    readonly CAPTURING_PHASE: 1;\n    readonly AT_TARGET: 2;\n    readonly BUBBLING_PHASE: 3;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventCounts) */\ninterface EventCounts {\n    forEach(callbackfn: (value: number, key: string, parent: EventCounts) => void, thisArg?: any): void;\n}\n\ndeclare var EventCounts: {\n    prototype: EventCounts;\n    new(): EventCounts;\n};\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\ninterface EventListenerObject {\n    handleEvent(object: Event): void;\n}\n\ninterface EventSourceEventMap {\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource) */\ninterface EventSource extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event) */\n    onerror: ((this: EventSource, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event) */\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event) */\n    onopen: ((this: EventSource, ev: Event) => any) | null;\n    /**\n     * Returns the state of this EventSource object\'s connection. It can have the values described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL providing the event stream.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/url)\n     */\n    readonly url: string;\n    /**\n     * Returns true if the credentials mode for connection requests to the URL providing the event stream is set to "include", and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/withCredentials)\n     */\n    readonly withCredentials: boolean;\n    /**\n     * Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/close)\n     */\n    close(): void;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSED: 2;\n    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var EventSource: {\n    prototype: EventSource;\n    new(url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSED: 2;\n};\n\n/**\n * EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget)\n */\ninterface EventTarget {\n    /**\n     * Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n     *\n     * The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options\'s capture.\n     *\n     * When set to true, options\'s capture prevents callback from being invoked when the event\'s eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event\'s eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event\'s eventPhase attribute value is AT_TARGET.\n     *\n     * When set to true, options\'s passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in \xa7 2.8 Observing event listeners.\n     *\n     * When set to true, options\'s once indicates that the callback will only be invoked once after which the event listener will be removed.\n     *\n     * If an AbortSignal is passed for options\'s signal, then the event listener will be removed when signal is aborted.\n     *\n     * The event listener is appended to target\'s event listener list and is not appended if it has the same type, callback, and capture.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\n     */\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: AddEventListenerOptions | boolean): void;\n    /**\n     * Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)\n     */\n    dispatchEvent(event: Event): boolean;\n    /**\n     * Removes the event listener in target\'s event listener list with the same type, callback, and options.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\n     */\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\n}\n\ndeclare var EventTarget: {\n    prototype: EventTarget;\n    new(): EventTarget;\n};\n\n/** @deprecated */\ninterface External {\n    /** @deprecated */\n    AddSearchProvider(): void;\n    /** @deprecated */\n    IsSearchProviderInstalled(): void;\n}\n\n/** @deprecated */\ndeclare var External: {\n    prototype: External;\n    new(): External;\n};\n\n/**\n * Provides information about files and allows JavaScript in a web page to access their content.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/File)\n */\ninterface File extends Blob {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n    readonly lastModified: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/webkitRelativePath) */\n    readonly webkitRelativePath: string;\n}\n\ndeclare var File: {\n    prototype: File;\n    new(fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;\n};\n\n/**\n * An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type="file"> element. It\'s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList)\n */\ninterface FileList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/item) */\n    item(index: number): File | null;\n    [index: number]: File;\n}\n\ndeclare var FileList: {\n    prototype: FileList;\n    new(): FileList;\n};\n\ninterface FileReaderEventMap {\n    "abort": ProgressEvent<FileReader>;\n    "error": ProgressEvent<FileReader>;\n    "load": ProgressEvent<FileReader>;\n    "loadend": ProgressEvent<FileReader>;\n    "loadstart": ProgressEvent<FileReader>;\n    "progress": ProgressEvent<FileReader>;\n}\n\n/**\n * Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user\'s computer, using File or Blob objects to specify the file or data to read.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader)\n */\ninterface FileReader extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error) */\n    readonly error: DOMException | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event) */\n    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event) */\n    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event) */\n    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event) */\n    onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event) */\n    onloadstart: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event) */\n    onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState) */\n    readonly readyState: typeof FileReader.EMPTY | typeof FileReader.LOADING | typeof FileReader.DONE;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/result) */\n    readonly result: string | ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort) */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsArrayBuffer) */\n    readAsArrayBuffer(blob: Blob): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsBinaryString)\n     */\n    readAsBinaryString(blob: Blob): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsDataURL) */\n    readAsDataURL(blob: Blob): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsText) */\n    readAsText(blob: Blob, encoding?: string): void;\n    readonly EMPTY: 0;\n    readonly LOADING: 1;\n    readonly DONE: 2;\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FileReader: {\n    prototype: FileReader;\n    new(): FileReader;\n    readonly EMPTY: 0;\n    readonly LOADING: 1;\n    readonly DONE: 2;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystem) */\ninterface FileSystem {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystem/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystem/root) */\n    readonly root: FileSystemDirectoryEntry;\n}\n\ndeclare var FileSystem: {\n    prototype: FileSystem;\n    new(): FileSystem;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry) */\ninterface FileSystemDirectoryEntry extends FileSystemEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/createReader) */\n    createReader(): FileSystemDirectoryReader;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/getDirectory) */\n    getDirectory(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryEntry/getFile) */\n    getFile(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemDirectoryEntry: {\n    prototype: FileSystemDirectoryEntry;\n    new(): FileSystemDirectoryEntry;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle)\n */\ninterface FileSystemDirectoryHandle extends FileSystemHandle {\n    readonly kind: "directory";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getDirectoryHandle) */\n    getDirectoryHandle(name: string, options?: FileSystemGetDirectoryOptions): Promise<FileSystemDirectoryHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getFileHandle) */\n    getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/removeEntry) */\n    removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/resolve) */\n    resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;\n}\n\ndeclare var FileSystemDirectoryHandle: {\n    prototype: FileSystemDirectoryHandle;\n    new(): FileSystemDirectoryHandle;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryReader) */\ninterface FileSystemDirectoryReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryReader/readEntries) */\n    readEntries(successCallback: FileSystemEntriesCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemDirectoryReader: {\n    prototype: FileSystemDirectoryReader;\n    new(): FileSystemDirectoryReader;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry) */\ninterface FileSystemEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/filesystem) */\n    readonly filesystem: FileSystem;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/fullPath) */\n    readonly fullPath: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/isDirectory) */\n    readonly isDirectory: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/isFile) */\n    readonly isFile: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemEntry/getParent) */\n    getParent(successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemEntry: {\n    prototype: FileSystemEntry;\n    new(): FileSystemEntry;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileEntry) */\ninterface FileSystemFileEntry extends FileSystemEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileEntry/file) */\n    file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemFileEntry: {\n    prototype: FileSystemFileEntry;\n    new(): FileSystemFileEntry;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle)\n */\ninterface FileSystemFileHandle extends FileSystemHandle {\n    readonly kind: "file";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/createWritable) */\n    createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/getFile) */\n    getFile(): Promise<File>;\n}\n\ndeclare var FileSystemFileHandle: {\n    prototype: FileSystemFileHandle;\n    new(): FileSystemFileHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle)\n */\ninterface FileSystemHandle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/kind) */\n    readonly kind: FileSystemHandleKind;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/isSameEntry) */\n    isSameEntry(other: FileSystemHandle): Promise<boolean>;\n}\n\ndeclare var FileSystemHandle: {\n    prototype: FileSystemHandle;\n    new(): FileSystemHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream)\n */\ninterface FileSystemWritableFileStream extends WritableStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/seek) */\n    seek(position: number): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/truncate) */\n    truncate(size: number): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/write) */\n    write(data: FileSystemWriteChunkType): Promise<void>;\n}\n\ndeclare var FileSystemWritableFileStream: {\n    prototype: FileSystemWritableFileStream;\n    new(): FileSystemWritableFileStream;\n};\n\n/**\n * Focus-related events like focus, blur, focusin, or focusout.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FocusEvent)\n */\ninterface FocusEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FocusEvent/relatedTarget) */\n    readonly relatedTarget: EventTarget | null;\n}\n\ndeclare var FocusEvent: {\n    prototype: FocusEvent;\n    new(type: string, eventInitDict?: FocusEventInit): FocusEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace) */\ninterface FontFace {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/ascentOverride) */\n    ascentOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/descentOverride) */\n    descentOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/display) */\n    display: FontDisplay;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/family) */\n    family: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/featureSettings) */\n    featureSettings: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/lineGapOverride) */\n    lineGapOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/loaded) */\n    readonly loaded: Promise<FontFace>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/status) */\n    readonly status: FontFaceLoadStatus;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/stretch) */\n    stretch: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/style) */\n    style: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/unicodeRange) */\n    unicodeRange: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/weight) */\n    weight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/load) */\n    load(): Promise<FontFace>;\n}\n\ndeclare var FontFace: {\n    prototype: FontFace;\n    new(family: string, source: string | BufferSource, descriptors?: FontFaceDescriptors): FontFace;\n};\n\ninterface FontFaceSetEventMap {\n    "loading": FontFaceSetLoadEvent;\n    "loadingdone": FontFaceSetLoadEvent;\n    "loadingerror": FontFaceSetLoadEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet) */\ninterface FontFaceSet extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event) */\n    onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event) */\n    onloadingdone: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event) */\n    onloadingerror: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready) */\n    readonly ready: Promise<FontFaceSet>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/status) */\n    readonly status: FontFaceSetLoadStatus;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/check) */\n    check(font: string, text?: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/load) */\n    load(font: string, text?: string): Promise<FontFace[]>;\n    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;\n    addEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FontFaceSet: {\n    prototype: FontFaceSet;\n    new(): FontFaceSet;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSetLoadEvent) */\ninterface FontFaceSetLoadEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSetLoadEvent/fontfaces) */\n    readonly fontfaces: ReadonlyArray<FontFace>;\n}\n\ndeclare var FontFaceSetLoadEvent: {\n    prototype: FontFaceSetLoadEvent;\n    new(type: string, eventInitDict?: FontFaceSetLoadEventInit): FontFaceSetLoadEvent;\n};\n\ninterface FontFaceSource {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts) */\n    readonly fonts: FontFaceSet;\n}\n\n/**\n * Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to "multipart/form-data".\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData)\n */\ninterface FormData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/append) */\n    append(name: string, value: string | Blob): void;\n    append(name: string, value: string): void;\n    append(name: string, blobValue: Blob, filename?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/delete) */\n    delete(name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/get) */\n    get(name: string): FormDataEntryValue | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/getAll) */\n    getAll(name: string): FormDataEntryValue[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/has) */\n    has(name: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/set) */\n    set(name: string, value: string | Blob): void;\n    set(name: string, value: string): void;\n    set(name: string, blobValue: Blob, filename?: string): void;\n    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;\n}\n\ndeclare var FormData: {\n    prototype: FormData;\n    new(form?: HTMLFormElement, submitter?: HTMLElement | null): FormData;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormDataEvent) */\ninterface FormDataEvent extends Event {\n    /**\n     * Returns a FormData object representing names and values of elements associated to the target form. Operations on the FormData object will affect form data to be submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormDataEvent/formData)\n     */\n    readonly formData: FormData;\n}\n\ndeclare var FormDataEvent: {\n    prototype: FormDataEvent;\n    new(type: string, eventInitDict: FormDataEventInit): FormDataEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FragmentDirective) */\ninterface FragmentDirective {\n}\n\ndeclare var FragmentDirective: {\n    prototype: FragmentDirective;\n    new(): FragmentDirective;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GPUError)\n */\ninterface GPUError {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GPUError/message) */\n    readonly message: string;\n}\n\n/**\n * A change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GainNode)\n */\ninterface GainNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GainNode/gain) */\n    readonly gain: AudioParam;\n}\n\ndeclare var GainNode: {\n    prototype: GainNode;\n    new(context: BaseAudioContext, options?: GainOptions): GainNode;\n};\n\n/**\n * This Gamepad API interface defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad)\n */\ninterface Gamepad {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/axes) */\n    readonly axes: ReadonlyArray<number>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/buttons) */\n    readonly buttons: ReadonlyArray<GamepadButton>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/connected) */\n    readonly connected: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/index) */\n    readonly index: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/mapping) */\n    readonly mapping: GamepadMappingType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/timestamp) */\n    readonly timestamp: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Gamepad/vibrationActuator) */\n    readonly vibrationActuator: GamepadHapticActuator;\n}\n\ndeclare var Gamepad: {\n    prototype: Gamepad;\n    new(): Gamepad;\n};\n\n/**\n * An individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton)\n */\ninterface GamepadButton {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/pressed) */\n    readonly pressed: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/touched) */\n    readonly touched: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadButton/value) */\n    readonly value: number;\n}\n\ndeclare var GamepadButton: {\n    prototype: GamepadButton;\n    new(): GamepadButton;\n};\n\n/**\n * This Gamepad API interface contains references to gamepads connected to the system, which is what the gamepad events Window.gamepadconnected and Window.gamepaddisconnected are fired in response to.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadEvent)\n */\ninterface GamepadEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadEvent/gamepad) */\n    readonly gamepad: Gamepad;\n}\n\ndeclare var GamepadEvent: {\n    prototype: GamepadEvent;\n    new(type: string, eventInitDict: GamepadEventInit): GamepadEvent;\n};\n\n/**\n * This Gamepad API interface represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadHapticActuator)\n */\ninterface GamepadHapticActuator {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadHapticActuator/playEffect) */\n    playEffect(type: GamepadHapticEffectType, params?: GamepadEffectParameters): Promise<GamepadHapticsResult>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GamepadHapticActuator/reset) */\n    reset(): Promise<GamepadHapticsResult>;\n}\n\ndeclare var GamepadHapticActuator: {\n    prototype: GamepadHapticActuator;\n    new(): GamepadHapticActuator;\n};\n\ninterface GenericTransformStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/writable) */\n    readonly writable: WritableStream;\n}\n\n/**\n * An object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user\'s location.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation)\n */\ninterface Geolocation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/clearWatch) */\n    clearWatch(watchId: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/getCurrentPosition) */\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | null, options?: PositionOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Geolocation/watchPosition) */\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | null, options?: PositionOptions): number;\n}\n\ndeclare var Geolocation: {\n    prototype: Geolocation;\n    new(): Geolocation;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates)\n */\ninterface GeolocationCoordinates {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/accuracy) */\n    readonly accuracy: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/altitude) */\n    readonly altitude: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/altitudeAccuracy) */\n    readonly altitudeAccuracy: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/heading) */\n    readonly heading: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/latitude) */\n    readonly latitude: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/longitude) */\n    readonly longitude: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/speed) */\n    readonly speed: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationCoordinates/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var GeolocationCoordinates: {\n    prototype: GeolocationCoordinates;\n    new(): GeolocationCoordinates;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition)\n */\ninterface GeolocationPosition {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/coords) */\n    readonly coords: GeolocationCoordinates;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/timestamp) */\n    readonly timestamp: EpochTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPosition/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var GeolocationPosition: {\n    prototype: GeolocationPosition;\n    new(): GeolocationPosition;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPositionError) */\ninterface GeolocationPositionError {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPositionError/code) */\n    readonly code: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GeolocationPositionError/message) */\n    readonly message: string;\n    readonly PERMISSION_DENIED: 1;\n    readonly POSITION_UNAVAILABLE: 2;\n    readonly TIMEOUT: 3;\n}\n\ndeclare var GeolocationPositionError: {\n    prototype: GeolocationPositionError;\n    new(): GeolocationPositionError;\n    readonly PERMISSION_DENIED: 1;\n    readonly POSITION_UNAVAILABLE: 2;\n    readonly TIMEOUT: 3;\n};\n\ninterface GlobalEventHandlersEventMap {\n    "abort": UIEvent;\n    "animationcancel": AnimationEvent;\n    "animationend": AnimationEvent;\n    "animationiteration": AnimationEvent;\n    "animationstart": AnimationEvent;\n    "auxclick": MouseEvent;\n    "beforeinput": InputEvent;\n    "beforetoggle": Event;\n    "blur": FocusEvent;\n    "cancel": Event;\n    "canplay": Event;\n    "canplaythrough": Event;\n    "change": Event;\n    "click": MouseEvent;\n    "close": Event;\n    "compositionend": CompositionEvent;\n    "compositionstart": CompositionEvent;\n    "compositionupdate": CompositionEvent;\n    "contextlost": Event;\n    "contextmenu": MouseEvent;\n    "contextrestored": Event;\n    "copy": ClipboardEvent;\n    "cuechange": Event;\n    "cut": ClipboardEvent;\n    "dblclick": MouseEvent;\n    "drag": DragEvent;\n    "dragend": DragEvent;\n    "dragenter": DragEvent;\n    "dragleave": DragEvent;\n    "dragover": DragEvent;\n    "dragstart": DragEvent;\n    "drop": DragEvent;\n    "durationchange": Event;\n    "emptied": Event;\n    "ended": Event;\n    "error": ErrorEvent;\n    "focus": FocusEvent;\n    "focusin": FocusEvent;\n    "focusout": FocusEvent;\n    "formdata": FormDataEvent;\n    "gotpointercapture": PointerEvent;\n    "input": Event;\n    "invalid": Event;\n    "keydown": KeyboardEvent;\n    "keypress": KeyboardEvent;\n    "keyup": KeyboardEvent;\n    "load": Event;\n    "loadeddata": Event;\n    "loadedmetadata": Event;\n    "loadstart": Event;\n    "lostpointercapture": PointerEvent;\n    "mousedown": MouseEvent;\n    "mouseenter": MouseEvent;\n    "mouseleave": MouseEvent;\n    "mousemove": MouseEvent;\n    "mouseout": MouseEvent;\n    "mouseover": MouseEvent;\n    "mouseup": MouseEvent;\n    "paste": ClipboardEvent;\n    "pause": Event;\n    "play": Event;\n    "playing": Event;\n    "pointercancel": PointerEvent;\n    "pointerdown": PointerEvent;\n    "pointerenter": PointerEvent;\n    "pointerleave": PointerEvent;\n    "pointermove": PointerEvent;\n    "pointerout": PointerEvent;\n    "pointerover": PointerEvent;\n    "pointerup": PointerEvent;\n    "progress": ProgressEvent;\n    "ratechange": Event;\n    "reset": Event;\n    "resize": UIEvent;\n    "scroll": Event;\n    "scrollend": Event;\n    "securitypolicyviolation": SecurityPolicyViolationEvent;\n    "seeked": Event;\n    "seeking": Event;\n    "select": Event;\n    "selectionchange": Event;\n    "selectstart": Event;\n    "slotchange": Event;\n    "stalled": Event;\n    "submit": SubmitEvent;\n    "suspend": Event;\n    "timeupdate": Event;\n    "toggle": Event;\n    "touchcancel": TouchEvent;\n    "touchend": TouchEvent;\n    "touchmove": TouchEvent;\n    "touchstart": TouchEvent;\n    "transitioncancel": TransitionEvent;\n    "transitionend": TransitionEvent;\n    "transitionrun": TransitionEvent;\n    "transitionstart": TransitionEvent;\n    "volumechange": Event;\n    "waiting": Event;\n    "webkitanimationend": Event;\n    "webkitanimationiteration": Event;\n    "webkitanimationstart": Event;\n    "webkittransitionend": Event;\n    "wheel": WheelEvent;\n}\n\ninterface GlobalEventHandlers {\n    /**\n     * Fires when the user aborts the download.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)\n     */\n    onabort: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event) */\n    onanimationcancel: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event) */\n    onanimationend: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event) */\n    onanimationiteration: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event) */\n    onanimationstart: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event) */\n    onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event) */\n    onbeforeinput: ((this: GlobalEventHandlers, ev: InputEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event) */\n    onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the object loses the input focus.\n     * @param ev The focus event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)\n     */\n    onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event) */\n    oncancel: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when playback is possible, but would require further buffering.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)\n     */\n    oncanplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event) */\n    oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the contents of the object or selection have changed.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)\n     */\n    onchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user clicks the left mouse button on the object\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)\n     */\n    onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event) */\n    onclose: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event) */\n    oncontextlost: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user clicks the right mouse button in the client area, opening the context menu.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)\n     */\n    oncontextmenu: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event) */\n    oncontextrestored: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event) */\n    oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event) */\n    oncuechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event) */\n    oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;\n    /**\n     * Fires when the user double-clicks the object.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)\n     */\n    ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires on the source object continuously during a drag operation.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)\n     */\n    ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the source object when the user releases the mouse at the close of a drag operation.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)\n     */\n    ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target element when the user drags the object to a valid drop target.\n     * @param ev The drag event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)\n     */\n    ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\n     * @param ev The drag event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)\n     */\n    ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target element continuously while the user drags the object over a valid drop target.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)\n     */\n    ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the source object when the user starts to drag a text selection or selected object.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)\n     */\n    ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event) */\n    ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Occurs when the duration attribute is updated.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)\n     */\n    ondurationchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the media element is reset to its initial state.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)\n     */\n    onemptied: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the end of playback is reached.\n     * @param ev The event\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)\n     */\n    onended: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when an error occurs during object loading.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)\n     */\n    onerror: OnErrorEventHandler;\n    /**\n     * Fires when the object receives focus.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)\n     */\n    onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event) */\n    onformdata: ((this: GlobalEventHandlers, ev: FormDataEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event) */\n    ongotpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event) */\n    oninput: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event) */\n    oninvalid: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user presses a key.\n     * @param ev The keyboard event\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)\n     */\n    onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires when the user presses an alphanumeric key.\n     * @param ev The event.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)\n     */\n    onkeypress: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires when the user releases a key.\n     * @param ev The keyboard event\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)\n     */\n    onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires immediately after the browser loads the object.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)\n     */\n    onload: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when media data is loaded at the current playback position.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)\n     */\n    onloadeddata: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the duration and dimensions of the media have been determined.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)\n     */\n    onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when Internet Explorer begins looking for media data.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)\n     */\n    onloadstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event) */\n    onlostpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /**\n     * Fires when the user clicks the object with either mouse button.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)\n     */\n    onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event) */\n    onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event) */\n    onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse over the object.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)\n     */\n    onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse pointer outside the boundaries of the object.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)\n     */\n    onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse pointer into the object.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)\n     */\n    onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user releases a mouse button while the mouse is over the object.\n     * @param ev The mouse event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)\n     */\n    onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event) */\n    onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;\n    /**\n     * Occurs when playback is paused.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)\n     */\n    onpause: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the play method is requested.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)\n     */\n    onplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the audio or video has started playing.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)\n     */\n    onplaying: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event) */\n    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event) */\n    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event) */\n    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event) */\n    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event) */\n    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event) */\n    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event) */\n    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event) */\n    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /**\n     * Occurs to indicate progress while downloading media data.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)\n     */\n    onprogress: ((this: GlobalEventHandlers, ev: ProgressEvent) => any) | null;\n    /**\n     * Occurs when the playback rate is increased or decreased.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)\n     */\n    onratechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user resets a form.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)\n     */\n    onreset: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event) */\n    onresize: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;\n    /**\n     * Fires when the user repositions the scroll box in the scroll bar on the object.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)\n     */\n    onscroll: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event) */\n    onscrollend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event) */\n    onsecuritypolicyviolation: ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any) | null;\n    /**\n     * Occurs when the seek operation ends.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)\n     */\n    onseeked: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the current playback position is moved.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)\n     */\n    onseeking: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the current selection changes.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)\n     */\n    onselect: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event) */\n    onselectionchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event) */\n    onselectstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event) */\n    onslotchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the download has stopped.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)\n     */\n    onstalled: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event) */\n    onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => any) | null;\n    /**\n     * Occurs if the load operation has been intentionally halted.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)\n     */\n    onsuspend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs to indicate the current playback position.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)\n     */\n    ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event) */\n    ontoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event) */\n    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event) */\n    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event) */\n    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event) */\n    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event) */\n    ontransitioncancel: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event) */\n    ontransitionend: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event) */\n    ontransitionrun: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event) */\n    ontransitionstart: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    /**\n     * Occurs when the volume is changed, or playback is muted or unmuted.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)\n     */\n    onvolumechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when playback stops because the next frame of a video resource is not available.\n     * @param ev The event.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)\n     */\n    onwaiting: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * @deprecated This is a legacy alias of `onanimationend`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)\n     */\n    onwebkitanimationend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * @deprecated This is a legacy alias of `onanimationiteration`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)\n     */\n    onwebkitanimationiteration: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * @deprecated This is a legacy alias of `onanimationstart`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)\n     */\n    onwebkitanimationstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * @deprecated This is a legacy alias of `ontransitionend`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)\n     */\n    onwebkittransitionend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event) */\n    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;\n    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection) */\ninterface HTMLAllCollection {\n    /**\n     * Returns the number of elements in the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/length)\n     */\n    readonly length: number;\n    /**\n     * Returns the item with index index from the collection (determined by tree order).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/item)\n     */\n    item(nameOrIndex?: string): HTMLCollection | Element | null;\n    /**\n     * Returns the item with ID or name name from the collection.\n     *\n     * If there are multiple matching items, then an HTMLCollection object containing all those elements is returned.\n     *\n     * Only button, form, iframe, input, map, meta, object, select, and textarea elements can have a name for the purpose of this method; their name is given by the value of their name attribute.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAllCollection/namedItem)\n     */\n    namedItem(name: string): HTMLCollection | Element | null;\n    [index: number]: Element;\n}\n\ndeclare var HTMLAllCollection: {\n    prototype: HTMLAllCollection;\n    new(): HTMLAllCollection;\n};\n\n/**\n * Hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement)\n */\ninterface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    /**\n     * Sets or retrieves the coordinates of the object.\n     * @deprecated\n     */\n    coords: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/download) */\n    download: string;\n    /**\n     * Sets or retrieves the language code of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hreflang)\n     */\n    hreflang: string;\n    /**\n     * Sets or retrieves the shape of the object.\n     * @deprecated\n     */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/ping) */\n    ping: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/referrerPolicy) */\n    referrerPolicy: string;\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/rel)\n     */\n    rel: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/relList) */\n    get relList(): DOMTokenList;\n    set relList(value: string);\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     * @deprecated\n     */\n    rev: string;\n    /**\n     * Sets or retrieves the shape of the object.\n     * @deprecated\n     */\n    shape: string;\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/target)\n     */\n    target: string;\n    /**\n     * Retrieves or sets the text of the object as a string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/text)\n     */\n    text: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/type) */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAnchorElement: {\n    prototype: HTMLAnchorElement;\n    new(): HTMLAnchorElement;\n};\n\n/**\n * Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <area> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement)\n */\ninterface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {\n    /**\n     * Sets or retrieves a text alternative to the graphic.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/alt)\n     */\n    alt: string;\n    /**\n     * Sets or retrieves the coordinates of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/coords)\n     */\n    coords: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/download) */\n    download: string;\n    /**\n     * Sets or gets whether clicks in this region cause action.\n     * @deprecated\n     */\n    noHref: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/ping) */\n    ping: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/referrerPolicy) */\n    referrerPolicy: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/rel) */\n    rel: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/relList) */\n    get relList(): DOMTokenList;\n    set relList(value: string);\n    /**\n     * Sets or retrieves the shape of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/shape)\n     */\n    shape: string;\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAreaElement/target)\n     */\n    target: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAreaElement: {\n    prototype: HTMLAreaElement;\n    new(): HTMLAreaElement;\n};\n\n/**\n * Provides access to the properties of <audio> elements, as well as methods to manipulate them. It derives from the HTMLMediaElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAudioElement)\n */\ninterface HTMLAudioElement extends HTMLMediaElement {\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAudioElement: {\n    prototype: HTMLAudioElement;\n    new(): HTMLAudioElement;\n};\n\n/**\n * A HTML line break element (<br>). It inherits from HTMLElement.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBRElement)\n */\ninterface HTMLBRElement extends HTMLElement {\n    /**\n     * Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.\n     * @deprecated\n     */\n    clear: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBRElement: {\n    prototype: HTMLBRElement;\n    new(): HTMLBRElement;\n};\n\n/**\n * Contains the base URI\xa0for a document. This object inherits all of the properties and methods as described in the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBaseElement)\n */\ninterface HTMLBaseElement extends HTMLElement {\n    /**\n     * Gets or sets the baseline URL on which relative links are based.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBaseElement/href)\n     */\n    href: string;\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBaseElement/target)\n     */\n    target: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBaseElement: {\n    prototype: HTMLBaseElement;\n    new(): HTMLBaseElement;\n};\n\ninterface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\n}\n\n/**\n * Provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating <body> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLBodyElement)\n */\ninterface HTMLBodyElement extends HTMLElement, WindowEventHandlers {\n    /** @deprecated */\n    aLink: string;\n    /** @deprecated */\n    background: string;\n    /** @deprecated */\n    bgColor: string;\n    /** @deprecated */\n    link: string;\n    /** @deprecated */\n    text: string;\n    /** @deprecated */\n    vLink: string;\n    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBodyElement: {\n    prototype: HTMLBodyElement;\n    new(): HTMLBodyElement;\n};\n\n/**\n * Provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <button> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement)\n */\ninterface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/disabled) */\n    disabled: boolean;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formAction)\n     */\n    formAction: string;\n    /**\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formEnctype)\n     */\n    formEnctype: string;\n    /**\n     * Overrides the submit method attribute previously specified on a form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formMethod)\n     */\n    formMethod: string;\n    /**\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a "save draft"-type submit option.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formNoValidate)\n     */\n    formNoValidate: boolean;\n    /**\n     * Overrides the target attribute on a form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/formTarget)\n     */\n    formTarget: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/name)\n     */\n    name: string;\n    /**\n     * Gets the classification and default behavior of the button.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/type)\n     */\n    type: "submit" | "reset" | "button";\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Sets or retrieves the default or selected value of the control.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/value)\n     */\n    value: string;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLButtonElement: {\n    prototype: HTMLButtonElement;\n    new(): HTMLButtonElement;\n};\n\n/**\n * Provides properties and methods for manipulating the layout and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement)\n */\ninterface HTMLCanvasElement extends HTMLElement {\n    /**\n     * Gets or sets the height of a canvas element on a document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/height)\n     */\n    height: number;\n    /**\n     * Gets or sets the width of a canvas element on a document.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/width)\n     */\n    width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/captureStream) */\n    captureStream(frameRequestRate?: number): MediaStream;\n    /**\n     * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.\n     * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext("2d"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext("experimental-webgl");\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/getContext)\n     */\n    getContext(contextId: "2d", options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D | null;\n    getContext(contextId: "bitmaprenderer", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null;\n    getContext(contextId: "webgl", options?: WebGLContextAttributes): WebGLRenderingContext | null;\n    getContext(contextId: "webgl2", options?: WebGLContextAttributes): WebGL2RenderingContext | null;\n    getContext(contextId: string, options?: any): RenderingContext | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toBlob) */\n    toBlob(callback: BlobCallback, type?: string, quality?: number): void;\n    /**\n     * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.\n     * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/toDataURL)\n     */\n    toDataURL(type?: string, quality?: number): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen) */\n    transferControlToOffscreen(): OffscreenCanvas;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLCanvasElement: {\n    prototype: HTMLCanvasElement;\n    new(): HTMLCanvasElement;\n};\n\n/**\n * A generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection)\n */\ninterface HTMLCollectionBase {\n    /**\n     * Sets or retrieves the number of objects in a collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/length)\n     */\n    readonly length: number;\n    /**\n     * Retrieves an object from various collections.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/item)\n     */\n    item(index: number): Element | null;\n    [index: number]: Element;\n}\n\ninterface HTMLCollection extends HTMLCollectionBase {\n    /**\n     * Retrieves a select object or an object from an options collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCollection/namedItem)\n     */\n    namedItem(name: string): Element | null;\n}\n\ndeclare var HTMLCollection: {\n    prototype: HTMLCollection;\n    new(): HTMLCollection;\n};\n\ninterface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {\n    item(index: number): T | null;\n    namedItem(name: string): T | null;\n    [index: number]: T;\n}\n\n/**\n * Provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list (<dl>) elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDListElement)\n */\ninterface HTMLDListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDListElement: {\n    prototype: HTMLDListElement;\n    new(): HTMLDListElement;\n};\n\n/**\n * Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <data> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataElement)\n */\ninterface HTMLDataElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataElement/value) */\n    value: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDataElement: {\n    prototype: HTMLDataElement;\n    new(): HTMLDataElement;\n};\n\n/**\n * Provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate <datalist> elements and their content.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataListElement)\n */\ninterface HTMLDataListElement extends HTMLElement {\n    /**\n     * Returns an HTMLCollection of the option elements of the datalist element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDataListElement/options)\n     */\n    readonly options: HTMLCollectionOf<HTMLOptionElement>;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDataListElement: {\n    prototype: HTMLDataListElement;\n    new(): HTMLDataListElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement) */\ninterface HTMLDetailsElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/name) */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDetailsElement/open) */\n    open: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDetailsElement: {\n    prototype: HTMLDetailsElement;\n    new(): HTMLDetailsElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement) */\ninterface HTMLDialogElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/open) */\n    open: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/returnValue) */\n    returnValue: string;\n    /**\n     * Closes the dialog element.\n     *\n     * The argument, if provided, provides a return value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close)\n     */\n    close(returnValue?: string): void;\n    /**\n     * Displays the dialog element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/show)\n     */\n    show(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/showModal) */\n    showModal(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDialogElement: {\n    prototype: HTMLDialogElement;\n    new(): HTMLDialogElement;\n};\n\n/** @deprecated */\ninterface HTMLDirectoryElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLDirectoryElement: {\n    prototype: HTMLDirectoryElement;\n    new(): HTMLDirectoryElement;\n};\n\n/**\n * Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDivElement)\n */\ninterface HTMLDivElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDivElement: {\n    prototype: HTMLDivElement;\n    new(): HTMLDivElement;\n};\n\n/** @deprecated use Document */\ninterface HTMLDocument extends Document {\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLDocument: {\n    prototype: HTMLDocument;\n    new(): HTMLDocument;\n};\n\ninterface HTMLElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {\n}\n\n/**\n * Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement)\n */\ninterface HTMLElement extends Element, ElementCSSInlineStyle, ElementContentEditable, GlobalEventHandlers, HTMLOrSVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey) */\n    accessKey: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel) */\n    readonly accessKeyLabel: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize) */\n    autocapitalize: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir) */\n    dir: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable) */\n    draggable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden) */\n    hidden: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert) */\n    inert: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText) */\n    innerText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang) */\n    lang: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight) */\n    readonly offsetHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft) */\n    readonly offsetLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent) */\n    readonly offsetParent: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop) */\n    readonly offsetTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth) */\n    readonly offsetWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText) */\n    outerText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover) */\n    popover: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck) */\n    spellcheck: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title) */\n    title: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate) */\n    translate: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions) */\n    writingSuggestions: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals) */\n    attachInternals(): ElementInternals;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click) */\n    click(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover) */\n    hidePopover(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover) */\n    showPopover(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover) */\n    togglePopover(options?: boolean): boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLElement: {\n    prototype: HTMLElement;\n    new(): HTMLElement;\n};\n\n/**\n * Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <embed> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement)\n */\ninterface HTMLEmbedElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /**\n     * Sets or retrieves the height of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/height)\n     */\n    height: string;\n    /**\n     * Sets or retrieves the name of the object.\n     * @deprecated\n     */\n    name: string;\n    /**\n     * Sets or retrieves a URL to be loaded by the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/src)\n     */\n    src: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/type) */\n    type: string;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/width)\n     */\n    width: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLEmbedElement/getSVGDocument) */\n    getSVGDocument(): Document | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLEmbedElement: {\n    prototype: HTMLEmbedElement;\n    new(): HTMLEmbedElement;\n};\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <fieldset> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement)\n */\ninterface HTMLFieldSetElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/disabled) */\n    disabled: boolean;\n    /**\n     * Returns an HTMLCollection of the form controls in the element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/elements)\n     */\n    readonly elements: HTMLCollection;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/name) */\n    name: string;\n    /**\n     * Returns the string "fieldset".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/type)\n     */\n    readonly type: string;\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFieldSetElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLFieldSetElement: {\n    prototype: HTMLFieldSetElement;\n    new(): HTMLFieldSetElement;\n};\n\n/**\n * Implements the document object model (DOM) representation of the font element. The HTML Font Element <font> defines the font size, font face and color of text.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFontElement)\n */\ninterface HTMLFontElement extends HTMLElement {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFontElement/color)\n     */\n    color: string;\n    /**\n     * Sets or retrieves the current typeface family.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFontElement/face)\n     */\n    face: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFontElement/size)\n     */\n    size: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFontElement: {\n    prototype: HTMLFontElement;\n    new(): HTMLFontElement;\n};\n\n/**\n * A collection of HTML form control elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormControlsCollection)\n */\ninterface HTMLFormControlsCollection extends HTMLCollectionBase {\n    /**\n     * Returns the item with ID or name name from the collection.\n     *\n     * If there are multiple matching items, then a RadioNodeList object containing all those elements is returned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormControlsCollection/namedItem)\n     */\n    namedItem(name: string): RadioNodeList | Element | null;\n}\n\ndeclare var HTMLFormControlsCollection: {\n    prototype: HTMLFormControlsCollection;\n    new(): HTMLFormControlsCollection;\n};\n\n/**\n * A <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement)\n */\ninterface HTMLFormElement extends HTMLElement {\n    /**\n     * Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/acceptCharset)\n     */\n    acceptCharset: string;\n    /**\n     * Sets or retrieves the URL to which the form content is sent for processing.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/action)\n     */\n    action: string;\n    /**\n     * Specifies whether autocomplete is applied to an editable text field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/autocomplete)\n     */\n    autocomplete: AutoFillBase;\n    /**\n     * Retrieves a collection, in source order, of all controls in a given form.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/elements)\n     */\n    readonly elements: HTMLFormControlsCollection;\n    /**\n     * Sets or retrieves the MIME encoding for the form.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/encoding)\n     */\n    encoding: string;\n    /**\n     * Sets or retrieves the encoding type for the form.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/enctype)\n     */\n    enctype: string;\n    /**\n     * Sets or retrieves the number of objects in a collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/length)\n     */\n    readonly length: number;\n    /**\n     * Sets or retrieves how to send the form data to the server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/method)\n     */\n    method: string;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/name)\n     */\n    name: string;\n    /**\n     * Designates a form that is not validated when submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/noValidate)\n     */\n    noValidate: boolean;\n    rel: string;\n    get relList(): DOMTokenList;\n    set relList(value: string);\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/target)\n     */\n    target: string;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reportValidity) */\n    reportValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/requestSubmit) */\n    requestSubmit(submitter?: HTMLElement | null): void;\n    /**\n     * Fires when the user resets a form.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset)\n     */\n    reset(): void;\n    /**\n     * Fires when a FORM is about to be submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit)\n     */\n    submit(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: Element;\n    [name: string]: any;\n}\n\ndeclare var HTMLFormElement: {\n    prototype: HTMLFormElement;\n    new(): HTMLFormElement;\n};\n\n/** @deprecated */\ninterface HTMLFrameElement extends HTMLElement {\n    /**\n     * Retrieves the document object of the page or frame.\n     * @deprecated\n     */\n    readonly contentDocument: Document | null;\n    /**\n     * Retrieves the object of the specified.\n     * @deprecated\n     */\n    readonly contentWindow: WindowProxy | null;\n    /**\n     * Sets or retrieves whether to display a border for the frame.\n     * @deprecated\n     */\n    frameBorder: string;\n    /**\n     * Sets or retrieves a URI to a long description of the object.\n     * @deprecated\n     */\n    longDesc: string;\n    /**\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\n     * @deprecated\n     */\n    marginHeight: string;\n    /**\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\n     * @deprecated\n     */\n    marginWidth: string;\n    /**\n     * Sets or retrieves the frame name.\n     * @deprecated\n     */\n    name: string;\n    /**\n     * Sets or retrieves whether the user can resize the frame.\n     * @deprecated\n     */\n    noResize: boolean;\n    /**\n     * Sets or retrieves whether the frame can be scrolled.\n     * @deprecated\n     */\n    scrolling: string;\n    /**\n     * Sets or retrieves a URL to be loaded by the object.\n     * @deprecated\n     */\n    src: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFrameElement: {\n    prototype: HTMLFrameElement;\n    new(): HTMLFrameElement;\n};\n\ninterface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\n}\n\n/**\n * Provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating <frameset> elements.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFrameSetElement)\n */\ninterface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {\n    /**\n     * Sets or retrieves the frame widths of the object.\n     * @deprecated\n     */\n    cols: string;\n    /**\n     * Sets or retrieves the frame heights of the object.\n     * @deprecated\n     */\n    rows: string;\n    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFrameSetElement: {\n    prototype: HTMLFrameSetElement;\n    new(): HTMLFrameSetElement;\n};\n\n/**\n * Provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating <hr> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLHRElement)\n */\ninterface HTMLHRElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    color: string;\n    /**\n     * Sets or retrieves whether the horizontal rule is drawn with 3-D shading.\n     * @deprecated\n     */\n    noShade: boolean;\n    /** @deprecated */\n    size: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHRElement: {\n    prototype: HTMLHRElement;\n    new(): HTMLHRElement;\n};\n\n/**\n * Contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLHeadElement)\n */\ninterface HTMLHeadElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHeadElement: {\n    prototype: HTMLHeadElement;\n    new(): HTMLHeadElement;\n};\n\n/**\n * The different heading elements. It inherits methods and properties from the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLHeadingElement)\n */\ninterface HTMLHeadingElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHeadingElement: {\n    prototype: HTMLHeadingElement;\n    new(): HTMLHeadingElement;\n};\n\n/**\n * Serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLHtmlElement)\n */\ninterface HTMLHtmlElement extends HTMLElement {\n    /**\n     * Sets or retrieves the DTD version that governs the current document.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLHtmlElement/version)\n     */\n    version: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHtmlElement: {\n    prototype: HTMLHtmlElement;\n    new(): HTMLHtmlElement;\n};\n\ninterface HTMLHyperlinkElementUtils {\n    /**\n     * Returns the hyperlink\'s URL\'s fragment (includes leading "#" if non-empty).\n     *\n     * Can be set, to change the URL\'s fragment (ignores leading "#").\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hash)\n     */\n    hash: string;\n    /**\n     * Returns the hyperlink\'s URL\'s host and port (if different from the default port for the scheme).\n     *\n     * Can be set, to change the URL\'s host and port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/host)\n     */\n    host: string;\n    /**\n     * Returns the hyperlink\'s URL\'s host.\n     *\n     * Can be set, to change the URL\'s host.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/hostname)\n     */\n    hostname: string;\n    /**\n     * Returns the hyperlink\'s URL.\n     *\n     * Can be set, to change the URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/href)\n     */\n    href: string;\n    toString(): string;\n    /**\n     * Returns the hyperlink\'s URL\'s origin.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/origin)\n     */\n    readonly origin: string;\n    /**\n     * Returns the hyperlink\'s URL\'s password.\n     *\n     * Can be set, to change the URL\'s password.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/password)\n     */\n    password: string;\n    /**\n     * Returns the hyperlink\'s URL\'s path.\n     *\n     * Can be set, to change the URL\'s path.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/pathname)\n     */\n    pathname: string;\n    /**\n     * Returns the hyperlink\'s URL\'s port.\n     *\n     * Can be set, to change the URL\'s port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/port)\n     */\n    port: string;\n    /**\n     * Returns the hyperlink\'s URL\'s scheme.\n     *\n     * Can be set, to change the URL\'s scheme.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/protocol)\n     */\n    protocol: string;\n    /**\n     * Returns the hyperlink\'s URL\'s query (includes leading "?" if non-empty).\n     *\n     * Can be set, to change the URL\'s query (ignores leading "?").\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/search)\n     */\n    search: string;\n    /**\n     * Returns the hyperlink\'s URL\'s username.\n     *\n     * Can be set, to change the URL\'s username.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLAnchorElement/username)\n     */\n    username: string;\n}\n\n/**\n * Provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement)\n */\ninterface HTMLIFrameElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/allow) */\n    allow: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/allowFullscreen) */\n    allowFullscreen: boolean;\n    /**\n     * Retrieves the document object of the page or frame.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/contentDocument)\n     */\n    readonly contentDocument: Document | null;\n    /**\n     * Retrieves the object of the specified.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/contentWindow)\n     */\n    readonly contentWindow: WindowProxy | null;\n    /**\n     * Sets or retrieves whether to display a border for the frame.\n     * @deprecated\n     */\n    frameBorder: string;\n    /**\n     * Sets or retrieves the height of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/height)\n     */\n    height: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/loading) */\n    loading: string;\n    /**\n     * Sets or retrieves a URI to a long description of the object.\n     * @deprecated\n     */\n    longDesc: string;\n    /**\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\n     * @deprecated\n     */\n    marginHeight: string;\n    /**\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\n     * @deprecated\n     */\n    marginWidth: string;\n    /**\n     * Sets or retrieves the frame name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/name)\n     */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/referrerPolicy) */\n    referrerPolicy: ReferrerPolicy;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/sandbox) */\n    get sandbox(): DOMTokenList;\n    set sandbox(value: string);\n    /**\n     * Sets or retrieves whether the frame can be scrolled.\n     * @deprecated\n     */\n    scrolling: string;\n    /**\n     * Sets or retrieves a URL to be loaded by the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/src)\n     */\n    src: string;\n    /**\n     * Sets or retrives the content of the page that is to contain.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/srcdoc)\n     */\n    srcdoc: string;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIFrameElement/width)\n     */\n    width: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLIframeElement/getSVGDocument) */\n    getSVGDocument(): Document | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLIFrameElement: {\n    prototype: HTMLIFrameElement;\n    new(): HTMLIFrameElement;\n};\n\n/**\n * Provides special properties and methods for manipulating <img> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement)\n */\ninterface HTMLImageElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/align)\n     */\n    align: string;\n    /**\n     * Sets or retrieves a text alternative to the graphic.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/alt)\n     */\n    alt: string;\n    /**\n     * Specifies the properties of a border drawn around an object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/border)\n     */\n    border: string;\n    /**\n     * Retrieves whether the object is fully loaded.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/complete)\n     */\n    readonly complete: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/crossOrigin) */\n    crossOrigin: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/currentSrc) */\n    readonly currentSrc: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/decoding) */\n    decoding: "async" | "sync" | "auto";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/fetchPriority) */\n    fetchPriority: "high" | "low" | "auto";\n    /**\n     * Sets or retrieves the height of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/height)\n     */\n    height: number;\n    /**\n     * Sets or retrieves the width of the border to draw around the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/hspace)\n     */\n    hspace: number;\n    /**\n     * Sets or retrieves whether the image is a server-side image map.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/isMap)\n     */\n    isMap: boolean;\n    /**\n     * Sets or retrieves the policy for loading image elements that are outside the viewport.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/loading)\n     */\n    loading: "eager" | "lazy";\n    /**\n     * Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/longDesc)\n     */\n    longDesc: string;\n    /** @deprecated */\n    lowsrc: string;\n    /**\n     * Sets or retrieves the name of the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/name)\n     */\n    name: string;\n    /**\n     * The original height of the image resource before sizing.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/naturalHeight)\n     */\n    readonly naturalHeight: number;\n    /**\n     * The original width of the image resource before sizing.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/naturalWidth)\n     */\n    readonly naturalWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/referrerPolicy) */\n    referrerPolicy: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/sizes) */\n    sizes: string;\n    /**\n     * The address or URL of the a media resource that is to be considered.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/src)\n     */\n    src: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/srcset) */\n    srcset: string;\n    /**\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/useMap)\n     */\n    useMap: string;\n    /**\n     * Sets or retrieves the vertical margin for the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/vspace)\n     */\n    vspace: number;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/width)\n     */\n    width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLImageElement/decode) */\n    decode(): Promise<void>;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLImageElement: {\n    prototype: HTMLImageElement;\n    new(): HTMLImageElement;\n};\n\n/**\n * Provides special properties and methods for manipulating the options, layout, and presentation of <input> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement)\n */\ninterface HTMLInputElement extends HTMLElement, PopoverInvokerElement {\n    /**\n     * Sets or retrieves a comma-separated list of content types.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/accept)\n     */\n    accept: string;\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /**\n     * Sets or retrieves a text alternative to the graphic.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/alt)\n     */\n    alt: string;\n    /**\n     * Specifies whether autocomplete is applied to an editable text field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/autocomplete)\n     */\n    autocomplete: AutoFill;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/capture) */\n    capture: string;\n    /**\n     * Sets or retrieves the state of the check box or radio button.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/checked)\n     */\n    checked: boolean;\n    /**\n     * Sets or retrieves the state of the check box or radio button.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/defaultChecked)\n     */\n    defaultChecked: boolean;\n    /**\n     * Sets or retrieves the initial contents of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/defaultValue)\n     */\n    defaultValue: string;\n    dirName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/disabled) */\n    disabled: boolean;\n    /**\n     * Returns a FileList object on a file type input object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/files)\n     */\n    files: FileList | null;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formAction)\n     */\n    formAction: string;\n    /**\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formEnctype)\n     */\n    formEnctype: string;\n    /**\n     * Overrides the submit method attribute previously specified on a form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formMethod)\n     */\n    formMethod: string;\n    /**\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a "save draft"-type submit option.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formNoValidate)\n     */\n    formNoValidate: boolean;\n    /**\n     * Overrides the target attribute on a form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/formTarget)\n     */\n    formTarget: string;\n    /**\n     * Sets or retrieves the height of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/height)\n     */\n    height: number;\n    /**\n     * When set, overrides the rendering of checkbox controls so that the current value is not visible.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/indeterminate)\n     */\n    indeterminate: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement> | null;\n    /**\n     * Specifies the ID of a pre-defined datalist of options for an input element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/list)\n     */\n    readonly list: HTMLDataListElement | null;\n    /**\n     * Defines the maximum acceptable value for an input element with type="number".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/max)\n     */\n    max: string;\n    /**\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/maxLength)\n     */\n    maxLength: number;\n    /**\n     * Defines the minimum acceptable value for an input element with type="number". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/min)\n     */\n    min: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/minLength) */\n    minLength: number;\n    /**\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/multiple)\n     */\n    multiple: boolean;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/name)\n     */\n    name: string;\n    /**\n     * Gets or sets a string containing a regular expression that the user\'s input must match.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/pattern)\n     */\n    pattern: string;\n    /**\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/placeholder)\n     */\n    placeholder: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/readOnly) */\n    readOnly: boolean;\n    /**\n     * When present, marks an element that can\'t be submitted without a value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/required)\n     */\n    required: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionDirection) */\n    selectionDirection: "forward" | "backward" | "none" | null;\n    /**\n     * Gets or sets the end position or offset of a text selection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionEnd)\n     */\n    selectionEnd: number | null;\n    /**\n     * Gets or sets the starting position or offset of a text selection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/selectionStart)\n     */\n    selectionStart: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/size) */\n    size: number;\n    /**\n     * The address or URL of the a media resource that is to be considered.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/src)\n     */\n    src: string;\n    /**\n     * Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/step)\n     */\n    step: string;\n    /**\n     * Returns the content type of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/type)\n     */\n    type: string;\n    /**\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\n     * @deprecated\n     */\n    useMap: string;\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Returns the value of the data at the cursor\'s current position.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/value)\n     */\n    value: string;\n    /**\n     * Returns a Date object representing the form control\'s value, if applicable; otherwise, returns null. Can be set, to change the value. Throws an "InvalidStateError" DOMException if the control isn\'t date- or time-based.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/valueAsDate)\n     */\n    valueAsDate: Date | null;\n    /**\n     * Returns the input field value as a number.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/valueAsNumber)\n     */\n    valueAsNumber: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/webkitEntries) */\n    readonly webkitEntries: ReadonlyArray<FileSystemEntry>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/webkitdirectory) */\n    webkitdirectory: boolean;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/width)\n     */\n    width: number;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Makes the selection equal to the current object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select)\n     */\n    select(): void;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/setRangeText) */\n    setRangeText(replacement: string): void;\n    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode): void;\n    /**\n     * Sets the start and end positions of a selection in a text field.\n     * @param start The offset into the text field for the start of the selection.\n     * @param end The offset into the text field for the end of the selection.\n     * @param direction The direction in which the selection is performed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/setSelectionRange)\n     */\n    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/showPicker) */\n    showPicker(): void;\n    /**\n     * Decrements a range input control\'s value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control\'s step value multiplied by the parameter\'s value.\n     * @param n Value to decrement the value by.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/stepDown)\n     */\n    stepDown(n?: number): void;\n    /**\n     * Increments a range input control\'s value by the value given by the Step attribute. If the optional parameter is used, will increment the input control\'s value by that value.\n     * @param n Value to increment the value by.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/stepUp)\n     */\n    stepUp(n?: number): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLInputElement: {\n    prototype: HTMLInputElement;\n    new(): HTMLInputElement;\n};\n\n/**\n * Exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLIElement)\n */\ninterface HTMLLIElement extends HTMLElement {\n    /** @deprecated */\n    type: string;\n    /**\n     * Sets or retrieves the value of a list item.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLIElement/value)\n     */\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLIElement: {\n    prototype: HTMLLIElement;\n    new(): HTMLLIElement;\n};\n\n/**\n * Gives access to properties specific to <label> elements. It inherits methods and properties from the base HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement)\n */\ninterface HTMLLabelElement extends HTMLElement {\n    /**\n     * Returns the form control that is associated with this element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/control)\n     */\n    readonly control: HTMLElement | null;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Sets or retrieves the object to which the given label object is assigned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLabelElement/htmlFor)\n     */\n    htmlFor: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLabelElement: {\n    prototype: HTMLLabelElement;\n    new(): HTMLLabelElement;\n};\n\n/**\n * The HTMLLegendElement is an interface allowing to access properties of the <legend> elements. It inherits properties and methods from the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLegendElement)\n */\ninterface HTMLLegendElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLegendElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLegendElement: {\n    prototype: HTMLLegendElement;\n    new(): HTMLLegendElement;\n};\n\n/**\n * Reference information for external resources and the relationship of those resources to a document and vice-versa. This object inherits all of the properties and methods of the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement)\n */\ninterface HTMLLinkElement extends HTMLElement, LinkStyle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/as) */\n    as: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/blocking) */\n    get blocking(): DOMTokenList;\n    set blocking(value: string);\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/crossOrigin) */\n    crossOrigin: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/disabled) */\n    disabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/fetchPriority) */\n    fetchPriority: "high" | "low" | "auto";\n    /**\n     * Sets or retrieves a destination URL or an anchor point.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/href)\n     */\n    href: string;\n    /**\n     * Sets or retrieves the language code of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/hreflang)\n     */\n    hreflang: string;\n    imageSizes: string;\n    imageSrcset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/integrity) */\n    integrity: string;\n    /**\n     * Sets or retrieves the media type.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/media)\n     */\n    media: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/referrerPolicy) */\n    referrerPolicy: string;\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/rel)\n     */\n    rel: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/relList) */\n    get relList(): DOMTokenList;\n    set relList(value: string);\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     * @deprecated\n     */\n    rev: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/sizes) */\n    get sizes(): DOMTokenList;\n    set sizes(value: string);\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     * @deprecated\n     */\n    target: string;\n    /**\n     * Sets or retrieves the MIME type of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/type)\n     */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLinkElement: {\n    prototype: HTMLLinkElement;\n    new(): HTMLLinkElement;\n};\n\n/**\n * Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMapElement)\n */\ninterface HTMLMapElement extends HTMLElement {\n    /**\n     * Retrieves a collection of the area objects defined for the given map object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMapElement/areas)\n     */\n    readonly areas: HTMLCollection;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMapElement/name)\n     */\n    name: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMapElement: {\n    prototype: HTMLMapElement;\n    new(): HTMLMapElement;\n};\n\n/**\n * Provides methods to manipulate <marquee> elements.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMarqueeElement)\n */\ninterface HTMLMarqueeElement extends HTMLElement {\n    /** @deprecated */\n    behavior: string;\n    /** @deprecated */\n    bgColor: string;\n    /** @deprecated */\n    direction: string;\n    /** @deprecated */\n    height: string;\n    /** @deprecated */\n    hspace: number;\n    /** @deprecated */\n    loop: number;\n    /** @deprecated */\n    scrollAmount: number;\n    /** @deprecated */\n    scrollDelay: number;\n    /** @deprecated */\n    trueSpeed: boolean;\n    /** @deprecated */\n    vspace: number;\n    /** @deprecated */\n    width: string;\n    /** @deprecated */\n    start(): void;\n    /** @deprecated */\n    stop(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLMarqueeElement: {\n    prototype: HTMLMarqueeElement;\n    new(): HTMLMarqueeElement;\n};\n\ninterface HTMLMediaElementEventMap extends HTMLElementEventMap {\n    "encrypted": MediaEncryptedEvent;\n    "waitingforkey": Event;\n}\n\n/**\n * Adds to HTMLElement the properties and methods needed to support basic media-related capabilities\xa0that are\xa0common to audio and video.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement)\n */\ninterface HTMLMediaElement extends HTMLElement {\n    /**\n     * Gets or sets a value that indicates whether to start playing the media automatically.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/autoplay)\n     */\n    autoplay: boolean;\n    /**\n     * Gets a collection of buffered time ranges.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/buffered)\n     */\n    readonly buffered: TimeRanges;\n    /**\n     * Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/controls)\n     */\n    controls: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/crossOrigin) */\n    crossOrigin: string | null;\n    /**\n     * Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/currentSrc)\n     */\n    readonly currentSrc: string;\n    /**\n     * Gets or sets the current playback position, in seconds.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/currentTime)\n     */\n    currentTime: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/defaultMuted) */\n    defaultMuted: boolean;\n    /**\n     * Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/defaultPlaybackRate)\n     */\n    defaultPlaybackRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/disableRemotePlayback) */\n    disableRemotePlayback: boolean;\n    /**\n     * Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/duration)\n     */\n    readonly duration: number;\n    /**\n     * Gets information about whether the playback has ended or not.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended)\n     */\n    readonly ended: boolean;\n    /**\n     * Returns an object representing the current error state of the audio or video element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/error)\n     */\n    readonly error: MediaError | null;\n    /**\n     * Gets or sets a flag to specify whether playback should restart after it completes.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loop)\n     */\n    loop: boolean;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/mediaKeys)\n     */\n    readonly mediaKeys: MediaKeys | null;\n    /**\n     * Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/muted)\n     */\n    muted: boolean;\n    /**\n     * Gets the current network activity for the element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/networkState)\n     */\n    readonly networkState: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/encrypted_event) */\n    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waitingforkey_event) */\n    onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;\n    /**\n     * Gets a flag that specifies whether playback is paused.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/paused)\n     */\n    readonly paused: boolean;\n    /**\n     * Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playbackRate)\n     */\n    playbackRate: number;\n    /**\n     * Gets TimeRanges for the current media resource that has been played.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/played)\n     */\n    readonly played: TimeRanges;\n    /**\n     * Gets or sets a value indicating what data should be preloaded, if any.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/preload)\n     */\n    preload: "none" | "metadata" | "auto" | "";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/preservesPitch) */\n    preservesPitch: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/readyState) */\n    readonly readyState: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/remote) */\n    readonly remote: RemotePlayback;\n    /**\n     * Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seekable)\n     */\n    readonly seekable: TimeRanges;\n    /**\n     * Gets a flag that indicates whether the client is currently moving to a new playback position in the media resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking)\n     */\n    readonly seeking: boolean;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/sinkId)\n     */\n    readonly sinkId: string;\n    /**\n     * The address or URL of the a media resource that is to be considered.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/src)\n     */\n    src: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/srcObject) */\n    srcObject: MediaProvider | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/textTracks) */\n    readonly textTracks: TextTrackList;\n    /**\n     * Gets or sets the volume level for audio portions of the media element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volume)\n     */\n    volume: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/addTextTrack) */\n    addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;\n    /**\n     * Returns a string that specifies whether the client can play a given media resource type.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canPlayType)\n     */\n    canPlayType(type: string): CanPlayTypeResult;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/fastSeek) */\n    fastSeek(time: number): void;\n    /**\n     * Resets the audio or video object and loads a new media resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/load)\n     */\n    load(): void;\n    /**\n     * Pauses the current playback and sets paused to TRUE.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause)\n     */\n    pause(): void;\n    /**\n     * Loads and starts playback of a media resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play)\n     */\n    play(): Promise<void>;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/setMediaKeys)\n     */\n    setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/setSinkId)\n     */\n    setSinkId(sinkId: string): Promise<void>;\n    readonly NETWORK_EMPTY: 0;\n    readonly NETWORK_IDLE: 1;\n    readonly NETWORK_LOADING: 2;\n    readonly NETWORK_NO_SOURCE: 3;\n    readonly HAVE_NOTHING: 0;\n    readonly HAVE_METADATA: 1;\n    readonly HAVE_CURRENT_DATA: 2;\n    readonly HAVE_FUTURE_DATA: 3;\n    readonly HAVE_ENOUGH_DATA: 4;\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMediaElement: {\n    prototype: HTMLMediaElement;\n    new(): HTMLMediaElement;\n    readonly NETWORK_EMPTY: 0;\n    readonly NETWORK_IDLE: 1;\n    readonly NETWORK_LOADING: 2;\n    readonly NETWORK_NO_SOURCE: 3;\n    readonly HAVE_NOTHING: 0;\n    readonly HAVE_METADATA: 1;\n    readonly HAVE_CURRENT_DATA: 2;\n    readonly HAVE_FUTURE_DATA: 3;\n    readonly HAVE_ENOUGH_DATA: 4;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMenuElement) */\ninterface HTMLMenuElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMenuElement: {\n    prototype: HTMLMenuElement;\n    new(): HTMLMenuElement;\n};\n\n/**\n * Contains descriptive metadata about a document. It\xa0inherits all of the properties and methods described in the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement)\n */\ninterface HTMLMetaElement extends HTMLElement {\n    /**\n     * Gets or sets meta-information to associate with httpEquiv or name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/content)\n     */\n    content: string;\n    /**\n     * Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/httpEquiv)\n     */\n    httpEquiv: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/media) */\n    media: string;\n    /**\n     * Sets or retrieves the value specified in the content attribute of the meta object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/name)\n     */\n    name: string;\n    /**\n     * Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMetaElement/scheme)\n     */\n    scheme: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMetaElement: {\n    prototype: HTMLMetaElement;\n    new(): HTMLMetaElement;\n};\n\n/**\n * The HTML <meter> elements expose the HTMLMeterElement interface, which provides special properties and methods (beyond the HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <meter> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement)\n */\ninterface HTMLMeterElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/high) */\n    high: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/low) */\n    low: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/max) */\n    max: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/min) */\n    min: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/optimum) */\n    optimum: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMeterElement/value) */\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMeterElement: {\n    prototype: HTMLMeterElement;\n    new(): HTMLMeterElement;\n};\n\n/**\n * Provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is <del> and <ins>.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLModElement)\n */\ninterface HTMLModElement extends HTMLElement {\n    /**\n     * Sets or retrieves reference information about the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLModElement/cite)\n     */\n    cite: string;\n    /**\n     * Sets or retrieves the date and time of a modification to the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLModElement/dateTime)\n     */\n    dateTime: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLModElement: {\n    prototype: HTMLModElement;\n    new(): HTMLModElement;\n};\n\n/**\n * Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement)\n */\ninterface HTMLOListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/reversed) */\n    reversed: boolean;\n    /**\n     * The starting number.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/start)\n     */\n    start: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOListElement/type) */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOListElement: {\n    prototype: HTMLOListElement;\n    new(): HTMLOListElement;\n};\n\n/**\n * Provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement)\n */\ninterface HTMLObjectElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /**\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\n     * @deprecated\n     */\n    archive: string;\n    /** @deprecated */\n    border: string;\n    /**\n     * Sets or retrieves the URL of the file containing the compiled Java class.\n     * @deprecated\n     */\n    code: string;\n    /**\n     * Sets or retrieves the URL of the component.\n     * @deprecated\n     */\n    codeBase: string;\n    /**\n     * Sets or retrieves the Internet media type for the code associated with the object.\n     * @deprecated\n     */\n    codeType: string;\n    /**\n     * Retrieves the document object of the page or frame.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/contentDocument)\n     */\n    readonly contentDocument: Document | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/contentWindow) */\n    readonly contentWindow: WindowProxy | null;\n    /**\n     * Sets or retrieves the URL that references the data of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/data)\n     */\n    data: string;\n    /** @deprecated */\n    declare: boolean;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Sets or retrieves the height of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/height)\n     */\n    height: string;\n    /** @deprecated */\n    hspace: number;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/name)\n     */\n    name: string;\n    /**\n     * Sets or retrieves a message to be displayed while an object is loading.\n     * @deprecated\n     */\n    standby: string;\n    /**\n     * Sets or retrieves the MIME type of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/type)\n     */\n    type: string;\n    /**\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/useMap)\n     */\n    useMap: string;\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/validity)\n     */\n    readonly validity: ValidityState;\n    /** @deprecated */\n    vspace: number;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/width)\n     */\n    width: string;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/getSVGDocument) */\n    getSVGDocument(): Document | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLObjectElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLObjectElement: {\n    prototype: HTMLObjectElement;\n    new(): HTMLObjectElement;\n};\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <optgroup> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement)\n */\ninterface HTMLOptGroupElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement/disabled) */\n    disabled: boolean;\n    /**\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptGroupElement/label)\n     */\n    label: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOptGroupElement: {\n    prototype: HTMLOptGroupElement;\n    new(): HTMLOptGroupElement;\n};\n\n/**\n * <option> elements and inherits all classes and methods of the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement)\n */\ninterface HTMLOptionElement extends HTMLElement {\n    /**\n     * Sets or retrieves the status of an option.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/defaultSelected)\n     */\n    defaultSelected: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/disabled) */\n    disabled: boolean;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /**\n     * Sets or retrieves the ordinal position of an option in a list box.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/index)\n     */\n    readonly index: number;\n    /**\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/label)\n     */\n    label: string;\n    /**\n     * Sets or retrieves whether the option in the list box is the default item.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/selected)\n     */\n    selected: boolean;\n    /**\n     * Sets or retrieves the text string specified by the option tag.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/text)\n     */\n    text: string;\n    /**\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionElement/value)\n     */\n    value: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOptionElement: {\n    prototype: HTMLOptionElement;\n    new(): HTMLOptionElement;\n};\n\n/**\n * HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order) and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the "options" property of select.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection)\n */\ninterface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {\n    /**\n     * Returns the number of elements in the collection.\n     *\n     * When set to a smaller number, truncates the number of option elements in the corresponding container.\n     *\n     * When set to a greater number, adds new blank option elements to that container.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/length)\n     */\n    length: number;\n    /**\n     * Returns the index of the first selected item, if any, or −1 if there is no selected item.\n     *\n     * Can be set, to change the selection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/selectedIndex)\n     */\n    selectedIndex: number;\n    /**\n     * Inserts element before the node given by before.\n     *\n     * The before argument can be a number, in which case element is inserted before the item with that number, or an element from the collection, in which case element is inserted before that element.\n     *\n     * If before is omitted, null, or a number out of range, then element will be added at the end of the list.\n     *\n     * This method will throw a "HierarchyRequestError" DOMException if element is an ancestor of the element into which it is to be inserted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/add)\n     */\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\n    /**\n     * Removes the item with index index from the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOptionsCollection/remove)\n     */\n    remove(index: number): void;\n}\n\ndeclare var HTMLOptionsCollection: {\n    prototype: HTMLOptionsCollection;\n    new(): HTMLOptionsCollection;\n};\n\ninterface HTMLOrSVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus) */\n    autofocus: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset) */\n    readonly dataset: DOMStringMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce) */\n    nonce?: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex) */\n    tabIndex: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur) */\n    blur(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus) */\n    focus(options?: FocusOptions): void;\n}\n\n/**\n * Provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of <output> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement)\n */\ninterface HTMLOutputElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/defaultValue) */\n    defaultValue: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/form) */\n    readonly form: HTMLFormElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/htmlFor) */\n    get htmlFor(): DOMTokenList;\n    set htmlFor(value: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/name) */\n    name: string;\n    /**\n     * Returns the string "output".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/type)\n     */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/validationMessage) */\n    readonly validationMessage: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/validity) */\n    readonly validity: ValidityState;\n    /**\n     * Returns the element\'s current value.\n     *\n     * Can be set, to change the value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/value)\n     */\n    value: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/willValidate) */\n    readonly willValidate: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/checkValidity) */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/reportValidity) */\n    reportValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLOutputElement/setCustomValidity) */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOutputElement: {\n    prototype: HTMLOutputElement;\n    new(): HTMLOutputElement;\n};\n\n/**\n * Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <p> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLParagraphElement)\n */\ninterface HTMLParagraphElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLParagraphElement: {\n    prototype: HTMLParagraphElement;\n    new(): HTMLParagraphElement;\n};\n\n/**\n * Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <param> elements, representing a pair of a key and a value that acts as a parameter for an <object> element.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLParamElement)\n */\ninterface HTMLParamElement extends HTMLElement {\n    /**\n     * Sets or retrieves the name of an input parameter for an element.\n     * @deprecated\n     */\n    name: string;\n    /**\n     * Sets or retrieves the content type of the resource designated by the value attribute.\n     * @deprecated\n     */\n    type: string;\n    /**\n     * Sets or retrieves the value of an input parameter for an element.\n     * @deprecated\n     */\n    value: string;\n    /**\n     * Sets or retrieves the data type of the value attribute.\n     * @deprecated\n     */\n    valueType: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLParamElement: {\n    prototype: HTMLParamElement;\n    new(): HTMLParamElement;\n};\n\n/**\n * A <picture> HTML element. It doesn\'t implement specific properties or methods.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLPictureElement)\n */\ninterface HTMLPictureElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLPictureElement: {\n    prototype: HTMLPictureElement;\n    new(): HTMLPictureElement;\n};\n\n/**\n * Exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text (<pre>).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLPreElement)\n */\ninterface HTMLPreElement extends HTMLElement {\n    /**\n     * Sets or gets a value that you can use to implement your own width functionality for the object.\n     * @deprecated\n     */\n    width: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLPreElement: {\n    prototype: HTMLPreElement;\n    new(): HTMLPreElement;\n};\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <progress> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement)\n */\ninterface HTMLProgressElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /**\n     * Defines the maximum, or "done" value for a progress element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/max)\n     */\n    max: number;\n    /**\n     * Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/position)\n     */\n    readonly position: number;\n    /**\n     * Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLProgressElement/value)\n     */\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLProgressElement: {\n    prototype: HTMLProgressElement;\n    new(): HTMLProgressElement;\n};\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like <blockquote> and <q>, but not the <cite> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement)\n */\ninterface HTMLQuoteElement extends HTMLElement {\n    /**\n     * Sets or retrieves reference information about the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLQuoteElement/cite)\n     */\n    cite: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLQuoteElement: {\n    prototype: HTMLQuoteElement;\n    new(): HTMLQuoteElement;\n};\n\n/**\n * HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement)\n */\ninterface HTMLScriptElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/async) */\n    async: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/blocking) */\n    get blocking(): DOMTokenList;\n    set blocking(value: string);\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/crossOrigin) */\n    crossOrigin: string | null;\n    /**\n     * Sets or retrieves the status of the script.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/defer)\n     */\n    defer: boolean;\n    /**\n     * Sets or retrieves the event for which the script is written.\n     * @deprecated\n     */\n    event: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/fetchPriority) */\n    fetchPriority: "high" | "low" | "auto";\n    /**\n     * Sets or retrieves the object that is bound to the event script.\n     * @deprecated\n     */\n    htmlFor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/integrity) */\n    integrity: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/noModule) */\n    noModule: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/referrerPolicy) */\n    referrerPolicy: string;\n    /**\n     * Retrieves the URL to an external file that contains the source code or data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/src)\n     */\n    src: string;\n    /**\n     * Retrieves or sets the text of the object as a string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/text)\n     */\n    text: string;\n    /**\n     * Sets or retrieves the MIME type for the associated scripting engine.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/type)\n     */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLScriptElement: {\n    prototype: HTMLScriptElement;\n    new(): HTMLScriptElement;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLScriptElement/supports_static) */\n    supports(type: string): boolean;\n};\n\n/**\n * A <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement)\n */\ninterface HTMLSelectElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/autocomplete) */\n    autocomplete: AutoFill;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/disabled) */\n    disabled: boolean;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /**\n     * Sets or retrieves the number of objects in a collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/length)\n     */\n    length: number;\n    /**\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/multiple)\n     */\n    multiple: boolean;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/name)\n     */\n    name: string;\n    /**\n     * Returns an HTMLOptionsCollection of the list of options.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/options)\n     */\n    readonly options: HTMLOptionsCollection;\n    /**\n     * When present, marks an element that can\'t be submitted without a value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/required)\n     */\n    required: boolean;\n    /**\n     * Sets or retrieves the index of the selected option in a select object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/selectedIndex)\n     */\n    selectedIndex: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/selectedOptions) */\n    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;\n    /**\n     * Sets or retrieves the number of rows in the list box.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/size)\n     */\n    size: number;\n    /**\n     * Retrieves the type of select control based on the value of the MULTIPLE attribute.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/type)\n     */\n    readonly type: "select-one" | "select-multiple";\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/value)\n     */\n    value: string;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Adds an element to the areas, controlRange, or options collection.\n     * @param element Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.\n     * @param before Variant of type Object that specifies an element to insert before, or null to append the object to the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/add)\n     */\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /**\n     * Retrieves a select object or an object from an options collection.\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is an integer, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/item)\n     */\n    item(index: number): HTMLOptionElement | null;\n    /**\n     * Retrieves a select object or an object from an options collection.\n     * @param namedItem A String that specifies the name or id property of the object to retrieve. A collection is returned if more than one match is made.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/namedItem)\n     */\n    namedItem(name: string): HTMLOptionElement | null;\n    /**\n     * Removes an element from the collection.\n     * @param index Number that specifies the zero-based index of the element to remove from the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/remove)\n     */\n    remove(): void;\n    remove(index: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSelectElement/showPicker) */\n    showPicker(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [name: number]: HTMLOptionElement | HTMLOptGroupElement;\n}\n\ndeclare var HTMLSelectElement: {\n    prototype: HTMLSelectElement;\n    new(): HTMLSelectElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement) */\ninterface HTMLSlotElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/name) */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assign) */\n    assign(...nodes: (Element | Text)[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assignedElements) */\n    assignedElements(options?: AssignedNodesOptions): Element[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/assignedNodes) */\n    assignedNodes(options?: AssignedNodesOptions): Node[];\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSlotElement: {\n    prototype: HTMLSlotElement;\n    new(): HTMLSlotElement;\n};\n\n/**\n * Provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating <source> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement)\n */\ninterface HTMLSourceElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/height) */\n    height: number;\n    /**\n     * Gets or sets the intended media type of the media source.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/media)\n     */\n    media: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/sizes) */\n    sizes: string;\n    /**\n     * The address or URL of the a media resource that is to be considered.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/src)\n     */\n    src: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/srcset) */\n    srcset: string;\n    /**\n     * Gets or sets the MIME type of a media resource.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/type)\n     */\n    type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSourceElement/width) */\n    width: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSourceElement: {\n    prototype: HTMLSourceElement;\n    new(): HTMLSourceElement;\n};\n\n/**\n * A <span> element and derives from the HTMLElement interface, but without implementing any additional properties or methods.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSpanElement)\n */\ninterface HTMLSpanElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSpanElement: {\n    prototype: HTMLSpanElement;\n    new(): HTMLSpanElement;\n};\n\n/**\n * A <style> element. It inherits properties and methods from its parent, HTMLElement, and from LinkStyle.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement)\n */\ninterface HTMLStyleElement extends HTMLElement, LinkStyle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/blocking) */\n    get blocking(): DOMTokenList;\n    set blocking(value: string);\n    /**\n     * Enables or disables the style sheet.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/disabled)\n     */\n    disabled: boolean;\n    /**\n     * Sets or retrieves the media type.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/media)\n     */\n    media: string;\n    /**\n     * Retrieves the CSS language in which the style sheet is written.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLStyleElement/type)\n     */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLStyleElement: {\n    prototype: HTMLStyleElement;\n    new(): HTMLStyleElement;\n};\n\n/**\n * Special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table caption elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCaptionElement)\n */\ninterface HTMLTableCaptionElement extends HTMLElement {\n    /**\n     * Sets or retrieves the alignment of the caption or legend.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCaptionElement/align)\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableCaptionElement: {\n    prototype: HTMLTableCaptionElement;\n    new(): HTMLTableCaptionElement;\n};\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement)\n */\ninterface HTMLTableCellElement extends HTMLElement {\n    /**\n     * Sets or retrieves abbreviated text for the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/abbr)\n     */\n    abbr: string;\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/align)\n     */\n    align: string;\n    /**\n     * Sets or retrieves a comma-delimited list of conceptual categories associated with the object.\n     * @deprecated\n     */\n    axis: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/bgColor)\n     */\n    bgColor: string;\n    /**\n     * Retrieves the position of the object in the cells collection of a row.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/cellIndex)\n     */\n    readonly cellIndex: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/ch)\n     */\n    ch: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/chOff)\n     */\n    chOff: string;\n    /**\n     * Sets or retrieves the number columns in the table that the object should span.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/colSpan)\n     */\n    colSpan: number;\n    /**\n     * Sets or retrieves a list of header cells that provide information for the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/headers)\n     */\n    headers: string;\n    /**\n     * Sets or retrieves the height of the object.\n     * @deprecated\n     */\n    height: string;\n    /**\n     * Sets or retrieves whether the browser automatically performs wordwrap.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/noWrap)\n     */\n    noWrap: boolean;\n    /**\n     * Sets or retrieves how many rows in a table the cell should span.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/rowSpan)\n     */\n    rowSpan: number;\n    /**\n     * Sets or retrieves the group of cells in a table to which the object\'s information applies.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/scope)\n     */\n    scope: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableCellElement/vAlign)\n     */\n    vAlign: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableCellElement: {\n    prototype: HTMLTableCellElement;\n    new(): HTMLTableCellElement;\n};\n\n/**\n * Provides special properties (beyond the HTMLElement interface it also has available to it inheritance) for manipulating single or grouped table column elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement)\n */\ninterface HTMLTableColElement extends HTMLElement {\n    /**\n     * Sets or retrieves the alignment of the object relative to the display or table.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/align)\n     */\n    align: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/ch)\n     */\n    ch: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/chOff)\n     */\n    chOff: string;\n    /**\n     * Sets or retrieves the number of columns in the group.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/span)\n     */\n    span: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableColElement/vAlign)\n     */\n    vAlign: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableColElement: {\n    prototype: HTMLTableColElement;\n    new(): HTMLTableColElement;\n};\n\n/** @deprecated prefer HTMLTableCellElement */\ninterface HTMLTableDataCellElement extends HTMLTableCellElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/**\n * Provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement)\n */\ninterface HTMLTableElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/align)\n     */\n    align: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/bgColor)\n     */\n    bgColor: string;\n    /**\n     * Sets or retrieves the width of the border to draw around the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/border)\n     */\n    border: string;\n    /**\n     * Retrieves the caption object of a table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/caption)\n     */\n    caption: HTMLTableCaptionElement | null;\n    /**\n     * Sets or retrieves the amount of space between the border of the cell and the content of the cell.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/cellPadding)\n     */\n    cellPadding: string;\n    /**\n     * Sets or retrieves the amount of space between cells in a table.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/cellSpacing)\n     */\n    cellSpacing: string;\n    /**\n     * Sets or retrieves the way the border frame around the table is displayed.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/frame)\n     */\n    frame: string;\n    /**\n     * Sets or retrieves the number of horizontal rows contained in the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/rows)\n     */\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\n    /**\n     * Sets or retrieves which dividing lines (inner borders) are displayed.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/rules)\n     */\n    rules: string;\n    /**\n     * Sets or retrieves a description and/or structure of the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/summary)\n     */\n    summary: string;\n    /**\n     * Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tBodies)\n     */\n    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;\n    /**\n     * Retrieves the tFoot object of the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tFoot)\n     */\n    tFoot: HTMLTableSectionElement | null;\n    /**\n     * Retrieves the tHead object of the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/tHead)\n     */\n    tHead: HTMLTableSectionElement | null;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/width)\n     */\n    width: string;\n    /**\n     * Creates an empty caption element in the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createCaption)\n     */\n    createCaption(): HTMLTableCaptionElement;\n    /**\n     * Creates an empty tBody element in the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTBody)\n     */\n    createTBody(): HTMLTableSectionElement;\n    /**\n     * Creates an empty tFoot element in the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTFoot)\n     */\n    createTFoot(): HTMLTableSectionElement;\n    /**\n     * Returns the tHead element object if successful, or null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/createTHead)\n     */\n    createTHead(): HTMLTableSectionElement;\n    /**\n     * Deletes the caption element and its contents from the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteCaption)\n     */\n    deleteCaption(): void;\n    /**\n     * Removes the specified row (tr) from the element and from the rows collection.\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteRow)\n     */\n    deleteRow(index: number): void;\n    /**\n     * Deletes the tFoot element and its contents from the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteTFoot)\n     */\n    deleteTFoot(): void;\n    /**\n     * Deletes the tHead element and its contents from the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/deleteTHead)\n     */\n    deleteTHead(): void;\n    /**\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableElement/insertRow)\n     */\n    insertRow(index?: number): HTMLTableRowElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableElement: {\n    prototype: HTMLTableElement;\n    new(): HTMLTableElement;\n};\n\n/** @deprecated prefer HTMLTableCellElement */\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/**\n * Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement)\n */\ninterface HTMLTableRowElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/align)\n     */\n    align: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/bgColor)\n     */\n    bgColor: string;\n    /**\n     * Retrieves a collection of all cells in the table row.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/cells)\n     */\n    readonly cells: HTMLCollectionOf<HTMLTableCellElement>;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/ch)\n     */\n    ch: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/chOff)\n     */\n    chOff: string;\n    /**\n     * Retrieves the position of the object in the rows collection for the table.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/rowIndex)\n     */\n    readonly rowIndex: number;\n    /**\n     * Retrieves the position of the object in the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/sectionRowIndex)\n     */\n    readonly sectionRowIndex: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/vAlign)\n     */\n    vAlign: string;\n    /**\n     * Removes the specified cell from the table row, as well as from the cells collection.\n     * @param index Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/deleteCell)\n     */\n    deleteCell(index: number): void;\n    /**\n     * Creates a new cell in the table row, and adds the cell to the cells collection.\n     * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableRowElement/insertCell)\n     */\n    insertCell(index?: number): HTMLTableCellElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableRowElement: {\n    prototype: HTMLTableRowElement;\n    new(): HTMLTableRowElement;\n};\n\n/**\n * Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement)\n */\ninterface HTMLTableSectionElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/align)\n     */\n    align: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/ch)\n     */\n    ch: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/chOff)\n     */\n    chOff: string;\n    /**\n     * Sets or retrieves the number of horizontal rows contained in the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/rows)\n     */\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/vAlign)\n     */\n    vAlign: string;\n    /**\n     * Removes the specified row (tr) from the element and from the rows collection.\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/deleteRow)\n     */\n    deleteRow(index: number): void;\n    /**\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTableSectionElement/insertRow)\n     */\n    insertRow(index?: number): HTMLTableRowElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableSectionElement: {\n    prototype: HTMLTableSectionElement;\n    new(): HTMLTableSectionElement;\n};\n\n/**\n * Enables access to the contents of an HTML <template> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement)\n */\ninterface HTMLTemplateElement extends HTMLElement {\n    /**\n     * Returns the template contents (a DocumentFragment).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/content)\n     */\n    readonly content: DocumentFragment;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootClonable) */\n    shadowRootClonable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootDelegatesFocus) */\n    shadowRootDelegatesFocus: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootMode) */\n    shadowRootMode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTemplateElement/shadowRootSerializable) */\n    shadowRootSerializable: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTemplateElement: {\n    prototype: HTMLTemplateElement;\n    new(): HTMLTemplateElement;\n};\n\n/**\n * Provides special properties and methods for manipulating the layout and presentation of <textarea> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement)\n */\ninterface HTMLTextAreaElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/autocomplete) */\n    autocomplete: AutoFill;\n    /**\n     * Sets or retrieves the width of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/cols)\n     */\n    cols: number;\n    /**\n     * Sets or retrieves the initial contents of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/defaultValue)\n     */\n    defaultValue: string;\n    dirName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/disabled) */\n    disabled: boolean;\n    /**\n     * Retrieves a reference to the form that the object is embedded in.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/form)\n     */\n    readonly form: HTMLFormElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/labels) */\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /**\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/maxLength)\n     */\n    maxLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/minLength) */\n    minLength: number;\n    /**\n     * Sets or retrieves the name of the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/name)\n     */\n    name: string;\n    /**\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/placeholder)\n     */\n    placeholder: string;\n    /**\n     * Sets or retrieves the value indicated whether the content of the object is read-only.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/readOnly)\n     */\n    readOnly: boolean;\n    /**\n     * When present, marks an element that can\'t be submitted without a value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/required)\n     */\n    required: boolean;\n    /**\n     * Sets or retrieves the number of horizontal rows contained in the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/rows)\n     */\n    rows: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionDirection) */\n    selectionDirection: "forward" | "backward" | "none";\n    /**\n     * Gets or sets the end position or offset of a text selection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionEnd)\n     */\n    selectionEnd: number;\n    /**\n     * Gets or sets the starting position or offset of a text selection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/selectionStart)\n     */\n    selectionStart: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/textLength) */\n    readonly textLength: number;\n    /**\n     * Retrieves the type of control.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/type)\n     */\n    readonly type: string;\n    /**\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/validationMessage)\n     */\n    readonly validationMessage: string;\n    /**\n     * Returns a  ValidityState object that represents the validity states of an element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/validity)\n     */\n    readonly validity: ValidityState;\n    /**\n     * Retrieves or sets the text in the entry field of the textArea element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/value)\n     */\n    value: string;\n    /**\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/willValidate)\n     */\n    readonly willValidate: boolean;\n    /**\n     * Sets or retrieves how to handle wordwrapping in the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/wrap)\n     */\n    wrap: string;\n    /**\n     * Returns whether a form will validate when it is submitted, without having to submit it.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/checkValidity)\n     */\n    checkValidity(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/reportValidity) */\n    reportValidity(): boolean;\n    /**\n     * Highlights the input area of a form element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/select)\n     */\n    select(): void;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/setCustomValidity)\n     */\n    setCustomValidity(error: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/setRangeText) */\n    setRangeText(replacement: string): void;\n    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode): void;\n    /**\n     * Sets the start and end positions of a selection in a text field.\n     * @param start The offset into the text field for the start of the selection.\n     * @param end The offset into the text field for the end of the selection.\n     * @param direction The direction in which the selection is performed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTextAreaElement/setSelectionRange)\n     */\n    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTextAreaElement: {\n    prototype: HTMLTextAreaElement;\n    new(): HTMLTextAreaElement;\n};\n\n/**\n * Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <time> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTimeElement)\n */\ninterface HTMLTimeElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTimeElement/dateTime) */\n    dateTime: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTimeElement: {\n    prototype: HTMLTimeElement;\n    new(): HTMLTimeElement;\n};\n\n/**\n * Contains the title for a document. This element inherits all of the properties and methods of the HTMLElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTitleElement)\n */\ninterface HTMLTitleElement extends HTMLElement {\n    /**\n     * Retrieves or sets the text of the object as a string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTitleElement/text)\n     */\n    text: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTitleElement: {\n    prototype: HTMLTitleElement;\n    new(): HTMLTitleElement;\n};\n\n/**\n * The HTMLTrackElement\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement)\n */\ninterface HTMLTrackElement extends HTMLElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/default) */\n    default: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/kind) */\n    kind: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/label) */\n    label: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/readyState) */\n    readonly readyState: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/src) */\n    src: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/srclang) */\n    srclang: string;\n    /**\n     * Returns the TextTrack object corresponding to the text track of the track element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/track)\n     */\n    readonly track: TextTrack;\n    readonly NONE: 0;\n    readonly LOADING: 1;\n    readonly LOADED: 2;\n    readonly ERROR: 3;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTrackElement: {\n    prototype: HTMLTrackElement;\n    new(): HTMLTrackElement;\n    readonly NONE: 0;\n    readonly LOADING: 1;\n    readonly LOADED: 2;\n    readonly ERROR: 3;\n};\n\n/**\n * Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLUListElement)\n */\ninterface HTMLUListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    /** @deprecated */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLUListElement: {\n    prototype: HTMLUListElement;\n    new(): HTMLUListElement;\n};\n\n/**\n * An invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLUnknownElement)\n */\ninterface HTMLUnknownElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLUnknownElement: {\n    prototype: HTMLUnknownElement;\n    new(): HTMLUnknownElement;\n};\n\ninterface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {\n    "enterpictureinpicture": PictureInPictureEvent;\n    "leavepictureinpicture": PictureInPictureEvent;\n}\n\n/**\n * Provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement)\n */\ninterface HTMLVideoElement extends HTMLMediaElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/disablePictureInPicture) */\n    disablePictureInPicture: boolean;\n    /**\n     * Gets or sets the height of the video element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/height)\n     */\n    height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event) */\n    onenterpictureinpicture: ((this: HTMLVideoElement, ev: PictureInPictureEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event) */\n    onleavepictureinpicture: ((this: HTMLVideoElement, ev: PictureInPictureEvent) => any) | null;\n    /** Gets or sets the playsinline of the video element. for example, On iPhone, video elements will now be allowed to play inline, and will not automatically enter fullscreen mode when playback begins. */\n    playsInline: boolean;\n    /**\n     * Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/poster)\n     */\n    poster: string;\n    /**\n     * Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/videoHeight)\n     */\n    readonly videoHeight: number;\n    /**\n     * Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/videoWidth)\n     */\n    readonly videoWidth: number;\n    /**\n     * Gets or sets the width of the video element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/width)\n     */\n    width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/cancelVideoFrameCallback) */\n    cancelVideoFrameCallback(handle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality) */\n    getVideoPlaybackQuality(): VideoPlaybackQuality;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/requestPictureInPicture) */\n    requestPictureInPicture(): Promise<PictureInPictureWindow>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/requestVideoFrameCallback) */\n    requestVideoFrameCallback(callback: VideoFrameRequestCallback): number;\n    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLVideoElement: {\n    prototype: HTMLVideoElement;\n    new(): HTMLVideoElement;\n};\n\n/**\n * Events that fire when the fragment identifier of the URL has changed.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HashChangeEvent)\n */\ninterface HashChangeEvent extends Event {\n    /**\n     * Returns the URL of the session history entry that is now current.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HashChangeEvent/newURL)\n     */\n    readonly newURL: string;\n    /**\n     * Returns the URL of the session history entry that was previously current.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HashChangeEvent/oldURL)\n     */\n    readonly oldURL: string;\n}\n\ndeclare var HashChangeEvent: {\n    prototype: HashChangeEvent;\n    new(type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;\n};\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists\xa0of zero or more name and value pairs. \xa0You can add to this using methods like append() (see Examples.)\xa0In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers)\n */\ninterface Headers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/append) */\n    append(name: string, value: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/delete) */\n    delete(name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/get) */\n    get(name: string): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/getSetCookie) */\n    getSetCookie(): string[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/has) */\n    has(name: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/set) */\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;\n}\n\ndeclare var Headers: {\n    prototype: Headers;\n    new(init?: HeadersInit): Headers;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Highlight) */\ninterface Highlight {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Highlight/priority) */\n    priority: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Highlight/type) */\n    type: HighlightType;\n    forEach(callbackfn: (value: AbstractRange, key: AbstractRange, parent: Highlight) => void, thisArg?: any): void;\n}\n\ndeclare var Highlight: {\n    prototype: Highlight;\n    new(...initialRanges: AbstractRange[]): Highlight;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HighlightRegistry) */\ninterface HighlightRegistry {\n    forEach(callbackfn: (value: Highlight, key: string, parent: HighlightRegistry) => void, thisArg?: any): void;\n}\n\ndeclare var HighlightRegistry: {\n    prototype: HighlightRegistry;\n    new(): HighlightRegistry;\n};\n\n/**\n * Allows\xa0manipulation of\xa0the browser session history, that is the pages visited in the tab or frame that the current page is loaded in.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/History)\n */\ninterface History {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/scrollRestoration) */\n    scrollRestoration: ScrollRestoration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/state) */\n    readonly state: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/back) */\n    back(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/forward) */\n    forward(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/go) */\n    go(delta?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/pushState) */\n    pushState(data: any, unused: string, url?: string | URL | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/History/replaceState) */\n    replaceState(data: any, unused: string, url?: string | URL | null): void;\n}\n\ndeclare var History: {\n    prototype: History;\n    new(): History;\n};\n\n/**\n * This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor)\n */\ninterface IDBCursor {\n    /**\n     * Returns the direction ("next", "nextunique", "prev" or "prevunique") of the cursor.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/direction)\n     */\n    readonly direction: IDBCursorDirection;\n    /**\n     * Returns the key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/key)\n     */\n    readonly key: IDBValidKey;\n    /**\n     * Returns the effective key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/primaryKey)\n     */\n    readonly primaryKey: IDBValidKey;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/request) */\n    readonly request: IDBRequest;\n    /**\n     * Returns the IDBObjectStore or IDBIndex the cursor was opened from.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/source)\n     */\n    readonly source: IDBObjectStore | IDBIndex;\n    /**\n     * Advances the cursor through the next count records in range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/advance)\n     */\n    advance(count: number): void;\n    /**\n     * Advances the cursor to the next record in range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continue)\n     */\n    continue(key?: IDBValidKey): void;\n    /**\n     * Advances the cursor to the next record in range matching or after key and primaryKey. Throws an "InvalidAccessError" DOMException if the source is not an index.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continuePrimaryKey)\n     */\n    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;\n    /**\n     * Delete the record pointed at by the cursor with a new value.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/delete)\n     */\n    delete(): IDBRequest<undefined>;\n    /**\n     * Updated the record pointed at by the cursor with a new value.\n     *\n     * Throws a "DataError" DOMException if the effective object store uses in-line keys and the key would have changed.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)\n     */\n    update(value: any): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new(): IDBCursor;\n};\n\n/**\n * This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue)\n */\ninterface IDBCursorWithValue extends IDBCursor {\n    /**\n     * Returns the cursor\'s current value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)\n     */\n    readonly value: any;\n}\n\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new(): IDBCursorWithValue;\n};\n\ninterface IDBDatabaseEventMap {\n    "abort": Event;\n    "close": Event;\n    "error": Event;\n    "versionchange": IDBVersionChangeEvent;\n}\n\n/**\n * This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase)\n */\ninterface IDBDatabase extends EventTarget {\n    /**\n     * Returns the name of the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/name)\n     */\n    readonly name: string;\n    /**\n     * Returns a list of the names of object stores in the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)\n     */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event) */\n    onclose: ((this: IDBDatabase, ev: Event) => any) | null;\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event) */\n    onversionchange: ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any) | null;\n    /**\n     * Returns the version of the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/version)\n     */\n    readonly version: number;\n    /**\n     * Closes the connection once all running transactions have finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close)\n     */\n    close(): void;\n    /**\n     * Creates a new object store with the given name and options and returns a new IDBObjectStore.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/createObjectStore)\n     */\n    createObjectStore(name: string, options?: IDBObjectStoreParameters): IDBObjectStore;\n    /**\n     * Deletes the object store with the given name.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/deleteObjectStore)\n     */\n    deleteObjectStore(name: string): void;\n    /**\n     * Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)\n     */\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode, options?: IDBTransactionOptions): IDBTransaction;\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new(): IDBDatabase;\n};\n\n/**\n * In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory)\n */\ninterface IDBFactory {\n    /**\n     * Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n     *\n     * Throws a "DataError" DOMException if either input is not a valid key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)\n     */\n    cmp(first: any, second: any): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases) */\n    databases(): Promise<IDBDatabaseInfo[]>;\n    /**\n     * Attempts to delete the named database. If the database already exists and there are open connections that don\'t close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request\'s result will be null.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/deleteDatabase)\n     */\n    deleteDatabase(name: string): IDBOpenDBRequest;\n    /**\n     * Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request\'s result will be the connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/open)\n     */\n    open(name: string, version?: number): IDBOpenDBRequest;\n}\n\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new(): IDBFactory;\n};\n\n/**\n * IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex)\n */\ninterface IDBIndex {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath) */\n    readonly keyPath: string | string[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry) */\n    readonly multiEntry: boolean;\n    /**\n     * Returns the name of the index.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/name)\n     */\n    name: string;\n    /**\n     * Returns the IDBObjectStore the index belongs to.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/objectStore)\n     */\n    readonly objectStore: IDBObjectStore;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/unique) */\n    readonly unique: boolean;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/count)\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAll)\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAllKeys)\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getKey)\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openCursor)\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openKeyCursor)\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n}\n\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new(): IDBIndex;\n};\n\n/**\n * A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs:\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange)\n */\ninterface IDBKeyRange {\n    /**\n     * Returns lower bound, or undefined if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)\n     */\n    readonly lower: any;\n    /**\n     * Returns true if the lower open flag is set, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerOpen)\n     */\n    readonly lowerOpen: boolean;\n    /**\n     * Returns upper bound, or undefined if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)\n     */\n    readonly upper: any;\n    /**\n     * Returns true if the upper open flag is set, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperOpen)\n     */\n    readonly upperOpen: boolean;\n    /**\n     * Returns true if key is included in the range, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)\n     */\n    includes(key: any): boolean;\n}\n\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new(): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning from lower to upper. If lowerOpen is true, lower is not included in the range. If upperOpen is true, upper is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)\n     */\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange starting at key with no upper bound. If open is true, key is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)\n     */\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning only key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)\n     */\n    only(value: any): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)\n     */\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\n};\n\n/**\n * This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex\xa0inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our\xa0To-do Notifications\xa0app (view example live.)\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore)\n */\ninterface IDBObjectStore {\n    /**\n     * Returns true if the store has a key generator, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/autoIncrement)\n     */\n    readonly autoIncrement: boolean;\n    /**\n     * Returns a list of the names of indexes in the store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/indexNames)\n     */\n    readonly indexNames: DOMStringList;\n    /**\n     * Returns the key path of the store, or null if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)\n     */\n    readonly keyPath: string | string[];\n    /**\n     * Returns the name of the store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/name)\n     */\n    name: string;\n    /**\n     * Returns the associated transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/transaction)\n     */\n    readonly transaction: IDBTransaction;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)\n     */\n    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n    /**\n     * Deletes all records in store.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/clear)\n     */\n    clear(): IDBRequest<undefined>;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/count)\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex)\n     */\n    createIndex(name: string, keyPath: string | string[], options?: IDBIndexParameters): IDBIndex;\n    /**\n     * Deletes records in store with the given key or in the given key range in query.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/delete)\n     */\n    delete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;\n    /**\n     * Deletes the index in store with the given name.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/deleteIndex)\n     */\n    deleteIndex(name: string): void;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAll)\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAllKeys)\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getKey)\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/index) */\n    index(name: string): IDBIndex;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openCursor)\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openKeyCursor)\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)\n     */\n    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new(): IDBObjectStore;\n};\n\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\n    "blocked": IDBVersionChangeEvent;\n    "upgradeneeded": IDBVersionChangeEvent;\n}\n\n/**\n * Also inherits methods from its parents IDBRequest and EventTarget.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest)\n */\ninterface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event) */\n    onblocked: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event) */\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new(): IDBOpenDBRequest;\n};\n\ninterface IDBRequestEventMap {\n    "error": Event;\n    "success": Event;\n}\n\n/**\n * The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)\n */\ninterface IDBRequest<T = any> extends EventTarget {\n    /**\n     * When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error)\n     */\n    readonly error: DOMException | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event) */\n    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event) */\n    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /**\n     * Returns "pending" until a request is complete, then returns "done".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/readyState)\n     */\n    readonly readyState: IDBRequestReadyState;\n    /**\n     * When a request is completed, returns the result, or undefined if the request failed. Throws a "InvalidStateError" DOMException if the request is still pending.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/result)\n     */\n    readonly result: T;\n    /**\n     * Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/source)\n     */\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\n    /**\n     * Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/transaction)\n     */\n    readonly transaction: IDBTransaction | null;\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new(): IDBRequest;\n};\n\ninterface IDBTransactionEventMap {\n    "abort": Event;\n    "complete": Event;\n    "error": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction) */\ninterface IDBTransaction extends EventTarget {\n    /**\n     * Returns the transaction\'s connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/db)\n     */\n    readonly db: IDBDatabase;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/durability) */\n    readonly durability: IDBTransactionDurability;\n    /**\n     * If the transaction was aborted, returns the error (a DOMException) providing the reason.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error)\n     */\n    readonly error: DOMException | null;\n    /**\n     * Returns the mode the transaction was created with ("readonly" or "readwrite"), or "versionchange" for an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/mode)\n     */\n    readonly mode: IDBTransactionMode;\n    /**\n     * Returns a list of the names of object stores in the transaction\'s scope. For an upgrade transaction this is all object stores in the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStoreNames)\n     */\n    readonly objectStoreNames: DOMStringList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event) */\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event) */\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event) */\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\n    /**\n     * Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort)\n     */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/commit) */\n    commit(): void;\n    /**\n     * Returns an IDBObjectStore in the transaction\'s scope.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStore)\n     */\n    objectStore(name: string): IDBObjectStore;\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new(): IDBTransaction;\n};\n\n/**\n * This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent)\n */\ninterface IDBVersionChangeEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/newVersion) */\n    readonly newVersion: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/oldVersion) */\n    readonly oldVersion: number;\n}\n\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new(type: string, eventInitDict?: IDBVersionChangeEventInit): IDBVersionChangeEvent;\n};\n\n/**\n * The\xa0IIRFilterNode\xa0interface of the\xa0Web Audio API\xa0is a AudioNode processor which implements a general infinite impulse response (IIR)\xa0 filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IIRFilterNode)\n */\ninterface IIRFilterNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IIRFilterNode/getFrequencyResponse) */\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\n}\n\ndeclare var IIRFilterNode: {\n    prototype: IIRFilterNode;\n    new(context: BaseAudioContext, options: IIRFilterOptions): IIRFilterNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IdleDeadline) */\ninterface IdleDeadline {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IdleDeadline/didTimeout) */\n    readonly didTimeout: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IdleDeadline/timeRemaining) */\n    timeRemaining(): DOMHighResTimeStamp;\n}\n\ndeclare var IdleDeadline: {\n    prototype: IdleDeadline;\n    new(): IdleDeadline;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap) */\ninterface ImageBitmap {\n    /**\n     * Returns the intrinsic height of the image, in CSS pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/height)\n     */\n    readonly height: number;\n    /**\n     * Returns the intrinsic width of the image, in CSS pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/width)\n     */\n    readonly width: number;\n    /**\n     * Releases imageBitmap\'s underlying bitmap data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/close)\n     */\n    close(): void;\n}\n\ndeclare var ImageBitmap: {\n    prototype: ImageBitmap;\n    new(): ImageBitmap;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext) */\ninterface ImageBitmapRenderingContext {\n    /**\n     * Returns the canvas element that the context is bound to.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext/canvas)\n     */\n    readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n    /**\n     * Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap)\n     */\n    transferFromImageBitmap(bitmap: ImageBitmap | null): void;\n}\n\ndeclare var ImageBitmapRenderingContext: {\n    prototype: ImageBitmapRenderingContext;\n    new(): ImageBitmapRenderingContext;\n};\n\n/**\n * The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData)\n */\ninterface ImageData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/colorSpace) */\n    readonly colorSpace: PredefinedColorSpace;\n    /**\n     * Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/data)\n     */\n    readonly data: Uint8ClampedArray;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/height)\n     */\n    readonly height: number;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/width)\n     */\n    readonly width: number;\n}\n\ndeclare var ImageData: {\n    prototype: ImageData;\n    new(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    new(data: Uint8ClampedArray, sw: number, sh?: number, settings?: ImageDataSettings): ImageData;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder)\n */\ninterface ImageDecoder {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/complete) */\n    readonly complete: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/completed) */\n    readonly completed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/tracks) */\n    readonly tracks: ImageTrackList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/decode) */\n    decode(options?: ImageDecodeOptions): Promise<ImageDecodeResult>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/reset) */\n    reset(): void;\n}\n\ndeclare var ImageDecoder: {\n    prototype: ImageDecoder;\n    new(init: ImageDecoderInit): ImageDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/isTypeSupported_static) */\n    isTypeSupported(type: string): Promise<boolean>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack) */\ninterface ImageTrack {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/animated) */\n    readonly animated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/frameCount) */\n    readonly frameCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/repetitionCount) */\n    readonly repetitionCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/selected) */\n    selected: boolean;\n}\n\ndeclare var ImageTrack: {\n    prototype: ImageTrack;\n    new(): ImageTrack;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList) */\ninterface ImageTrackList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedIndex) */\n    readonly selectedIndex: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedTrack) */\n    readonly selectedTrack: ImageTrack | null;\n    [index: number]: ImageTrack;\n}\n\ndeclare var ImageTrackList: {\n    prototype: ImageTrackList;\n    new(): ImageTrackList;\n};\n\ninterface ImportMeta {\n    url: string;\n    resolve(specifier: string): string;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputDeviceInfo)\n */\ninterface InputDeviceInfo extends MediaDeviceInfo {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputDeviceInfo/getCapabilities) */\n    getCapabilities(): MediaTrackCapabilities;\n}\n\ndeclare var InputDeviceInfo: {\n    prototype: InputDeviceInfo;\n    new(): InputDeviceInfo;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent) */\ninterface InputEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/data) */\n    readonly data: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/dataTransfer) */\n    readonly dataTransfer: DataTransfer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/inputType) */\n    readonly inputType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/isComposing) */\n    readonly isComposing: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/InputEvent/getTargetRanges) */\n    getTargetRanges(): StaticRange[];\n}\n\ndeclare var InputEvent: {\n    prototype: InputEvent;\n    new(type: string, eventInitDict?: InputEventInit): InputEvent;\n};\n\n/**\n * provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document\'s viewport.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver)\n */\ninterface IntersectionObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/root) */\n    readonly root: Element | Document | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/rootMargin) */\n    readonly rootMargin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/thresholds) */\n    readonly thresholds: ReadonlyArray<number>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/observe) */\n    observe(target: Element): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/takeRecords) */\n    takeRecords(): IntersectionObserverEntry[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserver/unobserve) */\n    unobserve(target: Element): void;\n}\n\ndeclare var IntersectionObserver: {\n    prototype: IntersectionObserver;\n    new(callback: IntersectionObserverCallback, options?: IntersectionObserverInit): IntersectionObserver;\n};\n\n/**\n * This Intersection Observer API interface describes the intersection between the target element and its root container at a specific moment of transition.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry)\n */\ninterface IntersectionObserverEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/boundingClientRect) */\n    readonly boundingClientRect: DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/intersectionRatio) */\n    readonly intersectionRatio: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/intersectionRect) */\n    readonly intersectionRect: DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/isIntersecting) */\n    readonly isIntersecting: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/rootBounds) */\n    readonly rootBounds: DOMRectReadOnly | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/target) */\n    readonly target: Element;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IntersectionObserverEntry/time) */\n    readonly time: DOMHighResTimeStamp;\n}\n\ndeclare var IntersectionObserverEntry: {\n    prototype: IntersectionObserverEntry;\n    new(): IntersectionObserverEntry;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KHR_parallel_shader_compile) */\ninterface KHR_parallel_shader_compile {\n    readonly COMPLETION_STATUS_KHR: 0x91B1;\n}\n\n/**\n * KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent)\n */\ninterface KeyboardEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/altKey) */\n    readonly altKey: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/charCode)\n     */\n    readonly charCode: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/code) */\n    readonly code: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/ctrlKey) */\n    readonly ctrlKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/isComposing) */\n    readonly isComposing: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/key) */\n    readonly key: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/keyCode)\n     */\n    readonly keyCode: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/location) */\n    readonly location: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/metaKey) */\n    readonly metaKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/repeat) */\n    readonly repeat: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/shiftKey) */\n    readonly shiftKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/getModifierState) */\n    getModifierState(keyArg: string): boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyboardEvent/initKeyboardEvent)\n     */\n    initKeyboardEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: Window | null, keyArg?: string, locationArg?: number, ctrlKey?: boolean, altKey?: boolean, shiftKey?: boolean, metaKey?: boolean): void;\n    readonly DOM_KEY_LOCATION_STANDARD: 0x00;\n    readonly DOM_KEY_LOCATION_LEFT: 0x01;\n    readonly DOM_KEY_LOCATION_RIGHT: 0x02;\n    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;\n}\n\ndeclare var KeyboardEvent: {\n    prototype: KeyboardEvent;\n    new(type: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;\n    readonly DOM_KEY_LOCATION_STANDARD: 0x00;\n    readonly DOM_KEY_LOCATION_LEFT: 0x01;\n    readonly DOM_KEY_LOCATION_RIGHT: 0x02;\n    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect) */\ninterface KeyframeEffect extends AnimationEffect {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/composite) */\n    composite: CompositeOperation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/iterationComposite) */\n    iterationComposite: IterationCompositeOperation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/pseudoElement) */\n    pseudoElement: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/target) */\n    target: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/getKeyframes) */\n    getKeyframes(): ComputedKeyframe[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KeyframeEffect/setKeyframes) */\n    setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void;\n}\n\ndeclare var KeyframeEffect: {\n    prototype: KeyframeEffect;\n    new(target: Element | null, keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeEffectOptions): KeyframeEffect;\n    new(source: KeyframeEffect): KeyframeEffect;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint) */\ninterface LargestContentfulPaint extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/element) */\n    readonly element: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/loadTime) */\n    readonly loadTime: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/renderTime) */\n    readonly renderTime: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/url) */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LargestContentfulPaint/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var LargestContentfulPaint: {\n    prototype: LargestContentfulPaint;\n    new(): LargestContentfulPaint;\n};\n\ninterface LinkStyle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLLinkElement/sheet) */\n    readonly sheet: CSSStyleSheet | null;\n}\n\n/**\n * The location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Document.location and Window.location respectively.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location)\n */\ninterface Location {\n    /**\n     * Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/ancestorOrigins)\n     */\n    readonly ancestorOrigins: DOMStringList;\n    /**\n     * Returns the Location object\'s URL\'s fragment (includes leading "#" if non-empty).\n     *\n     * Can be set, to navigate to the same URL with a changed fragment (ignores leading "#").\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/hash)\n     */\n    hash: string;\n    /**\n     * Returns the Location object\'s URL\'s host and port (if different from the default port for the scheme).\n     *\n     * Can be set, to navigate to the same URL with a changed host and port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/host)\n     */\n    host: string;\n    /**\n     * Returns the Location object\'s URL\'s host.\n     *\n     * Can be set, to navigate to the same URL with a changed host.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/hostname)\n     */\n    hostname: string;\n    /**\n     * Returns the Location object\'s URL.\n     *\n     * Can be set, to navigate to the given URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/href)\n     */\n    href: string;\n    toString(): string;\n    /**\n     * Returns the Location object\'s URL\'s origin.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/origin)\n     */\n    readonly origin: string;\n    /**\n     * Returns the Location object\'s URL\'s path.\n     *\n     * Can be set, to navigate to the same URL with a changed path.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/pathname)\n     */\n    pathname: string;\n    /**\n     * Returns the Location object\'s URL\'s port.\n     *\n     * Can be set, to navigate to the same URL with a changed port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/port)\n     */\n    port: string;\n    /**\n     * Returns the Location object\'s URL\'s scheme.\n     *\n     * Can be set, to navigate to the same URL with a changed scheme.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/protocol)\n     */\n    protocol: string;\n    /**\n     * Returns the Location object\'s URL\'s query (includes leading "?" if non-empty).\n     *\n     * Can be set, to navigate to the same URL with a changed query (ignores leading "?").\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/search)\n     */\n    search: string;\n    /**\n     * Navigates to the given URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/assign)\n     */\n    assign(url: string | URL): void;\n    /**\n     * Reloads the current page.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/reload)\n     */\n    reload(): void;\n    /**\n     * Removes the current page from the session history and navigates to the given URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Location/replace)\n     */\n    replace(url: string | URL): void;\n}\n\ndeclare var Location: {\n    prototype: Location;\n    new(): Location;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock)\n */\ninterface Lock {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/mode) */\n    readonly mode: LockMode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/name) */\n    readonly name: string;\n}\n\ndeclare var Lock: {\n    prototype: Lock;\n    new(): Lock;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager)\n */\ninterface LockManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/query) */\n    query(): Promise<LockManagerSnapshot>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request) */\n    request(name: string, callback: LockGrantedCallback): Promise<any>;\n    request(name: string, options: LockOptions, callback: LockGrantedCallback): Promise<any>;\n}\n\ndeclare var LockManager: {\n    prototype: LockManager;\n    new(): LockManager;\n};\n\ninterface MIDIAccessEventMap {\n    "statechange": MIDIConnectionEvent;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess)\n */\ninterface MIDIAccess extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/inputs) */\n    readonly inputs: MIDIInputMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/statechange_event) */\n    onstatechange: ((this: MIDIAccess, ev: MIDIConnectionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/outputs) */\n    readonly outputs: MIDIOutputMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIAccess/sysexEnabled) */\n    readonly sysexEnabled: boolean;\n    addEventListener<K extends keyof MIDIAccessEventMap>(type: K, listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MIDIAccessEventMap>(type: K, listener: (this: MIDIAccess, ev: MIDIAccessEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MIDIAccess: {\n    prototype: MIDIAccess;\n    new(): MIDIAccess;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIConnectionEvent)\n */\ninterface MIDIConnectionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIConnectionEvent/port) */\n    readonly port: MIDIPort | null;\n}\n\ndeclare var MIDIConnectionEvent: {\n    prototype: MIDIConnectionEvent;\n    new(type: string, eventInitDict?: MIDIConnectionEventInit): MIDIConnectionEvent;\n};\n\ninterface MIDIInputEventMap extends MIDIPortEventMap {\n    "midimessage": MIDIMessageEvent;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIInput)\n */\ninterface MIDIInput extends MIDIPort {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIInput/midimessage_event) */\n    onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => any) | null;\n    addEventListener<K extends keyof MIDIInputEventMap>(type: K, listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MIDIInputEventMap>(type: K, listener: (this: MIDIInput, ev: MIDIInputEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MIDIInput: {\n    prototype: MIDIInput;\n    new(): MIDIInput;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIInputMap)\n */\ninterface MIDIInputMap {\n    forEach(callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void, thisArg?: any): void;\n}\n\ndeclare var MIDIInputMap: {\n    prototype: MIDIInputMap;\n    new(): MIDIInputMap;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIMessageEvent)\n */\ninterface MIDIMessageEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIMessageEvent/data) */\n    readonly data: Uint8Array | null;\n}\n\ndeclare var MIDIMessageEvent: {\n    prototype: MIDIMessageEvent;\n    new(type: string, eventInitDict?: MIDIMessageEventInit): MIDIMessageEvent;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput)\n */\ninterface MIDIOutput extends MIDIPort {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput/send) */\n    send(data: number[], timestamp?: DOMHighResTimeStamp): void;\n    addEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIOutput, ev: MIDIPortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MIDIOutput: {\n    prototype: MIDIOutput;\n    new(): MIDIOutput;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutputMap)\n */\ninterface MIDIOutputMap {\n    forEach(callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void, thisArg?: any): void;\n}\n\ndeclare var MIDIOutputMap: {\n    prototype: MIDIOutputMap;\n    new(): MIDIOutputMap;\n};\n\ninterface MIDIPortEventMap {\n    "statechange": MIDIConnectionEvent;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort)\n */\ninterface MIDIPort extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/connection) */\n    readonly connection: MIDIPortConnectionState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/manufacturer) */\n    readonly manufacturer: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/name) */\n    readonly name: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/statechange_event) */\n    onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/state) */\n    readonly state: MIDIPortDeviceState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/type) */\n    readonly type: MIDIPortType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/version) */\n    readonly version: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/close) */\n    close(): Promise<MIDIPort>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIPort/open) */\n    open(): Promise<MIDIPort>;\n    addEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIPort, ev: MIDIPortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MIDIPort: {\n    prototype: MIDIPort;\n    new(): MIDIPort;\n};\n\ninterface MathMLElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MathMLElement) */\ninterface MathMLElement extends Element, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGElement {\n    addEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MathMLElement: {\n    prototype: MathMLElement;\n    new(): MathMLElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities) */\ninterface MediaCapabilities {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/decodingInfo) */\n    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingInfo>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/encodingInfo) */\n    encodingInfo(configuration: MediaEncodingConfiguration): Promise<MediaCapabilitiesEncodingInfo>;\n}\n\ndeclare var MediaCapabilities: {\n    prototype: MediaCapabilities;\n    new(): MediaCapabilities;\n};\n\n/**\n * The MediaDevicesInfo interface contains information that describes a single media input or output device.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo)\n */\ninterface MediaDeviceInfo {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/deviceId) */\n    readonly deviceId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/groupId) */\n    readonly groupId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/kind) */\n    readonly kind: MediaDeviceKind;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/label) */\n    readonly label: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDeviceInfo/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var MediaDeviceInfo: {\n    prototype: MediaDeviceInfo;\n    new(): MediaDeviceInfo;\n};\n\ninterface MediaDevicesEventMap {\n    "devicechange": Event;\n}\n\n/**\n * Provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices)\n */\ninterface MediaDevices extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/devicechange_event) */\n    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/enumerateDevices) */\n    enumerateDevices(): Promise<MediaDeviceInfo[]>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getDisplayMedia) */\n    getDisplayMedia(options?: DisplayMediaStreamOptions): Promise<MediaStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getSupportedConstraints) */\n    getSupportedConstraints(): MediaTrackSupportedConstraints;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaDevices/getUserMedia) */\n    getUserMedia(constraints?: MediaStreamConstraints): Promise<MediaStream>;\n    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaDevices: {\n    prototype: MediaDevices;\n    new(): MediaDevices;\n};\n\n/**\n * A MediaElementSourceNode has no inputs and exactly one output, and is created using the AudioContext.createMediaElementSource method. The amount of channels in the output equals the number of channels of the audio referenced by the HTMLMediaElement used in the creation of the node, or is 1 if the HTMLMediaElement has no audio.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaElementAudioSourceNode)\n */\ninterface MediaElementAudioSourceNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaElementAudioSourceNode/mediaElement) */\n    readonly mediaElement: HTMLMediaElement;\n}\n\ndeclare var MediaElementAudioSourceNode: {\n    prototype: MediaElementAudioSourceNode;\n    new(context: AudioContext, options: MediaElementAudioSourceOptions): MediaElementAudioSourceNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaEncryptedEvent) */\ninterface MediaEncryptedEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaEncryptedEvent/initData) */\n    readonly initData: ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaEncryptedEvent/initDataType) */\n    readonly initDataType: string;\n}\n\ndeclare var MediaEncryptedEvent: {\n    prototype: MediaEncryptedEvent;\n    new(type: string, eventInitDict?: MediaEncryptedEventInit): MediaEncryptedEvent;\n};\n\n/**\n * An error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as <audio> or <video>.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaError)\n */\ninterface MediaError {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaError/code) */\n    readonly code: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaError/message) */\n    readonly message: string;\n    readonly MEDIA_ERR_ABORTED: 1;\n    readonly MEDIA_ERR_NETWORK: 2;\n    readonly MEDIA_ERR_DECODE: 3;\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;\n}\n\ndeclare var MediaError: {\n    prototype: MediaError;\n    new(): MediaError;\n    readonly MEDIA_ERR_ABORTED: 1;\n    readonly MEDIA_ERR_NETWORK: 2;\n    readonly MEDIA_ERR_DECODE: 3;\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;\n};\n\n/**\n * This EncryptedMediaExtensions API interface contains the content and related data when the content decryption module generates a message for the session.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyMessageEvent)\n */\ninterface MediaKeyMessageEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyMessageEvent/message) */\n    readonly message: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyMessageEvent/messageType) */\n    readonly messageType: MediaKeyMessageType;\n}\n\ndeclare var MediaKeyMessageEvent: {\n    prototype: MediaKeyMessageEvent;\n    new(type: string, eventInitDict: MediaKeyMessageEventInit): MediaKeyMessageEvent;\n};\n\ninterface MediaKeySessionEventMap {\n    "keystatuseschange": Event;\n    "message": MediaKeyMessageEvent;\n}\n\n/**\n * This EncryptedMediaExtensions API interface represents a\xa0context for message exchange with a content decryption module (CDM).\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession)\n */\ninterface MediaKeySession extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/closed) */\n    readonly closed: Promise<MediaKeySessionClosedReason>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/expiration) */\n    readonly expiration: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keyStatuses) */\n    readonly keyStatuses: MediaKeyStatusMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/keystatuseschange_event) */\n    onkeystatuseschange: ((this: MediaKeySession, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/message_event) */\n    onmessage: ((this: MediaKeySession, ev: MediaKeyMessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/sessionId) */\n    readonly sessionId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/generateRequest) */\n    generateRequest(initDataType: string, initData: BufferSource): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/load) */\n    load(sessionId: string): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/remove) */\n    remove(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySession/update) */\n    update(response: BufferSource): Promise<void>;\n    addEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaKeySession: {\n    prototype: MediaKeySession;\n    new(): MediaKeySession;\n};\n\n/**\n * This EncryptedMediaExtensions API interface is a read-only map of media key statuses by key IDs.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap)\n */\ninterface MediaKeyStatusMap {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/get) */\n    get(keyId: BufferSource): MediaKeyStatus | undefined;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeyStatusMap/has) */\n    has(keyId: BufferSource): boolean;\n    forEach(callbackfn: (value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) => void, thisArg?: any): void;\n}\n\ndeclare var MediaKeyStatusMap: {\n    prototype: MediaKeyStatusMap;\n    new(): MediaKeyStatusMap;\n};\n\n/**\n * This EncryptedMediaExtensions API interface provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the Navigator.requestMediaKeySystemAccess method.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess)\n */\ninterface MediaKeySystemAccess {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/keySystem) */\n    readonly keySystem: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/createMediaKeys) */\n    createMediaKeys(): Promise<MediaKeys>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeySystemAccess/getConfiguration) */\n    getConfiguration(): MediaKeySystemConfiguration;\n}\n\ndeclare var MediaKeySystemAccess: {\n    prototype: MediaKeySystemAccess;\n    new(): MediaKeySystemAccess;\n};\n\n/**\n * This EncryptedMediaExtensions API interface the represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys)\n */\ninterface MediaKeys {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/createSession) */\n    createSession(sessionType?: MediaKeySessionType): MediaKeySession;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/getStatusForPolicy) */\n    getStatusForPolicy(policy?: MediaKeysPolicy): Promise<MediaKeyStatus>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaKeys/setServerCertificate) */\n    setServerCertificate(serverCertificate: BufferSource): Promise<boolean>;\n}\n\ndeclare var MediaKeys: {\n    prototype: MediaKeys;\n    new(): MediaKeys;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList) */\ninterface MediaList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/mediaText) */\n    mediaText: string;\n    toString(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/appendMedium) */\n    appendMedium(medium: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/deleteMedium) */\n    deleteMedium(medium: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaList/item) */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var MediaList: {\n    prototype: MediaList;\n    new(): MediaList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata) */\ninterface MediaMetadata {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/album) */\n    album: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/artist) */\n    artist: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/artwork) */\n    artwork: ReadonlyArray<MediaImage>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaMetadata/title) */\n    title: string;\n}\n\ndeclare var MediaMetadata: {\n    prototype: MediaMetadata;\n    new(init?: MediaMetadataInit): MediaMetadata;\n};\n\ninterface MediaQueryListEventMap {\n    "change": MediaQueryListEvent;\n}\n\n/**\n * Stores information on a media query applied to a document, and handles sending notifications to listeners when the media query state change (i.e. when the media query test starts or stops evaluating to true).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList)\n */\ninterface MediaQueryList extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/matches) */\n    readonly matches: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/media) */\n    readonly media: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/change_event) */\n    onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/addListener)\n     */\n    addListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryList/removeListener)\n     */\n    removeListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void;\n    addEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaQueryList: {\n    prototype: MediaQueryList;\n    new(): MediaQueryList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryListEvent) */\ninterface MediaQueryListEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryListEvent/matches) */\n    readonly matches: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaQueryListEvent/media) */\n    readonly media: string;\n}\n\ndeclare var MediaQueryListEvent: {\n    prototype: MediaQueryListEvent;\n    new(type: string, eventInitDict?: MediaQueryListEventInit): MediaQueryListEvent;\n};\n\ninterface MediaRecorderEventMap {\n    "dataavailable": BlobEvent;\n    "error": ErrorEvent;\n    "pause": Event;\n    "resume": Event;\n    "start": Event;\n    "stop": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder) */\ninterface MediaRecorder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/audioBitsPerSecond) */\n    readonly audioBitsPerSecond: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/mimeType) */\n    readonly mimeType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/dataavailable_event) */\n    ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/error_event) */\n    onerror: ((this: MediaRecorder, ev: ErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause_event) */\n    onpause: ((this: MediaRecorder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume_event) */\n    onresume: ((this: MediaRecorder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start_event) */\n    onstart: ((this: MediaRecorder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop_event) */\n    onstop: ((this: MediaRecorder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/state) */\n    readonly state: RecordingState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stream) */\n    readonly stream: MediaStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/videoBitsPerSecond) */\n    readonly videoBitsPerSecond: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/pause) */\n    pause(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/requestData) */\n    requestData(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/resume) */\n    resume(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/start) */\n    start(timeslice?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/stop) */\n    stop(): void;\n    addEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaRecorder: {\n    prototype: MediaRecorder;\n    new(stream: MediaStream, options?: MediaRecorderOptions): MediaRecorder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaRecorder/isTypeSupported_static) */\n    isTypeSupported(type: string): boolean;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession) */\ninterface MediaSession {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/metadata) */\n    metadata: MediaMetadata | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/playbackState) */\n    playbackState: MediaSessionPlaybackState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/setActionHandler) */\n    setActionHandler(action: MediaSessionAction, handler: MediaSessionActionHandler | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSession/setPositionState) */\n    setPositionState(state?: MediaPositionState): void;\n}\n\ndeclare var MediaSession: {\n    prototype: MediaSession;\n    new(): MediaSession;\n};\n\ninterface MediaSourceEventMap {\n    "sourceclose": Event;\n    "sourceended": Event;\n    "sourceopen": Event;\n}\n\n/**\n * This Media Source Extensions API interface represents a source of media data for an HTMLMediaElement object. A MediaSource object can be attached to a HTMLMediaElement to be played in the user agent.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource)\n */\ninterface MediaSource extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/activeSourceBuffers) */\n    readonly activeSourceBuffers: SourceBufferList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/duration) */\n    duration: number;\n    onsourceclose: ((this: MediaSource, ev: Event) => any) | null;\n    onsourceended: ((this: MediaSource, ev: Event) => any) | null;\n    onsourceopen: ((this: MediaSource, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/readyState) */\n    readonly readyState: ReadyState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/sourceBuffers) */\n    readonly sourceBuffers: SourceBufferList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/addSourceBuffer) */\n    addSourceBuffer(type: string): SourceBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/clearLiveSeekableRange) */\n    clearLiveSeekableRange(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/endOfStream) */\n    endOfStream(error?: EndOfStreamError): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/removeSourceBuffer) */\n    removeSourceBuffer(sourceBuffer: SourceBuffer): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/setLiveSeekableRange) */\n    setLiveSeekableRange(start: number, end: number): void;\n    addEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaSource: {\n    prototype: MediaSource;\n    new(): MediaSource;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static) */\n    readonly canConstructInDedicatedWorker: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSource/isTypeSupported_static) */\n    isTypeSupported(type: string): boolean;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */\ninterface MediaSourceHandle {\n}\n\ndeclare var MediaSourceHandle: {\n    prototype: MediaSourceHandle;\n    new(): MediaSourceHandle;\n};\n\ninterface MediaStreamEventMap {\n    "addtrack": MediaStreamTrackEvent;\n    "removetrack": MediaStreamTrackEvent;\n}\n\n/**\n * A stream of media content. A stream consists of several tracks such as\xa0video or audio tracks. Each track is specified as an instance of MediaStreamTrack.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream)\n */\ninterface MediaStream extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/active) */\n    readonly active: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addtrack_event) */\n    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removetrack_event) */\n    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/addTrack) */\n    addTrack(track: MediaStreamTrack): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/clone) */\n    clone(): MediaStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getAudioTracks) */\n    getAudioTracks(): MediaStreamTrack[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getTrackById) */\n    getTrackById(trackId: string): MediaStreamTrack | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getTracks) */\n    getTracks(): MediaStreamTrack[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/getVideoTracks) */\n    getVideoTracks(): MediaStreamTrack[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStream/removeTrack) */\n    removeTrack(track: MediaStreamTrack): void;\n    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaStream: {\n    prototype: MediaStream;\n    new(): MediaStream;\n    new(stream: MediaStream): MediaStream;\n    new(tracks: MediaStreamTrack[]): MediaStream;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioDestinationNode) */\ninterface MediaStreamAudioDestinationNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioDestinationNode/stream) */\n    readonly stream: MediaStream;\n}\n\ndeclare var MediaStreamAudioDestinationNode: {\n    prototype: MediaStreamAudioDestinationNode;\n    new(context: AudioContext, options?: AudioNodeOptions): MediaStreamAudioDestinationNode;\n};\n\n/**\n * A type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioSourceNode)\n */\ninterface MediaStreamAudioSourceNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamAudioSourceNode/mediaStream) */\n    readonly mediaStream: MediaStream;\n}\n\ndeclare var MediaStreamAudioSourceNode: {\n    prototype: MediaStreamAudioSourceNode;\n    new(context: AudioContext, options: MediaStreamAudioSourceOptions): MediaStreamAudioSourceNode;\n};\n\ninterface MediaStreamTrackEventMap {\n    "ended": Event;\n    "mute": Event;\n    "unmute": Event;\n}\n\n/**\n * A single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack)\n */\ninterface MediaStreamTrack extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/contentHint) */\n    contentHint: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/enabled) */\n    enabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/kind) */\n    readonly kind: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/label) */\n    readonly label: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/muted) */\n    readonly muted: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/ended_event) */\n    onended: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/mute_event) */\n    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/unmute_event) */\n    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/readyState) */\n    readonly readyState: MediaStreamTrackState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/applyConstraints) */\n    applyConstraints(constraints?: MediaTrackConstraints): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/clone) */\n    clone(): MediaStreamTrack;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getCapabilities) */\n    getCapabilities(): MediaTrackCapabilities;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getConstraints) */\n    getConstraints(): MediaTrackConstraints;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/getSettings) */\n    getSettings(): MediaTrackSettings;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrack/stop) */\n    stop(): void;\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaStreamTrack: {\n    prototype: MediaStreamTrack;\n    new(): MediaStreamTrack;\n};\n\n/**\n * Events which indicate that a MediaStream has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrackEvent)\n */\ninterface MediaStreamTrackEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrackEvent/track) */\n    readonly track: MediaStreamTrack;\n}\n\ndeclare var MediaStreamTrackEvent: {\n    prototype: MediaStreamTrackEvent;\n    new(type: string, eventInitDict: MediaStreamTrackEventInit): MediaStreamTrackEvent;\n};\n\n/**\n * This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel)\n */\ninterface MessageChannel {\n    /**\n     * Returns the first MessagePort object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port1)\n     */\n    readonly port1: MessagePort;\n    /**\n     * Returns the second MessagePort object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port2)\n     */\n    readonly port2: MessagePort;\n}\n\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new(): MessageChannel;\n};\n\n/**\n * A message received by a target object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)\n */\ninterface MessageEvent<T = any> extends Event {\n    /**\n     * Returns the data of the message.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/data)\n     */\n    readonly data: T;\n    /**\n     * Returns the last event ID string, for server-sent events.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/lastEventId)\n     */\n    readonly lastEventId: string;\n    /**\n     * Returns the origin of the message, for server-sent events and cross-document messaging.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/origin)\n     */\n    readonly origin: string;\n    /**\n     * Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/ports)\n     */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /**\n     * Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/source)\n     */\n    readonly source: MessageEventSource | null;\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;\n}\n\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new<T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\n};\n\ninterface MessageEventTargetEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\ninterface MessageEventTarget<T> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event) */\n    onmessage: ((this: T, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event) */\n    onmessageerror: ((this: T, ev: MessageEvent) => any) | null;\n    addEventListener<K extends keyof MessageEventTargetEventMap>(type: K, listener: (this: T, ev: MessageEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessageEventTargetEventMap>(type: K, listener: (this: T, ev: MessageEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface MessagePortEventMap extends MessageEventTargetEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort)\n */\ninterface MessagePort extends EventTarget, MessageEventTarget<MessagePort> {\n    /**\n     * Disconnects the port, so that it is no longer active.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/close)\n     */\n    close(): void;\n    /**\n     * Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * Throws a "DataCloneError" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /**\n     * Begins dispatching messages received on the port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/start)\n     */\n    start(): void;\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new(): MessagePort;\n};\n\n/**\n * Provides contains information about a MIME type associated with a particular plugin. NavigatorPlugins.mimeTypes returns an array of this object.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MimeType)\n */\ninterface MimeType {\n    /**\n     * Returns the MIME type\'s description.\n     * @deprecated\n     */\n    readonly description: string;\n    /**\n     * Returns the Plugin object that implements this MIME type.\n     * @deprecated\n     */\n    readonly enabledPlugin: Plugin;\n    /**\n     * Returns the MIME type\'s typical file extensions, in a comma-separated list.\n     * @deprecated\n     */\n    readonly suffixes: string;\n    /**\n     * Returns the MIME type.\n     * @deprecated\n     */\n    readonly type: string;\n}\n\n/** @deprecated */\ndeclare var MimeType: {\n    prototype: MimeType;\n    new(): MimeType;\n};\n\n/**\n * Returns an array of MimeType instances, each of which contains information\xa0about a supported browser plugins. This object is returned by NavigatorPlugins.mimeTypes.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MimeTypeArray)\n */\ninterface MimeTypeArray {\n    /** @deprecated */\n    readonly length: number;\n    /** @deprecated */\n    item(index: number): MimeType | null;\n    /** @deprecated */\n    namedItem(name: string): MimeType | null;\n    [index: number]: MimeType;\n}\n\n/** @deprecated */\ndeclare var MimeTypeArray: {\n    prototype: MimeTypeArray;\n    new(): MimeTypeArray;\n};\n\n/**\n * Events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include click, dblclick, mouseup, mousedown.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent)\n */\ninterface MouseEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/altKey) */\n    readonly altKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/button) */\n    readonly button: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/buttons) */\n    readonly buttons: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/clientX) */\n    readonly clientX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/clientY) */\n    readonly clientY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/ctrlKey) */\n    readonly ctrlKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/layerX) */\n    readonly layerX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/layerY) */\n    readonly layerY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/metaKey) */\n    readonly metaKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/movementX) */\n    readonly movementX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/movementY) */\n    readonly movementY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/offsetX) */\n    readonly offsetX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/offsetY) */\n    readonly offsetY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/pageX) */\n    readonly pageX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/pageY) */\n    readonly pageY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/relatedTarget) */\n    readonly relatedTarget: EventTarget | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/screenX) */\n    readonly screenX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/screenY) */\n    readonly screenY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/shiftKey) */\n    readonly shiftKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/getModifierState) */\n    getModifierState(keyArg: string): boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MouseEvent/initMouseEvent)\n     */\n    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void;\n}\n\ndeclare var MouseEvent: {\n    prototype: MouseEvent;\n    new(type: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n\n/**\n * Provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature which was part of the DOM3 Events specification.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver)\n */\ninterface MutationObserver {\n    /**\n     * Stops observer from observing any mutations. Until the observe() method is used again, observer\'s callback will not be invoked.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/disconnect)\n     */\n    disconnect(): void;\n    /**\n     * Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n     *\n     * The options argument allows for setting mutation observation options via object members.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/observe)\n     */\n    observe(target: Node, options?: MutationObserverInit): void;\n    /**\n     * Empties the record queue and returns what was in there.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationObserver/takeRecords)\n     */\n    takeRecords(): MutationRecord[];\n}\n\ndeclare var MutationObserver: {\n    prototype: MutationObserver;\n    new(callback: MutationCallback): MutationObserver;\n};\n\n/**\n * A MutationRecord represents an individual DOM mutation. It is the object that is passed to MutationObserver\'s callback.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord)\n */\ninterface MutationRecord {\n    /**\n     * Return the nodes added and removed respectively.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/addedNodes)\n     */\n    readonly addedNodes: NodeList;\n    /**\n     * Returns the local name of the changed attribute, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/attributeName)\n     */\n    readonly attributeName: string | null;\n    /**\n     * Returns the namespace of the changed attribute, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/attributeNamespace)\n     */\n    readonly attributeNamespace: string | null;\n    /**\n     * Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/nextSibling)\n     */\n    readonly nextSibling: Node | null;\n    /**\n     * The return value depends on type. For "attributes", it is the value of the changed attribute before the change. For "characterData", it is the data of the changed node before the change. For "childList", it is null.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/oldValue)\n     */\n    readonly oldValue: string | null;\n    /**\n     * Return the previous and next sibling respectively of the added or removed nodes, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/previousSibling)\n     */\n    readonly previousSibling: Node | null;\n    /**\n     * Return the nodes added and removed respectively.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/removedNodes)\n     */\n    readonly removedNodes: NodeList;\n    /**\n     * Returns the node the mutation affected, depending on the type. For "attributes", it is the element whose attribute changed. For "characterData", it is the CharacterData node. For "childList", it is the node whose children changed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/target)\n     */\n    readonly target: Node;\n    /**\n     * Returns "attributes" if it was an attribute mutation. "characterData" if it was a mutation to a CharacterData node. And "childList" if it was a mutation to the tree of nodes.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MutationRecord/type)\n     */\n    readonly type: MutationRecordType;\n}\n\ndeclare var MutationRecord: {\n    prototype: MutationRecord;\n    new(): MutationRecord;\n};\n\n/**\n * A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap)\n */\ninterface NamedNodeMap {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/getNamedItem) */\n    getNamedItem(qualifiedName: string): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/getNamedItemNS) */\n    getNamedItemNS(namespace: string | null, localName: string): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/item) */\n    item(index: number): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/removeNamedItem) */\n    removeNamedItem(qualifiedName: string): Attr;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/removeNamedItemNS) */\n    removeNamedItemNS(namespace: string | null, localName: string): Attr;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/setNamedItem) */\n    setNamedItem(attr: Attr): Attr | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NamedNodeMap/setNamedItemNS) */\n    setNamedItemNS(attr: Attr): Attr | null;\n    [index: number]: Attr;\n}\n\ndeclare var NamedNodeMap: {\n    prototype: NamedNodeMap;\n    new(): NamedNodeMap;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation) */\ninterface NavigationActivation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/entry) */\n    readonly entry: NavigationHistoryEntry;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/from) */\n    readonly from: NavigationHistoryEntry | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationActivation/navigationType) */\n    readonly navigationType: NavigationType;\n}\n\ndeclare var NavigationActivation: {\n    prototype: NavigationActivation;\n    new(): NavigationActivation;\n};\n\ninterface NavigationHistoryEntryEventMap {\n    "dispose": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry) */\ninterface NavigationHistoryEntry extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/index) */\n    readonly index: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/key) */\n    readonly key: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/dispose_event) */\n    ondispose: ((this: NavigationHistoryEntry, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/sameDocument) */\n    readonly sameDocument: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/url) */\n    readonly url: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationHistoryEntry/getState) */\n    getState(): any;\n    addEventListener<K extends keyof NavigationHistoryEntryEventMap>(type: K, listener: (this: NavigationHistoryEntry, ev: NavigationHistoryEntryEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof NavigationHistoryEntryEventMap>(type: K, listener: (this: NavigationHistoryEntry, ev: NavigationHistoryEntryEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var NavigationHistoryEntry: {\n    prototype: NavigationHistoryEntry;\n    new(): NavigationHistoryEntry;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager)\n */\ninterface NavigationPreloadManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/disable) */\n    disable(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/enable) */\n    enable(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/getState) */\n    getState(): Promise<NavigationPreloadState>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/setHeaderValue) */\n    setHeaderValue(value: string): Promise<void>;\n}\n\ndeclare var NavigationPreloadManager: {\n    prototype: NavigationPreloadManager;\n    new(): NavigationPreloadManager;\n};\n\n/**\n * The state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator)\n */\ninterface Navigator extends NavigatorAutomationInformation, NavigatorBadge, NavigatorConcurrentHardware, NavigatorContentUtils, NavigatorCookies, NavigatorID, NavigatorLanguage, NavigatorLocks, NavigatorOnLine, NavigatorPlugins, NavigatorStorage {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/clipboard)\n     */\n    readonly clipboard: Clipboard;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/credentials)\n     */\n    readonly credentials: CredentialsContainer;\n    readonly doNotTrack: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/geolocation) */\n    readonly geolocation: Geolocation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/maxTouchPoints) */\n    readonly maxTouchPoints: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaCapabilities) */\n    readonly mediaCapabilities: MediaCapabilities;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaDevices)\n     */\n    readonly mediaDevices: MediaDevices;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mediaSession) */\n    readonly mediaSession: MediaSession;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/permissions) */\n    readonly permissions: Permissions;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/serviceWorker)\n     */\n    readonly serviceWorker: ServiceWorkerContainer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/userActivation) */\n    readonly userActivation: UserActivation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/wakeLock) */\n    readonly wakeLock: WakeLock;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/canShare)\n     */\n    canShare(data?: ShareData): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/getGamepads) */\n    getGamepads(): (Gamepad | null)[];\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/requestMIDIAccess)\n     */\n    requestMIDIAccess(options?: MIDIOptions): Promise<MIDIAccess>;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/requestMediaKeySystemAccess)\n     */\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfiguration[]): Promise<MediaKeySystemAccess>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/sendBeacon) */\n    sendBeacon(url: string | URL, data?: BodyInit | null): boolean;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/share)\n     */\n    share(data?: ShareData): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/vibrate) */\n    vibrate(pattern: VibratePattern): boolean;\n}\n\ndeclare var Navigator: {\n    prototype: Navigator;\n    new(): Navigator;\n};\n\ninterface NavigatorAutomationInformation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/webdriver) */\n    readonly webdriver: boolean;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorBadge {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/clearAppBadge) */\n    clearAppBadge(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/setAppBadge) */\n    setAppBadge(contents?: number): Promise<void>;\n}\n\ninterface NavigatorConcurrentHardware {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/hardwareConcurrency) */\n    readonly hardwareConcurrency: number;\n}\n\ninterface NavigatorContentUtils {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/registerProtocolHandler)\n     */\n    registerProtocolHandler(scheme: string, url: string | URL): void;\n}\n\ninterface NavigatorCookies {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/cookieEnabled) */\n    readonly cookieEnabled: boolean;\n}\n\ninterface NavigatorID {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appCodeName)\n     */\n    readonly appCodeName: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appName)\n     */\n    readonly appName: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appVersion)\n     */\n    readonly appVersion: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/platform)\n     */\n    readonly platform: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/product)\n     */\n    readonly product: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/productSub)\n     */\n    readonly productSub: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/userAgent) */\n    readonly userAgent: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/vendor)\n     */\n    readonly vendor: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/vendorSub)\n     */\n    readonly vendorSub: string;\n}\n\ninterface NavigatorLanguage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/language) */\n    readonly language: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/languages) */\n    readonly languages: ReadonlyArray<string>;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorLocks {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/locks) */\n    readonly locks: LockManager;\n}\n\ninterface NavigatorOnLine {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/onLine) */\n    readonly onLine: boolean;\n}\n\ninterface NavigatorPlugins {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/mimeTypes)\n     */\n    readonly mimeTypes: MimeTypeArray;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/pdfViewerEnabled) */\n    readonly pdfViewerEnabled: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/plugins)\n     */\n    readonly plugins: PluginArray;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/javaEnabled)\n     */\n    javaEnabled(): boolean;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/storage) */\n    readonly storage: StorageManager;\n}\n\n/**\n * Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node)\n */\ninterface Node extends EventTarget {\n    /**\n     * Returns node\'s node document\'s document base URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)\n     */\n    readonly baseURI: string;\n    /**\n     * Returns the children.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)\n     */\n    readonly childNodes: NodeListOf<ChildNode>;\n    /**\n     * Returns the first child.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)\n     */\n    readonly firstChild: ChildNode | null;\n    /**\n     * Returns true if node is connected and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)\n     */\n    readonly isConnected: boolean;\n    /**\n     * Returns the last child.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)\n     */\n    readonly lastChild: ChildNode | null;\n    /**\n     * Returns the next sibling.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)\n     */\n    readonly nextSibling: ChildNode | null;\n    /**\n     * Returns a string appropriate for the type of node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)\n     */\n    readonly nodeName: string;\n    /**\n     * Returns the type of node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)\n     */\n    readonly nodeType: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue) */\n    nodeValue: string | null;\n    /**\n     * Returns the node document. Returns null for documents.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)\n     */\n    readonly ownerDocument: Document | null;\n    /**\n     * Returns the parent element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)\n     */\n    readonly parentElement: HTMLElement | null;\n    /**\n     * Returns the parent.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)\n     */\n    readonly parentNode: ParentNode | null;\n    /**\n     * Returns the previous sibling.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)\n     */\n    readonly previousSibling: ChildNode | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent) */\n    textContent: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild) */\n    appendChild<T extends Node>(node: T): T;\n    /**\n     * Returns a copy of node. If deep is true, the copy also includes the node\'s descendants.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)\n     */\n    cloneNode(subtree?: boolean): Node;\n    /**\n     * Returns a bitmask indicating the position of other relative to node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)\n     */\n    compareDocumentPosition(other: Node): number;\n    /**\n     * Returns true if other is an inclusive descendant of node, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)\n     */\n    contains(other: Node | null): boolean;\n    /**\n     * Returns node\'s root.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)\n     */\n    getRootNode(options?: GetRootNodeOptions): Node;\n    /**\n     * Returns whether node has children.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)\n     */\n    hasChildNodes(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore) */\n    insertBefore<T extends Node>(node: T, child: Node | null): T;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace) */\n    isDefaultNamespace(namespace: string | null): boolean;\n    /**\n     * Returns whether node and otherNode have the same properties.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)\n     */\n    isEqualNode(otherNode: Node | null): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode) */\n    isSameNode(otherNode: Node | null): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI) */\n    lookupNamespaceURI(prefix: string | null): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix) */\n    lookupPrefix(namespace: string | null): string | null;\n    /**\n     * Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)\n     */\n    normalize(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild) */\n    removeChild<T extends Node>(child: T): T;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild) */\n    replaceChild<T extends Node>(node: Node, child: T): T;\n    /** node is an element. */\n    readonly ELEMENT_NODE: 1;\n    readonly ATTRIBUTE_NODE: 2;\n    /** node is a Text node. */\n    readonly TEXT_NODE: 3;\n    /** node is a CDATASection node. */\n    readonly CDATA_SECTION_NODE: 4;\n    readonly ENTITY_REFERENCE_NODE: 5;\n    readonly ENTITY_NODE: 6;\n    /** node is a ProcessingInstruction node. */\n    readonly PROCESSING_INSTRUCTION_NODE: 7;\n    /** node is a Comment node. */\n    readonly COMMENT_NODE: 8;\n    /** node is a document. */\n    readonly DOCUMENT_NODE: 9;\n    /** node is a doctype. */\n    readonly DOCUMENT_TYPE_NODE: 10;\n    /** node is a DocumentFragment node. */\n    readonly DOCUMENT_FRAGMENT_NODE: 11;\n    readonly NOTATION_NODE: 12;\n    /** Set when node and other are not in the same tree. */\n    readonly DOCUMENT_POSITION_DISCONNECTED: 0x01;\n    /** Set when other is preceding node. */\n    readonly DOCUMENT_POSITION_PRECEDING: 0x02;\n    /** Set when other is following node. */\n    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;\n    /** Set when other is an ancestor of node. */\n    readonly DOCUMENT_POSITION_CONTAINS: 0x08;\n    /** Set when other is a descendant of node. */\n    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;\n}\n\ndeclare var Node: {\n    prototype: Node;\n    new(): Node;\n    /** node is an element. */\n    readonly ELEMENT_NODE: 1;\n    readonly ATTRIBUTE_NODE: 2;\n    /** node is a Text node. */\n    readonly TEXT_NODE: 3;\n    /** node is a CDATASection node. */\n    readonly CDATA_SECTION_NODE: 4;\n    readonly ENTITY_REFERENCE_NODE: 5;\n    readonly ENTITY_NODE: 6;\n    /** node is a ProcessingInstruction node. */\n    readonly PROCESSING_INSTRUCTION_NODE: 7;\n    /** node is a Comment node. */\n    readonly COMMENT_NODE: 8;\n    /** node is a document. */\n    readonly DOCUMENT_NODE: 9;\n    /** node is a doctype. */\n    readonly DOCUMENT_TYPE_NODE: 10;\n    /** node is a DocumentFragment node. */\n    readonly DOCUMENT_FRAGMENT_NODE: 11;\n    readonly NOTATION_NODE: 12;\n    /** Set when node and other are not in the same tree. */\n    readonly DOCUMENT_POSITION_DISCONNECTED: 0x01;\n    /** Set when other is preceding node. */\n    readonly DOCUMENT_POSITION_PRECEDING: 0x02;\n    /** Set when other is following node. */\n    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;\n    /** Set when other is an ancestor of node. */\n    readonly DOCUMENT_POSITION_CONTAINS: 0x08;\n    /** Set when other is a descendant of node. */\n    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;\n};\n\n/**\n * An iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator)\n */\ninterface NodeIterator {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/filter) */\n    readonly filter: NodeFilter | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/pointerBeforeReferenceNode) */\n    readonly pointerBeforeReferenceNode: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/referenceNode) */\n    readonly referenceNode: Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/root) */\n    readonly root: Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/whatToShow) */\n    readonly whatToShow: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/detach)\n     */\n    detach(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/nextNode) */\n    nextNode(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeIterator/previousNode) */\n    previousNode(): Node | null;\n}\n\ndeclare var NodeIterator: {\n    prototype: NodeIterator;\n    new(): NodeIterator;\n};\n\n/**\n * NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeList)\n */\ninterface NodeList {\n    /**\n     * Returns the number of nodes in the collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeList/length)\n     */\n    readonly length: number;\n    /**\n     * Returns the node with index index from the collection. The nodes are sorted in tree order.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NodeList/item)\n     */\n    item(index: number): Node | null;\n    /**\n     * Performs the specified action for each node in an list.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: Node, key: number, parent: NodeList) => void, thisArg?: any): void;\n    [index: number]: Node;\n}\n\ndeclare var NodeList: {\n    prototype: NodeList;\n    new(): NodeList;\n};\n\ninterface NodeListOf<TNode extends Node> extends NodeList {\n    item(index: number): TNode;\n    /**\n     * Performs the specified action for each node in an list.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void, thisArg?: any): void;\n    [index: number]: TNode;\n}\n\ninterface NonDocumentTypeChildNode {\n    /**\n     * Returns the first following sibling that is an element, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)\n     */\n    readonly nextElementSibling: Element | null;\n    /**\n     * Returns the first preceding sibling that is an element, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)\n     */\n    readonly previousElementSibling: Element | null;\n}\n\ninterface NonElementParentNode {\n    /**\n     * Returns the first element within node\'s descendants whose ID is elementId.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/getElementById)\n     */\n    getElementById(elementId: string): Element | null;\n}\n\ninterface NotificationEventMap {\n    "click": Event;\n    "close": Event;\n    "error": Event;\n    "show": Event;\n}\n\n/**\n * This Notifications API interface is used to configure and display desktop notifications to the user.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification)\n */\ninterface Notification extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/badge) */\n    readonly badge: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/body) */\n    readonly body: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/data) */\n    readonly data: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir) */\n    readonly dir: NotificationDirection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/icon) */\n    readonly icon: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/lang) */\n    readonly lang: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event) */\n    onclick: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event) */\n    onclose: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event) */\n    onerror: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event) */\n    onshow: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction) */\n    readonly requireInteraction: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/silent) */\n    readonly silent: boolean | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/tag) */\n    readonly tag: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/title) */\n    readonly title: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close) */\n    close(): void;\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Notification: {\n    prototype: Notification;\n    new(title: string, options?: NotificationOptions): Notification;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/permission_static) */\n    readonly permission: NotificationPermission;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requestPermission_static) */\n    requestPermission(deprecatedCallback?: NotificationPermissionCallback): Promise<NotificationPermission>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed) */\ninterface OES_draw_buffers_indexed {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationSeparateiOES) */\n    blendEquationSeparateiOES(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationiOES) */\n    blendEquationiOES(buf: GLuint, mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFuncSeparateiOES) */\n    blendFuncSeparateiOES(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFunciOES) */\n    blendFunciOES(buf: GLuint, src: GLenum, dst: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/colorMaskiOES) */\n    colorMaskiOES(buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/disableiOES) */\n    disableiOES(target: GLenum, index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/enableiOES) */\n    enableiOES(target: GLenum, index: GLuint): void;\n}\n\n/**\n * The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_element_index_uint)\n */\ninterface OES_element_index_uint {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_fbo_render_mipmap) */\ninterface OES_fbo_render_mipmap {\n}\n\n/**\n * The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_standard_derivatives)\n */\ninterface OES_standard_derivatives {\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8B8B;\n}\n\n/**\n * The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_float)\n */\ninterface OES_texture_float {\n}\n\n/**\n * The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_float_linear)\n */\ninterface OES_texture_float_linear {\n}\n\n/**\n * The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_half_float)\n */\ninterface OES_texture_half_float {\n    readonly HALF_FLOAT_OES: 0x8D61;\n}\n\n/**\n * The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_half_float_linear)\n */\ninterface OES_texture_half_float_linear {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object) */\ninterface OES_vertex_array_object {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/bindVertexArrayOES) */\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/createVertexArrayOES) */\n    createVertexArrayOES(): WebGLVertexArrayObjectOES;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/deleteVertexArrayOES) */\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/isVertexArrayOES) */\n    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;\n    readonly VERTEX_ARRAY_BINDING_OES: 0x85B5;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OVR_multiview2) */\ninterface OVR_multiview2 {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OVR_multiview2/framebufferTextureMultiviewOVR) */\n    framebufferTextureMultiviewOVR(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, baseViewIndex: GLint, numViews: GLsizei): void;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: 0x9630;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: 0x9632;\n    readonly MAX_VIEWS_OVR: 0x9631;\n    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: 0x9633;\n}\n\n/**\n * The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The complete event implements this interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioCompletionEvent)\n */\ninterface OfflineAudioCompletionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioCompletionEvent/renderedBuffer) */\n    readonly renderedBuffer: AudioBuffer;\n}\n\ndeclare var OfflineAudioCompletionEvent: {\n    prototype: OfflineAudioCompletionEvent;\n    new(type: string, eventInitDict: OfflineAudioCompletionEventInit): OfflineAudioCompletionEvent;\n};\n\ninterface OfflineAudioContextEventMap extends BaseAudioContextEventMap {\n    "complete": OfflineAudioCompletionEvent;\n}\n\n/**\n * An AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn\'t render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext)\n */\ninterface OfflineAudioContext extends BaseAudioContext {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/complete_event) */\n    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/resume) */\n    resume(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/startRendering) */\n    startRendering(): Promise<AudioBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OfflineAudioContext/suspend) */\n    suspend(suspendTime: number): Promise<void>;\n    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OfflineAudioContext: {\n    prototype: OfflineAudioContext;\n    new(contextOptions: OfflineAudioContextOptions): OfflineAudioContext;\n    new(numberOfChannels: number, length: number, sampleRate: number): OfflineAudioContext;\n};\n\ninterface OffscreenCanvasEventMap {\n    "contextlost": Event;\n    "contextrestored": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas) */\ninterface OffscreenCanvas extends EventTarget {\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object\'s bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/height)\n     */\n    height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event) */\n    oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event) */\n    oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object\'s bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/width)\n     */\n    width: number;\n    /**\n     * Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n     *\n     * The argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of "image/png"; that type is also used if the requested type isn\'t supported. If the image format supports variable quality (such as "image/jpeg"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/convertToBlob)\n     */\n    convertToBlob(options?: ImageEncodeOptions): Promise<Blob>;\n    /**\n     * Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: "2d", "bitmaprenderer", "webgl", or "webgl2". options is handled by that API.\n     *\n     * This specification defines the "2d" context below, which is similar but distinct from the "2d" context that is created from a canvas element. The WebGL specifications define the "webgl" and "webgl2" contexts. [WEBGL]\n     *\n     * Returns null if the canvas has already been initialized with another context type (e.g., trying to get a "2d" context after getting a "webgl" context).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/getContext)\n     */\n    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;\n    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;\n    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;\n    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;\n    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;\n    /**\n     * Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/transferToImageBitmap)\n     */\n    transferToImageBitmap(): ImageBitmap;\n    addEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OffscreenCanvas: {\n    prototype: OffscreenCanvas;\n    new(width: number, height: number): OffscreenCanvas;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvasRenderingContext2D) */\ninterface OffscreenCanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDrawPath, CanvasFillStrokeStyles, CanvasFilters, CanvasImageData, CanvasImageSmoothing, CanvasPath, CanvasPathDrawingStyles, CanvasRect, CanvasShadowStyles, CanvasState, CanvasText, CanvasTextDrawingStyles, CanvasTransform {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/canvas) */\n    readonly canvas: OffscreenCanvas;\n}\n\ndeclare var OffscreenCanvasRenderingContext2D: {\n    prototype: OffscreenCanvasRenderingContext2D;\n    new(): OffscreenCanvasRenderingContext2D;\n};\n\n/**\n * The OscillatorNode\xa0interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency\xa0of a given wave to be created—in effect, a constant tone.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode)\n */\ninterface OscillatorNode extends AudioScheduledSourceNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/detune) */\n    readonly detune: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/frequency) */\n    readonly frequency: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/type) */\n    type: OscillatorType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OscillatorNode/setPeriodicWave) */\n    setPeriodicWave(periodicWave: PeriodicWave): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OscillatorNode: {\n    prototype: OscillatorNode;\n    new(context: BaseAudioContext, options?: OscillatorOptions): OscillatorNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OverconstrainedError) */\ninterface OverconstrainedError extends DOMException {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OverconstrainedError/constraint) */\n    readonly constraint: string;\n}\n\ndeclare var OverconstrainedError: {\n    prototype: OverconstrainedError;\n    new(constraint: string, message?: string): OverconstrainedError;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageRevealEvent) */\ninterface PageRevealEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageRevealEvent/viewTransition) */\n    readonly viewTransition: ViewTransition | null;\n}\n\ndeclare var PageRevealEvent: {\n    prototype: PageRevealEvent;\n    new(type: string, eventInitDict?: PageRevealEventInit): PageRevealEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageSwapEvent) */\ninterface PageSwapEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageSwapEvent/activation) */\n    readonly activation: NavigationActivation | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageSwapEvent/viewTransition) */\n    readonly viewTransition: ViewTransition | null;\n}\n\ndeclare var PageSwapEvent: {\n    prototype: PageSwapEvent;\n    new(type: string, eventInitDict?: PageSwapEventInit): PageSwapEvent;\n};\n\n/**\n * The PageTransitionEvent is fired when a document is being loaded or unloaded.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageTransitionEvent)\n */\ninterface PageTransitionEvent extends Event {\n    /**\n     * For the pageshow event, returns false if the page is newly being loaded (and the load event will fire). Otherwise, returns true.\n     *\n     * For the pagehide event, returns false if the page is going away for the last time. Otherwise, returns true, meaning that (if nothing conspires to make the page unsalvageable) the page might be reused if the user navigates back to this page.\n     *\n     * Things that can cause the page to be unsalvageable include:\n     *\n     * The user agent decided to not keep the Document alive in a session history entry after unload\n     * Having iframes that are not salvageable\n     * Active WebSocket objects\n     * Aborting a Document\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PageTransitionEvent/persisted)\n     */\n    readonly persisted: boolean;\n}\n\ndeclare var PageTransitionEvent: {\n    prototype: PageTransitionEvent;\n    new(type: string, eventInitDict?: PageTransitionEventInit): PageTransitionEvent;\n};\n\n/**\n * A PannerNode always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can\'t have panning effects without at least two audio channels!\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode)\n */\ninterface PannerNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneInnerAngle) */\n    coneInnerAngle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneOuterAngle) */\n    coneOuterAngle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/coneOuterGain) */\n    coneOuterGain: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/distanceModel) */\n    distanceModel: DistanceModelType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/maxDistance) */\n    maxDistance: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationX) */\n    readonly orientationX: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationY) */\n    readonly orientationY: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/orientationZ) */\n    readonly orientationZ: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/panningModel) */\n    panningModel: PanningModelType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionX) */\n    readonly positionX: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionY) */\n    readonly positionY: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/positionZ) */\n    readonly positionZ: AudioParam;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/refDistance) */\n    refDistance: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/rolloffFactor) */\n    rolloffFactor: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/setOrientation)\n     */\n    setOrientation(x: number, y: number, z: number): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PannerNode/setPosition)\n     */\n    setPosition(x: number, y: number, z: number): void;\n}\n\ndeclare var PannerNode: {\n    prototype: PannerNode;\n    new(context: BaseAudioContext, options?: PannerOptions): PannerNode;\n};\n\ninterface ParentNode extends Node {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount) */\n    readonly childElementCount: number;\n    /**\n     * Returns the child elements.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)\n     */\n    readonly children: HTMLCollection;\n    /**\n     * Returns the first child that is an element, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)\n     */\n    readonly firstElementChild: Element | null;\n    /**\n     * Returns the last child that is an element, and null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)\n     */\n    readonly lastElementChild: Element | null;\n    /**\n     * Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)\n     */\n    append(...nodes: (Node | string)[]): void;\n    /**\n     * Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)\n     */\n    prepend(...nodes: (Node | string)[]): void;\n    /**\n     * Returns the first element that is a descendant of node that matches selectors.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n     */\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\n    querySelector<K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMap[K] | null;\n    /** @deprecated */\n    querySelector<K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLElementDeprecatedTagNameMap[K] | null;\n    querySelector<E extends Element = Element>(selectors: string): E | null;\n    /**\n     * Returns all element descendants of node that match selectors.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)\n     */\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\n    querySelectorAll<K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<MathMLElementTagNameMap[K]>;\n    /** @deprecated */\n    querySelectorAll<K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf<HTMLElementDeprecatedTagNameMap[K]>;\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\n    /**\n     * Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)\n     */\n    replaceChildren(...nodes: (Node | string)[]): void;\n}\n\n/**\n * This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Path2D)\n */\ninterface Path2D extends CanvasPath {\n    /**\n     * Adds to the path the path given by the argument.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Path2D/addPath)\n     */\n    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var Path2D: {\n    prototype: Path2D;\n    new(path?: Path2D | string): Path2D;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress) */\ninterface PaymentAddress {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/addressLine) */\n    readonly addressLine: ReadonlyArray<string>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/city) */\n    readonly city: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/country) */\n    readonly country: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/dependentLocality) */\n    readonly dependentLocality: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/organization) */\n    readonly organization: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/phone) */\n    readonly phone: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/postalCode) */\n    readonly postalCode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/recipient) */\n    readonly recipient: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/region) */\n    readonly region: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/sortingCode) */\n    readonly sortingCode: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ContactAddress/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PaymentAddress: {\n    prototype: PaymentAddress;\n    new(): PaymentAddress;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent)\n */\ninterface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodDetails) */\n    readonly methodDetails: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentMethodChangeEvent/methodName) */\n    readonly methodName: string;\n}\n\ndeclare var PaymentMethodChangeEvent: {\n    prototype: PaymentMethodChangeEvent;\n    new(type: string, eventInitDict?: PaymentMethodChangeEventInit): PaymentMethodChangeEvent;\n};\n\ninterface PaymentRequestEventMap {\n    "paymentmethodchange": PaymentMethodChangeEvent;\n    "shippingaddresschange": PaymentRequestUpdateEvent;\n    "shippingoptionchange": PaymentRequestUpdateEvent;\n}\n\n/**\n * This Payment Request API interface is the primary access point into the API, and lets web content and apps accept payments from the end user.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest)\n */\ninterface PaymentRequest extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/paymentmethodchange_event) */\n    onpaymentmethodchange: ((this: PaymentRequest, ev: PaymentMethodChangeEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingaddresschange_event)\n     */\n    onshippingaddresschange: ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingoptionchange_event)\n     */\n    onshippingoptionchange: ((this: PaymentRequest, ev: PaymentRequestUpdateEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingAddress)\n     */\n    readonly shippingAddress: PaymentAddress | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingOption)\n     */\n    readonly shippingOption: string | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/shippingType)\n     */\n    readonly shippingType: PaymentShippingType | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/abort) */\n    abort(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/canMakePayment) */\n    canMakePayment(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequest/show) */\n    show(detailsPromise?: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): Promise<PaymentResponse>;\n    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PaymentRequest: {\n    prototype: PaymentRequest;\n    new(methodData: PaymentMethodData[], details: PaymentDetailsInit, options?: PaymentOptions): PaymentRequest;\n};\n\n/**\n * This Payment Request API interface enables a web page to update the details of a PaymentRequest in response to a user action.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequestUpdateEvent)\n */\ninterface PaymentRequestUpdateEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentRequestUpdateEvent/updateWith) */\n    updateWith(detailsPromise: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): void;\n}\n\ndeclare var PaymentRequestUpdateEvent: {\n    prototype: PaymentRequestUpdateEvent;\n    new(type: string, eventInitDict?: PaymentRequestUpdateEventInit): PaymentRequestUpdateEvent;\n};\n\ninterface PaymentResponseEventMap {\n    "payerdetailchange": PaymentRequestUpdateEvent;\n}\n\n/**\n * This Payment Request API interface is returned after a user selects a payment method and approves a payment request.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse)\n */\ninterface PaymentResponse extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/details) */\n    readonly details: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/methodName) */\n    readonly methodName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerdetailchange_event) */\n    onpayerdetailchange: ((this: PaymentResponse, ev: PaymentRequestUpdateEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerEmail) */\n    readonly payerEmail: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerName) */\n    readonly payerName: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/payerPhone) */\n    readonly payerPhone: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/requestId) */\n    readonly requestId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/shippingAddress) */\n    readonly shippingAddress: PaymentAddress | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/shippingOption) */\n    readonly shippingOption: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/complete) */\n    complete(result?: PaymentComplete): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/retry) */\n    retry(errorFields?: PaymentValidationErrors): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PaymentResponse/toJSON) */\n    toJSON(): any;\n    addEventListener<K extends keyof PaymentResponseEventMap>(type: K, listener: (this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PaymentResponseEventMap>(type: K, listener: (this: PaymentResponse, ev: PaymentResponseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PaymentResponse: {\n    prototype: PaymentResponse;\n    new(): PaymentResponse;\n};\n\ninterface PerformanceEventMap {\n    "resourcetimingbufferfull": Event;\n}\n\n/**\n * Provides access to performance-related information for the current page. It\'s part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance)\n */\ninterface Performance extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/eventCounts) */\n    readonly eventCounts: EventCounts;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/navigation)\n     */\n    readonly navigation: PerformanceNavigation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event) */\n    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin) */\n    readonly timeOrigin: DOMHighResTimeStamp;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timing)\n     */\n    readonly timing: PerformanceTiming;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMarks) */\n    clearMarks(markName?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMeasures) */\n    clearMeasures(measureName?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearResourceTimings) */\n    clearResourceTimings(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntries) */\n    getEntries(): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName) */\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType) */\n    getEntriesByType(type: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/mark) */\n    mark(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/measure) */\n    measure(measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions, endMark?: string): PerformanceMeasure;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/now) */\n    now(): DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize) */\n    setResourceTimingBufferSize(maxSize: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON) */\n    toJSON(): any;\n    addEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Performance: {\n    prototype: Performance;\n    new(): Performance;\n};\n\n/**\n * Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry)\n */\ninterface PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration) */\n    readonly duration: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType) */\n    readonly entryType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */\n    readonly startTime: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceEntry: {\n    prototype: PerformanceEntry;\n    new(): PerformanceEntry;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming) */\ninterface PerformanceEventTiming extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/cancelable) */\n    readonly cancelable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/processingEnd) */\n    readonly processingEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/processingStart) */\n    readonly processingStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/target) */\n    readonly target: Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEventTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceEventTiming: {\n    prototype: PerformanceEventTiming;\n    new(): PerformanceEventTiming;\n};\n\n/**\n * PerformanceMark\xa0is an abstract interface for PerformanceEntry objects with an entryType of "mark". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser\'s performance timeline.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark)\n */\ninterface PerformanceMark extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail) */\n    readonly detail: any;\n}\n\ndeclare var PerformanceMark: {\n    prototype: PerformanceMark;\n    new(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n};\n\n/**\n * PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of "measure". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser\'s performance timeline.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure)\n */\ninterface PerformanceMeasure extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail) */\n    readonly detail: any;\n}\n\ndeclare var PerformanceMeasure: {\n    prototype: PerformanceMeasure;\n    new(): PerformanceMeasure;\n};\n\n/**\n * The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done.\n * @deprecated This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation)\n */\ninterface PerformanceNavigation {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation/redirectCount)\n     */\n    readonly redirectCount: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation/type)\n     */\n    readonly type: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigation/toJSON)\n     */\n    toJSON(): any;\n    readonly TYPE_NAVIGATE: 0;\n    readonly TYPE_RELOAD: 1;\n    readonly TYPE_BACK_FORWARD: 2;\n    readonly TYPE_RESERVED: 255;\n}\n\n/** @deprecated */\ndeclare var PerformanceNavigation: {\n    prototype: PerformanceNavigation;\n    new(): PerformanceNavigation;\n    readonly TYPE_NAVIGATE: 0;\n    readonly TYPE_RELOAD: 1;\n    readonly TYPE_BACK_FORWARD: 2;\n    readonly TYPE_RESERVED: 255;\n};\n\n/**\n * Provides methods and properties to store and retrieve metrics regarding the browser\'s document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming)\n */\ninterface PerformanceNavigationTiming extends PerformanceResourceTiming {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domComplete) */\n    readonly domComplete: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventEnd) */\n    readonly domContentLoadedEventEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventStart) */\n    readonly domContentLoadedEventStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/domInteractive) */\n    readonly domInteractive: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/loadEventEnd) */\n    readonly loadEventEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/loadEventStart) */\n    readonly loadEventStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/redirectCount) */\n    readonly redirectCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/type) */\n    readonly type: NavigationTimingType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/unloadEventEnd) */\n    readonly unloadEventEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/unloadEventStart) */\n    readonly unloadEventStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceNavigationTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceNavigationTiming: {\n    prototype: PerformanceNavigationTiming;\n    new(): PerformanceNavigationTiming;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver) */\ninterface PerformanceObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/observe) */\n    observe(options?: PerformanceObserverInit): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/takeRecords) */\n    takeRecords(): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserver: {\n    prototype: PerformanceObserver;\n    new(callback: PerformanceObserverCallback): PerformanceObserver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/supportedEntryTypes_static) */\n    readonly supportedEntryTypes: ReadonlyArray<string>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList) */\ninterface PerformanceObserverEntryList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntries) */\n    getEntries(): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByName) */\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByType) */\n    getEntriesByType(type: string): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserverEntryList: {\n    prototype: PerformanceObserverEntryList;\n    new(): PerformanceObserverEntryList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformancePaintTiming) */\ninterface PerformancePaintTiming extends PerformanceEntry {\n}\n\ndeclare var PerformancePaintTiming: {\n    prototype: PerformancePaintTiming;\n    new(): PerformancePaintTiming;\n};\n\n/**\n * Enables retrieval and analysis of detailed network timing data regarding the loading of an application\'s resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming)\n */\ninterface PerformanceResourceTiming extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectEnd) */\n    readonly connectEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectStart) */\n    readonly connectStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/decodedBodySize) */\n    readonly decodedBodySize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupEnd) */\n    readonly domainLookupEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupStart) */\n    readonly domainLookupStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/encodedBodySize) */\n    readonly encodedBodySize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/fetchStart) */\n    readonly fetchStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/initiatorType) */\n    readonly initiatorType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/nextHopProtocol) */\n    readonly nextHopProtocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectEnd) */\n    readonly redirectEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectStart) */\n    readonly redirectStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/requestStart) */\n    readonly requestStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseEnd) */\n    readonly responseEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStart) */\n    readonly responseStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStatus) */\n    readonly responseStatus: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/secureConnectionStart) */\n    readonly secureConnectionStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/serverTiming) */\n    readonly serverTiming: ReadonlyArray<PerformanceServerTiming>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/transferSize) */\n    readonly transferSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/workerStart) */\n    readonly workerStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceResourceTiming: {\n    prototype: PerformanceResourceTiming;\n    new(): PerformanceResourceTiming;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming) */\ninterface PerformanceServerTiming {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/description) */\n    readonly description: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/duration) */\n    readonly duration: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceServerTiming: {\n    prototype: PerformanceServerTiming;\n    new(): PerformanceServerTiming;\n};\n\n/**\n * A legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the window.performance.timing property.\n * @deprecated This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming)\n */\ninterface PerformanceTiming {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/connectEnd)\n     */\n    readonly connectEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/connectStart)\n     */\n    readonly connectStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domComplete)\n     */\n    readonly domComplete: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domContentLoadedEventEnd)\n     */\n    readonly domContentLoadedEventEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domContentLoadedEventStart)\n     */\n    readonly domContentLoadedEventStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domInteractive)\n     */\n    readonly domInteractive: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domLoading)\n     */\n    readonly domLoading: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domainLookupEnd)\n     */\n    readonly domainLookupEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/domainLookupStart)\n     */\n    readonly domainLookupStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/fetchStart)\n     */\n    readonly fetchStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/loadEventEnd)\n     */\n    readonly loadEventEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/loadEventStart)\n     */\n    readonly loadEventStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/navigationStart)\n     */\n    readonly navigationStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/redirectEnd)\n     */\n    readonly redirectEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/redirectStart)\n     */\n    readonly redirectStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/requestStart)\n     */\n    readonly requestStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/responseEnd)\n     */\n    readonly responseEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/responseStart)\n     */\n    readonly responseStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/secureConnectionStart)\n     */\n    readonly secureConnectionStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/unloadEventEnd)\n     */\n    readonly unloadEventEnd: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/unloadEventStart)\n     */\n    readonly unloadEventStart: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceTiming/toJSON)\n     */\n    toJSON(): any;\n}\n\n/** @deprecated */\ndeclare var PerformanceTiming: {\n    prototype: PerformanceTiming;\n    new(): PerformanceTiming;\n};\n\n/**\n * PeriodicWave has no inputs or outputs; it is used to define custom oscillators when calling OscillatorNode.setPeriodicWave(). The PeriodicWave itself is created/returned by AudioContext.createPeriodicWave().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PeriodicWave)\n */\ninterface PeriodicWave {\n}\n\ndeclare var PeriodicWave: {\n    prototype: PeriodicWave;\n    new(context: BaseAudioContext, options?: PeriodicWaveOptions): PeriodicWave;\n};\n\ninterface PermissionStatusEventMap {\n    "change": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus) */\ninterface PermissionStatus extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event) */\n    onchange: ((this: PermissionStatus, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state) */\n    readonly state: PermissionState;\n    addEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PermissionStatus: {\n    prototype: PermissionStatus;\n    new(): PermissionStatus;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Permissions) */\ninterface Permissions {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Permissions/query) */\n    query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;\n}\n\ndeclare var Permissions: {\n    prototype: Permissions;\n    new(): Permissions;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureEvent) */\ninterface PictureInPictureEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureEvent/pictureInPictureWindow) */\n    readonly pictureInPictureWindow: PictureInPictureWindow;\n}\n\ndeclare var PictureInPictureEvent: {\n    prototype: PictureInPictureEvent;\n    new(type: string, eventInitDict: PictureInPictureEventInit): PictureInPictureEvent;\n};\n\ninterface PictureInPictureWindowEventMap {\n    "resize": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow) */\ninterface PictureInPictureWindow extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/resize_event) */\n    onresize: ((this: PictureInPictureWindow, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PictureInPictureWindow/width) */\n    readonly width: number;\n    addEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PictureInPictureWindow: {\n    prototype: PictureInPictureWindow;\n    new(): PictureInPictureWindow;\n};\n\n/**\n * Provides information about a browser plugin.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Plugin)\n */\ninterface Plugin {\n    /**\n     * Returns the plugin\'s description.\n     * @deprecated\n     */\n    readonly description: string;\n    /**\n     * Returns the plugin library\'s filename, if applicable on the current platform.\n     * @deprecated\n     */\n    readonly filename: string;\n    /**\n     * Returns the number of MIME types, represented by MimeType objects, supported by the plugin.\n     * @deprecated\n     */\n    readonly length: number;\n    /**\n     * Returns the plugin\'s name.\n     * @deprecated\n     */\n    readonly name: string;\n    /**\n     * Returns the specified MimeType object.\n     * @deprecated\n     */\n    item(index: number): MimeType | null;\n    /** @deprecated */\n    namedItem(name: string): MimeType | null;\n    [index: number]: MimeType;\n}\n\n/** @deprecated */\ndeclare var Plugin: {\n    prototype: Plugin;\n    new(): Plugin;\n};\n\n/**\n * Used to store a list of Plugin objects describing the available plugins; it\'s returned by the window.navigator.plugins\xa0property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem("name") methods.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PluginArray)\n */\ninterface PluginArray {\n    /** @deprecated */\n    readonly length: number;\n    /** @deprecated */\n    item(index: number): Plugin | null;\n    /** @deprecated */\n    namedItem(name: string): Plugin | null;\n    /** @deprecated */\n    refresh(): void;\n    [index: number]: Plugin;\n}\n\n/** @deprecated */\ndeclare var PluginArray: {\n    prototype: PluginArray;\n    new(): PluginArray;\n};\n\n/**\n * The state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent)\n */\ninterface PointerEvent extends MouseEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/altitudeAngle) */\n    readonly altitudeAngle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/azimuthAngle) */\n    readonly azimuthAngle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/isPrimary) */\n    readonly isPrimary: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pointerId) */\n    readonly pointerId: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pointerType) */\n    readonly pointerType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/pressure) */\n    readonly pressure: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tangentialPressure) */\n    readonly tangentialPressure: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tiltX) */\n    readonly tiltX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/tiltY) */\n    readonly tiltY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/twist) */\n    readonly twist: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/width) */\n    readonly width: number;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/getCoalescedEvents)\n     */\n    getCoalescedEvents(): PointerEvent[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PointerEvent/getPredictedEvents) */\n    getPredictedEvents(): PointerEvent[];\n}\n\ndeclare var PointerEvent: {\n    prototype: PointerEvent;\n    new(type: string, eventInitDict?: PointerEventInit): PointerEvent;\n};\n\n/**\n * PopStateEvent is an event handler for the popstate event on the window.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent)\n */\ninterface PopStateEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/hasUAVisualTransition) */\n    readonly hasUAVisualTransition: boolean;\n    /**\n     * Returns a copy of the information that was provided to pushState() or replaceState().\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PopStateEvent/state)\n     */\n    readonly state: any;\n}\n\ndeclare var PopStateEvent: {\n    prototype: PopStateEvent;\n    new(type: string, eventInitDict?: PopStateEventInit): PopStateEvent;\n};\n\ninterface PopoverInvokerElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/popoverTargetAction) */\n    popoverTargetAction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLButtonElement/popoverTargetElement) */\n    popoverTargetElement: Element | null;\n}\n\n/**\n * A processing instruction embeds application-specific instructions in XML which can be ignored by other applications that don\'t recognize them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProcessingInstruction)\n */\ninterface ProcessingInstruction extends CharacterData, LinkStyle {\n    readonly ownerDocument: Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProcessingInstruction/target) */\n    readonly target: string;\n}\n\ndeclare var ProcessingInstruction: {\n    prototype: ProcessingInstruction;\n    new(): ProcessingInstruction;\n};\n\n/**\n * Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent)\n */\ninterface ProgressEvent<T extends EventTarget = EventTarget> extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/lengthComputable) */\n    readonly lengthComputable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/loaded) */\n    readonly loaded: number;\n    readonly target: T | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/total) */\n    readonly total: number;\n}\n\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new(type: string, eventInitDict?: ProgressEventInit): ProgressEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent) */\ninterface PromiseRejectionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise) */\n    readonly promise: Promise<any>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason) */\n    readonly reason: any;\n}\n\ndeclare var PromiseRejectionEvent: {\n    prototype: PromiseRejectionEvent;\n    new(type: string, eventInitDict: PromiseRejectionEventInit): PromiseRejectionEvent;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential)\n */\ninterface PublicKeyCredential extends Credential {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/authenticatorAttachment) */\n    readonly authenticatorAttachment: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/rawId) */\n    readonly rawId: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/response) */\n    readonly response: AuthenticatorResponse;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/getClientExtensionResults) */\n    getClientExtensionResults(): AuthenticationExtensionsClientOutputs;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/toJSON) */\n    toJSON(): PublicKeyCredentialJSON;\n}\n\ndeclare var PublicKeyCredential: {\n    prototype: PublicKeyCredential;\n    new(): PublicKeyCredential;\n    getClientCapabilities(): Promise<PublicKeyCredentialClientCapabilities>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/isConditionalMediationAvailable_static) */\n    isConditionalMediationAvailable(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/isUserVerifyingPlatformAuthenticatorAvailable_static) */\n    isUserVerifyingPlatformAuthenticatorAvailable(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/parseCreationOptionsFromJSON_static) */\n    parseCreationOptionsFromJSON(options: PublicKeyCredentialCreationOptionsJSON): PublicKeyCredentialCreationOptions;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PublicKeyCredential/parseRequestOptionsFromJSON_static) */\n    parseRequestOptionsFromJSON(options: PublicKeyCredentialRequestOptionsJSON): PublicKeyCredentialRequestOptions;\n};\n\n/**\n * This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager)\n */\ninterface PushManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/getSubscription) */\n    getSubscription(): Promise<PushSubscription | null>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/permissionState) */\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PermissionState>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/subscribe) */\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\n}\n\ndeclare var PushManager: {\n    prototype: PushManager;\n    new(): PushManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/supportedContentEncodings_static) */\n    readonly supportedContentEncodings: ReadonlyArray<string>;\n};\n\n/**\n * This Push API interface provides a subcription\'s URL endpoint and allows unsubscription from a push service.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription)\n */\ninterface PushSubscription {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/endpoint) */\n    readonly endpoint: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/expirationTime) */\n    readonly expirationTime: EpochTimeStamp | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/options) */\n    readonly options: PushSubscriptionOptions;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/getKey) */\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/toJSON) */\n    toJSON(): PushSubscriptionJSON;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/unsubscribe) */\n    unsubscribe(): Promise<boolean>;\n}\n\ndeclare var PushSubscription: {\n    prototype: PushSubscription;\n    new(): PushSubscription;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions)\n */\ninterface PushSubscriptionOptions {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/applicationServerKey) */\n    readonly applicationServerKey: ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/userVisibleOnly) */\n    readonly userVisibleOnly: boolean;\n}\n\ndeclare var PushSubscriptionOptions: {\n    prototype: PushSubscriptionOptions;\n    new(): PushSubscriptionOptions;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCCertificate) */\ninterface RTCCertificate {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCCertificate/expires) */\n    readonly expires: EpochTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCCertificate/getFingerprints) */\n    getFingerprints(): RTCDtlsFingerprint[];\n}\n\ndeclare var RTCCertificate: {\n    prototype: RTCCertificate;\n    new(): RTCCertificate;\n};\n\ninterface RTCDTMFSenderEventMap {\n    "tonechange": RTCDTMFToneChangeEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender) */\ninterface RTCDTMFSender extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/canInsertDTMF) */\n    readonly canInsertDTMF: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/tonechange_event) */\n    ontonechange: ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/toneBuffer) */\n    readonly toneBuffer: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFSender/insertDTMF) */\n    insertDTMF(tones: string, duration?: number, interToneGap?: number): void;\n    addEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDTMFSender: {\n    prototype: RTCDTMFSender;\n    new(): RTCDTMFSender;\n};\n\n/**\n * Events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFToneChangeEvent)\n */\ninterface RTCDTMFToneChangeEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDTMFToneChangeEvent/tone) */\n    readonly tone: string;\n}\n\ndeclare var RTCDTMFToneChangeEvent: {\n    prototype: RTCDTMFToneChangeEvent;\n    new(type: string, eventInitDict?: RTCDTMFToneChangeEventInit): RTCDTMFToneChangeEvent;\n};\n\ninterface RTCDataChannelEventMap {\n    "bufferedamountlow": Event;\n    "close": Event;\n    "closing": Event;\n    "error": RTCErrorEvent;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel) */\ninterface RTCDataChannel extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/binaryType) */\n    binaryType: BinaryType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmount) */\n    readonly bufferedAmount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold) */\n    bufferedAmountLowThreshold: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/id) */\n    readonly id: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/label) */\n    readonly label: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxPacketLifeTime) */\n    readonly maxPacketLifeTime: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxRetransmits) */\n    readonly maxRetransmits: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/negotiated) */\n    readonly negotiated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedamountlow_event) */\n    onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close_event) */\n    onclose: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/closing_event) */\n    onclosing: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/error_event) */\n    onerror: ((this: RTCDataChannel, ev: RTCErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/message_event) */\n    onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/open_event) */\n    onopen: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/ordered) */\n    readonly ordered: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/protocol) */\n    readonly protocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/readyState) */\n    readonly readyState: RTCDataChannelState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send) */\n    send(data: string): void;\n    send(data: Blob): void;\n    send(data: ArrayBuffer): void;\n    send(data: ArrayBufferView): void;\n    addEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDataChannel: {\n    prototype: RTCDataChannel;\n    new(): RTCDataChannel;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannelEvent) */\ninterface RTCDataChannelEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannelEvent/channel) */\n    readonly channel: RTCDataChannel;\n}\n\ndeclare var RTCDataChannelEvent: {\n    prototype: RTCDataChannelEvent;\n    new(type: string, eventInitDict: RTCDataChannelEventInit): RTCDataChannelEvent;\n};\n\ninterface RTCDtlsTransportEventMap {\n    "error": RTCErrorEvent;\n    "statechange": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport) */\ninterface RTCDtlsTransport extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/iceTransport) */\n    readonly iceTransport: RTCIceTransport;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/error_event) */\n    onerror: ((this: RTCDtlsTransport, ev: RTCErrorEvent) => any) | null;\n    onstatechange: ((this: RTCDtlsTransport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDtlsTransport/state) */\n    readonly state: RTCDtlsTransportState;\n    getRemoteCertificates(): ArrayBuffer[];\n    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDtlsTransport: {\n    prototype: RTCDtlsTransport;\n    new(): RTCDtlsTransport;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame) */\ninterface RTCEncodedAudioFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/data) */\n    data: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/getMetadata) */\n    getMetadata(): RTCEncodedAudioFrameMetadata;\n}\n\ndeclare var RTCEncodedAudioFrame: {\n    prototype: RTCEncodedAudioFrame;\n    new(): RTCEncodedAudioFrame;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame) */\ninterface RTCEncodedVideoFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/data) */\n    data: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/type) */\n    readonly type: RTCEncodedVideoFrameType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/getMetadata) */\n    getMetadata(): RTCEncodedVideoFrameMetadata;\n}\n\ndeclare var RTCEncodedVideoFrame: {\n    prototype: RTCEncodedVideoFrame;\n    new(): RTCEncodedVideoFrame;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError) */\ninterface RTCError extends DOMException {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/errorDetail) */\n    readonly errorDetail: RTCErrorDetailType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/receivedAlert) */\n    readonly receivedAlert: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sctpCauseCode) */\n    readonly sctpCauseCode: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sdpLineNumber) */\n    readonly sdpLineNumber: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCError/sentAlert) */\n    readonly sentAlert: number | null;\n}\n\ndeclare var RTCError: {\n    prototype: RTCError;\n    new(init: RTCErrorInit, message?: string): RTCError;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCErrorEvent) */\ninterface RTCErrorEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCErrorEvent/error) */\n    readonly error: RTCError;\n}\n\ndeclare var RTCErrorEvent: {\n    prototype: RTCErrorEvent;\n    new(type: string, eventInitDict: RTCErrorEventInit): RTCErrorEvent;\n};\n\n/**\n * The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Internet Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate)\n */\ninterface RTCIceCandidate {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/address) */\n    readonly address: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/candidate) */\n    readonly candidate: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/component) */\n    readonly component: RTCIceComponent | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/foundation) */\n    readonly foundation: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/port) */\n    readonly port: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/priority) */\n    readonly priority: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/protocol) */\n    readonly protocol: RTCIceProtocol | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/relatedAddress) */\n    readonly relatedAddress: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/relatedPort) */\n    readonly relatedPort: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/sdpMLineIndex) */\n    readonly sdpMLineIndex: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/sdpMid) */\n    readonly sdpMid: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/tcpType) */\n    readonly tcpType: RTCIceTcpCandidateType | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/type) */\n    readonly type: RTCIceCandidateType | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/usernameFragment) */\n    readonly usernameFragment: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceCandidate/toJSON) */\n    toJSON(): RTCIceCandidateInit;\n}\n\ndeclare var RTCIceCandidate: {\n    prototype: RTCIceCandidate;\n    new(candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;\n};\n\ninterface RTCIceCandidatePair {\n    local: RTCIceCandidate;\n    remote: RTCIceCandidate;\n}\n\ninterface RTCIceTransportEventMap {\n    "gatheringstatechange": Event;\n    "selectedcandidatepairchange": Event;\n    "statechange": Event;\n}\n\n/**\n * Provides access to information about the ICE transport layer over which the data is being sent and received.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport)\n */\ninterface RTCIceTransport extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringState) */\n    readonly gatheringState: RTCIceGathererState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/gatheringstatechange_event) */\n    ongatheringstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event) */\n    onselectedcandidatepairchange: ((this: RTCIceTransport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/statechange_event) */\n    onstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/state) */\n    readonly state: RTCIceTransportState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCIceTransport/getSelectedCandidatePair) */\n    getSelectedCandidatePair(): RTCIceCandidatePair | null;\n    addEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCIceTransport: {\n    prototype: RTCIceTransport;\n    new(): RTCIceTransport;\n};\n\ninterface RTCPeerConnectionEventMap {\n    "connectionstatechange": Event;\n    "datachannel": RTCDataChannelEvent;\n    "icecandidate": RTCPeerConnectionIceEvent;\n    "icecandidateerror": RTCPeerConnectionIceErrorEvent;\n    "iceconnectionstatechange": Event;\n    "icegatheringstatechange": Event;\n    "negotiationneeded": Event;\n    "signalingstatechange": Event;\n    "track": RTCTrackEvent;\n}\n\n/**\n * A WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it\'s no longer needed.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection)\n */\ninterface RTCPeerConnection extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates) */\n    readonly canTrickleIceCandidates: boolean | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionState) */\n    readonly connectionState: RTCPeerConnectionState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/currentLocalDescription) */\n    readonly currentLocalDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/currentRemoteDescription) */\n    readonly currentRemoteDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceConnectionState) */\n    readonly iceConnectionState: RTCIceConnectionState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceGatheringState) */\n    readonly iceGatheringState: RTCIceGatheringState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/localDescription) */\n    readonly localDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/connectionstatechange_event) */\n    onconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/datachannel_event) */\n    ondatachannel: ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidate_event) */\n    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icecandidateerror_event) */\n    onicecandidateerror: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event) */\n    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event) */\n    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/negotiationneeded_event) */\n    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingstatechange_event) */\n    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/track_event) */\n    ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingLocalDescription) */\n    readonly pendingLocalDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/pendingRemoteDescription) */\n    readonly pendingRemoteDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/remoteDescription) */\n    readonly remoteDescription: RTCSessionDescription | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/sctp) */\n    readonly sctp: RTCSctpTransport | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/signalingState) */\n    readonly signalingState: RTCSignalingState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addIceCandidate) */\n    addIceCandidate(candidate?: RTCIceCandidateInit | null): Promise<void>;\n    /** @deprecated */\n    addIceCandidate(candidate: RTCIceCandidateInit | null, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTrack) */\n    addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/addTransceiver) */\n    addTransceiver(trackOrKind: MediaStreamTrack | string, init?: RTCRtpTransceiverInit): RTCRtpTransceiver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createAnswer) */\n    createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit>;\n    /** @deprecated */\n    createAnswer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createDataChannel) */\n    createDataChannel(label: string, dataChannelDict?: RTCDataChannelInit): RTCDataChannel;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/createOffer) */\n    createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\n    /** @deprecated */\n    createOffer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnectionErrorCallback, options?: RTCOfferOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getConfiguration) */\n    getConfiguration(): RTCConfiguration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getReceivers) */\n    getReceivers(): RTCRtpReceiver[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getSenders) */\n    getSenders(): RTCRtpSender[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getStats) */\n    getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/getTransceivers) */\n    getTransceivers(): RTCRtpTransceiver[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/removeTrack) */\n    removeTrack(sender: RTCRtpSender): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/restartIce) */\n    restartIce(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setConfiguration) */\n    setConfiguration(configuration?: RTCConfiguration): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setLocalDescription) */\n    setLocalDescription(description?: RTCLocalSessionDescriptionInit): Promise<void>;\n    /** @deprecated */\n    setLocalDescription(description: RTCLocalSessionDescriptionInit, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/setRemoteDescription) */\n    setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;\n    /** @deprecated */\n    setRemoteDescription(description: RTCSessionDescriptionInit, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCPeerConnection: {\n    prototype: RTCPeerConnection;\n    new(configuration?: RTCConfiguration): RTCPeerConnection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnection/generateCertificate_static) */\n    generateCertificate(keygenAlgorithm: AlgorithmIdentifier): Promise<RTCCertificate>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceErrorEvent) */\ninterface RTCPeerConnectionIceErrorEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceErrorEvent/address) */\n    readonly address: string | null;\n    readonly errorCode: number;\n    readonly errorText: string;\n    readonly port: number | null;\n    readonly url: string;\n}\n\ndeclare var RTCPeerConnectionIceErrorEvent: {\n    prototype: RTCPeerConnectionIceErrorEvent;\n    new(type: string, eventInitDict: RTCPeerConnectionIceErrorEventInit): RTCPeerConnectionIceErrorEvent;\n};\n\n/**\n * Events that occurs in relation to ICE candidates with the target, usually an RTCPeerConnection. Only one event is of this type: icecandidate.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceEvent)\n */\ninterface RTCPeerConnectionIceEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCPeerConnectionIceEvent/candidate) */\n    readonly candidate: RTCIceCandidate | null;\n}\n\ndeclare var RTCPeerConnectionIceEvent: {\n    prototype: RTCPeerConnectionIceEvent;\n    new(type: string, eventInitDict?: RTCPeerConnectionIceEventInit): RTCPeerConnectionIceEvent;\n};\n\n/**\n * This WebRTC API interface manages the reception and decoding of data for a\xa0MediaStreamTrack on an\xa0RTCPeerConnection.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver)\n */\ninterface RTCRtpReceiver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/jitterBufferTarget) */\n    jitterBufferTarget: DOMHighResTimeStamp | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/track) */\n    readonly track: MediaStreamTrack;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/transform) */\n    transform: RTCRtpTransform | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/transport) */\n    readonly transport: RTCDtlsTransport | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getContributingSources) */\n    getContributingSources(): RTCRtpContributingSource[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getParameters) */\n    getParameters(): RTCRtpReceiveParameters;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getStats) */\n    getStats(): Promise<RTCStatsReport>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getSynchronizationSources) */\n    getSynchronizationSources(): RTCRtpSynchronizationSource[];\n}\n\ndeclare var RTCRtpReceiver: {\n    prototype: RTCRtpReceiver;\n    new(): RTCRtpReceiver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpReceiver/getCapabilities_static) */\n    getCapabilities(kind: string): RTCRtpCapabilities | null;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransform) */\ninterface RTCRtpScriptTransform {\n}\n\ndeclare var RTCRtpScriptTransform: {\n    prototype: RTCRtpScriptTransform;\n    new(worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;\n};\n\n/**\n * Provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender)\n */\ninterface RTCRtpSender {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/dtmf) */\n    readonly dtmf: RTCDTMFSender | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/track) */\n    readonly track: MediaStreamTrack | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/transform) */\n    transform: RTCRtpTransform | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/transport) */\n    readonly transport: RTCDtlsTransport | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getParameters) */\n    getParameters(): RTCRtpSendParameters;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getStats) */\n    getStats(): Promise<RTCStatsReport>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/replaceTrack) */\n    replaceTrack(withTrack: MediaStreamTrack | null): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setParameters) */\n    setParameters(parameters: RTCRtpSendParameters, setParameterOptions?: RTCSetParameterOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/setStreams) */\n    setStreams(...streams: MediaStream[]): void;\n}\n\ndeclare var RTCRtpSender: {\n    prototype: RTCRtpSender;\n    new(): RTCRtpSender;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpSender/getCapabilities_static) */\n    getCapabilities(kind: string): RTCRtpCapabilities | null;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver) */\ninterface RTCRtpTransceiver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/currentDirection) */\n    readonly currentDirection: RTCRtpTransceiverDirection | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/direction) */\n    direction: RTCRtpTransceiverDirection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/mid) */\n    readonly mid: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/receiver) */\n    readonly receiver: RTCRtpReceiver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/sender) */\n    readonly sender: RTCRtpSender;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/setCodecPreferences) */\n    setCodecPreferences(codecs: RTCRtpCodec[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/stop) */\n    stop(): void;\n}\n\ndeclare var RTCRtpTransceiver: {\n    prototype: RTCRtpTransceiver;\n    new(): RTCRtpTransceiver;\n};\n\ninterface RTCSctpTransportEventMap {\n    "statechange": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport) */\ninterface RTCSctpTransport extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/maxChannels) */\n    readonly maxChannels: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/maxMessageSize) */\n    readonly maxMessageSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/statechange_event) */\n    onstatechange: ((this: RTCSctpTransport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/state) */\n    readonly state: RTCSctpTransportState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSctpTransport/transport) */\n    readonly transport: RTCDtlsTransport;\n    addEventListener<K extends keyof RTCSctpTransportEventMap>(type: K, listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCSctpTransportEventMap>(type: K, listener: (this: RTCSctpTransport, ev: RTCSctpTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCSctpTransport: {\n    prototype: RTCSctpTransport;\n    new(): RTCSctpTransport;\n};\n\n/**\n * One end of a connection—or potential connection—and how it\'s configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription)\n */\ninterface RTCSessionDescription {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/sdp) */\n    readonly sdp: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/type) */\n    readonly type: RTCSdpType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCSessionDescription/toJSON) */\n    toJSON(): RTCSessionDescriptionInit;\n}\n\ndeclare var RTCSessionDescription: {\n    prototype: RTCSessionDescription;\n    new(descriptionInitDict: RTCSessionDescriptionInit): RTCSessionDescription;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCStatsReport) */\ninterface RTCStatsReport {\n    forEach(callbackfn: (value: any, key: string, parent: RTCStatsReport) => void, thisArg?: any): void;\n}\n\ndeclare var RTCStatsReport: {\n    prototype: RTCStatsReport;\n    new(): RTCStatsReport;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent) */\ninterface RTCTrackEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/receiver) */\n    readonly receiver: RTCRtpReceiver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/streams) */\n    readonly streams: ReadonlyArray<MediaStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/track) */\n    readonly track: MediaStreamTrack;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTrackEvent/transceiver) */\n    readonly transceiver: RTCRtpTransceiver;\n}\n\ndeclare var RTCTrackEvent: {\n    prototype: RTCTrackEvent;\n    new(type: string, eventInitDict: RTCTrackEventInit): RTCTrackEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RadioNodeList) */\ninterface RadioNodeList extends NodeList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RadioNodeList/value) */\n    value: string;\n}\n\ndeclare var RadioNodeList: {\n    prototype: RadioNodeList;\n    new(): RadioNodeList;\n};\n\n/**\n * A fragment of a document that can contain nodes and parts of text nodes.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range)\n */\ninterface Range extends AbstractRange {\n    /**\n     * Returns the node, furthest away from the document, that is an ancestor of both range\'s start node and end node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/commonAncestorContainer)\n     */\n    readonly commonAncestorContainer: Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/cloneContents) */\n    cloneContents(): DocumentFragment;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/cloneRange) */\n    cloneRange(): Range;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/collapse) */\n    collapse(toStart?: boolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/compareBoundaryPoints) */\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\n    /**\n     * Returns −1 if the point is before the range, 0 if the point is in the range, and 1 if the point is after the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/comparePoint)\n     */\n    comparePoint(node: Node, offset: number): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/createContextualFragment) */\n    createContextualFragment(string: string): DocumentFragment;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/deleteContents) */\n    deleteContents(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/detach) */\n    detach(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/extractContents) */\n    extractContents(): DocumentFragment;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/getBoundingClientRect) */\n    getBoundingClientRect(): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/getClientRects) */\n    getClientRects(): DOMRectList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/insertNode) */\n    insertNode(node: Node): void;\n    /**\n     * Returns whether range intersects node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/intersectsNode)\n     */\n    intersectsNode(node: Node): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/isPointInRange) */\n    isPointInRange(node: Node, offset: number): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/selectNode) */\n    selectNode(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/selectNodeContents) */\n    selectNodeContents(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEnd) */\n    setEnd(node: Node, offset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEndAfter) */\n    setEndAfter(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setEndBefore) */\n    setEndBefore(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStart) */\n    setStart(node: Node, offset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStartAfter) */\n    setStartAfter(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/setStartBefore) */\n    setStartBefore(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Range/surroundContents) */\n    surroundContents(newParent: Node): void;\n    toString(): string;\n    readonly START_TO_START: 0;\n    readonly START_TO_END: 1;\n    readonly END_TO_END: 2;\n    readonly END_TO_START: 3;\n}\n\ndeclare var Range: {\n    prototype: Range;\n    new(): Range;\n    readonly START_TO_START: 0;\n    readonly START_TO_END: 1;\n    readonly END_TO_END: 2;\n    readonly END_TO_START: 3;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController) */\ninterface ReadableByteStreamController {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/byobRequest) */\n    readonly byobRequest: ReadableStreamBYOBRequest | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue) */\n    enqueue(chunk: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error) */\n    error(e?: any): void;\n}\n\ndeclare var ReadableByteStreamController: {\n    prototype: ReadableByteStreamController;\n    new(): ReadableByteStreamController;\n};\n\n/**\n * This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)\n */\ninterface ReadableStream<R = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked) */\n    readonly locked: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel) */\n    cancel(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader) */\n    getReader(options: { mode: "byob" }): ReadableStreamBYOBReader;\n    getReader(): ReadableStreamDefaultReader<R>;\n    getReader(options?: ReadableStreamGetReaderOptions): ReadableStreamReader<R>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeThrough) */\n    pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): ReadableStream<T>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeTo) */\n    pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/tee) */\n    tee(): [ReadableStream<R>, ReadableStream<R>];\n}\n\ndeclare var ReadableStream: {\n    prototype: ReadableStream;\n    new(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number }): ReadableStream<Uint8Array>;\n    new<R = any>(underlyingSource: UnderlyingDefaultSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n    new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader) */\ninterface ReadableStreamBYOBReader extends ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/read) */\n    read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamReadResult<T>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/releaseLock) */\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamBYOBReader: {\n    prototype: ReadableStreamBYOBReader;\n    new(stream: ReadableStream<Uint8Array>): ReadableStreamBYOBReader;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest) */\ninterface ReadableStreamBYOBRequest {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/view) */\n    readonly view: ArrayBufferView | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respond) */\n    respond(bytesWritten: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView) */\n    respondWithNewView(view: ArrayBufferView): void;\n}\n\ndeclare var ReadableStreamBYOBRequest: {\n    prototype: ReadableStreamBYOBRequest;\n    new(): ReadableStreamBYOBRequest;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController) */\ninterface ReadableStreamDefaultController<R = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue) */\n    enqueue(chunk?: R): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error) */\n    error(e?: any): void;\n}\n\ndeclare var ReadableStreamDefaultController: {\n    prototype: ReadableStreamDefaultController;\n    new(): ReadableStreamDefaultController;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader) */\ninterface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read) */\n    read(): Promise<ReadableStreamReadResult<R>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/releaseLock) */\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamDefaultReader: {\n    prototype: ReadableStreamDefaultReader;\n    new<R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;\n};\n\ninterface ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed) */\n    readonly closed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel) */\n    cancel(reason?: any): Promise<void>;\n}\n\ninterface RemotePlaybackEventMap {\n    "connect": Event;\n    "connecting": Event;\n    "disconnect": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback) */\ninterface RemotePlayback extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connect_event) */\n    onconnect: ((this: RemotePlayback, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/connecting_event) */\n    onconnecting: ((this: RemotePlayback, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/disconnect_event) */\n    ondisconnect: ((this: RemotePlayback, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/state) */\n    readonly state: RemotePlaybackState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/cancelWatchAvailability) */\n    cancelWatchAvailability(id?: number): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/prompt) */\n    prompt(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RemotePlayback/watchAvailability) */\n    watchAvailability(callback: RemotePlaybackAvailabilityCallback): Promise<number>;\n    addEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RemotePlayback: {\n    prototype: RemotePlayback;\n    new(): RemotePlayback;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report) */\ninterface Report {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/body) */\n    readonly body: ReportBody | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */\n    readonly url: string;\n    toJSON(): any;\n}\n\ndeclare var Report: {\n    prototype: Report;\n    new(): Report;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody) */\ninterface ReportBody {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var ReportBody: {\n    prototype: ReportBody;\n    new(): ReportBody;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver) */\ninterface ReportingObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/observe) */\n    observe(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/takeRecords) */\n    takeRecords(): ReportList;\n}\n\ndeclare var ReportingObserver: {\n    prototype: ReportingObserver;\n    new(callback: ReportingObserverCallback, options?: ReportingObserverOptions): ReportingObserver;\n};\n\n/**\n * This Fetch API interface represents a resource request.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)\n */\ninterface Request extends Body {\n    /**\n     * Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser\'s cache when fetching.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)\n     */\n    readonly cache: RequestCache;\n    /**\n     * Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)\n     */\n    readonly credentials: RequestCredentials;\n    /**\n     * Returns the kind of resource requested by request, e.g., "document" or "script".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)\n     */\n    readonly destination: RequestDestination;\n    /**\n     * Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the "Host" header.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)\n     */\n    readonly headers: Headers;\n    /**\n     * Returns request\'s subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)\n     */\n    readonly integrity: string;\n    /**\n     * Returns a boolean indicating whether or not request can outlive the global in which it was created.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)\n     */\n    readonly keepalive: boolean;\n    /**\n     * Returns request\'s HTTP method, which is "GET" by default.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)\n     */\n    readonly method: string;\n    /**\n     * Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)\n     */\n    readonly mode: RequestMode;\n    /**\n     * Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)\n     */\n    readonly redirect: RequestRedirect;\n    /**\n     * Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and "about:client" when defaulting to the global\'s default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)\n     */\n    readonly referrer: string;\n    /**\n     * Returns the referrer policy associated with request. This is used during fetching to compute the value of the request\'s referrer.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)\n     */\n    readonly referrerPolicy: ReferrerPolicy;\n    /**\n     * Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Returns the URL of request as a string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)\n     */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/clone) */\n    clone(): Request;\n}\n\ndeclare var Request: {\n    prototype: Request;\n    new(input: RequestInfo | URL, init?: RequestInit): Request;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver) */\ninterface ResizeObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/observe) */\n    observe(target: Element, options?: ResizeObserverOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserver/unobserve) */\n    unobserve(target: Element): void;\n}\n\ndeclare var ResizeObserver: {\n    prototype: ResizeObserver;\n    new(callback: ResizeObserverCallback): ResizeObserver;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry) */\ninterface ResizeObserverEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/borderBoxSize) */\n    readonly borderBoxSize: ReadonlyArray<ResizeObserverSize>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/contentBoxSize) */\n    readonly contentBoxSize: ReadonlyArray<ResizeObserverSize>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/contentRect) */\n    readonly contentRect: DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/devicePixelContentBoxSize) */\n    readonly devicePixelContentBoxSize: ReadonlyArray<ResizeObserverSize>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverEntry/target) */\n    readonly target: Element;\n}\n\ndeclare var ResizeObserverEntry: {\n    prototype: ResizeObserverEntry;\n    new(): ResizeObserverEntry;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverSize) */\ninterface ResizeObserverSize {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverSize/blockSize) */\n    readonly blockSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ResizeObserverSize/inlineSize) */\n    readonly inlineSize: number;\n}\n\ndeclare var ResizeObserverSize: {\n    prototype: ResizeObserverSize;\n    new(): ResizeObserverSize;\n};\n\n/**\n * This Fetch API interface represents the response to a request.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response)\n */\ninterface Response extends Body {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/headers) */\n    readonly headers: Headers;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/ok) */\n    readonly ok: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirected) */\n    readonly redirected: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/status) */\n    readonly status: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/statusText) */\n    readonly statusText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/type) */\n    readonly type: ResponseType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/url) */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/clone) */\n    clone(): Response;\n}\n\ndeclare var Response: {\n    prototype: Response;\n    new(body?: BodyInit | null, init?: ResponseInit): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/error_static) */\n    error(): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static) */\n    json(data: any, init?: ResponseInit): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static) */\n    redirect(url: string | URL, status?: number): Response;\n};\n\n/**\n * Provides access to the properties of <a> element, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAElement)\n */\ninterface SVGAElement extends SVGGraphicsElement, SVGURIReference {\n    rel: string;\n    get relList(): DOMTokenList;\n    set relList(value: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAElement/target) */\n    readonly target: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAElement: {\n    prototype: SVGAElement;\n    new(): SVGAElement;\n};\n\n/**\n * Used to represent a value that can be an <angle> or <number> value. An SVGAngle reflected through the animVal attribute is always read only.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle)\n */\ninterface SVGAngle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/unitType) */\n    readonly unitType: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/value) */\n    value: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/valueAsString) */\n    valueAsString: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/valueInSpecifiedUnits) */\n    valueInSpecifiedUnits: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/convertToSpecifiedUnits) */\n    convertToSpecifiedUnits(unitType: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAngle/newValueSpecifiedUnits) */\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    readonly SVG_ANGLETYPE_UNKNOWN: 0;\n    readonly SVG_ANGLETYPE_UNSPECIFIED: 1;\n    readonly SVG_ANGLETYPE_DEG: 2;\n    readonly SVG_ANGLETYPE_RAD: 3;\n    readonly SVG_ANGLETYPE_GRAD: 4;\n}\n\ndeclare var SVGAngle: {\n    prototype: SVGAngle;\n    new(): SVGAngle;\n    readonly SVG_ANGLETYPE_UNKNOWN: 0;\n    readonly SVG_ANGLETYPE_UNSPECIFIED: 1;\n    readonly SVG_ANGLETYPE_DEG: 2;\n    readonly SVG_ANGLETYPE_RAD: 3;\n    readonly SVG_ANGLETYPE_GRAD: 4;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimateElement) */\ninterface SVGAnimateElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateElement: {\n    prototype: SVGAnimateElement;\n    new(): SVGAnimateElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimateMotionElement) */\ninterface SVGAnimateMotionElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateMotionElement: {\n    prototype: SVGAnimateMotionElement;\n    new(): SVGAnimateMotionElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimateTransformElement) */\ninterface SVGAnimateTransformElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateTransformElement: {\n    prototype: SVGAnimateTransformElement;\n    new(): SVGAnimateTransformElement;\n};\n\n/**\n * Used for attributes of basic type <angle> which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedAngle)\n */\ninterface SVGAnimatedAngle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedAngle/animVal) */\n    readonly animVal: SVGAngle;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedAngle/baseVal) */\n    readonly baseVal: SVGAngle;\n}\n\ndeclare var SVGAnimatedAngle: {\n    prototype: SVGAnimatedAngle;\n    new(): SVGAnimatedAngle;\n};\n\n/**\n * Used for attributes of type boolean which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedBoolean)\n */\ninterface SVGAnimatedBoolean {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedBoolean/animVal) */\n    readonly animVal: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedBoolean/baseVal) */\n    baseVal: boolean;\n}\n\ndeclare var SVGAnimatedBoolean: {\n    prototype: SVGAnimatedBoolean;\n    new(): SVGAnimatedBoolean;\n};\n\n/**\n * Used for attributes whose value must be a constant from a particular enumeration and which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedEnumeration)\n */\ninterface SVGAnimatedEnumeration {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedEnumeration/animVal) */\n    readonly animVal: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedEnumeration/baseVal) */\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedEnumeration: {\n    prototype: SVGAnimatedEnumeration;\n    new(): SVGAnimatedEnumeration;\n};\n\n/**\n * Used for attributes of basic type <integer> which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedInteger)\n */\ninterface SVGAnimatedInteger {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedInteger/animVal) */\n    readonly animVal: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedInteger/baseVal) */\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedInteger: {\n    prototype: SVGAnimatedInteger;\n    new(): SVGAnimatedInteger;\n};\n\n/**\n * Used for attributes of basic type <length> which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLength)\n */\ninterface SVGAnimatedLength {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLength/animVal) */\n    readonly animVal: SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLength/baseVal) */\n    readonly baseVal: SVGLength;\n}\n\ndeclare var SVGAnimatedLength: {\n    prototype: SVGAnimatedLength;\n    new(): SVGAnimatedLength;\n};\n\n/**\n * Used for attributes of type SVGLengthList which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLengthList)\n */\ninterface SVGAnimatedLengthList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLengthList/animVal) */\n    readonly animVal: SVGLengthList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedLengthList/baseVal) */\n    readonly baseVal: SVGLengthList;\n}\n\ndeclare var SVGAnimatedLengthList: {\n    prototype: SVGAnimatedLengthList;\n    new(): SVGAnimatedLengthList;\n};\n\n/**\n * Used for attributes of basic type <Number> which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumber)\n */\ninterface SVGAnimatedNumber {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumber/animVal) */\n    readonly animVal: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumber/baseVal) */\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedNumber: {\n    prototype: SVGAnimatedNumber;\n    new(): SVGAnimatedNumber;\n};\n\n/**\n * The SVGAnimatedNumber interface is used for attributes which take a list of numbers and which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumberList)\n */\ninterface SVGAnimatedNumberList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumberList/animVal) */\n    readonly animVal: SVGNumberList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedNumberList/baseVal) */\n    readonly baseVal: SVGNumberList;\n}\n\ndeclare var SVGAnimatedNumberList: {\n    prototype: SVGAnimatedNumberList;\n    new(): SVGAnimatedNumberList;\n};\n\ninterface SVGAnimatedPoints {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolygonElement/animatedPoints) */\n    readonly animatedPoints: SVGPointList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolygonElement/points) */\n    readonly points: SVGPointList;\n}\n\n/**\n * Used for attributes of type SVGPreserveAspectRatio which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedPreserveAspectRatio)\n */\ninterface SVGAnimatedPreserveAspectRatio {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedPreserveAspectRatio/animVal) */\n    readonly animVal: SVGPreserveAspectRatio;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedPreserveAspectRatio/baseVal) */\n    readonly baseVal: SVGPreserveAspectRatio;\n}\n\ndeclare var SVGAnimatedPreserveAspectRatio: {\n    prototype: SVGAnimatedPreserveAspectRatio;\n    new(): SVGAnimatedPreserveAspectRatio;\n};\n\n/**\n * Used for attributes of basic SVGRect which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedRect)\n */\ninterface SVGAnimatedRect {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedRect/animVal) */\n    readonly animVal: DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedRect/baseVal) */\n    readonly baseVal: DOMRect;\n}\n\ndeclare var SVGAnimatedRect: {\n    prototype: SVGAnimatedRect;\n    new(): SVGAnimatedRect;\n};\n\n/**\n * The SVGAnimatedString\xa0interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared\xa0inside this.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedString)\n */\ninterface SVGAnimatedString {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedString/animVal) */\n    readonly animVal: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedString/baseVal) */\n    baseVal: string;\n}\n\ndeclare var SVGAnimatedString: {\n    prototype: SVGAnimatedString;\n    new(): SVGAnimatedString;\n};\n\n/**\n * Used for attributes which take a list of numbers and which can be animated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedTransformList)\n */\ninterface SVGAnimatedTransformList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedTransformList/animVal) */\n    readonly animVal: SVGTransformList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimatedTransformList/baseVal) */\n    readonly baseVal: SVGTransformList;\n}\n\ndeclare var SVGAnimatedTransformList: {\n    prototype: SVGAnimatedTransformList;\n    new(): SVGAnimatedTransformList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement) */\ninterface SVGAnimationElement extends SVGElement, SVGTests {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/targetElement) */\n    readonly targetElement: SVGElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/beginElement) */\n    beginElement(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/beginElementAt) */\n    beginElementAt(offset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/endElement) */\n    endElement(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/endElementAt) */\n    endElementAt(offset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getCurrentTime) */\n    getCurrentTime(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getSimpleDuration) */\n    getSimpleDuration(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/getStartTime) */\n    getStartTime(): number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimationElement: {\n    prototype: SVGAnimationElement;\n    new(): SVGAnimationElement;\n};\n\n/**\n * An interface for the <circle> element. The circle element is defined by the cx and cy attributes that denote the coordinates of the centre of the circle.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement)\n */\ninterface SVGCircleElement extends SVGGeometryElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/cx) */\n    readonly cx: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/cy) */\n    readonly cy: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGCircleElement/r) */\n    readonly r: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGCircleElement: {\n    prototype: SVGCircleElement;\n    new(): SVGCircleElement;\n};\n\n/**\n * Provides access to the properties of <clipPath> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGClipPathElement)\n */\ninterface SVGClipPathElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGClipPathElement/clipPathUnits) */\n    readonly clipPathUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGClipPathElement/transform) */\n    readonly transform: SVGAnimatedTransformList;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGClipPathElement: {\n    prototype: SVGClipPathElement;\n    new(): SVGClipPathElement;\n};\n\n/**\n * A base interface used by the component transfer function interfaces.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement)\n */\ninterface SVGComponentTransferFunctionElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/amplitude) */\n    readonly amplitude: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/exponent) */\n    readonly exponent: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/intercept) */\n    readonly intercept: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/offset) */\n    readonly offset: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/slope) */\n    readonly slope: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/tableValues) */\n    readonly tableValues: SVGAnimatedNumberList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGComponentTransferFunctionElement/type) */\n    readonly type: SVGAnimatedEnumeration;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: 1;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: 2;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: 3;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: 4;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: 5;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGComponentTransferFunctionElement: {\n    prototype: SVGComponentTransferFunctionElement;\n    new(): SVGComponentTransferFunctionElement;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: 1;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: 2;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: 3;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: 4;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: 5;\n};\n\n/**\n * Corresponds to the <defs> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGDefsElement)\n */\ninterface SVGDefsElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGDefsElement: {\n    prototype: SVGDefsElement;\n    new(): SVGDefsElement;\n};\n\n/**\n * Corresponds to the <desc> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGDescElement)\n */\ninterface SVGDescElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGDescElement: {\n    prototype: SVGDescElement;\n    new(): SVGDescElement;\n};\n\ninterface SVGElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {\n}\n\n/**\n * All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement)\n */\ninterface SVGElement extends Element, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGElement {\n    /** @deprecated */\n    readonly className: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/ownerSVGElement) */\n    readonly ownerSVGElement: SVGSVGElement | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/viewportElement) */\n    readonly viewportElement: SVGElement | null;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGElement: {\n    prototype: SVGElement;\n    new(): SVGElement;\n};\n\n/**\n * Provides access to the properties of <ellipse> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGEllipseElement)\n */\ninterface SVGEllipseElement extends SVGGeometryElement {\n    readonly cx: SVGAnimatedLength;\n    readonly cy: SVGAnimatedLength;\n    readonly rx: SVGAnimatedLength;\n    readonly ry: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGEllipseElement: {\n    prototype: SVGEllipseElement;\n    new(): SVGEllipseElement;\n};\n\n/**\n * Corresponds to the <feBlend> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEBlendElement)\n */\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly mode: SVGAnimatedEnumeration;\n    readonly SVG_FEBLEND_MODE_UNKNOWN: 0;\n    readonly SVG_FEBLEND_MODE_NORMAL: 1;\n    readonly SVG_FEBLEND_MODE_MULTIPLY: 2;\n    readonly SVG_FEBLEND_MODE_SCREEN: 3;\n    readonly SVG_FEBLEND_MODE_DARKEN: 4;\n    readonly SVG_FEBLEND_MODE_LIGHTEN: 5;\n    readonly SVG_FEBLEND_MODE_OVERLAY: 6;\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: 7;\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: 8;\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: 9;\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: 10;\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: 11;\n    readonly SVG_FEBLEND_MODE_EXCLUSION: 12;\n    readonly SVG_FEBLEND_MODE_HUE: 13;\n    readonly SVG_FEBLEND_MODE_SATURATION: 14;\n    readonly SVG_FEBLEND_MODE_COLOR: 15;\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEBlendElement: {\n    prototype: SVGFEBlendElement;\n    new(): SVGFEBlendElement;\n    readonly SVG_FEBLEND_MODE_UNKNOWN: 0;\n    readonly SVG_FEBLEND_MODE_NORMAL: 1;\n    readonly SVG_FEBLEND_MODE_MULTIPLY: 2;\n    readonly SVG_FEBLEND_MODE_SCREEN: 3;\n    readonly SVG_FEBLEND_MODE_DARKEN: 4;\n    readonly SVG_FEBLEND_MODE_LIGHTEN: 5;\n    readonly SVG_FEBLEND_MODE_OVERLAY: 6;\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: 7;\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: 8;\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: 9;\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: 10;\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: 11;\n    readonly SVG_FEBLEND_MODE_EXCLUSION: 12;\n    readonly SVG_FEBLEND_MODE_HUE: 13;\n    readonly SVG_FEBLEND_MODE_SATURATION: 14;\n    readonly SVG_FEBLEND_MODE_COLOR: 15;\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;\n};\n\n/**\n * Corresponds to the <feColorMatrix> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement)\n */\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/in1) */\n    readonly in1: SVGAnimatedString;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/type) */\n    readonly type: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEColorMatrixElement/values) */\n    readonly values: SVGAnimatedNumberList;\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: 1;\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: 2;\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: 3;\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEColorMatrixElement: {\n    prototype: SVGFEColorMatrixElement;\n    new(): SVGFEColorMatrixElement;\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: 1;\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: 2;\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: 3;\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;\n};\n\n/**\n * Corresponds to the <feComponentTransfer> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEComponentTransferElement)\n */\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEComponentTransferElement: {\n    prototype: SVGFEComponentTransferElement;\n    new(): SVGFEComponentTransferElement;\n};\n\n/**\n * Corresponds to the <feComposite> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFECompositeElement)\n */\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly k1: SVGAnimatedNumber;\n    readonly k2: SVGAnimatedNumber;\n    readonly k3: SVGAnimatedNumber;\n    readonly k4: SVGAnimatedNumber;\n    readonly operator: SVGAnimatedEnumeration;\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: 1;\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: 2;\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: 3;\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: 4;\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: 5;\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFECompositeElement: {\n    prototype: SVGFECompositeElement;\n    new(): SVGFECompositeElement;\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: 1;\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: 2;\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: 3;\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: 4;\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: 5;\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;\n};\n\n/**\n * Corresponds to the <feConvolveMatrix> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEConvolveMatrixElement)\n */\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly bias: SVGAnimatedNumber;\n    readonly divisor: SVGAnimatedNumber;\n    readonly edgeMode: SVGAnimatedEnumeration;\n    readonly in1: SVGAnimatedString;\n    readonly kernelMatrix: SVGAnimatedNumberList;\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    readonly orderX: SVGAnimatedInteger;\n    readonly orderY: SVGAnimatedInteger;\n    readonly preserveAlpha: SVGAnimatedBoolean;\n    readonly targetX: SVGAnimatedInteger;\n    readonly targetY: SVGAnimatedInteger;\n    readonly SVG_EDGEMODE_UNKNOWN: 0;\n    readonly SVG_EDGEMODE_DUPLICATE: 1;\n    readonly SVG_EDGEMODE_WRAP: 2;\n    readonly SVG_EDGEMODE_NONE: 3;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEConvolveMatrixElement: {\n    prototype: SVGFEConvolveMatrixElement;\n    new(): SVGFEConvolveMatrixElement;\n    readonly SVG_EDGEMODE_UNKNOWN: 0;\n    readonly SVG_EDGEMODE_DUPLICATE: 1;\n    readonly SVG_EDGEMODE_WRAP: 2;\n    readonly SVG_EDGEMODE_NONE: 3;\n};\n\n/**\n * Corresponds to the <feDiffuseLighting> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement)\n */\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/diffuseConstant) */\n    readonly diffuseConstant: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/in1) */\n    readonly in1: SVGAnimatedString;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthX) */\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthY) */\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDiffuseLightingElement/surfaceScale) */\n    readonly surfaceScale: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDiffuseLightingElement: {\n    prototype: SVGFEDiffuseLightingElement;\n    new(): SVGFEDiffuseLightingElement;\n};\n\n/**\n * Corresponds to the <feDisplacementMap> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDisplacementMapElement)\n */\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly scale: SVGAnimatedNumber;\n    readonly xChannelSelector: SVGAnimatedEnumeration;\n    readonly yChannelSelector: SVGAnimatedEnumeration;\n    readonly SVG_CHANNEL_UNKNOWN: 0;\n    readonly SVG_CHANNEL_R: 1;\n    readonly SVG_CHANNEL_G: 2;\n    readonly SVG_CHANNEL_B: 3;\n    readonly SVG_CHANNEL_A: 4;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDisplacementMapElement: {\n    prototype: SVGFEDisplacementMapElement;\n    new(): SVGFEDisplacementMapElement;\n    readonly SVG_CHANNEL_UNKNOWN: 0;\n    readonly SVG_CHANNEL_R: 1;\n    readonly SVG_CHANNEL_G: 2;\n    readonly SVG_CHANNEL_B: 3;\n    readonly SVG_CHANNEL_A: 4;\n};\n\n/**\n * Corresponds to the <feDistantLight> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDistantLightElement)\n */\ninterface SVGFEDistantLightElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDistantLightElement/azimuth) */\n    readonly azimuth: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDistantLightElement/elevation) */\n    readonly elevation: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDistantLightElement: {\n    prototype: SVGFEDistantLightElement;\n    new(): SVGFEDistantLightElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEDropShadowElement) */\ninterface SVGFEDropShadowElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly dx: SVGAnimatedNumber;\n    readonly dy: SVGAnimatedNumber;\n    readonly in1: SVGAnimatedString;\n    readonly stdDeviationX: SVGAnimatedNumber;\n    readonly stdDeviationY: SVGAnimatedNumber;\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDropShadowElement: {\n    prototype: SVGFEDropShadowElement;\n    new(): SVGFEDropShadowElement;\n};\n\n/**\n * Corresponds to the <feFlood> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEFloodElement)\n */\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFloodElement: {\n    prototype: SVGFEFloodElement;\n    new(): SVGFEFloodElement;\n};\n\n/**\n * Corresponds to the <feFuncA> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEFuncAElement)\n */\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncAElement: {\n    prototype: SVGFEFuncAElement;\n    new(): SVGFEFuncAElement;\n};\n\n/**\n * Corresponds to the <feFuncB> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEFuncBElement)\n */\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncBElement: {\n    prototype: SVGFEFuncBElement;\n    new(): SVGFEFuncBElement;\n};\n\n/**\n * Corresponds to the <feFuncG> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEFuncGElement)\n */\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncGElement: {\n    prototype: SVGFEFuncGElement;\n    new(): SVGFEFuncGElement;\n};\n\n/**\n * Corresponds to the <feFuncR> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEFuncRElement)\n */\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncRElement: {\n    prototype: SVGFEFuncRElement;\n    new(): SVGFEFuncRElement;\n};\n\n/**\n * Corresponds to the <feGaussianBlur> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement)\n */\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/in1) */\n    readonly in1: SVGAnimatedString;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationX) */\n    readonly stdDeviationX: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationY) */\n    readonly stdDeviationY: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEGaussianBlurElement/setStdDeviation) */\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEGaussianBlurElement: {\n    prototype: SVGFEGaussianBlurElement;\n    new(): SVGFEGaussianBlurElement;\n};\n\n/**\n * Corresponds to the <feImage> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEImageElement)\n */\ninterface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEImageElement: {\n    prototype: SVGFEImageElement;\n    new(): SVGFEImageElement;\n};\n\n/**\n * Corresponds to the <feMerge> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMergeElement)\n */\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMergeElement: {\n    prototype: SVGFEMergeElement;\n    new(): SVGFEMergeElement;\n};\n\n/**\n * Corresponds to the <feMergeNode> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMergeNodeElement)\n */\ninterface SVGFEMergeNodeElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMergeNodeElement/in1) */\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMergeNodeElement: {\n    prototype: SVGFEMergeNodeElement;\n    new(): SVGFEMergeNodeElement;\n};\n\n/**\n * Corresponds to the <feMorphology> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement)\n */\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/in1) */\n    readonly in1: SVGAnimatedString;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/operator) */\n    readonly operator: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/radiusX) */\n    readonly radiusX: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEMorphologyElement/radiusY) */\n    readonly radiusY: SVGAnimatedNumber;\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: 1;\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMorphologyElement: {\n    prototype: SVGFEMorphologyElement;\n    new(): SVGFEMorphologyElement;\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: 1;\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;\n};\n\n/**\n * Corresponds to the <feOffset> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEOffsetElement)\n */\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly dx: SVGAnimatedNumber;\n    readonly dy: SVGAnimatedNumber;\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEOffsetElement: {\n    prototype: SVGFEOffsetElement;\n    new(): SVGFEOffsetElement;\n};\n\n/**\n * Corresponds to the <fePointLight> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement)\n */\ninterface SVGFEPointLightElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/x) */\n    readonly x: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/y) */\n    readonly y: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFEPointLightElement/z) */\n    readonly z: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEPointLightElement: {\n    prototype: SVGFEPointLightElement;\n    new(): SVGFEPointLightElement;\n};\n\n/**\n * Corresponds to the <feSpecularLighting> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement)\n */\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/in1) */\n    readonly in1: SVGAnimatedString;\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/specularConstant) */\n    readonly specularConstant: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/specularExponent) */\n    readonly specularExponent: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpecularLightingElement/surfaceScale) */\n    readonly surfaceScale: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFESpecularLightingElement: {\n    prototype: SVGFESpecularLightingElement;\n    new(): SVGFESpecularLightingElement;\n};\n\n/**\n * Corresponds to the <feSpotLight> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement)\n */\ninterface SVGFESpotLightElement extends SVGElement {\n    readonly limitingConeAngle: SVGAnimatedNumber;\n    readonly pointsAtX: SVGAnimatedNumber;\n    readonly pointsAtY: SVGAnimatedNumber;\n    readonly pointsAtZ: SVGAnimatedNumber;\n    readonly specularExponent: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/x) */\n    readonly x: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/y) */\n    readonly y: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFESpotLightElement/z) */\n    readonly z: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFESpotLightElement: {\n    prototype: SVGFESpotLightElement;\n    new(): SVGFESpotLightElement;\n};\n\n/**\n * Corresponds to the <feTile> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFETileElement)\n */\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFETileElement: {\n    prototype: SVGFETileElement;\n    new(): SVGFETileElement;\n};\n\n/**\n * Corresponds to the <feTurbulence> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFETurbulenceElement)\n */\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly baseFrequencyX: SVGAnimatedNumber;\n    readonly baseFrequencyY: SVGAnimatedNumber;\n    readonly numOctaves: SVGAnimatedInteger;\n    readonly seed: SVGAnimatedNumber;\n    readonly stitchTiles: SVGAnimatedEnumeration;\n    readonly type: SVGAnimatedEnumeration;\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: 1;\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: 2;\n    readonly SVG_STITCHTYPE_UNKNOWN: 0;\n    readonly SVG_STITCHTYPE_STITCH: 1;\n    readonly SVG_STITCHTYPE_NOSTITCH: 2;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFETurbulenceElement: {\n    prototype: SVGFETurbulenceElement;\n    new(): SVGFETurbulenceElement;\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: 1;\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: 2;\n    readonly SVG_STITCHTYPE_UNKNOWN: 0;\n    readonly SVG_STITCHTYPE_STITCH: 1;\n    readonly SVG_STITCHTYPE_NOSTITCH: 2;\n};\n\n/**\n * Provides access to the properties of <filter> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement)\n */\ninterface SVGFilterElement extends SVGElement, SVGURIReference {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/filterUnits) */\n    readonly filterUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/height) */\n    readonly height: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/primitiveUnits) */\n    readonly primitiveUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/width) */\n    readonly width: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/x) */\n    readonly x: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGFilterElement/y) */\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFilterElement: {\n    prototype: SVGFilterElement;\n    new(): SVGFilterElement;\n};\n\ninterface SVGFilterPrimitiveStandardAttributes {\n    readonly height: SVGAnimatedLength;\n    readonly result: SVGAnimatedString;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n}\n\ninterface SVGFitToViewBox {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/preserveAspectRatio) */\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/viewBox) */\n    readonly viewBox: SVGAnimatedRect;\n}\n\n/**\n * Provides access to the properties of <foreignObject> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGForeignObjectElement)\n */\ninterface SVGForeignObjectElement extends SVGGraphicsElement {\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGForeignObjectElement: {\n    prototype: SVGForeignObjectElement;\n    new(): SVGForeignObjectElement;\n};\n\n/**\n * Corresponds to the <g> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGElement)\n */\ninterface SVGGElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGElement: {\n    prototype: SVGGElement;\n    new(): SVGGElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement) */\ninterface SVGGeometryElement extends SVGGraphicsElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/pathLength) */\n    readonly pathLength: SVGAnimatedNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/getPointAtLength) */\n    getPointAtLength(distance: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/getTotalLength) */\n    getTotalLength(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/isPointInFill) */\n    isPointInFill(point?: DOMPointInit): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGeometryElement/isPointInStroke) */\n    isPointInStroke(point?: DOMPointInit): boolean;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGeometryElement: {\n    prototype: SVGGeometryElement;\n    new(): SVGGeometryElement;\n};\n\n/**\n * The SVGGradient interface is a base interface used by SVGLinearGradientElement and SVGRadialGradientElement.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement)\n */\ninterface SVGGradientElement extends SVGElement, SVGURIReference {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/gradientTransform) */\n    readonly gradientTransform: SVGAnimatedTransformList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/gradientUnits) */\n    readonly gradientUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGradientElement/spreadMethod) */\n    readonly spreadMethod: SVGAnimatedEnumeration;\n    readonly SVG_SPREADMETHOD_UNKNOWN: 0;\n    readonly SVG_SPREADMETHOD_PAD: 1;\n    readonly SVG_SPREADMETHOD_REFLECT: 2;\n    readonly SVG_SPREADMETHOD_REPEAT: 3;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGradientElement: {\n    prototype: SVGGradientElement;\n    new(): SVGGradientElement;\n    readonly SVG_SPREADMETHOD_UNKNOWN: 0;\n    readonly SVG_SPREADMETHOD_PAD: 1;\n    readonly SVG_SPREADMETHOD_REFLECT: 2;\n    readonly SVG_SPREADMETHOD_REPEAT: 3;\n};\n\n/**\n * SVG elements whose primary purpose is to directly render graphics into a group.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGraphicsElement)\n */\ninterface SVGGraphicsElement extends SVGElement, SVGTests {\n    readonly transform: SVGAnimatedTransformList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGGraphicsElement/getBBox) */\n    getBBox(options?: SVGBoundingBoxOptions): DOMRect;\n    getCTM(): DOMMatrix | null;\n    getScreenCTM(): DOMMatrix | null;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGraphicsElement: {\n    prototype: SVGGraphicsElement;\n    new(): SVGGraphicsElement;\n};\n\n/**\n * Corresponds to the <image> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement)\n */\ninterface SVGImageElement extends SVGGraphicsElement, SVGURIReference {\n    crossOrigin: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/height) */\n    readonly height: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/preserveAspectRatio) */\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/width) */\n    readonly width: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/x) */\n    readonly x: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGImageElement/y) */\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGImageElement: {\n    prototype: SVGImageElement;\n    new(): SVGImageElement;\n};\n\n/**\n * Correspond to the <length> basic data type.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLength)\n */\ninterface SVGLength {\n    readonly unitType: number;\n    value: number;\n    valueAsString: string;\n    valueInSpecifiedUnits: number;\n    convertToSpecifiedUnits(unitType: number): void;\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    readonly SVG_LENGTHTYPE_UNKNOWN: 0;\n    readonly SVG_LENGTHTYPE_NUMBER: 1;\n    readonly SVG_LENGTHTYPE_PERCENTAGE: 2;\n    readonly SVG_LENGTHTYPE_EMS: 3;\n    readonly SVG_LENGTHTYPE_EXS: 4;\n    readonly SVG_LENGTHTYPE_PX: 5;\n    readonly SVG_LENGTHTYPE_CM: 6;\n    readonly SVG_LENGTHTYPE_MM: 7;\n    readonly SVG_LENGTHTYPE_IN: 8;\n    readonly SVG_LENGTHTYPE_PT: 9;\n    readonly SVG_LENGTHTYPE_PC: 10;\n}\n\ndeclare var SVGLength: {\n    prototype: SVGLength;\n    new(): SVGLength;\n    readonly SVG_LENGTHTYPE_UNKNOWN: 0;\n    readonly SVG_LENGTHTYPE_NUMBER: 1;\n    readonly SVG_LENGTHTYPE_PERCENTAGE: 2;\n    readonly SVG_LENGTHTYPE_EMS: 3;\n    readonly SVG_LENGTHTYPE_EXS: 4;\n    readonly SVG_LENGTHTYPE_PX: 5;\n    readonly SVG_LENGTHTYPE_CM: 6;\n    readonly SVG_LENGTHTYPE_MM: 7;\n    readonly SVG_LENGTHTYPE_IN: 8;\n    readonly SVG_LENGTHTYPE_PT: 9;\n    readonly SVG_LENGTHTYPE_PC: 10;\n};\n\n/**\n * The SVGLengthList defines a list of SVGLength objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList)\n */\ninterface SVGLengthList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/numberOfItems) */\n    readonly numberOfItems: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/appendItem) */\n    appendItem(newItem: SVGLength): SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/clear) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/getItem) */\n    getItem(index: number): SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/initialize) */\n    initialize(newItem: SVGLength): SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/insertItemBefore) */\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/removeItem) */\n    removeItem(index: number): SVGLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLengthList/replaceItem) */\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\n    [index: number]: SVGLength;\n}\n\ndeclare var SVGLengthList: {\n    prototype: SVGLengthList;\n    new(): SVGLengthList;\n};\n\n/**\n * Provides access to the properties of <line> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement)\n */\ninterface SVGLineElement extends SVGGeometryElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/x1) */\n    readonly x1: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/x2) */\n    readonly x2: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/y1) */\n    readonly y1: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLineElement/y2) */\n    readonly y2: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGLineElement: {\n    prototype: SVGLineElement;\n    new(): SVGLineElement;\n};\n\n/**\n * Corresponds to the <linearGradient> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement)\n */\ninterface SVGLinearGradientElement extends SVGGradientElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/x1) */\n    readonly x1: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/x2) */\n    readonly x2: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/y1) */\n    readonly y1: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGLinearGradientElement/y2) */\n    readonly y2: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGLinearGradientElement: {\n    prototype: SVGLinearGradientElement;\n    new(): SVGLinearGradientElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMPathElement) */\ninterface SVGMPathElement extends SVGElement, SVGURIReference {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMPathElement: {\n    prototype: SVGMPathElement;\n    new(): SVGMPathElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement) */\ninterface SVGMarkerElement extends SVGElement, SVGFitToViewBox {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerHeight) */\n    readonly markerHeight: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerUnits) */\n    readonly markerUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/markerWidth) */\n    readonly markerWidth: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/orientAngle) */\n    readonly orientAngle: SVGAnimatedAngle;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/orientType) */\n    readonly orientType: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/refX) */\n    readonly refX: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/refY) */\n    readonly refY: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/setOrientToAngle) */\n    setOrientToAngle(angle: SVGAngle): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMarkerElement/setOrientToAuto) */\n    setOrientToAuto(): void;\n    readonly SVG_MARKERUNITS_UNKNOWN: 0;\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: 1;\n    readonly SVG_MARKERUNITS_STROKEWIDTH: 2;\n    readonly SVG_MARKER_ORIENT_UNKNOWN: 0;\n    readonly SVG_MARKER_ORIENT_AUTO: 1;\n    readonly SVG_MARKER_ORIENT_ANGLE: 2;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMarkerElement: {\n    prototype: SVGMarkerElement;\n    new(): SVGMarkerElement;\n    readonly SVG_MARKERUNITS_UNKNOWN: 0;\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: 1;\n    readonly SVG_MARKERUNITS_STROKEWIDTH: 2;\n    readonly SVG_MARKER_ORIENT_UNKNOWN: 0;\n    readonly SVG_MARKER_ORIENT_AUTO: 1;\n    readonly SVG_MARKER_ORIENT_ANGLE: 2;\n};\n\n/**\n * Provides access to the properties of <mask> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement)\n */\ninterface SVGMaskElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/height) */\n    readonly height: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/maskContentUnits) */\n    readonly maskContentUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/maskUnits) */\n    readonly maskUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/width) */\n    readonly width: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/x) */\n    readonly x: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMaskElement/y) */\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMaskElement: {\n    prototype: SVGMaskElement;\n    new(): SVGMaskElement;\n};\n\n/**\n * Corresponds to the <metadata> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGMetadataElement)\n */\ninterface SVGMetadataElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMetadataElement: {\n    prototype: SVGMetadataElement;\n    new(): SVGMetadataElement;\n};\n\n/**\n * Corresponds to the <number> basic data type.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumber)\n */\ninterface SVGNumber {\n    value: number;\n}\n\ndeclare var SVGNumber: {\n    prototype: SVGNumber;\n    new(): SVGNumber;\n};\n\n/**\n * The SVGNumberList defines a list of SVGNumber objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList)\n */\ninterface SVGNumberList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/numberOfItems) */\n    readonly numberOfItems: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/appendItem) */\n    appendItem(newItem: SVGNumber): SVGNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/clear) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/getItem) */\n    getItem(index: number): SVGNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/initialize) */\n    initialize(newItem: SVGNumber): SVGNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/insertItemBefore) */\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/removeItem) */\n    removeItem(index: number): SVGNumber;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGNumberList/replaceItem) */\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\n    [index: number]: SVGNumber;\n}\n\ndeclare var SVGNumberList: {\n    prototype: SVGNumberList;\n    new(): SVGNumberList;\n};\n\n/**\n * Corresponds to the <path> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPathElement)\n */\ninterface SVGPathElement extends SVGGeometryElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPathElement: {\n    prototype: SVGPathElement;\n    new(): SVGPathElement;\n};\n\n/**\n * Corresponds to the <pattern> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement)\n */\ninterface SVGPatternElement extends SVGElement, SVGFitToViewBox, SVGURIReference {\n    readonly height: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternContentUnits) */\n    readonly patternContentUnits: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternTransform) */\n    readonly patternTransform: SVGAnimatedTransformList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPatternElement/patternUnits) */\n    readonly patternUnits: SVGAnimatedEnumeration;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPatternElement: {\n    prototype: SVGPatternElement;\n    new(): SVGPatternElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList) */\ninterface SVGPointList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/numberOfItems) */\n    readonly numberOfItems: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/appendItem) */\n    appendItem(newItem: DOMPoint): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/clear) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/getItem) */\n    getItem(index: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/initialize) */\n    initialize(newItem: DOMPoint): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/insertItemBefore) */\n    insertItemBefore(newItem: DOMPoint, index: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/removeItem) */\n    removeItem(index: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPointList/replaceItem) */\n    replaceItem(newItem: DOMPoint, index: number): DOMPoint;\n    [index: number]: DOMPoint;\n}\n\ndeclare var SVGPointList: {\n    prototype: SVGPointList;\n    new(): SVGPointList;\n};\n\n/**\n * Provides access to the properties of <polygon> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolygonElement)\n */\ninterface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPolygonElement: {\n    prototype: SVGPolygonElement;\n    new(): SVGPolygonElement;\n};\n\n/**\n * Provides access to the properties of <polyline> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPolylineElement)\n */\ninterface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPolylineElement: {\n    prototype: SVGPolylineElement;\n    new(): SVGPolylineElement;\n};\n\n/**\n * Corresponds to the preserveAspectRatio attribute, which is available for some of SVG\'s elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGPreserveAspectRatio)\n */\ninterface SVGPreserveAspectRatio {\n    align: number;\n    meetOrSlice: number;\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;\n    readonly SVG_PRESERVEASPECTRATIO_NONE: 1;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: 2;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: 3;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: 4;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: 5;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: 6;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: 7;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: 8;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: 9;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: 10;\n    readonly SVG_MEETORSLICE_UNKNOWN: 0;\n    readonly SVG_MEETORSLICE_MEET: 1;\n    readonly SVG_MEETORSLICE_SLICE: 2;\n}\n\ndeclare var SVGPreserveAspectRatio: {\n    prototype: SVGPreserveAspectRatio;\n    new(): SVGPreserveAspectRatio;\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;\n    readonly SVG_PRESERVEASPECTRATIO_NONE: 1;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: 2;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: 3;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: 4;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: 5;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: 6;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: 7;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: 8;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: 9;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: 10;\n    readonly SVG_MEETORSLICE_UNKNOWN: 0;\n    readonly SVG_MEETORSLICE_MEET: 1;\n    readonly SVG_MEETORSLICE_SLICE: 2;\n};\n\n/**\n * Corresponds to the <RadialGradient> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement)\n */\ninterface SVGRadialGradientElement extends SVGGradientElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/cx) */\n    readonly cx: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/cy) */\n    readonly cy: SVGAnimatedLength;\n    readonly fr: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/fx) */\n    readonly fx: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/fy) */\n    readonly fy: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRadialGradientElement/r) */\n    readonly r: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGRadialGradientElement: {\n    prototype: SVGRadialGradientElement;\n    new(): SVGRadialGradientElement;\n};\n\n/**\n * Provides access to the properties of <rect> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement)\n */\ninterface SVGRectElement extends SVGGeometryElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/height) */\n    readonly height: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/rx) */\n    readonly rx: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/ry) */\n    readonly ry: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/width) */\n    readonly width: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/x) */\n    readonly x: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGRectElement/y) */\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGRectElement: {\n    prototype: SVGRectElement;\n    new(): SVGRectElement;\n};\n\ninterface SVGSVGElementEventMap extends SVGElementEventMap, WindowEventHandlersEventMap {\n}\n\n/**\n * Provides access to the properties of <svg> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGSVGElement)\n */\ninterface SVGSVGElement extends SVGGraphicsElement, SVGFitToViewBox, WindowEventHandlers {\n    currentScale: number;\n    readonly currentTranslate: DOMPointReadOnly;\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    animationsPaused(): boolean;\n    checkEnclosure(element: SVGElement, rect: DOMRectReadOnly): boolean;\n    checkIntersection(element: SVGElement, rect: DOMRectReadOnly): boolean;\n    createSVGAngle(): SVGAngle;\n    createSVGLength(): SVGLength;\n    createSVGMatrix(): DOMMatrix;\n    createSVGNumber(): SVGNumber;\n    createSVGPoint(): DOMPoint;\n    createSVGRect(): DOMRect;\n    createSVGTransform(): SVGTransform;\n    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;\n    deselectAll(): void;\n    /** @deprecated */\n    forceRedraw(): void;\n    getCurrentTime(): number;\n    getElementById(elementId: string): Element;\n    getEnclosureList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\n    getIntersectionList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\n    pauseAnimations(): void;\n    setCurrentTime(seconds: number): void;\n    /** @deprecated */\n    suspendRedraw(maxWaitMilliseconds: number): number;\n    unpauseAnimations(): void;\n    /** @deprecated */\n    unsuspendRedraw(suspendHandleID: number): void;\n    /** @deprecated */\n    unsuspendRedrawAll(): void;\n    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSVGElement: {\n    prototype: SVGSVGElement;\n    new(): SVGSVGElement;\n};\n\n/**\n * Corresponds to the SVG <script> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGScriptElement)\n */\ninterface SVGScriptElement extends SVGElement, SVGURIReference {\n    type: string;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGScriptElement: {\n    prototype: SVGScriptElement;\n    new(): SVGScriptElement;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGSetElement) */\ninterface SVGSetElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSetElement: {\n    prototype: SVGSetElement;\n    new(): SVGSetElement;\n};\n\n/**\n * Corresponds to the <stop> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStopElement)\n */\ninterface SVGStopElement extends SVGElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStopElement/offset) */\n    readonly offset: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGStopElement: {\n    prototype: SVGStopElement;\n    new(): SVGStopElement;\n};\n\n/**\n * The SVGStringList defines a list of DOMString objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStringList)\n */\ninterface SVGStringList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: string): string;\n    clear(): void;\n    getItem(index: number): string;\n    initialize(newItem: string): string;\n    insertItemBefore(newItem: string, index: number): string;\n    removeItem(index: number): string;\n    replaceItem(newItem: string, index: number): string;\n    [index: number]: string;\n}\n\ndeclare var SVGStringList: {\n    prototype: SVGStringList;\n    new(): SVGStringList;\n};\n\n/**\n * Corresponds to the SVG <style> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement)\n */\ninterface SVGStyleElement extends SVGElement, LinkStyle {\n    disabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement/media) */\n    media: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement/title) */\n    title: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGStyleElement/type)\n     */\n    type: string;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGStyleElement: {\n    prototype: SVGStyleElement;\n    new(): SVGStyleElement;\n};\n\n/**\n * Corresponds to the <switch> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGSwitchElement)\n */\ninterface SVGSwitchElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSwitchElement: {\n    prototype: SVGSwitchElement;\n    new(): SVGSwitchElement;\n};\n\n/**\n * Corresponds to the <symbol> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGSymbolElement)\n */\ninterface SVGSymbolElement extends SVGElement, SVGFitToViewBox {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSymbolElement: {\n    prototype: SVGSymbolElement;\n    new(): SVGSymbolElement;\n};\n\n/**\n * A <tspan> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTSpanElement)\n */\ninterface SVGTSpanElement extends SVGTextPositioningElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTSpanElement: {\n    prototype: SVGTSpanElement;\n    new(): SVGTSpanElement;\n};\n\ninterface SVGTests {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/requiredExtensions) */\n    readonly requiredExtensions: SVGStringList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAnimationElement/systemLanguage) */\n    readonly systemLanguage: SVGStringList;\n}\n\n/**\n * Implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as SVGTextElement, SVGTSpanElement, SVGTRefElement, SVGAltGlyphElement and SVGTextPathElement.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement)\n */\ninterface SVGTextContentElement extends SVGGraphicsElement {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/lengthAdjust) */\n    readonly lengthAdjust: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/textLength) */\n    readonly textLength: SVGAnimatedLength;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getCharNumAtPosition) */\n    getCharNumAtPosition(point?: DOMPointInit): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getComputedTextLength) */\n    getComputedTextLength(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getEndPositionOfChar) */\n    getEndPositionOfChar(charnum: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getExtentOfChar) */\n    getExtentOfChar(charnum: number): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getNumberOfChars) */\n    getNumberOfChars(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getRotationOfChar) */\n    getRotationOfChar(charnum: number): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getStartPositionOfChar) */\n    getStartPositionOfChar(charnum: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextContentElement/getSubStringLength) */\n    getSubStringLength(charnum: number, nchars: number): number;\n    /** @deprecated */\n    selectSubString(charnum: number, nchars: number): void;\n    readonly LENGTHADJUST_UNKNOWN: 0;\n    readonly LENGTHADJUST_SPACING: 1;\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextContentElement: {\n    prototype: SVGTextContentElement;\n    new(): SVGTextContentElement;\n    readonly LENGTHADJUST_UNKNOWN: 0;\n    readonly LENGTHADJUST_SPACING: 1;\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;\n};\n\n/**\n * Corresponds to the <text> elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextElement)\n */\ninterface SVGTextElement extends SVGTextPositioningElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextElement: {\n    prototype: SVGTextElement;\n    new(): SVGTextElement;\n};\n\n/**\n * Corresponds to the <textPath> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement)\n */\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/method) */\n    readonly method: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/spacing) */\n    readonly spacing: SVGAnimatedEnumeration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPathElement/startOffset) */\n    readonly startOffset: SVGAnimatedLength;\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;\n    readonly TEXTPATH_METHODTYPE_ALIGN: 1;\n    readonly TEXTPATH_METHODTYPE_STRETCH: 2;\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: 0;\n    readonly TEXTPATH_SPACINGTYPE_AUTO: 1;\n    readonly TEXTPATH_SPACINGTYPE_EXACT: 2;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextPathElement: {\n    prototype: SVGTextPathElement;\n    new(): SVGTextPathElement;\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;\n    readonly TEXTPATH_METHODTYPE_ALIGN: 1;\n    readonly TEXTPATH_METHODTYPE_STRETCH: 2;\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: 0;\n    readonly TEXTPATH_SPACINGTYPE_AUTO: 1;\n    readonly TEXTPATH_SPACINGTYPE_EXACT: 2;\n};\n\n/**\n * Implemented by elements that support attributes that position individual text glyphs. It is inherited by SVGTextElement, SVGTSpanElement, SVGTRefElement and SVGAltGlyphElement.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTextPositioningElement)\n */\ninterface SVGTextPositioningElement extends SVGTextContentElement {\n    readonly dx: SVGAnimatedLengthList;\n    readonly dy: SVGAnimatedLengthList;\n    readonly rotate: SVGAnimatedNumberList;\n    readonly x: SVGAnimatedLengthList;\n    readonly y: SVGAnimatedLengthList;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextPositioningElement: {\n    prototype: SVGTextPositioningElement;\n    new(): SVGTextPositioningElement;\n};\n\n/**\n * Corresponds to the <title> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTitleElement)\n */\ninterface SVGTitleElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTitleElement: {\n    prototype: SVGTitleElement;\n    new(): SVGTitleElement;\n};\n\n/**\n * SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform)\n */\ninterface SVGTransform {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/angle) */\n    readonly angle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/matrix) */\n    readonly matrix: DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/type) */\n    readonly type: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setMatrix) */\n    setMatrix(matrix?: DOMMatrix2DInit): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setRotate) */\n    setRotate(angle: number, cx: number, cy: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setScale) */\n    setScale(sx: number, sy: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setSkewX) */\n    setSkewX(angle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setSkewY) */\n    setSkewY(angle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransform/setTranslate) */\n    setTranslate(tx: number, ty: number): void;\n    readonly SVG_TRANSFORM_UNKNOWN: 0;\n    readonly SVG_TRANSFORM_MATRIX: 1;\n    readonly SVG_TRANSFORM_TRANSLATE: 2;\n    readonly SVG_TRANSFORM_SCALE: 3;\n    readonly SVG_TRANSFORM_ROTATE: 4;\n    readonly SVG_TRANSFORM_SKEWX: 5;\n    readonly SVG_TRANSFORM_SKEWY: 6;\n}\n\ndeclare var SVGTransform: {\n    prototype: SVGTransform;\n    new(): SVGTransform;\n    readonly SVG_TRANSFORM_UNKNOWN: 0;\n    readonly SVG_TRANSFORM_MATRIX: 1;\n    readonly SVG_TRANSFORM_TRANSLATE: 2;\n    readonly SVG_TRANSFORM_SCALE: 3;\n    readonly SVG_TRANSFORM_ROTATE: 4;\n    readonly SVG_TRANSFORM_SKEWX: 5;\n    readonly SVG_TRANSFORM_SKEWY: 6;\n};\n\n/**\n * The SVGTransformList defines a list of SVGTransform objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList)\n */\ninterface SVGTransformList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/numberOfItems) */\n    readonly numberOfItems: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/appendItem) */\n    appendItem(newItem: SVGTransform): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/clear) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/consolidate) */\n    consolidate(): SVGTransform | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/createSVGTransformFromMatrix) */\n    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/getItem) */\n    getItem(index: number): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/initialize) */\n    initialize(newItem: SVGTransform): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/insertItemBefore) */\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/removeItem) */\n    removeItem(index: number): SVGTransform;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGTransformList/replaceItem) */\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\n    [index: number]: SVGTransform;\n}\n\ndeclare var SVGTransformList: {\n    prototype: SVGTransformList;\n    new(): SVGTransformList;\n};\n\ninterface SVGURIReference {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGAElement/href) */\n    readonly href: SVGAnimatedString;\n}\n\n/**\n * A commonly used set of constants used for reflecting gradientUnits, patternContentUnits and other similar attributes.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGUnitTypes)\n */\ninterface SVGUnitTypes {\n    readonly SVG_UNIT_TYPE_UNKNOWN: 0;\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: 1;\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;\n}\n\ndeclare var SVGUnitTypes: {\n    prototype: SVGUnitTypes;\n    new(): SVGUnitTypes;\n    readonly SVG_UNIT_TYPE_UNKNOWN: 0;\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: 1;\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;\n};\n\n/**\n * Corresponds to the <use> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGUseElement)\n */\ninterface SVGUseElement extends SVGGraphicsElement, SVGURIReference {\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGUseElement: {\n    prototype: SVGUseElement;\n    new(): SVGUseElement;\n};\n\n/**\n * Provides access to the properties of <view> elements, as well as methods to manipulate them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGViewElement)\n */\ninterface SVGViewElement extends SVGElement, SVGFitToViewBox {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGViewElement: {\n    prototype: SVGViewElement;\n    new(): SVGViewElement;\n};\n\n/**\n * A screen, usually the one on which the current window is being rendered, and is obtained using window.screen.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen)\n */\ninterface Screen {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/availHeight) */\n    readonly availHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/availWidth) */\n    readonly availWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/colorDepth) */\n    readonly colorDepth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/orientation) */\n    readonly orientation: ScreenOrientation;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/pixelDepth) */\n    readonly pixelDepth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Screen/width) */\n    readonly width: number;\n}\n\ndeclare var Screen: {\n    prototype: Screen;\n    new(): Screen;\n};\n\ninterface ScreenOrientationEventMap {\n    "change": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation) */\ninterface ScreenOrientation extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/angle) */\n    readonly angle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/change_event) */\n    onchange: ((this: ScreenOrientation, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/type) */\n    readonly type: OrientationType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScreenOrientation/unlock) */\n    unlock(): void;\n    addEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ScreenOrientation: {\n    prototype: ScreenOrientation;\n    new(): ScreenOrientation;\n};\n\ninterface ScriptProcessorNodeEventMap {\n    "audioprocess": AudioProcessingEvent;\n}\n\n/**\n * Allows the generation, processing, or analyzing of audio using JavaScript.\n * @deprecated As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and was replaced by AudioWorklet (see AudioWorkletNode).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScriptProcessorNode)\n */\ninterface ScriptProcessorNode extends AudioNode {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScriptProcessorNode/bufferSize)\n     */\n    readonly bufferSize: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ScriptProcessorNode/audioprocess_event)\n     */\n    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;\n    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var ScriptProcessorNode: {\n    prototype: ScriptProcessorNode;\n    new(): ScriptProcessorNode;\n};\n\n/**\n * Inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent)\n */\ninterface SecurityPolicyViolationEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/blockedURI) */\n    readonly blockedURI: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/columnNumber) */\n    readonly columnNumber: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/disposition) */\n    readonly disposition: SecurityPolicyViolationEventDisposition;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/documentURI) */\n    readonly documentURI: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective) */\n    readonly effectiveDirective: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/lineNumber) */\n    readonly lineNumber: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy) */\n    readonly originalPolicy: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/referrer) */\n    readonly referrer: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sample) */\n    readonly sample: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sourceFile) */\n    readonly sourceFile: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/statusCode) */\n    readonly statusCode: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective) */\n    readonly violatedDirective: string;\n}\n\ndeclare var SecurityPolicyViolationEvent: {\n    prototype: SecurityPolicyViolationEvent;\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\n};\n\n/**\n * A Selection object\xa0represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or\xa0modification, call Window.getSelection().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection)\n */\ninterface Selection {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/anchorNode) */\n    readonly anchorNode: Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/anchorOffset) */\n    readonly anchorOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/direction) */\n    readonly direction: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/focusNode) */\n    readonly focusNode: Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/focusOffset) */\n    readonly focusOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/isCollapsed) */\n    readonly isCollapsed: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/rangeCount) */\n    readonly rangeCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/addRange) */\n    addRange(range: Range): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapse) */\n    collapse(node: Node | null, offset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapseToEnd) */\n    collapseToEnd(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/collapseToStart) */\n    collapseToStart(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/containsNode) */\n    containsNode(node: Node, allowPartialContainment?: boolean): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/deleteFromDocument) */\n    deleteFromDocument(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/empty) */\n    empty(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/extend) */\n    extend(node: Node, offset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/getRangeAt) */\n    getRangeAt(index: number): Range;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/modify) */\n    modify(alter?: string, direction?: string, granularity?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/removeAllRanges) */\n    removeAllRanges(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/removeRange) */\n    removeRange(range: Range): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/selectAllChildren) */\n    selectAllChildren(node: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/setBaseAndExtent) */\n    setBaseAndExtent(anchorNode: Node, anchorOffset: number, focusNode: Node, focusOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Selection/setPosition) */\n    setPosition(node: Node | null, offset?: number): void;\n    toString(): string;\n}\n\ndeclare var Selection: {\n    prototype: Selection;\n    new(): Selection;\n};\n\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\n    "statechange": Event;\n}\n\n/**\n * This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker)\n */\ninterface ServiceWorker extends EventTarget, AbstractWorker {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event) */\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL) */\n    readonly scriptURL: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/state) */\n    readonly state: ServiceWorkerState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage) */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorker: {\n    prototype: ServiceWorker;\n    new(): ServiceWorker;\n};\n\ninterface ServiceWorkerContainerEventMap {\n    "controllerchange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * The\xa0ServiceWorkerContainer\xa0interface of the\xa0ServiceWorker API\xa0provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer)\n */\ninterface ServiceWorkerContainer extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controller) */\n    readonly controller: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event) */\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event) */\n    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event) */\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/ready) */\n    readonly ready: Promise<ServiceWorkerRegistration>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistration) */\n    getRegistration(clientURL?: string | URL): Promise<ServiceWorkerRegistration | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistrations) */\n    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/register) */\n    register(scriptURL: string | URL, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/startMessages) */\n    startMessages(): void;\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerContainer: {\n    prototype: ServiceWorkerContainer;\n    new(): ServiceWorkerContainer;\n};\n\ninterface ServiceWorkerRegistrationEventMap {\n    "updatefound": Event;\n}\n\n/**\n * This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration)\n */\ninterface ServiceWorkerRegistration extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/active) */\n    readonly active: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/installing) */\n    readonly installing: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/navigationPreload) */\n    readonly navigationPreload: NavigationPreloadManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event) */\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager) */\n    readonly pushManager: PushManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/scope) */\n    readonly scope: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updateViaCache) */\n    readonly updateViaCache: ServiceWorkerUpdateViaCache;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/waiting) */\n    readonly waiting: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/getNotifications) */\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/showNotification) */\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/unregister) */\n    unregister(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/update) */\n    update(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerRegistration: {\n    prototype: ServiceWorkerRegistration;\n    new(): ServiceWorkerRegistration;\n};\n\ninterface ShadowRootEventMap {\n    "slotchange": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot) */\ninterface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/clonable) */\n    readonly clonable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/delegatesFocus) */\n    readonly delegatesFocus: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/host) */\n    readonly host: Element;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/innerHTML) */\n    innerHTML: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/mode) */\n    readonly mode: ShadowRootMode;\n    onslotchange: ((this: ShadowRoot, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/serializable) */\n    readonly serializable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/slotAssignment) */\n    readonly slotAssignment: SlotAssignmentMode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/getHTML) */\n    getHTML(options?: GetHTMLOptions): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ShadowRoot/setHTMLUnsafe) */\n    setHTMLUnsafe(html: string): void;\n    /** Throws a "NotSupportedError" DOMException if context object is a shadow root. */\n    addEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ShadowRoot: {\n    prototype: ShadowRoot;\n    new(): ShadowRoot;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorker) */\ninterface SharedWorker extends EventTarget, AbstractWorker {\n    /**\n     * Returns sharedWorker\'s MessagePort object which can be used to communicate with the global environment.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorker/port)\n     */\n    readonly port: MessagePort;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SharedWorker: {\n    prototype: SharedWorker;\n    new(scriptURL: string | URL, options?: string | WorkerOptions): SharedWorker;\n};\n\ninterface Slottable {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot) */\n    readonly assignedSlot: HTMLSlotElement | null;\n}\n\ninterface SourceBufferEventMap {\n    "abort": Event;\n    "error": Event;\n    "update": Event;\n    "updateend": Event;\n    "updatestart": Event;\n}\n\n/**\n * A chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource\xa0object. This can be made up of one or several media segments.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer)\n */\ninterface SourceBuffer extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendWindowEnd) */\n    appendWindowEnd: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendWindowStart) */\n    appendWindowStart: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/buffered) */\n    readonly buffered: TimeRanges;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/mode) */\n    mode: AppendMode;\n    onabort: ((this: SourceBuffer, ev: Event) => any) | null;\n    onerror: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdate: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdateend: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdatestart: ((this: SourceBuffer, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/timestampOffset) */\n    timestampOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/updating) */\n    readonly updating: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/abort) */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/appendBuffer) */\n    appendBuffer(data: BufferSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/changeType) */\n    changeType(type: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBuffer/remove) */\n    remove(start: number, end: number): void;\n    addEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SourceBuffer: {\n    prototype: SourceBuffer;\n    new(): SourceBuffer;\n};\n\ninterface SourceBufferListEventMap {\n    "addsourcebuffer": Event;\n    "removesourcebuffer": Event;\n}\n\n/**\n * A simple container list for multiple SourceBuffer objects.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBufferList)\n */\ninterface SourceBufferList extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SourceBufferList/length) */\n    readonly length: number;\n    onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;\n    onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;\n    addEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: SourceBuffer;\n}\n\ndeclare var SourceBufferList: {\n    prototype: SourceBufferList;\n    new(): SourceBufferList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionAlternative) */\ninterface SpeechRecognitionAlternative {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionAlternative/confidence) */\n    readonly confidence: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionAlternative/transcript) */\n    readonly transcript: string;\n}\n\ndeclare var SpeechRecognitionAlternative: {\n    prototype: SpeechRecognitionAlternative;\n    new(): SpeechRecognitionAlternative;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult) */\ninterface SpeechRecognitionResult {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/isFinal) */\n    readonly isFinal: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResult/item) */\n    item(index: number): SpeechRecognitionAlternative;\n    [index: number]: SpeechRecognitionAlternative;\n}\n\ndeclare var SpeechRecognitionResult: {\n    prototype: SpeechRecognitionResult;\n    new(): SpeechRecognitionResult;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResultList) */\ninterface SpeechRecognitionResultList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResultList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechRecognitionResultList/item) */\n    item(index: number): SpeechRecognitionResult;\n    [index: number]: SpeechRecognitionResult;\n}\n\ndeclare var SpeechRecognitionResultList: {\n    prototype: SpeechRecognitionResultList;\n    new(): SpeechRecognitionResultList;\n};\n\ninterface SpeechSynthesisEventMap {\n    "voiceschanged": Event;\n}\n\n/**\n * This Web Speech API interface is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis)\n */\ninterface SpeechSynthesis extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/voiceschanged_event) */\n    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/paused) */\n    readonly paused: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/pending) */\n    readonly pending: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/speaking) */\n    readonly speaking: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/cancel) */\n    cancel(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/getVoices) */\n    getVoices(): SpeechSynthesisVoice[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/pause) */\n    pause(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/resume) */\n    resume(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesis/speak) */\n    speak(utterance: SpeechSynthesisUtterance): void;\n    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SpeechSynthesis: {\n    prototype: SpeechSynthesis;\n    new(): SpeechSynthesis;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisErrorEvent) */\ninterface SpeechSynthesisErrorEvent extends SpeechSynthesisEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisErrorEvent/error) */\n    readonly error: SpeechSynthesisErrorCode;\n}\n\ndeclare var SpeechSynthesisErrorEvent: {\n    prototype: SpeechSynthesisErrorEvent;\n    new(type: string, eventInitDict: SpeechSynthesisErrorEventInit): SpeechSynthesisErrorEvent;\n};\n\n/**\n * This Web Speech API interface contains information about the current state of SpeechSynthesisUtterance objects that have been processed in the speech service.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent)\n */\ninterface SpeechSynthesisEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/charIndex) */\n    readonly charIndex: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/charLength) */\n    readonly charLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/elapsedTime) */\n    readonly elapsedTime: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisEvent/utterance) */\n    readonly utterance: SpeechSynthesisUtterance;\n}\n\ndeclare var SpeechSynthesisEvent: {\n    prototype: SpeechSynthesisEvent;\n    new(type: string, eventInitDict: SpeechSynthesisEventInit): SpeechSynthesisEvent;\n};\n\ninterface SpeechSynthesisUtteranceEventMap {\n    "boundary": SpeechSynthesisEvent;\n    "end": SpeechSynthesisEvent;\n    "error": SpeechSynthesisErrorEvent;\n    "mark": SpeechSynthesisEvent;\n    "pause": SpeechSynthesisEvent;\n    "resume": SpeechSynthesisEvent;\n    "start": SpeechSynthesisEvent;\n}\n\n/**\n * This Web Speech API interface represents a speech request. It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance)\n */\ninterface SpeechSynthesisUtterance extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/lang) */\n    lang: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/boundary_event) */\n    onboundary: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/end_event) */\n    onend: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/error_event) */\n    onerror: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/mark_event) */\n    onmark: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pause_event) */\n    onpause: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/resume_event) */\n    onresume: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/start_event) */\n    onstart: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/pitch) */\n    pitch: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/rate) */\n    rate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/text) */\n    text: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/voice) */\n    voice: SpeechSynthesisVoice | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisUtterance/volume) */\n    volume: number;\n    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SpeechSynthesisUtterance: {\n    prototype: SpeechSynthesisUtterance;\n    new(text?: string): SpeechSynthesisUtterance;\n};\n\n/**\n * This Web Speech API interface represents a voice that the system supports. Every SpeechSynthesisVoice has its own relative speech service including information about language, name and URI.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice)\n */\ninterface SpeechSynthesisVoice {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/default) */\n    readonly default: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/lang) */\n    readonly lang: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/localService) */\n    readonly localService: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SpeechSynthesisVoice/voiceURI) */\n    readonly voiceURI: string;\n}\n\ndeclare var SpeechSynthesisVoice: {\n    prototype: SpeechSynthesisVoice;\n    new(): SpeechSynthesisVoice;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StaticRange) */\ninterface StaticRange extends AbstractRange {\n}\n\ndeclare var StaticRange: {\n    prototype: StaticRange;\n    new(init: StaticRangeInit): StaticRange;\n};\n\n/**\n * The pan property takes a unitless value between -1 (full left pan) and 1 (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full PannerNode.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StereoPannerNode)\n */\ninterface StereoPannerNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StereoPannerNode/pan) */\n    readonly pan: AudioParam;\n}\n\ndeclare var StereoPannerNode: {\n    prototype: StereoPannerNode;\n    new(context: BaseAudioContext, options?: StereoPannerOptions): StereoPannerNode;\n};\n\n/**\n * This Web Storage API interface provides access to a particular domain\'s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage)\n */\ninterface Storage {\n    /**\n     * Returns the number of key/value pairs.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/length)\n     */\n    readonly length: number;\n    /**\n     * Removes all key/value pairs, if there are any.\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/clear)\n     */\n    clear(): void;\n    /**\n     * Returns the current value associated with the given key, or null if the given key does not exist.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/getItem)\n     */\n    getItem(key: string): string | null;\n    /**\n     * Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/key)\n     */\n    key(index: number): string | null;\n    /**\n     * Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/removeItem)\n     */\n    removeItem(key: string): void;\n    /**\n     * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n     *\n     * Throws a "QuotaExceededError" DOMException exception if the new value couldn\'t be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/setItem)\n     */\n    setItem(key: string, value: string): void;\n    [name: string]: any;\n}\n\ndeclare var Storage: {\n    prototype: Storage;\n    new(): Storage;\n};\n\n/**\n * A StorageEvent is sent to a window when a storage area it has access to is changed within the context of another document.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent)\n */\ninterface StorageEvent extends Event {\n    /**\n     * Returns the key of the storage item being changed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/key)\n     */\n    readonly key: string | null;\n    /**\n     * Returns the new value of the key of the storage item whose value is being changed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/newValue)\n     */\n    readonly newValue: string | null;\n    /**\n     * Returns the old value of the key of the storage item whose value is being changed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/oldValue)\n     */\n    readonly oldValue: string | null;\n    /**\n     * Returns the Storage object that was affected.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/storageArea)\n     */\n    readonly storageArea: Storage | null;\n    /**\n     * Returns the URL of the document whose storage item changed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/url)\n     */\n    readonly url: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageEvent/initStorageEvent)\n     */\n    initStorageEvent(type: string, bubbles?: boolean, cancelable?: boolean, key?: string | null, oldValue?: string | null, newValue?: string | null, url?: string | URL, storageArea?: Storage | null): void;\n}\n\ndeclare var StorageEvent: {\n    prototype: StorageEvent;\n    new(type: string, eventInitDict?: StorageEventInit): StorageEvent;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager)\n */\ninterface StorageManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/estimate) */\n    estimate(): Promise<StorageEstimate>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/getDirectory) */\n    getDirectory(): Promise<FileSystemDirectoryHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/persist) */\n    persist(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/persisted) */\n    persisted(): Promise<boolean>;\n}\n\ndeclare var StorageManager: {\n    prototype: StorageManager;\n    new(): StorageManager;\n};\n\n/** @deprecated */\ninterface StyleMedia {\n    type: string;\n    matchMedium(mediaquery: string): boolean;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap) */\ninterface StylePropertyMap extends StylePropertyMapReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/append) */\n    append(property: string, ...values: (CSSStyleValue | string)[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/clear) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/delete) */\n    delete(property: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMap/set) */\n    set(property: string, ...values: (CSSStyleValue | string)[]): void;\n}\n\ndeclare var StylePropertyMap: {\n    prototype: StylePropertyMap;\n    new(): StylePropertyMap;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly) */\ninterface StylePropertyMapReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/get) */\n    get(property: string): undefined | CSSStyleValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/getAll) */\n    getAll(property: string): CSSStyleValue[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/has) */\n    has(property: string): boolean;\n    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;\n}\n\ndeclare var StylePropertyMapReadOnly: {\n    prototype: StylePropertyMapReadOnly;\n    new(): StylePropertyMapReadOnly;\n};\n\n/**\n * A single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet)\n */\ninterface StyleSheet {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/disabled) */\n    disabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/href) */\n    readonly href: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/media) */\n    get media(): MediaList;\n    set media(mediaText: string);\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/ownerNode) */\n    readonly ownerNode: Element | ProcessingInstruction | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/parentStyleSheet) */\n    readonly parentStyleSheet: CSSStyleSheet | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/title) */\n    readonly title: string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheet/type) */\n    readonly type: string;\n}\n\ndeclare var StyleSheet: {\n    prototype: StyleSheet;\n    new(): StyleSheet;\n};\n\n/**\n * A list of StyleSheet.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheetList)\n */\ninterface StyleSheetList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheetList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StyleSheetList/item) */\n    item(index: number): CSSStyleSheet | null;\n    [index: number]: CSSStyleSheet;\n}\n\ndeclare var StyleSheetList: {\n    prototype: StyleSheetList;\n    new(): StyleSheetList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubmitEvent) */\ninterface SubmitEvent extends Event {\n    /**\n     * Returns the element representing the submit button that triggered the form submission, or null if the submission was not triggered by a button.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubmitEvent/submitter)\n     */\n    readonly submitter: HTMLElement | null;\n}\n\ndeclare var SubmitEvent: {\n    prototype: SubmitEvent;\n    new(type: string, eventInitDict?: SubmitEventInit): SubmitEvent;\n};\n\n/**\n * This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto)\n */\ninterface SubtleCrypto {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/decrypt) */\n    decrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveBits) */\n    deriveBits(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, length?: number | null): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveKey) */\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/digest) */\n    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/encrypt) */\n    encrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/exportKey) */\n    exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;\n    exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;\n    exportKey(format: KeyFormat, key: CryptoKey): Promise<ArrayBuffer | JsonWebKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/generateKey) */\n    generateKey(algorithm: "Ed25519" | { name: "Ed25519" }, extractable: boolean, keyUsages: ReadonlyArray<"sign" | "verify">): Promise<CryptoKeyPair>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair | CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/sign) */\n    sign(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/unwrapKey) */\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/verify) */\n    verify(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, signature: BufferSource, data: BufferSource): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/wrapKey) */\n    wrapKey(format: KeyFormat, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams): Promise<ArrayBuffer>;\n}\n\ndeclare var SubtleCrypto: {\n    prototype: SubtleCrypto;\n    new(): SubtleCrypto;\n};\n\n/**\n * The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element\'s text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Text)\n */\ninterface Text extends CharacterData, Slottable {\n    /**\n     * Returns the combined data of all direct Text node siblings.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Text/wholeText)\n     */\n    readonly wholeText: string;\n    /**\n     * Splits data at the given offset and returns the remainder as Text node.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Text/splitText)\n     */\n    splitText(offset: number): Text;\n}\n\ndeclare var Text: {\n    prototype: Text;\n    new(data?: string): Text;\n};\n\n/**\n * A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc.\xa0A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder)\n */\ninterface TextDecoder extends TextDecoderCommon {\n    /**\n     * Returns the result of running encoding\'s decoder. The method can be invoked zero or more times with options\'s stream set to true, and then once without options\'s stream (or set to false), to process a fragmented input. If the invocation without options\'s stream (or set to false) has no input, it\'s clearest to omit both arguments.\n     *\n     * ```\n     * var string = "", decoder = new TextDecoder(encoding), buffer;\n     * while(buffer = next_chunk()) {\n     *   string += decoder.decode(buffer, {stream:true});\n     * }\n     * string += decoder.decode(); // end-of-queue\n     * ```\n     *\n     * If the error mode is "fatal" and encoding\'s decoder returns error, throws a TypeError.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/decode)\n     */\n    decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;\n}\n\ndeclare var TextDecoder: {\n    prototype: TextDecoder;\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\n};\n\ninterface TextDecoderCommon {\n    /**\n     * Returns encoding\'s name, lowercased.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/encoding)\n     */\n    readonly encoding: string;\n    /**\n     * Returns true if error mode is "fatal", otherwise false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/fatal)\n     */\n    readonly fatal: boolean;\n    /**\n     * Returns the value of ignore BOM.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/ignoreBOM)\n     */\n    readonly ignoreBOM: boolean;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoderStream) */\ninterface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {\n    readonly readable: ReadableStream<string>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var TextDecoderStream: {\n    prototype: TextDecoderStream;\n    new(label?: string, options?: TextDecoderOptions): TextDecoderStream;\n};\n\n/**\n * TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder)\n */\ninterface TextEncoder extends TextEncoderCommon {\n    /**\n     * Returns the result of running UTF-8\'s encoder.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encode)\n     */\n    encode(input?: string): Uint8Array;\n    /**\n     * Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encodeInto)\n     */\n    encodeInto(source: string, destination: Uint8Array): TextEncoderEncodeIntoResult;\n}\n\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new(): TextEncoder;\n};\n\ninterface TextEncoderCommon {\n    /**\n     * Returns "utf-8".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encoding)\n     */\n    readonly encoding: string;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoderStream) */\ninterface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<string>;\n}\n\ndeclare var TextEncoderStream: {\n    prototype: TextEncoderStream;\n    new(): TextEncoderStream;\n};\n\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEvent)\n */\ninterface TextEvent extends UIEvent {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEvent/data)\n     */\n    readonly data: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEvent/initTextEvent)\n     */\n    initTextEvent(type: string, bubbles?: boolean, cancelable?: boolean, view?: Window | null, data?: string): void;\n}\n\n/** @deprecated */\ndeclare var TextEvent: {\n    prototype: TextEvent;\n    new(): TextEvent;\n};\n\n/**\n * The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics)\n */\ninterface TextMetrics {\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxAscent)\n     */\n    readonly actualBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxDescent)\n     */\n    readonly actualBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxLeft)\n     */\n    readonly actualBoundingBoxLeft: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxRight)\n     */\n    readonly actualBoundingBoxRight: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/alphabeticBaseline)\n     */\n    readonly alphabeticBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightAscent)\n     */\n    readonly emHeightAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightDescent)\n     */\n    readonly emHeightDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxAscent)\n     */\n    readonly fontBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxDescent)\n     */\n    readonly fontBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/hangingBaseline)\n     */\n    readonly hangingBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/ideographicBaseline)\n     */\n    readonly ideographicBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/width)\n     */\n    readonly width: number;\n}\n\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new(): TextMetrics;\n};\n\ninterface TextTrackEventMap {\n    "cuechange": Event;\n}\n\n/**\n * This interface also inherits properties from EventTarget.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack)\n */\ninterface TextTrack extends EventTarget {\n    /**\n     * Returns the text track cues from the text track list of cues that are currently active (i.e. that start before the current playback position and end after it), as a TextTrackCueList object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/activeCues)\n     */\n    readonly activeCues: TextTrackCueList | null;\n    /**\n     * Returns the text track list of cues, as a TextTrackCueList object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cues)\n     */\n    readonly cues: TextTrackCueList | null;\n    /**\n     * Returns the ID of the given track.\n     *\n     * For in-band tracks, this is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.\n     *\n     * For TextTrack objects corresponding to track elements, this is the ID of the track element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/id)\n     */\n    readonly id: string;\n    /**\n     * Returns the text track in-band metadata track dispatch type string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/inBandMetadataTrackDispatchType)\n     */\n    readonly inBandMetadataTrackDispatchType: string;\n    /**\n     * Returns the text track kind string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/kind)\n     */\n    readonly kind: TextTrackKind;\n    /**\n     * Returns the text track label, if there is one, or the empty string otherwise (indicating that a custom label probably needs to be generated from the other attributes of the object if the object is exposed to the user).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/label)\n     */\n    readonly label: string;\n    /**\n     * Returns the text track language string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/language)\n     */\n    readonly language: string;\n    /**\n     * Returns the text track mode, represented by a string from the following list:\n     *\n     * Can be set, to change the mode.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/mode)\n     */\n    mode: TextTrackMode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/cuechange_event) */\n    oncuechange: ((this: TextTrack, ev: Event) => any) | null;\n    /**\n     * Adds the given cue to textTrack\'s text track list of cues.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/addCue)\n     */\n    addCue(cue: TextTrackCue): void;\n    /**\n     * Removes the given cue from textTrack\'s text track list of cues.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrack/removeCue)\n     */\n    removeCue(cue: TextTrackCue): void;\n    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var TextTrack: {\n    prototype: TextTrack;\n    new(): TextTrack;\n};\n\ninterface TextTrackCueEventMap {\n    "enter": Event;\n    "exit": Event;\n}\n\n/**\n * TextTrackCues represent a string of text that will be displayed for some duration of time on a TextTrack. This includes the start and end times that the cue will be displayed. A TextTrackCue cannot be used directly, instead one of the derived types (e.g. VTTCue) must be used.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue)\n */\ninterface TextTrackCue extends EventTarget {\n    /**\n     * Returns the text track cue end time, in seconds.\n     *\n     * Can be set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/endTime)\n     */\n    endTime: number;\n    /**\n     * Returns the text track cue identifier.\n     *\n     * Can be set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/id)\n     */\n    id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/enter_event) */\n    onenter: ((this: TextTrackCue, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/exit_event) */\n    onexit: ((this: TextTrackCue, ev: Event) => any) | null;\n    /**\n     * Returns true if the text track cue pause-on-exit flag is set, false otherwise.\n     *\n     * Can be set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/pauseOnExit)\n     */\n    pauseOnExit: boolean;\n    /**\n     * Returns the text track cue start time, in seconds.\n     *\n     * Can be set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/startTime)\n     */\n    startTime: number;\n    /**\n     * Returns the TextTrack object to which this text track cue belongs, if any, or null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCue/track)\n     */\n    readonly track: TextTrack | null;\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var TextTrackCue: {\n    prototype: TextTrackCue;\n    new(): TextTrackCue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCueList) */\ninterface TextTrackCueList {\n    /**\n     * Returns the number of cues in the list.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCueList/length)\n     */\n    readonly length: number;\n    /**\n     * Returns the first text track cue (in text track cue order) with text track cue identifier id.\n     *\n     * Returns null if none of the cues have the given identifier or if the argument is the empty string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackCueList/getCueById)\n     */\n    getCueById(id: string): TextTrackCue | null;\n    [index: number]: TextTrackCue;\n}\n\ndeclare var TextTrackCueList: {\n    prototype: TextTrackCueList;\n    new(): TextTrackCueList;\n};\n\ninterface TextTrackListEventMap {\n    "addtrack": TrackEvent;\n    "change": Event;\n    "removetrack": TrackEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList) */\ninterface TextTrackList extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/addtrack_event) */\n    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/change_event) */\n    onchange: ((this: TextTrackList, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/removetrack_event) */\n    onremovetrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextTrackList/getTrackById) */\n    getTrackById(id: string): TextTrack | null;\n    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: TextTrack;\n}\n\ndeclare var TextTrackList: {\n    prototype: TextTrackList;\n    new(): TextTrackList;\n};\n\n/**\n * Used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video>\xa0elements.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges)\n */\ninterface TimeRanges {\n    /**\n     * Returns the number of ranges in the object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/length)\n     */\n    readonly length: number;\n    /**\n     * Returns the time for the end of the range with the given index.\n     *\n     * Throws an "IndexSizeError" DOMException if the index is out of range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/end)\n     */\n    end(index: number): number;\n    /**\n     * Returns the time for the start of the range with the given index.\n     *\n     * Throws an "IndexSizeError" DOMException if the index is out of range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TimeRanges/start)\n     */\n    start(index: number): number;\n}\n\ndeclare var TimeRanges: {\n    prototype: TimeRanges;\n    new(): TimeRanges;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ToggleEvent) */\ninterface ToggleEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ToggleEvent/newState) */\n    readonly newState: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ToggleEvent/oldState) */\n    readonly oldState: string;\n}\n\ndeclare var ToggleEvent: {\n    prototype: ToggleEvent;\n    new(type: string, eventInitDict?: ToggleEventInit): ToggleEvent;\n};\n\n/**\n * A single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch)\n */\ninterface Touch {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/clientX) */\n    readonly clientX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/clientY) */\n    readonly clientY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/force) */\n    readonly force: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/identifier) */\n    readonly identifier: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/pageX) */\n    readonly pageX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/pageY) */\n    readonly pageY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/radiusX) */\n    readonly radiusX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/radiusY) */\n    readonly radiusY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/rotationAngle) */\n    readonly rotationAngle: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/screenX) */\n    readonly screenX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/screenY) */\n    readonly screenY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Touch/target) */\n    readonly target: EventTarget;\n}\n\ndeclare var Touch: {\n    prototype: Touch;\n    new(touchInitDict: TouchInit): Touch;\n};\n\n/**\n * An event sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent)\n */\ninterface TouchEvent extends UIEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/altKey) */\n    readonly altKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/changedTouches) */\n    readonly changedTouches: TouchList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/ctrlKey) */\n    readonly ctrlKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/metaKey) */\n    readonly metaKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/shiftKey) */\n    readonly shiftKey: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/targetTouches) */\n    readonly targetTouches: TouchList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchEvent/touches) */\n    readonly touches: TouchList;\n}\n\ndeclare var TouchEvent: {\n    prototype: TouchEvent;\n    new(type: string, eventInitDict?: TouchEventInit): TouchEvent;\n};\n\n/**\n * A list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchList)\n */\ninterface TouchList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TouchList/item) */\n    item(index: number): Touch | null;\n    [index: number]: Touch;\n}\n\ndeclare var TouchList: {\n    prototype: TouchList;\n    new(): TouchList;\n};\n\n/**\n * The TrackEvent interface, part of the HTML DOM specification, is used for events which represent changes to the set of available tracks on an HTML media element; these events are addtrack and removetrack.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TrackEvent)\n */\ninterface TrackEvent extends Event {\n    /**\n     * Returns the track object (TextTrack, AudioTrack, or VideoTrack) to which the event relates.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TrackEvent/track)\n     */\n    readonly track: TextTrack | null;\n}\n\ndeclare var TrackEvent: {\n    prototype: TrackEvent;\n    new(type: string, eventInitDict?: TrackEventInit): TrackEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */\ninterface TransformStream<I = any, O = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable) */\n    readonly readable: ReadableStream<O>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/writable) */\n    readonly writable: WritableStream<I>;\n}\n\ndeclare var TransformStream: {\n    prototype: TransformStream;\n    new<I = any, O = any>(transformer?: Transformer<I, O>, writableStrategy?: QueuingStrategy<I>, readableStrategy?: QueuingStrategy<O>): TransformStream<I, O>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController) */\ninterface TransformStreamDefaultController<O = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue) */\n    enqueue(chunk?: O): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error) */\n    error(reason?: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate) */\n    terminate(): void;\n}\n\ndeclare var TransformStreamDefaultController: {\n    prototype: TransformStreamDefaultController;\n    new(): TransformStreamDefaultController;\n};\n\n/**\n * Events providing information related to transitions.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent)\n */\ninterface TransitionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/elapsedTime) */\n    readonly elapsedTime: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/propertyName) */\n    readonly propertyName: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransitionEvent/pseudoElement) */\n    readonly pseudoElement: string;\n}\n\ndeclare var TransitionEvent: {\n    prototype: TransitionEvent;\n    new(type: string, transitionEventInitDict?: TransitionEventInit): TransitionEvent;\n};\n\n/**\n * The nodes of a document subtree and a position within them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker)\n */\ninterface TreeWalker {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/currentNode) */\n    currentNode: Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/filter) */\n    readonly filter: NodeFilter | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/root) */\n    readonly root: Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/whatToShow) */\n    readonly whatToShow: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/firstChild) */\n    firstChild(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/lastChild) */\n    lastChild(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/nextNode) */\n    nextNode(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/nextSibling) */\n    nextSibling(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/parentNode) */\n    parentNode(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/previousNode) */\n    previousNode(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TreeWalker/previousSibling) */\n    previousSibling(): Node | null;\n}\n\ndeclare var TreeWalker: {\n    prototype: TreeWalker;\n    new(): TreeWalker;\n};\n\n/**\n * Simple user interface events.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent)\n */\ninterface UIEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/detail) */\n    readonly detail: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/view) */\n    readonly view: Window | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/which)\n     */\n    readonly which: number;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/UIEvent/initUIEvent)\n     */\n    initUIEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: Window | null, detailArg?: number): void;\n}\n\ndeclare var UIEvent: {\n    prototype: UIEvent;\n    new(type: string, eventInitDict?: UIEventInit): UIEvent;\n};\n\n/**\n * The URL\xa0interface represents an object providing static methods used for creating object URLs.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL)\n */\ninterface URL {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hash) */\n    hash: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/host) */\n    host: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hostname) */\n    hostname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/href) */\n    href: string;\n    toString(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/password) */\n    password: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/pathname) */\n    pathname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/port) */\n    port: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/protocol) */\n    protocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/search) */\n    search: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/searchParams) */\n    readonly searchParams: URLSearchParams;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/username) */\n    username: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/toJSON) */\n    toJSON(): string;\n}\n\ndeclare var URL: {\n    prototype: URL;\n    new(url: string | URL, base?: string | URL): URL;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/canParse_static) */\n    canParse(url: string | URL, base?: string | URL): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/createObjectURL_static) */\n    createObjectURL(obj: Blob | MediaSource): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/parse_static) */\n    parse(url: string | URL, base?: string | URL): URL | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/revokeObjectURL_static) */\n    revokeObjectURL(url: string): void;\n};\n\ntype webkitURL = URL;\ndeclare var webkitURL: typeof URL;\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams) */\ninterface URLSearchParams {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/size) */\n    readonly size: number;\n    /**\n     * Appends a specified key/value pair as a new search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/append)\n     */\n    append(name: string, value: string): void;\n    /**\n     * Deletes the given search parameter, and its associated value, from the list of all search parameters.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/delete)\n     */\n    delete(name: string, value?: string): void;\n    /**\n     * Returns the first value associated to the given search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/get)\n     */\n    get(name: string): string | null;\n    /**\n     * Returns all the values association with a given search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll)\n     */\n    getAll(name: string): string[];\n    /**\n     * Returns a Boolean indicating if such a search parameter exists.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/has)\n     */\n    has(name: string, value?: string): boolean;\n    /**\n     * Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/set)\n     */\n    set(name: string, value: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/sort) */\n    sort(): void;\n    /** Returns a string containing a query string suitable for use in a URL. Does not include the question mark. */\n    toString(): string;\n    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;\n}\n\ndeclare var URLSearchParams: {\n    prototype: URLSearchParams;\n    new(init?: string[][] | Record<string, string> | string | URLSearchParams): URLSearchParams;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/UserActivation) */\ninterface UserActivation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/UserActivation/hasBeenActive) */\n    readonly hasBeenActive: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/UserActivation/isActive) */\n    readonly isActive: boolean;\n}\n\ndeclare var UserActivation: {\n    prototype: UserActivation;\n    new(): UserActivation;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue) */\ninterface VTTCue extends TextTrackCue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/align) */\n    align: AlignSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/line) */\n    line: LineAndPositionSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/lineAlign) */\n    lineAlign: LineAlignSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/position) */\n    position: LineAndPositionSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/positionAlign) */\n    positionAlign: PositionAlignSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/region) */\n    region: VTTRegion | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/size) */\n    size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/snapToLines) */\n    snapToLines: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/text) */\n    text: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/vertical) */\n    vertical: DirectionSetting;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTCue/getCueAsHTML) */\n    getCueAsHTML(): DocumentFragment;\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VTTCue: {\n    prototype: VTTCue;\n    new(startTime: number, endTime: number, text: string): VTTCue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VTTRegion) */\ninterface VTTRegion {\n    id: string;\n    lines: number;\n    regionAnchorX: number;\n    regionAnchorY: number;\n    scroll: ScrollSetting;\n    viewportAnchorX: number;\n    viewportAnchorY: number;\n    width: number;\n}\n\ndeclare var VTTRegion: {\n    prototype: VTTRegion;\n    new(): VTTRegion;\n};\n\n/**\n * The validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element\'s value fails to validate, if it\'s not valid.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState)\n */\ninterface ValidityState {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/badInput) */\n    readonly badInput: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/customError) */\n    readonly customError: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/patternMismatch) */\n    readonly patternMismatch: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/rangeOverflow) */\n    readonly rangeOverflow: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/rangeUnderflow) */\n    readonly rangeUnderflow: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/stepMismatch) */\n    readonly stepMismatch: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/tooLong) */\n    readonly tooLong: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/tooShort) */\n    readonly tooShort: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/typeMismatch) */\n    readonly typeMismatch: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/valid) */\n    readonly valid: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ValidityState/valueMissing) */\n    readonly valueMissing: boolean;\n}\n\ndeclare var ValidityState: {\n    prototype: ValidityState;\n    new(): ValidityState;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace) */\ninterface VideoColorSpace {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/fullRange) */\n    readonly fullRange: boolean | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/matrix) */\n    readonly matrix: VideoMatrixCoefficients | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/primaries) */\n    readonly primaries: VideoColorPrimaries | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/transfer) */\n    readonly transfer: VideoTransferCharacteristics | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/toJSON) */\n    toJSON(): VideoColorSpaceInit;\n}\n\ndeclare var VideoColorSpace: {\n    prototype: VideoColorSpace;\n    new(init?: VideoColorSpaceInit): VideoColorSpace;\n};\n\ninterface VideoDecoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder)\n */\ninterface VideoDecoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decodeQueueSize) */\n    readonly decodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event) */\n    ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/configure) */\n    configure(config: VideoDecoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decode) */\n    decode(chunk: EncodedVideoChunk): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VideoDecoder: {\n    prototype: VideoDecoder;\n    new(init: VideoDecoderInit): VideoDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/isConfigSupported_static) */\n    isConfigSupported(config: VideoDecoderConfig): Promise<VideoDecoderSupport>;\n};\n\ninterface VideoEncoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder)\n */\ninterface VideoEncoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encodeQueueSize) */\n    readonly encodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event) */\n    ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/configure) */\n    configure(config: VideoEncoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encode) */\n    encode(frame: VideoFrame, options?: VideoEncoderEncodeOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VideoEncoder: {\n    prototype: VideoEncoder;\n    new(init: VideoEncoderInit): VideoEncoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/isConfigSupported_static) */\n    isConfigSupported(config: VideoEncoderConfig): Promise<VideoEncoderSupport>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame) */\ninterface VideoFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedHeight) */\n    readonly codedHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedRect) */\n    readonly codedRect: DOMRectReadOnly | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedWidth) */\n    readonly codedWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/colorSpace) */\n    readonly colorSpace: VideoColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayHeight) */\n    readonly displayHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayWidth) */\n    readonly displayWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/format) */\n    readonly format: VideoPixelFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/visibleRect) */\n    readonly visibleRect: DOMRectReadOnly | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/allocationSize) */\n    allocationSize(options?: VideoFrameCopyToOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/clone) */\n    clone(): VideoFrame;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/copyTo) */\n    copyTo(destination: AllowSharedBufferSource, options?: VideoFrameCopyToOptions): Promise<PlaneLayout[]>;\n}\n\ndeclare var VideoFrame: {\n    prototype: VideoFrame;\n    new(image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;\n    new(data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;\n};\n\n/**\n * Returned by the HTMLVideoElement.getVideoPlaybackQuality() method and contains metrics that can be used to determine the playback quality of a video.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality)\n */\ninterface VideoPlaybackQuality {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/corruptedVideoFrames)\n     */\n    readonly corruptedVideoFrames: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/creationTime) */\n    readonly creationTime: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/droppedVideoFrames) */\n    readonly droppedVideoFrames: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoPlaybackQuality/totalVideoFrames) */\n    readonly totalVideoFrames: number;\n}\n\ndeclare var VideoPlaybackQuality: {\n    prototype: VideoPlaybackQuality;\n    new(): VideoPlaybackQuality;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition) */\ninterface ViewTransition {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/finished) */\n    readonly finished: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/ready) */\n    readonly ready: Promise<void>;\n    types: ViewTransitionTypeSet;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/updateCallbackDone) */\n    readonly updateCallbackDone: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ViewTransition/skipTransition) */\n    skipTransition(): void;\n}\n\ndeclare var ViewTransition: {\n    prototype: ViewTransition;\n    new(): ViewTransition;\n};\n\ninterface ViewTransitionTypeSet {\n    forEach(callbackfn: (value: string, key: string, parent: ViewTransitionTypeSet) => void, thisArg?: any): void;\n}\n\ndeclare var ViewTransitionTypeSet: {\n    prototype: ViewTransitionTypeSet;\n    new(): ViewTransitionTypeSet;\n};\n\ninterface VisualViewportEventMap {\n    "resize": Event;\n    "scroll": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport) */\ninterface VisualViewport extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/offsetLeft) */\n    readonly offsetLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/offsetTop) */\n    readonly offsetTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/resize_event) */\n    onresize: ((this: VisualViewport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scroll_event) */\n    onscroll: ((this: VisualViewport, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageLeft) */\n    readonly pageLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/pageTop) */\n    readonly pageTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/scale) */\n    readonly scale: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VisualViewport/width) */\n    readonly width: number;\n    addEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VisualViewport: {\n    prototype: VisualViewport;\n    new(): VisualViewport;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_color_buffer_float) */\ninterface WEBGL_color_buffer_float {\n    readonly RGBA32F_EXT: 0x8814;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;\n    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc) */\ninterface WEBGL_compressed_texture_astc {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles) */\n    getSupportedProfiles(): string[];\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0;\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1;\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2;\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3;\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4;\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5;\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6;\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7;\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8;\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9;\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA;\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB;\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC;\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_etc) */\ninterface WEBGL_compressed_texture_etc {\n    readonly COMPRESSED_R11_EAC: 0x9270;\n    readonly COMPRESSED_SIGNED_R11_EAC: 0x9271;\n    readonly COMPRESSED_RG11_EAC: 0x9272;\n    readonly COMPRESSED_SIGNED_RG11_EAC: 0x9273;\n    readonly COMPRESSED_RGB8_ETC2: 0x9274;\n    readonly COMPRESSED_SRGB8_ETC2: 0x9275;\n    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276;\n    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277;\n    readonly COMPRESSED_RGBA8_ETC2_EAC: 0x9278;\n    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_etc1) */\ninterface WEBGL_compressed_texture_etc1 {\n    readonly COMPRESSED_RGB_ETC1_WEBGL: 0x8D64;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_pvrtc) */\ninterface WEBGL_compressed_texture_pvrtc {\n    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00;\n    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01;\n    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02;\n    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03;\n}\n\n/**\n * The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_s3tc)\n */\ninterface WEBGL_compressed_texture_s3tc {\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0;\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1;\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2;\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_s3tc_srgb) */\ninterface WEBGL_compressed_texture_s3tc_srgb {\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F;\n}\n\n/**\n * The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_renderer_info)\n */\ninterface WEBGL_debug_renderer_info {\n    readonly UNMASKED_VENDOR_WEBGL: 0x9245;\n    readonly UNMASKED_RENDERER_WEBGL: 0x9246;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_shaders) */\ninterface WEBGL_debug_shaders {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_shaders/getTranslatedShaderSource) */\n    getTranslatedShaderSource(shader: WebGLShader): string;\n}\n\n/**\n * The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_depth_texture)\n */\ninterface WEBGL_depth_texture {\n    readonly UNSIGNED_INT_24_8_WEBGL: 0x84FA;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers) */\ninterface WEBGL_draw_buffers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */\n    drawBuffersWEBGL(buffers: GLenum[]): void;\n    readonly COLOR_ATTACHMENT0_WEBGL: 0x8CE0;\n    readonly COLOR_ATTACHMENT1_WEBGL: 0x8CE1;\n    readonly COLOR_ATTACHMENT2_WEBGL: 0x8CE2;\n    readonly COLOR_ATTACHMENT3_WEBGL: 0x8CE3;\n    readonly COLOR_ATTACHMENT4_WEBGL: 0x8CE4;\n    readonly COLOR_ATTACHMENT5_WEBGL: 0x8CE5;\n    readonly COLOR_ATTACHMENT6_WEBGL: 0x8CE6;\n    readonly COLOR_ATTACHMENT7_WEBGL: 0x8CE7;\n    readonly COLOR_ATTACHMENT8_WEBGL: 0x8CE8;\n    readonly COLOR_ATTACHMENT9_WEBGL: 0x8CE9;\n    readonly COLOR_ATTACHMENT10_WEBGL: 0x8CEA;\n    readonly COLOR_ATTACHMENT11_WEBGL: 0x8CEB;\n    readonly COLOR_ATTACHMENT12_WEBGL: 0x8CEC;\n    readonly COLOR_ATTACHMENT13_WEBGL: 0x8CED;\n    readonly COLOR_ATTACHMENT14_WEBGL: 0x8CEE;\n    readonly COLOR_ATTACHMENT15_WEBGL: 0x8CEF;\n    readonly DRAW_BUFFER0_WEBGL: 0x8825;\n    readonly DRAW_BUFFER1_WEBGL: 0x8826;\n    readonly DRAW_BUFFER2_WEBGL: 0x8827;\n    readonly DRAW_BUFFER3_WEBGL: 0x8828;\n    readonly DRAW_BUFFER4_WEBGL: 0x8829;\n    readonly DRAW_BUFFER5_WEBGL: 0x882A;\n    readonly DRAW_BUFFER6_WEBGL: 0x882B;\n    readonly DRAW_BUFFER7_WEBGL: 0x882C;\n    readonly DRAW_BUFFER8_WEBGL: 0x882D;\n    readonly DRAW_BUFFER9_WEBGL: 0x882E;\n    readonly DRAW_BUFFER10_WEBGL: 0x882F;\n    readonly DRAW_BUFFER11_WEBGL: 0x8830;\n    readonly DRAW_BUFFER12_WEBGL: 0x8831;\n    readonly DRAW_BUFFER13_WEBGL: 0x8832;\n    readonly DRAW_BUFFER14_WEBGL: 0x8833;\n    readonly DRAW_BUFFER15_WEBGL: 0x8834;\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: 0x8CDF;\n    readonly MAX_DRAW_BUFFERS_WEBGL: 0x8824;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context) */\ninterface WEBGL_lose_context {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/loseContext) */\n    loseContext(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/restoreContext) */\n    restoreContext(): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw) */\ninterface WEBGL_multi_draw {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: number, countsList: Int32Array | GLsizei[], countsOffset: number, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: number, countsList: Int32Array | GLsizei[], countsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffset: number, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: number, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffset: number, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: number, drawcount: GLsizei): void;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLock)\n */\ninterface WakeLock {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLock/request) */\n    request(type?: WakeLockType): Promise<WakeLockSentinel>;\n}\n\ndeclare var WakeLock: {\n    prototype: WakeLock;\n    new(): WakeLock;\n};\n\ninterface WakeLockSentinelEventMap {\n    "release": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel)\n */\ninterface WakeLockSentinel extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release_event) */\n    onrelease: ((this: WakeLockSentinel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/released) */\n    readonly released: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/type) */\n    readonly type: WakeLockType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WakeLockSentinel/release) */\n    release(): Promise<void>;\n    addEventListener<K extends keyof WakeLockSentinelEventMap>(type: K, listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WakeLockSentinelEventMap>(type: K, listener: (this: WakeLockSentinel, ev: WakeLockSentinelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WakeLockSentinel: {\n    prototype: WakeLockSentinel;\n    new(): WakeLockSentinel;\n};\n\n/**\n * A WaveShaperNode always has exactly one input and one output.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WaveShaperNode)\n */\ninterface WaveShaperNode extends AudioNode {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WaveShaperNode/curve) */\n    curve: Float32Array | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WaveShaperNode/oversample) */\n    oversample: OverSampleType;\n}\n\ndeclare var WaveShaperNode: {\n    prototype: WaveShaperNode;\n    new(context: BaseAudioContext, options?: WaveShaperOptions): WaveShaperNode;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext) */\ninterface WebGL2RenderingContext extends WebGL2RenderingContextBase, WebGL2RenderingContextOverloads, WebGLRenderingContextBase {\n}\n\ndeclare var WebGL2RenderingContext: {\n    prototype: WebGL2RenderingContext;\n    new(): WebGL2RenderingContext;\n    readonly READ_BUFFER: 0x0C02;\n    readonly UNPACK_ROW_LENGTH: 0x0CF2;\n    readonly UNPACK_SKIP_ROWS: 0x0CF3;\n    readonly UNPACK_SKIP_PIXELS: 0x0CF4;\n    readonly PACK_ROW_LENGTH: 0x0D02;\n    readonly PACK_SKIP_ROWS: 0x0D03;\n    readonly PACK_SKIP_PIXELS: 0x0D04;\n    readonly COLOR: 0x1800;\n    readonly DEPTH: 0x1801;\n    readonly STENCIL: 0x1802;\n    readonly RED: 0x1903;\n    readonly RGB8: 0x8051;\n    readonly RGB10_A2: 0x8059;\n    readonly TEXTURE_BINDING_3D: 0x806A;\n    readonly UNPACK_SKIP_IMAGES: 0x806D;\n    readonly UNPACK_IMAGE_HEIGHT: 0x806E;\n    readonly TEXTURE_3D: 0x806F;\n    readonly TEXTURE_WRAP_R: 0x8072;\n    readonly MAX_3D_TEXTURE_SIZE: 0x8073;\n    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;\n    readonly MAX_ELEMENTS_VERTICES: 0x80E8;\n    readonly MAX_ELEMENTS_INDICES: 0x80E9;\n    readonly TEXTURE_MIN_LOD: 0x813A;\n    readonly TEXTURE_MAX_LOD: 0x813B;\n    readonly TEXTURE_BASE_LEVEL: 0x813C;\n    readonly TEXTURE_MAX_LEVEL: 0x813D;\n    readonly MIN: 0x8007;\n    readonly MAX: 0x8008;\n    readonly DEPTH_COMPONENT24: 0x81A6;\n    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;\n    readonly TEXTURE_COMPARE_MODE: 0x884C;\n    readonly TEXTURE_COMPARE_FUNC: 0x884D;\n    readonly CURRENT_QUERY: 0x8865;\n    readonly QUERY_RESULT: 0x8866;\n    readonly QUERY_RESULT_AVAILABLE: 0x8867;\n    readonly STREAM_READ: 0x88E1;\n    readonly STREAM_COPY: 0x88E2;\n    readonly STATIC_READ: 0x88E5;\n    readonly STATIC_COPY: 0x88E6;\n    readonly DYNAMIC_READ: 0x88E9;\n    readonly DYNAMIC_COPY: 0x88EA;\n    readonly MAX_DRAW_BUFFERS: 0x8824;\n    readonly DRAW_BUFFER0: 0x8825;\n    readonly DRAW_BUFFER1: 0x8826;\n    readonly DRAW_BUFFER2: 0x8827;\n    readonly DRAW_BUFFER3: 0x8828;\n    readonly DRAW_BUFFER4: 0x8829;\n    readonly DRAW_BUFFER5: 0x882A;\n    readonly DRAW_BUFFER6: 0x882B;\n    readonly DRAW_BUFFER7: 0x882C;\n    readonly DRAW_BUFFER8: 0x882D;\n    readonly DRAW_BUFFER9: 0x882E;\n    readonly DRAW_BUFFER10: 0x882F;\n    readonly DRAW_BUFFER11: 0x8830;\n    readonly DRAW_BUFFER12: 0x8831;\n    readonly DRAW_BUFFER13: 0x8832;\n    readonly DRAW_BUFFER14: 0x8833;\n    readonly DRAW_BUFFER15: 0x8834;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;\n    readonly SAMPLER_3D: 0x8B5F;\n    readonly SAMPLER_2D_SHADOW: 0x8B62;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;\n    readonly PIXEL_PACK_BUFFER: 0x88EB;\n    readonly PIXEL_UNPACK_BUFFER: 0x88EC;\n    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;\n    readonly FLOAT_MAT2x3: 0x8B65;\n    readonly FLOAT_MAT2x4: 0x8B66;\n    readonly FLOAT_MAT3x2: 0x8B67;\n    readonly FLOAT_MAT3x4: 0x8B68;\n    readonly FLOAT_MAT4x2: 0x8B69;\n    readonly FLOAT_MAT4x3: 0x8B6A;\n    readonly SRGB: 0x8C40;\n    readonly SRGB8: 0x8C41;\n    readonly SRGB8_ALPHA8: 0x8C43;\n    readonly COMPARE_REF_TO_TEXTURE: 0x884E;\n    readonly RGBA32F: 0x8814;\n    readonly RGB32F: 0x8815;\n    readonly RGBA16F: 0x881A;\n    readonly RGB16F: 0x881B;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;\n    readonly MAX_VARYING_COMPONENTS: 0x8B4B;\n    readonly TEXTURE_2D_ARRAY: 0x8C1A;\n    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;\n    readonly R11F_G11F_B10F: 0x8C3A;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;\n    readonly RGB9_E5: 0x8C3D;\n    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;\n    readonly RASTERIZER_DISCARD: 0x8C89;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;\n    readonly INTERLEAVED_ATTRIBS: 0x8C8C;\n    readonly SEPARATE_ATTRIBS: 0x8C8D;\n    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;\n    readonly RGBA32UI: 0x8D70;\n    readonly RGB32UI: 0x8D71;\n    readonly RGBA16UI: 0x8D76;\n    readonly RGB16UI: 0x8D77;\n    readonly RGBA8UI: 0x8D7C;\n    readonly RGB8UI: 0x8D7D;\n    readonly RGBA32I: 0x8D82;\n    readonly RGB32I: 0x8D83;\n    readonly RGBA16I: 0x8D88;\n    readonly RGB16I: 0x8D89;\n    readonly RGBA8I: 0x8D8E;\n    readonly RGB8I: 0x8D8F;\n    readonly RED_INTEGER: 0x8D94;\n    readonly RGB_INTEGER: 0x8D98;\n    readonly RGBA_INTEGER: 0x8D99;\n    readonly SAMPLER_2D_ARRAY: 0x8DC1;\n    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;\n    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;\n    readonly UNSIGNED_INT_VEC2: 0x8DC6;\n    readonly UNSIGNED_INT_VEC3: 0x8DC7;\n    readonly UNSIGNED_INT_VEC4: 0x8DC8;\n    readonly INT_SAMPLER_2D: 0x8DCA;\n    readonly INT_SAMPLER_3D: 0x8DCB;\n    readonly INT_SAMPLER_CUBE: 0x8DCC;\n    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;\n    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;\n    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;\n    readonly DEPTH_COMPONENT32F: 0x8CAC;\n    readonly DEPTH32F_STENCIL8: 0x8CAD;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;\n    readonly FRAMEBUFFER_DEFAULT: 0x8218;\n    readonly UNSIGNED_INT_24_8: 0x84FA;\n    readonly DEPTH24_STENCIL8: 0x88F0;\n    readonly UNSIGNED_NORMALIZED: 0x8C17;\n    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly READ_FRAMEBUFFER: 0x8CA8;\n    readonly DRAW_FRAMEBUFFER: 0x8CA9;\n    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;\n    readonly RENDERBUFFER_SAMPLES: 0x8CAB;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;\n    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;\n    readonly COLOR_ATTACHMENT1: 0x8CE1;\n    readonly COLOR_ATTACHMENT2: 0x8CE2;\n    readonly COLOR_ATTACHMENT3: 0x8CE3;\n    readonly COLOR_ATTACHMENT4: 0x8CE4;\n    readonly COLOR_ATTACHMENT5: 0x8CE5;\n    readonly COLOR_ATTACHMENT6: 0x8CE6;\n    readonly COLOR_ATTACHMENT7: 0x8CE7;\n    readonly COLOR_ATTACHMENT8: 0x8CE8;\n    readonly COLOR_ATTACHMENT9: 0x8CE9;\n    readonly COLOR_ATTACHMENT10: 0x8CEA;\n    readonly COLOR_ATTACHMENT11: 0x8CEB;\n    readonly COLOR_ATTACHMENT12: 0x8CEC;\n    readonly COLOR_ATTACHMENT13: 0x8CED;\n    readonly COLOR_ATTACHMENT14: 0x8CEE;\n    readonly COLOR_ATTACHMENT15: 0x8CEF;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;\n    readonly MAX_SAMPLES: 0x8D57;\n    readonly HALF_FLOAT: 0x140B;\n    readonly RG: 0x8227;\n    readonly RG_INTEGER: 0x8228;\n    readonly R8: 0x8229;\n    readonly RG8: 0x822B;\n    readonly R16F: 0x822D;\n    readonly R32F: 0x822E;\n    readonly RG16F: 0x822F;\n    readonly RG32F: 0x8230;\n    readonly R8I: 0x8231;\n    readonly R8UI: 0x8232;\n    readonly R16I: 0x8233;\n    readonly R16UI: 0x8234;\n    readonly R32I: 0x8235;\n    readonly R32UI: 0x8236;\n    readonly RG8I: 0x8237;\n    readonly RG8UI: 0x8238;\n    readonly RG16I: 0x8239;\n    readonly RG16UI: 0x823A;\n    readonly RG32I: 0x823B;\n    readonly RG32UI: 0x823C;\n    readonly VERTEX_ARRAY_BINDING: 0x85B5;\n    readonly R8_SNORM: 0x8F94;\n    readonly RG8_SNORM: 0x8F95;\n    readonly RGB8_SNORM: 0x8F96;\n    readonly RGBA8_SNORM: 0x8F97;\n    readonly SIGNED_NORMALIZED: 0x8F9C;\n    readonly COPY_READ_BUFFER: 0x8F36;\n    readonly COPY_WRITE_BUFFER: 0x8F37;\n    readonly COPY_READ_BUFFER_BINDING: 0x8F36;\n    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;\n    readonly UNIFORM_BUFFER: 0x8A11;\n    readonly UNIFORM_BUFFER_BINDING: 0x8A28;\n    readonly UNIFORM_BUFFER_START: 0x8A29;\n    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;\n    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;\n    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;\n    readonly UNIFORM_TYPE: 0x8A37;\n    readonly UNIFORM_SIZE: 0x8A38;\n    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;\n    readonly UNIFORM_OFFSET: 0x8A3B;\n    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;\n    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;\n    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;\n    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;\n    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;\n    readonly INVALID_INDEX: 0xFFFFFFFF;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;\n    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;\n    readonly OBJECT_TYPE: 0x9112;\n    readonly SYNC_CONDITION: 0x9113;\n    readonly SYNC_STATUS: 0x9114;\n    readonly SYNC_FLAGS: 0x9115;\n    readonly SYNC_FENCE: 0x9116;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;\n    readonly UNSIGNALED: 0x9118;\n    readonly SIGNALED: 0x9119;\n    readonly ALREADY_SIGNALED: 0x911A;\n    readonly TIMEOUT_EXPIRED: 0x911B;\n    readonly CONDITION_SATISFIED: 0x911C;\n    readonly WAIT_FAILED: 0x911D;\n    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;\n    readonly ANY_SAMPLES_PASSED: 0x8C2F;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;\n    readonly SAMPLER_BINDING: 0x8919;\n    readonly RGB10_A2UI: 0x906F;\n    readonly INT_2_10_10_10_REV: 0x8D9F;\n    readonly TRANSFORM_FEEDBACK: 0x8E22;\n    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;\n    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;\n    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;\n    readonly MAX_ELEMENT_INDEX: 0x8D6B;\n    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;\n    readonly TIMEOUT_IGNORED: -1;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n};\n\ninterface WebGL2RenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginQuery) */\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginTransformFeedback) */\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferBase) */\n    bindBufferBase(target: GLenum, index: GLuint, buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferRange) */\n    bindBufferRange(target: GLenum, index: GLuint, buffer: WebGLBuffer | null, offset: GLintptr, size: GLsizeiptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindSampler) */\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindTransformFeedback) */\n    bindTransformFeedback(target: GLenum, tf: WebGLTransformFeedback | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindVertexArray) */\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/blitFramebuffer) */\n    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Float32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Int32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Uint32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clientWaitSync) */\n    clientWaitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLuint64): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexImage3D) */\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexSubImage3D) */\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyBufferSubData) */\n    copyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyTexSubImage3D) */\n    copyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createQuery) */\n    createQuery(): WebGLQuery;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createSampler) */\n    createSampler(): WebGLSampler;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createTransformFeedback) */\n    createTransformFeedback(): WebGLTransformFeedback;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createVertexArray) */\n    createVertexArray(): WebGLVertexArrayObject;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteQuery) */\n    deleteQuery(query: WebGLQuery | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSampler) */\n    deleteSampler(sampler: WebGLSampler | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSync) */\n    deleteSync(sync: WebGLSync | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteTransformFeedback) */\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteVertexArray) */\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawArraysInstanced) */\n    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */\n    drawBuffers(buffers: GLenum[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced) */\n    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawRangeElements) */\n    drawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endQuery) */\n    endQuery(target: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endTransformFeedback) */\n    endTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/fenceSync) */\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/framebufferTextureLayer) */\n    framebufferTextureLayer(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, layer: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockName) */\n    getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: GLuint): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockParameter) */\n    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */\n    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData) */\n    getBufferSubData(target: GLenum, srcByteOffset: GLintptr, dstBuffer: ArrayBufferView, dstOffset?: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getFragDataLocation) */\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter) */\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter) */\n    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery) */\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter) */\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter) */\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter) */\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying) */\n    getTransformFeedbackVarying(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex) */\n    getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): GLuint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */\n    getUniformIndices(program: WebGLProgram, uniformNames: string[]): GLuint[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */\n    invalidateSubFramebuffer(target: GLenum, attachments: GLenum[], x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isQuery) */\n    isQuery(query: WebGLQuery | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSampler) */\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSync) */\n    isSync(sync: WebGLSync | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isTransformFeedback) */\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isVertexArray) */\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/pauseTransformFeedback) */\n    pauseTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/readBuffer) */\n    readBuffer(src: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/renderbufferStorageMultisample) */\n    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/resumeTransformFeedback) */\n    resumeTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter) */\n    samplerParameterf(sampler: WebGLSampler, pname: GLenum, param: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter) */\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texImage3D) */\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView | null): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage2D) */\n    texStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage3D) */\n    texStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texSubImage3D) */\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView | null, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */\n    transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding) */\n    uniformBlockBinding(program: WebGLProgram, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor) */\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribIPointer) */\n    vertexAttribIPointer(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/waitSync) */\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly READ_BUFFER: 0x0C02;\n    readonly UNPACK_ROW_LENGTH: 0x0CF2;\n    readonly UNPACK_SKIP_ROWS: 0x0CF3;\n    readonly UNPACK_SKIP_PIXELS: 0x0CF4;\n    readonly PACK_ROW_LENGTH: 0x0D02;\n    readonly PACK_SKIP_ROWS: 0x0D03;\n    readonly PACK_SKIP_PIXELS: 0x0D04;\n    readonly COLOR: 0x1800;\n    readonly DEPTH: 0x1801;\n    readonly STENCIL: 0x1802;\n    readonly RED: 0x1903;\n    readonly RGB8: 0x8051;\n    readonly RGB10_A2: 0x8059;\n    readonly TEXTURE_BINDING_3D: 0x806A;\n    readonly UNPACK_SKIP_IMAGES: 0x806D;\n    readonly UNPACK_IMAGE_HEIGHT: 0x806E;\n    readonly TEXTURE_3D: 0x806F;\n    readonly TEXTURE_WRAP_R: 0x8072;\n    readonly MAX_3D_TEXTURE_SIZE: 0x8073;\n    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;\n    readonly MAX_ELEMENTS_VERTICES: 0x80E8;\n    readonly MAX_ELEMENTS_INDICES: 0x80E9;\n    readonly TEXTURE_MIN_LOD: 0x813A;\n    readonly TEXTURE_MAX_LOD: 0x813B;\n    readonly TEXTURE_BASE_LEVEL: 0x813C;\n    readonly TEXTURE_MAX_LEVEL: 0x813D;\n    readonly MIN: 0x8007;\n    readonly MAX: 0x8008;\n    readonly DEPTH_COMPONENT24: 0x81A6;\n    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;\n    readonly TEXTURE_COMPARE_MODE: 0x884C;\n    readonly TEXTURE_COMPARE_FUNC: 0x884D;\n    readonly CURRENT_QUERY: 0x8865;\n    readonly QUERY_RESULT: 0x8866;\n    readonly QUERY_RESULT_AVAILABLE: 0x8867;\n    readonly STREAM_READ: 0x88E1;\n    readonly STREAM_COPY: 0x88E2;\n    readonly STATIC_READ: 0x88E5;\n    readonly STATIC_COPY: 0x88E6;\n    readonly DYNAMIC_READ: 0x88E9;\n    readonly DYNAMIC_COPY: 0x88EA;\n    readonly MAX_DRAW_BUFFERS: 0x8824;\n    readonly DRAW_BUFFER0: 0x8825;\n    readonly DRAW_BUFFER1: 0x8826;\n    readonly DRAW_BUFFER2: 0x8827;\n    readonly DRAW_BUFFER3: 0x8828;\n    readonly DRAW_BUFFER4: 0x8829;\n    readonly DRAW_BUFFER5: 0x882A;\n    readonly DRAW_BUFFER6: 0x882B;\n    readonly DRAW_BUFFER7: 0x882C;\n    readonly DRAW_BUFFER8: 0x882D;\n    readonly DRAW_BUFFER9: 0x882E;\n    readonly DRAW_BUFFER10: 0x882F;\n    readonly DRAW_BUFFER11: 0x8830;\n    readonly DRAW_BUFFER12: 0x8831;\n    readonly DRAW_BUFFER13: 0x8832;\n    readonly DRAW_BUFFER14: 0x8833;\n    readonly DRAW_BUFFER15: 0x8834;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;\n    readonly SAMPLER_3D: 0x8B5F;\n    readonly SAMPLER_2D_SHADOW: 0x8B62;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;\n    readonly PIXEL_PACK_BUFFER: 0x88EB;\n    readonly PIXEL_UNPACK_BUFFER: 0x88EC;\n    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;\n    readonly FLOAT_MAT2x3: 0x8B65;\n    readonly FLOAT_MAT2x4: 0x8B66;\n    readonly FLOAT_MAT3x2: 0x8B67;\n    readonly FLOAT_MAT3x4: 0x8B68;\n    readonly FLOAT_MAT4x2: 0x8B69;\n    readonly FLOAT_MAT4x3: 0x8B6A;\n    readonly SRGB: 0x8C40;\n    readonly SRGB8: 0x8C41;\n    readonly SRGB8_ALPHA8: 0x8C43;\n    readonly COMPARE_REF_TO_TEXTURE: 0x884E;\n    readonly RGBA32F: 0x8814;\n    readonly RGB32F: 0x8815;\n    readonly RGBA16F: 0x881A;\n    readonly RGB16F: 0x881B;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;\n    readonly MAX_VARYING_COMPONENTS: 0x8B4B;\n    readonly TEXTURE_2D_ARRAY: 0x8C1A;\n    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;\n    readonly R11F_G11F_B10F: 0x8C3A;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;\n    readonly RGB9_E5: 0x8C3D;\n    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;\n    readonly RASTERIZER_DISCARD: 0x8C89;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;\n    readonly INTERLEAVED_ATTRIBS: 0x8C8C;\n    readonly SEPARATE_ATTRIBS: 0x8C8D;\n    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;\n    readonly RGBA32UI: 0x8D70;\n    readonly RGB32UI: 0x8D71;\n    readonly RGBA16UI: 0x8D76;\n    readonly RGB16UI: 0x8D77;\n    readonly RGBA8UI: 0x8D7C;\n    readonly RGB8UI: 0x8D7D;\n    readonly RGBA32I: 0x8D82;\n    readonly RGB32I: 0x8D83;\n    readonly RGBA16I: 0x8D88;\n    readonly RGB16I: 0x8D89;\n    readonly RGBA8I: 0x8D8E;\n    readonly RGB8I: 0x8D8F;\n    readonly RED_INTEGER: 0x8D94;\n    readonly RGB_INTEGER: 0x8D98;\n    readonly RGBA_INTEGER: 0x8D99;\n    readonly SAMPLER_2D_ARRAY: 0x8DC1;\n    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;\n    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;\n    readonly UNSIGNED_INT_VEC2: 0x8DC6;\n    readonly UNSIGNED_INT_VEC3: 0x8DC7;\n    readonly UNSIGNED_INT_VEC4: 0x8DC8;\n    readonly INT_SAMPLER_2D: 0x8DCA;\n    readonly INT_SAMPLER_3D: 0x8DCB;\n    readonly INT_SAMPLER_CUBE: 0x8DCC;\n    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;\n    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;\n    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;\n    readonly DEPTH_COMPONENT32F: 0x8CAC;\n    readonly DEPTH32F_STENCIL8: 0x8CAD;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;\n    readonly FRAMEBUFFER_DEFAULT: 0x8218;\n    readonly UNSIGNED_INT_24_8: 0x84FA;\n    readonly DEPTH24_STENCIL8: 0x88F0;\n    readonly UNSIGNED_NORMALIZED: 0x8C17;\n    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly READ_FRAMEBUFFER: 0x8CA8;\n    readonly DRAW_FRAMEBUFFER: 0x8CA9;\n    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;\n    readonly RENDERBUFFER_SAMPLES: 0x8CAB;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;\n    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;\n    readonly COLOR_ATTACHMENT1: 0x8CE1;\n    readonly COLOR_ATTACHMENT2: 0x8CE2;\n    readonly COLOR_ATTACHMENT3: 0x8CE3;\n    readonly COLOR_ATTACHMENT4: 0x8CE4;\n    readonly COLOR_ATTACHMENT5: 0x8CE5;\n    readonly COLOR_ATTACHMENT6: 0x8CE6;\n    readonly COLOR_ATTACHMENT7: 0x8CE7;\n    readonly COLOR_ATTACHMENT8: 0x8CE8;\n    readonly COLOR_ATTACHMENT9: 0x8CE9;\n    readonly COLOR_ATTACHMENT10: 0x8CEA;\n    readonly COLOR_ATTACHMENT11: 0x8CEB;\n    readonly COLOR_ATTACHMENT12: 0x8CEC;\n    readonly COLOR_ATTACHMENT13: 0x8CED;\n    readonly COLOR_ATTACHMENT14: 0x8CEE;\n    readonly COLOR_ATTACHMENT15: 0x8CEF;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;\n    readonly MAX_SAMPLES: 0x8D57;\n    readonly HALF_FLOAT: 0x140B;\n    readonly RG: 0x8227;\n    readonly RG_INTEGER: 0x8228;\n    readonly R8: 0x8229;\n    readonly RG8: 0x822B;\n    readonly R16F: 0x822D;\n    readonly R32F: 0x822E;\n    readonly RG16F: 0x822F;\n    readonly RG32F: 0x8230;\n    readonly R8I: 0x8231;\n    readonly R8UI: 0x8232;\n    readonly R16I: 0x8233;\n    readonly R16UI: 0x8234;\n    readonly R32I: 0x8235;\n    readonly R32UI: 0x8236;\n    readonly RG8I: 0x8237;\n    readonly RG8UI: 0x8238;\n    readonly RG16I: 0x8239;\n    readonly RG16UI: 0x823A;\n    readonly RG32I: 0x823B;\n    readonly RG32UI: 0x823C;\n    readonly VERTEX_ARRAY_BINDING: 0x85B5;\n    readonly R8_SNORM: 0x8F94;\n    readonly RG8_SNORM: 0x8F95;\n    readonly RGB8_SNORM: 0x8F96;\n    readonly RGBA8_SNORM: 0x8F97;\n    readonly SIGNED_NORMALIZED: 0x8F9C;\n    readonly COPY_READ_BUFFER: 0x8F36;\n    readonly COPY_WRITE_BUFFER: 0x8F37;\n    readonly COPY_READ_BUFFER_BINDING: 0x8F36;\n    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;\n    readonly UNIFORM_BUFFER: 0x8A11;\n    readonly UNIFORM_BUFFER_BINDING: 0x8A28;\n    readonly UNIFORM_BUFFER_START: 0x8A29;\n    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;\n    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;\n    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;\n    readonly UNIFORM_TYPE: 0x8A37;\n    readonly UNIFORM_SIZE: 0x8A38;\n    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;\n    readonly UNIFORM_OFFSET: 0x8A3B;\n    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;\n    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;\n    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;\n    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;\n    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;\n    readonly INVALID_INDEX: 0xFFFFFFFF;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;\n    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;\n    readonly OBJECT_TYPE: 0x9112;\n    readonly SYNC_CONDITION: 0x9113;\n    readonly SYNC_STATUS: 0x9114;\n    readonly SYNC_FLAGS: 0x9115;\n    readonly SYNC_FENCE: 0x9116;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;\n    readonly UNSIGNALED: 0x9118;\n    readonly SIGNALED: 0x9119;\n    readonly ALREADY_SIGNALED: 0x911A;\n    readonly TIMEOUT_EXPIRED: 0x911B;\n    readonly CONDITION_SATISFIED: 0x911C;\n    readonly WAIT_FAILED: 0x911D;\n    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;\n    readonly ANY_SAMPLES_PASSED: 0x8C2F;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;\n    readonly SAMPLER_BINDING: 0x8919;\n    readonly RGB10_A2UI: 0x906F;\n    readonly INT_2_10_10_10_REV: 0x8D9F;\n    readonly TRANSFORM_FEEDBACK: 0x8E22;\n    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;\n    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;\n    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;\n    readonly MAX_ELEMENT_INDEX: 0x8D6B;\n    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;\n    readonly TIMEOUT_IGNORED: -1;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferData) */\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: AllowSharedBufferSource | null, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: ArrayBufferView, usage: GLenum, srcOffset: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferSubData) */\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: AllowSharedBufferSource): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: ArrayBufferView, srcOffset: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D) */\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D) */\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels) */\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView | null): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, offset: GLintptr): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView, dstOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D) */\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D) */\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n}\n\n/**\n * Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo)\n */\ninterface WebGLActiveInfo {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/size) */\n    readonly size: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/type) */\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new(): WebGLActiveInfo;\n};\n\n/**\n * Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLBuffer)\n */\ninterface WebGLBuffer {\n}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new(): WebGLBuffer;\n};\n\n/**\n * The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLContextEvent)\n */\ninterface WebGLContextEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLContextEvent/statusMessage) */\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new(type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/**\n * Part of the WebGL API and represents a collection of buffers that serve as a rendering destination.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLFramebuffer)\n */\ninterface WebGLFramebuffer {\n}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new(): WebGLFramebuffer;\n};\n\n/**\n * The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLProgram)\n */\ninterface WebGLProgram {\n}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new(): WebGLProgram;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */\ninterface WebGLQuery {\n}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new(): WebGLQuery;\n};\n\n/**\n * Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderbuffer)\n */\ninterface WebGLRenderbuffer {\n}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new(): WebGLRenderbuffer;\n};\n\n/**\n * Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext)\n */\ninterface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverloads {\n}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new(): WebGLRenderingContext;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n};\n\ninterface WebGLRenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/canvas) */\n    readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawingBufferColorSpace) */\n    drawingBufferColorSpace: PredefinedColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferHeight) */\n    readonly drawingBufferHeight: GLsizei;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferWidth) */\n    readonly drawingBufferWidth: GLsizei;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/unpackColorSpace) */\n    unpackColorSpace: PredefinedColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/activeTexture) */\n    activeTexture(texture: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/attachShader) */\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindAttribLocation) */\n    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindBuffer) */\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindFramebuffer) */\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindRenderbuffer) */\n    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindTexture) */\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendColor) */\n    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquation) */\n    blendEquation(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquationSeparate) */\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFunc) */\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFuncSeparate) */\n    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus) */\n    checkFramebufferStatus(target: GLenum): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clear) */\n    clear(mask: GLbitfield): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearColor) */\n    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearDepth) */\n    clearDepth(depth: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearStencil) */\n    clearStencil(s: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/colorMask) */\n    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compileShader) */\n    compileShader(shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexImage2D) */\n    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D) */\n    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createBuffer) */\n    createBuffer(): WebGLBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createFramebuffer) */\n    createFramebuffer(): WebGLFramebuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createProgram) */\n    createProgram(): WebGLProgram;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createRenderbuffer) */\n    createRenderbuffer(): WebGLRenderbuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createShader) */\n    createShader(type: GLenum): WebGLShader | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createTexture) */\n    createTexture(): WebGLTexture;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/cullFace) */\n    cullFace(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteBuffer) */\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteFramebuffer) */\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteProgram) */\n    deleteProgram(program: WebGLProgram | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer) */\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteShader) */\n    deleteShader(shader: WebGLShader | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteTexture) */\n    deleteTexture(texture: WebGLTexture | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthFunc) */\n    depthFunc(func: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthMask) */\n    depthMask(flag: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthRange) */\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/detachShader) */\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disable) */\n    disable(cap: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray) */\n    disableVertexAttribArray(index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawArrays) */\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawElements) */\n    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enable) */\n    enable(cap: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray) */\n    enableVertexAttribArray(index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/finish) */\n    finish(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/flush) */\n    flush(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer) */\n    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferTexture2D) */\n    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/frontFace) */\n    frontFace(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/generateMipmap) */\n    generateMipmap(target: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveAttrib) */\n    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveUniform) */\n    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttachedShaders) */\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation) */\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter) */\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes) */\n    getContextAttributes(): WebGLContextAttributes | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getError) */\n    getError(): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getExtension) */\n    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;\n    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;\n    getExtension(extensionName: "EXT_color_buffer_float"): EXT_color_buffer_float | null;\n    getExtension(extensionName: "EXT_color_buffer_half_float"): EXT_color_buffer_half_float | null;\n    getExtension(extensionName: "EXT_float_blend"): EXT_float_blend | null;\n    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;\n    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;\n    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;\n    getExtension(extensionName: "EXT_texture_compression_bptc"): EXT_texture_compression_bptc | null;\n    getExtension(extensionName: "EXT_texture_compression_rgtc"): EXT_texture_compression_rgtc | null;\n    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: "KHR_parallel_shader_compile"): KHR_parallel_shader_compile | null;\n    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;\n    getExtension(extensionName: "OES_fbo_render_mipmap"): OES_fbo_render_mipmap | null;\n    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;\n    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;\n    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;\n    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;\n    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear | null;\n    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;\n    getExtension(extensionName: "OVR_multiview2"): OVR_multiview2 | null;\n    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc"): WEBGL_compressed_texture_etc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc1"): WEBGL_compressed_texture_etc1 | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_pvrtc"): WEBGL_compressed_texture_pvrtc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;\n    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;\n    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;\n    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;\n    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;\n    getExtension(extensionName: "WEBGL_multi_draw"): WEBGL_multi_draw | null;\n    getExtension(name: string): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter) */\n    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter) */\n    getParameter(pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog) */\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter) */\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter) */\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog) */\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter) */\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat) */\n    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderSource) */\n    getShaderSource(shader: WebGLShader): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions) */\n    getSupportedExtensions(): string[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter) */\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform) */\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation) */\n    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib) */\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset) */\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/hint) */\n    hint(target: GLenum, mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isBuffer) */\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isContextLost) */\n    isContextLost(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isEnabled) */\n    isEnabled(cap: GLenum): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isFramebuffer) */\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isProgram) */\n    isProgram(program: WebGLProgram | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isRenderbuffer) */\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isShader) */\n    isShader(shader: WebGLShader | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isTexture) */\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/lineWidth) */\n    lineWidth(width: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/linkProgram) */\n    linkProgram(program: WebGLProgram): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/pixelStorei) */\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/polygonOffset) */\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/renderbufferStorage) */\n    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/sampleCoverage) */\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/scissor) */\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/shaderSource) */\n    shaderSource(shader: WebGLShader, source: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFunc) */\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate) */\n    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMask) */\n    stencilMask(mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate) */\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOp) */\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOpSeparate) */\n    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter) */\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter) */\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/useProgram) */\n    useProgram(program: WebGLProgram | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/validateProgram) */\n    validateProgram(program: WebGLProgram): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) */\n    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/viewport) */\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n}\n\ninterface WebGLRenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferData) */\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: AllowSharedBufferSource | null, usage: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferSubData) */\n    bufferSubData(target: GLenum, offset: GLintptr, data: AllowSharedBufferSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D) */\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D) */\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels) */\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D) */\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D) */\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */\ninterface WebGLSampler {\n}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new(): WebGLSampler;\n};\n\n/**\n * The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShader)\n */\ninterface WebGLShader {\n}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new(): WebGLShader;\n};\n\n/**\n * Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat)\n */\ninterface WebGLShaderPrecisionFormat {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/precision) */\n    readonly precision: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMax) */\n    readonly rangeMax: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMin) */\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new(): WebGLShaderPrecisionFormat;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */\ninterface WebGLSync {\n}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new(): WebGLSync;\n};\n\n/**\n * Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTexture)\n */\ninterface WebGLTexture {\n}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new(): WebGLTexture;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTransformFeedback) */\ninterface WebGLTransformFeedback {\n}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new(): WebGLTransformFeedback;\n};\n\n/**\n * Part of the WebGL API and represents the location of a uniform variable in a shader program.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLUniformLocation)\n */\ninterface WebGLUniformLocation {\n}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new(): WebGLUniformLocation;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */\ninterface WebGLVertexArrayObject {\n}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new(): WebGLVertexArrayObject;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */\ninterface WebGLVertexArrayObjectOES {\n}\n\ninterface WebSocketEventMap {\n    "close": CloseEvent;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/**\n * Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket)\n */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is "blob".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/binaryType)\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute\'s value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/bufferedAmount)\n     */\n    readonly bufferedAmount: number;\n    /**\n     * Returns the extensions selected by the server, if any.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/extensions)\n     */\n    readonly extensions: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event) */\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event) */\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event) */\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event) */\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /**\n     * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor\'s second argument to perform subprotocol negotiation.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/protocol)\n     */\n    readonly protocol: string;\n    /**\n     * Returns the state of the WebSocket object\'s connection. It can have the values described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL that was used to establish the WebSocket connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/url)\n     */\n    readonly url: string;\n    /**\n     * Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close)\n     */\n    close(code?: number, reason?: string): void;\n    /**\n     * Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/send)\n     */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSING: 2;\n    readonly CLOSED: 3;\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new(url: string | URL, protocols?: string | string[]): WebSocket;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSING: 2;\n    readonly CLOSED: 3;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport)\n */\ninterface WebTransport {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/closed) */\n    readonly closed: Promise<WebTransportCloseInfo>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/datagrams) */\n    readonly datagrams: WebTransportDatagramDuplexStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingBidirectionalStreams) */\n    readonly incomingBidirectionalStreams: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingUnidirectionalStreams) */\n    readonly incomingUnidirectionalStreams: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/close) */\n    close(closeInfo?: WebTransportCloseInfo): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createBidirectionalStream) */\n    createBidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WebTransportBidirectionalStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createUnidirectionalStream) */\n    createUnidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WritableStream>;\n}\n\ndeclare var WebTransport: {\n    prototype: WebTransport;\n    new(url: string | URL, options?: WebTransportOptions): WebTransport;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream)\n */\ninterface WebTransportBidirectionalStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/writable) */\n    readonly writable: WritableStream;\n}\n\ndeclare var WebTransportBidirectionalStream: {\n    prototype: WebTransportBidirectionalStream;\n    new(): WebTransportBidirectionalStream;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream)\n */\ninterface WebTransportDatagramDuplexStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingHighWaterMark) */\n    incomingHighWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingMaxAge) */\n    incomingMaxAge: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/maxDatagramSize) */\n    readonly maxDatagramSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingHighWaterMark) */\n    outgoingHighWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingMaxAge) */\n    outgoingMaxAge: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/writable) */\n    readonly writable: WritableStream;\n}\n\ndeclare var WebTransportDatagramDuplexStream: {\n    prototype: WebTransportDatagramDuplexStream;\n    new(): WebTransportDatagramDuplexStream;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError)\n */\ninterface WebTransportError extends DOMException {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/source) */\n    readonly source: WebTransportErrorSource;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/streamErrorCode) */\n    readonly streamErrorCode: number | null;\n}\n\ndeclare var WebTransportError: {\n    prototype: WebTransportError;\n    new(message?: string, options?: WebTransportErrorOptions): WebTransportError;\n};\n\n/**\n * Events that occur due to the user moving a mouse wheel or similar input device.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent)\n */\ninterface WheelEvent extends MouseEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaMode) */\n    readonly deltaMode: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaX) */\n    readonly deltaX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaY) */\n    readonly deltaY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WheelEvent/deltaZ) */\n    readonly deltaZ: number;\n    readonly DOM_DELTA_PIXEL: 0x00;\n    readonly DOM_DELTA_LINE: 0x01;\n    readonly DOM_DELTA_PAGE: 0x02;\n}\n\ndeclare var WheelEvent: {\n    prototype: WheelEvent;\n    new(type: string, eventInitDict?: WheelEventInit): WheelEvent;\n    readonly DOM_DELTA_PIXEL: 0x00;\n    readonly DOM_DELTA_LINE: 0x01;\n    readonly DOM_DELTA_PAGE: 0x02;\n};\n\ninterface WindowEventMap extends GlobalEventHandlersEventMap, WindowEventHandlersEventMap {\n    "DOMContentLoaded": Event;\n    "devicemotion": DeviceMotionEvent;\n    "deviceorientation": DeviceOrientationEvent;\n    "deviceorientationabsolute": DeviceOrientationEvent;\n    "gamepadconnected": GamepadEvent;\n    "gamepaddisconnected": GamepadEvent;\n    "orientationchange": Event;\n}\n\n/**\n * A window containing a DOM document; the document property points to the DOM document loaded in that window.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window)\n */\ninterface Window extends EventTarget, AnimationFrameProvider, GlobalEventHandlers, WindowEventHandlers, WindowLocalStorage, WindowOrWorkerGlobalScope, WindowSessionStorage {\n    /**\n     * @deprecated This is a legacy alias of `navigator`.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator)\n     */\n    readonly clientInformation: Navigator;\n    /**\n     * Returns true if the window has been closed, false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/closed)\n     */\n    readonly closed: boolean;\n    /**\n     * Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/customElements)\n     */\n    readonly customElements: CustomElementRegistry;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio) */\n    readonly devicePixelRatio: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/document) */\n    readonly document: Document;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/event)\n     */\n    readonly event: Event | undefined;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/external)\n     */\n    readonly external: External;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frameElement) */\n    readonly frameElement: Element | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frames) */\n    readonly frames: WindowProxy;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/history) */\n    readonly history: History;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerHeight) */\n    readonly innerHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerWidth) */\n    readonly innerWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/location) */\n    get location(): Location;\n    set location(href: string);\n    /**\n     * Returns true if the location bar is visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/locationbar)\n     */\n    readonly locationbar: BarProp;\n    /**\n     * Returns true if the menu bar is visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/menubar)\n     */\n    readonly menubar: BarProp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/name) */\n    name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator) */\n    readonly navigator: Navigator;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)\n     */\n    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)\n     */\n    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)\n     */\n    ondeviceorientationabsolute: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)\n     */\n    onorientationchange: ((this: Window, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */\n    opener: any;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientation)\n     */\n    readonly orientation: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerHeight) */\n    readonly outerHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerWidth) */\n    readonly outerWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */\n    readonly pageXOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */\n    readonly pageYOffset: number;\n    /**\n     * Refers to either the parent WindowProxy, or itself.\n     *\n     * It can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/parent)\n     */\n    readonly parent: WindowProxy;\n    /**\n     * Returns true if the personal bar is visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/personalbar)\n     */\n    readonly personalbar: BarProp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screen) */\n    readonly screen: Screen;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenLeft) */\n    readonly screenLeft: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenTop) */\n    readonly screenTop: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenX) */\n    readonly screenX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenY) */\n    readonly screenY: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */\n    readonly scrollX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */\n    readonly scrollY: number;\n    /**\n     * Returns true if the scrollbars are visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollbars)\n     */\n    readonly scrollbars: BarProp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/self) */\n    readonly self: Window & typeof globalThis;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/speechSynthesis) */\n    readonly speechSynthesis: SpeechSynthesis;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/status)\n     */\n    status: string;\n    /**\n     * Returns true if the status bar is visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/statusbar)\n     */\n    readonly statusbar: BarProp;\n    /**\n     * Returns true if the toolbar is visible; otherwise, returns false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/toolbar)\n     */\n    readonly toolbar: BarProp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/top) */\n    readonly top: WindowProxy | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/visualViewport) */\n    readonly visualViewport: VisualViewport | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */\n    readonly window: Window & typeof globalThis;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */\n    alert(message?: any): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/blur)\n     */\n    blur(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/cancelIdleCallback) */\n    cancelIdleCallback(handle: number): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/captureEvents)\n     */\n    captureEvents(): void;\n    /**\n     * Closes the window.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/close)\n     */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/confirm) */\n    confirm(message?: string): boolean;\n    /**\n     * Moves the focus to the window\'s browsing context, if any.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/focus)\n     */\n    focus(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle) */\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getSelection) */\n    getSelection(): Selection | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/matchMedia) */\n    matchMedia(query: string): MediaQueryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveBy) */\n    moveBy(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveTo) */\n    moveTo(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/open) */\n    open(url?: string | URL, target?: string, features?: string): WindowProxy | null;\n    /**\n     * Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n     *\n     * Objects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * A target origin can be specified using the targetOrigin member of options. If not provided, it defaults to "/". This default restricts the message to same-origin targets only.\n     *\n     * If the origin of the target window doesn\'t match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to "*".\n     *\n     * Throws a "DataCloneError" DOMException if transfer array contains duplicate objects or if message could not be cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)\n     */\n    postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;\n    postMessage(message: any, options?: WindowPostMessageOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */\n    print(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/prompt) */\n    prompt(message?: string, _default?: string): string | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/releaseEvents)\n     */\n    releaseEvents(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/requestIdleCallback) */\n    requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeBy) */\n    resizeBy(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeTo) */\n    resizeTo(width: number, height: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scroll) */\n    scroll(options?: ScrollToOptions): void;\n    scroll(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollBy) */\n    scrollBy(options?: ScrollToOptions): void;\n    scrollBy(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollTo) */\n    scrollTo(options?: ScrollToOptions): void;\n    scrollTo(x: number, y: number): void;\n    /**\n     * Cancels the document load.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/stop)\n     */\n    stop(): void;\n    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: Window;\n}\n\ndeclare var Window: {\n    prototype: Window;\n    new(): Window;\n};\n\ninterface WindowEventHandlersEventMap {\n    "afterprint": Event;\n    "beforeprint": Event;\n    "beforeunload": BeforeUnloadEvent;\n    "gamepadconnected": GamepadEvent;\n    "gamepaddisconnected": GamepadEvent;\n    "hashchange": HashChangeEvent;\n    "languagechange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n    "offline": Event;\n    "online": Event;\n    "pagehide": PageTransitionEvent;\n    "pagereveal": Event;\n    "pageshow": PageTransitionEvent;\n    "pageswap": Event;\n    "popstate": PopStateEvent;\n    "rejectionhandled": PromiseRejectionEvent;\n    "storage": StorageEvent;\n    "unhandledrejection": PromiseRejectionEvent;\n    "unload": Event;\n}\n\ninterface WindowEventHandlers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event) */\n    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event) */\n    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event) */\n    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event) */\n    ongamepadconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event) */\n    ongamepaddisconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event) */\n    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event) */\n    onlanguagechange: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event) */\n    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event) */\n    onmessageerror: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event) */\n    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event) */\n    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event) */\n    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagereveal_event) */\n    onpagereveal: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event) */\n    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageswap_event) */\n    onpageswap: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event) */\n    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event) */\n    onrejectionhandled: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event) */\n    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event) */\n    onunhandledrejection: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)\n     */\n    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface WindowLocalStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/localStorage) */\n    readonly localStorage: Storage;\n}\n\ninterface WindowOrWorkerGlobalScope {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)\n     */\n    readonly caches: CacheStorage;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */\n    readonly crossOriginIsolated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */\n    readonly crypto: Crypto;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */\n    readonly indexedDB: IDBFactory;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */\n    readonly isSecureContext: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */\n    readonly performance: Performance;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */\n    atob(data: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */\n    btoa(data: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearInterval) */\n    clearInterval(id: number | undefined): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearTimeout) */\n    clearTimeout(id: number | undefined): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/createImageBitmap) */\n    createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch) */\n    fetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/queueMicrotask) */\n    queueMicrotask(callback: VoidFunction): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/reportError) */\n    reportError(e: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setInterval) */\n    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setTimeout) */\n    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/structuredClone) */\n    structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;\n}\n\ninterface WindowSessionStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/sessionStorage) */\n    readonly sessionStorage: Storage;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap, MessageEventTargetEventMap {\n}\n\n/**\n * This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker)\n */\ninterface Worker extends EventTarget, AbstractWorker, MessageEventTarget<Worker> {\n    /**\n     * Clones message and transmits it to worker\'s global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /**\n     * Aborts worker\'s associated global environment.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/terminate)\n     */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new(scriptURL: string | URL, options?: WorkerOptions): Worker;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worklet)\n */\ninterface Worklet {\n    /**\n     * Loads and executes the module script given by moduleURL into all of worklet\'s global scopes. It can also create additional global scopes as part of this process, depending on the worklet type. The returned promise will fulfill once the script has been successfully loaded and run in all global scopes.\n     *\n     * The credentials option can be set to a credentials mode to modify the script-fetching process. It defaults to "same-origin".\n     *\n     * Any failures in fetching the script or its dependencies will cause the returned promise to be rejected with an "AbortError" DOMException. Any errors in parsing the script or its dependencies will cause the returned promise to be rejected with the exception generated during parsing.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worklet/addModule)\n     */\n    addModule(moduleURL: string | URL, options?: WorkletOptions): Promise<void>;\n}\n\ndeclare var Worklet: {\n    prototype: Worklet;\n    new(): Worklet;\n};\n\n/**\n * This Streams API interface provides\xa0a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)\n */\ninterface WritableStream<W = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked) */\n    readonly locked: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort) */\n    abort(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter) */\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>;\n};\n\n/**\n * This Streams API interface represents a controller allowing control of a\xa0WritableStream\'s state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController)\n */\ninterface WritableStreamDefaultController {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal) */\n    readonly signal: AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error) */\n    error(e?: any): void;\n}\n\ndeclare var WritableStreamDefaultController: {\n    prototype: WritableStreamDefaultController;\n    new(): WritableStreamDefaultController;\n};\n\n/**\n * This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)\n */\ninterface WritableStreamDefaultWriter<W = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed) */\n    readonly closed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort) */\n    abort(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock) */\n    releaseLock(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/write) */\n    write(chunk?: W): Promise<void>;\n}\n\ndeclare var WritableStreamDefaultWriter: {\n    prototype: WritableStreamDefaultWriter;\n    new<W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;\n};\n\n/**\n * An XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLDocument)\n */\ninterface XMLDocument extends Document {\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLDocument: {\n    prototype: XMLDocument;\n    new(): XMLDocument;\n};\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    "readystatechange": Event;\n}\n\n/**\n * Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest)\n */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event) */\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /**\n     * Returns client\'s state.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the response body.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)\n     */\n    readonly response: any;\n    /**\n     * Returns response as text.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "text".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseText)\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), "arraybuffer", "blob", "document", "json", and "text".\n     *\n     * When set: setting to "document" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseType)\n     */\n    responseType: XMLHttpRequestResponseType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseURL) */\n    readonly responseURL: string;\n    /**\n     * Returns the response as document.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "document".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseXML)\n     */\n    readonly responseXML: Document | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/status) */\n    readonly status: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/statusText) */\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this\'s synchronous flag is unset, a timeout event will then be dispatched, or a "TimeoutError" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/timeout)\n     */\n    timeout: number;\n    /**\n     * Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/upload)\n     */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is not unsent or opened, or if the send() flag is set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/withCredentials)\n     */\n    withCredentials: boolean;\n    /**\n     * Cancels any network activity.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/abort)\n     */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getAllResponseHeaders) */\n    getAllResponseHeaders(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getResponseHeader) */\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a "SyntaxError" DOMException if either method is not a valid method or url cannot be parsed.\n     *\n     * Throws a "SecurityError" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an "InvalidAccessError" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)\n     */\n    open(method: string, url: string | URL): void;\n    open(method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null): void;\n    /**\n     * Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n     *\n     * Throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/overrideMimeType)\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/send)\n     */\n    send(body?: Document | XMLHttpRequestBodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a "SyntaxError" DOMException if name is not a header name or if value is not a header value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/setRequestHeader)\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly UNSENT: 0;\n    readonly OPENED: 1;\n    readonly HEADERS_RECEIVED: 2;\n    readonly LOADING: 3;\n    readonly DONE: 4;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new(): XMLHttpRequest;\n    readonly UNSENT: 0;\n    readonly OPENED: 1;\n    readonly HEADERS_RECEIVED: 2;\n    readonly LOADING: 3;\n    readonly DONE: 4;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    "abort": ProgressEvent<XMLHttpRequestEventTarget>;\n    "error": ProgressEvent<XMLHttpRequestEventTarget>;\n    "load": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadend": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadstart": ProgressEvent<XMLHttpRequestEventTarget>;\n    "progress": ProgressEvent<XMLHttpRequestEventTarget>;\n    "timeout": ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget) */\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new(): XMLHttpRequestEventTarget;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestUpload) */\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new(): XMLHttpRequestUpload;\n};\n\n/**\n * Provides the serializeToString() method to construct an XML string representing a DOM tree.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLSerializer)\n */\ninterface XMLSerializer {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLSerializer/serializeToString) */\n    serializeToString(root: Node): string;\n}\n\ndeclare var XMLSerializer: {\n    prototype: XMLSerializer;\n    new(): XMLSerializer;\n};\n\n/**\n * The\xa0XPathEvaluator interface allows to compile and evaluate XPath expressions.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathEvaluator)\n */\ninterface XPathEvaluator extends XPathEvaluatorBase {\n}\n\ndeclare var XPathEvaluator: {\n    prototype: XPathEvaluator;\n    new(): XPathEvaluator;\n};\n\ninterface XPathEvaluatorBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createExpression) */\n    createExpression(expression: string, resolver?: XPathNSResolver | null): XPathExpression;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/createNSResolver)\n     */\n    createNSResolver(nodeResolver: Node): Node;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/evaluate) */\n    evaluate(expression: string, contextNode: Node, resolver?: XPathNSResolver | null, type?: number, result?: XPathResult | null): XPathResult;\n}\n\n/**\n * This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information its DOM tree.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathExpression)\n */\ninterface XPathExpression {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathExpression/evaluate) */\n    evaluate(contextNode: Node, type?: number, result?: XPathResult | null): XPathResult;\n}\n\ndeclare var XPathExpression: {\n    prototype: XPathExpression;\n    new(): XPathExpression;\n};\n\n/**\n * The results generated by evaluating an XPath expression within the context of a given node.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult)\n */\ninterface XPathResult {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/booleanValue) */\n    readonly booleanValue: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/invalidIteratorState) */\n    readonly invalidIteratorState: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/numberValue) */\n    readonly numberValue: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/resultType) */\n    readonly resultType: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/singleNodeValue) */\n    readonly singleNodeValue: Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/snapshotLength) */\n    readonly snapshotLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/stringValue) */\n    readonly stringValue: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/iterateNext) */\n    iterateNext(): Node | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XPathResult/snapshotItem) */\n    snapshotItem(index: number): Node | null;\n    readonly ANY_TYPE: 0;\n    readonly NUMBER_TYPE: 1;\n    readonly STRING_TYPE: 2;\n    readonly BOOLEAN_TYPE: 3;\n    readonly UNORDERED_NODE_ITERATOR_TYPE: 4;\n    readonly ORDERED_NODE_ITERATOR_TYPE: 5;\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: 6;\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: 7;\n    readonly ANY_UNORDERED_NODE_TYPE: 8;\n    readonly FIRST_ORDERED_NODE_TYPE: 9;\n}\n\ndeclare var XPathResult: {\n    prototype: XPathResult;\n    new(): XPathResult;\n    readonly ANY_TYPE: 0;\n    readonly NUMBER_TYPE: 1;\n    readonly STRING_TYPE: 2;\n    readonly BOOLEAN_TYPE: 3;\n    readonly UNORDERED_NODE_ITERATOR_TYPE: 4;\n    readonly ORDERED_NODE_ITERATOR_TYPE: 5;\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: 6;\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: 7;\n    readonly ANY_UNORDERED_NODE_TYPE: 8;\n    readonly FIRST_ORDERED_NODE_TYPE: 9;\n};\n\n/**\n * An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate <xsl:param> parameter values, and to apply the transformation to documents.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor)\n */\ninterface XSLTProcessor {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/clearParameters) */\n    clearParameters(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/getParameter) */\n    getParameter(namespaceURI: string | null, localName: string): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/importStylesheet) */\n    importStylesheet(style: Node): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/removeParameter) */\n    removeParameter(namespaceURI: string | null, localName: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/reset) */\n    reset(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/setParameter) */\n    setParameter(namespaceURI: string | null, localName: string, value: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/transformToDocument) */\n    transformToDocument(source: Node): Document;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XSLTProcessor/transformToFragment) */\n    transformToFragment(source: Node, output: Document): DocumentFragment;\n}\n\ndeclare var XSLTProcessor: {\n    prototype: XSLTProcessor;\n    new(): XSLTProcessor;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console) */\ninterface Console {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static) */\n    assert(condition?: boolean, ...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/count_static) */\n    count(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/countReset_static) */\n    countReset(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static) */\n    debug(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static) */\n    dir(item?: any, options?: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static) */\n    dirxml(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/error_static) */\n    error(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/group_static) */\n    group(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static) */\n    groupCollapsed(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static) */\n    groupEnd(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/info_static) */\n    info(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static) */\n    log(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/table_static) */\n    table(tabularData?: any, properties?: string[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/time_static) */\n    time(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeEnd_static) */\n    timeEnd(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static) */\n    timeLog(label?: string, ...data: any[]): void;\n    timeStamp(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static) */\n    trace(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static) */\n    warn(...data: any[]): void;\n}\n\ndeclare var console: Console;\n\n/** Holds useful CSS-related methods. No object with this interface are implemented: it contains only static methods and therefore is a utilitarian interface. */\ndeclare namespace CSS {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/highlights_static) */\n    var highlights: HighlightRegistry;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function Hz(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function Q(value: number): CSSUnitValue;\n    function cap(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function ch(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cm(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqb(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqmax(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqmin(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function cqw(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function deg(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dpcm(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dpi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dppx(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvb(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvmax(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvmin(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function dvw(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function em(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/escape_static) */\n    function escape(ident: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function ex(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function fr(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function grad(value: number): CSSUnitValue;\n    function ic(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function kHz(value: number): CSSUnitValue;\n    function lh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvb(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvmax(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvmin(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function lvw(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function mm(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function ms(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function number(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function pc(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function percent(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function pt(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function px(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function rad(value: number): CSSUnitValue;\n    function rcap(value: number): CSSUnitValue;\n    function rch(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/registerProperty_static) */\n    function registerProperty(definition: PropertyDefinition): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function rem(value: number): CSSUnitValue;\n    function rex(value: number): CSSUnitValue;\n    function ric(value: number): CSSUnitValue;\n    function rlh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function s(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/supports_static) */\n    function supports(property: string, value: string): boolean;\n    function supports(conditionText: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svb(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svmax(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svmin(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function svw(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function turn(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vb(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vh(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vi(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vmax(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vmin(value: number): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSS/factory_functions_static) */\n    function vw(value: number): CSSUnitValue;\n}\n\ndeclare namespace WebAssembly {\n    interface CompileError extends Error {\n    }\n\n    var CompileError: {\n        prototype: CompileError;\n        new(message?: string): CompileError;\n        (message?: string): CompileError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Global) */\n    interface Global<T extends ValueType = ValueType> {\n        value: ValueTypeMap[T];\n        valueOf(): ValueTypeMap[T];\n    }\n\n    var Global: {\n        prototype: Global;\n        new<T extends ValueType = ValueType>(descriptor: GlobalDescriptor<T>, v?: ValueTypeMap[T]): Global<T>;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance) */\n    interface Instance {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance/exports) */\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new(module: Module, importObject?: Imports): Instance;\n    };\n\n    interface LinkError extends Error {\n    }\n\n    var LinkError: {\n        prototype: LinkError;\n        new(message?: string): LinkError;\n        (message?: string): LinkError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory) */\n    interface Memory {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/buffer) */\n        readonly buffer: ArrayBuffer;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/grow) */\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new(descriptor: MemoryDescriptor): Memory;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module) */\n    interface Module {\n    }\n\n    var Module: {\n        prototype: Module;\n        new(bytes: BufferSource): Module;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static) */\n        customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/exports_static) */\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/imports_static) */\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface RuntimeError extends Error {\n    }\n\n    var RuntimeError: {\n        prototype: RuntimeError;\n        new(message?: string): RuntimeError;\n        (message?: string): RuntimeError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table) */\n    interface Table {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/length) */\n        readonly length: number;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get) */\n        get(index: number): any;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow) */\n        grow(delta: number, value?: any): number;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set) */\n        set(index: number, value?: any): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new(descriptor: TableDescriptor, value?: any): Table;\n    };\n\n    interface GlobalDescriptor<T extends ValueType = ValueType> {\n        mutable?: boolean;\n        value: T;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n        shared?: boolean;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface ValueTypeMap {\n        anyfunc: Function;\n        externref: any;\n        f32: number;\n        f64: number;\n        i32: number;\n        i64: bigint;\n        v128: never;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = "function" | "global" | "memory" | "table";\n    type TableKind = "anyfunc" | "externref";\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type Imports = Record<string, ModuleImports>;\n    type ModuleImports = Record<string, ImportValue>;\n    type ValueType = keyof ValueTypeMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/compile_static) */\n    function compile(bytes: BufferSource): Promise<Module>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/compileStreaming_static) */\n    function compileStreaming(source: Response | PromiseLike<Response>): Promise<Module>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/instantiate_static) */\n    function instantiate(bytes: BufferSource, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(moduleObject: Module, importObject?: Imports): Promise<Instance>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/instantiateStreaming_static) */\n    function instantiateStreaming(source: Response | PromiseLike<Response>, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/validate_static) */\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface AudioDataOutputCallback {\n    (output: AudioData): void;\n}\n\ninterface BlobCallback {\n    (blob: Blob | null): void;\n}\n\ninterface CustomElementConstructor {\n    new (...params: any[]): HTMLElement;\n}\n\ninterface DecodeErrorCallback {\n    (error: DOMException): void;\n}\n\ninterface DecodeSuccessCallback {\n    (decodedData: AudioBuffer): void;\n}\n\ninterface EncodedAudioChunkOutputCallback {\n    (output: EncodedAudioChunk, metadata?: EncodedAudioChunkMetadata): void;\n}\n\ninterface EncodedVideoChunkOutputCallback {\n    (chunk: EncodedVideoChunk, metadata?: EncodedVideoChunkMetadata): void;\n}\n\ninterface ErrorCallback {\n    (err: DOMException): void;\n}\n\ninterface FileCallback {\n    (file: File): void;\n}\n\ninterface FileSystemEntriesCallback {\n    (entries: FileSystemEntry[]): void;\n}\n\ninterface FileSystemEntryCallback {\n    (entry: FileSystemEntry): void;\n}\n\ninterface FrameRequestCallback {\n    (time: DOMHighResTimeStamp): void;\n}\n\ninterface FunctionStringCallback {\n    (data: string): void;\n}\n\ninterface IdleRequestCallback {\n    (deadline: IdleDeadline): void;\n}\n\ninterface IntersectionObserverCallback {\n    (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\n}\n\ninterface LockGrantedCallback {\n    (lock: Lock | null): any;\n}\n\ninterface MediaSessionActionHandler {\n    (details: MediaSessionActionDetails): void;\n}\n\ninterface MutationCallback {\n    (mutations: MutationRecord[], observer: MutationObserver): void;\n}\n\ninterface NotificationPermissionCallback {\n    (permission: NotificationPermission): void;\n}\n\ninterface OnBeforeUnloadEventHandlerNonNull {\n    (event: Event): string | null;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n}\n\ninterface PerformanceObserverCallback {\n    (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;\n}\n\ninterface PositionCallback {\n    (position: GeolocationPosition): void;\n}\n\ninterface PositionErrorCallback {\n    (positionError: GeolocationPositionError): void;\n}\n\ninterface QueuingStrategySize<T = any> {\n    (chunk: T): number;\n}\n\ninterface RTCPeerConnectionErrorCallback {\n    (error: DOMException): void;\n}\n\ninterface RTCSessionDescriptionCallback {\n    (description: RTCSessionDescriptionInit): void;\n}\n\ninterface RemotePlaybackAvailabilityCallback {\n    (available: boolean): void;\n}\n\ninterface ReportingObserverCallback {\n    (reports: Report[], observer: ReportingObserver): void;\n}\n\ninterface ResizeObserverCallback {\n    (entries: ResizeObserverEntry[], observer: ResizeObserver): void;\n}\n\ninterface TransformerFlushCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformerStartCallback<O> {\n    (controller: TransformStreamDefaultController<O>): any;\n}\n\ninterface TransformerTransformCallback<I, O> {\n    (chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkAbortCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkStartCallback {\n    (controller: WritableStreamDefaultController): any;\n}\n\ninterface UnderlyingSinkWriteCallback<W> {\n    (chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceCancelCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourcePullCallback<R> {\n    (controller: ReadableStreamController<R>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceStartCallback<R> {\n    (controller: ReadableStreamController<R>): any;\n}\n\ninterface VideoFrameOutputCallback {\n    (output: VideoFrame): void;\n}\n\ninterface VideoFrameRequestCallback {\n    (now: DOMHighResTimeStamp, metadata: VideoFrameCallbackMetadata): void;\n}\n\ninterface ViewTransitionUpdateCallback {\n    (): any;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\ninterface WebCodecsErrorCallback {\n    (error: DOMException): void;\n}\n\ninterface HTMLElementTagNameMap {\n    "a": HTMLAnchorElement;\n    "abbr": HTMLElement;\n    "address": HTMLElement;\n    "area": HTMLAreaElement;\n    "article": HTMLElement;\n    "aside": HTMLElement;\n    "audio": HTMLAudioElement;\n    "b": HTMLElement;\n    "base": HTMLBaseElement;\n    "bdi": HTMLElement;\n    "bdo": HTMLElement;\n    "blockquote": HTMLQuoteElement;\n    "body": HTMLBodyElement;\n    "br": HTMLBRElement;\n    "button": HTMLButtonElement;\n    "canvas": HTMLCanvasElement;\n    "caption": HTMLTableCaptionElement;\n    "cite": HTMLElement;\n    "code": HTMLElement;\n    "col": HTMLTableColElement;\n    "colgroup": HTMLTableColElement;\n    "data": HTMLDataElement;\n    "datalist": HTMLDataListElement;\n    "dd": HTMLElement;\n    "del": HTMLModElement;\n    "details": HTMLDetailsElement;\n    "dfn": HTMLElement;\n    "dialog": HTMLDialogElement;\n    "div": HTMLDivElement;\n    "dl": HTMLDListElement;\n    "dt": HTMLElement;\n    "em": HTMLElement;\n    "embed": HTMLEmbedElement;\n    "fieldset": HTMLFieldSetElement;\n    "figcaption": HTMLElement;\n    "figure": HTMLElement;\n    "footer": HTMLElement;\n    "form": HTMLFormElement;\n    "h1": HTMLHeadingElement;\n    "h2": HTMLHeadingElement;\n    "h3": HTMLHeadingElement;\n    "h4": HTMLHeadingElement;\n    "h5": HTMLHeadingElement;\n    "h6": HTMLHeadingElement;\n    "head": HTMLHeadElement;\n    "header": HTMLElement;\n    "hgroup": HTMLElement;\n    "hr": HTMLHRElement;\n    "html": HTMLHtmlElement;\n    "i": HTMLElement;\n    "iframe": HTMLIFrameElement;\n    "img": HTMLImageElement;\n    "input": HTMLInputElement;\n    "ins": HTMLModElement;\n    "kbd": HTMLElement;\n    "label": HTMLLabelElement;\n    "legend": HTMLLegendElement;\n    "li": HTMLLIElement;\n    "link": HTMLLinkElement;\n    "main": HTMLElement;\n    "map": HTMLMapElement;\n    "mark": HTMLElement;\n    "menu": HTMLMenuElement;\n    "meta": HTMLMetaElement;\n    "meter": HTMLMeterElement;\n    "nav": HTMLElement;\n    "noscript": HTMLElement;\n    "object": HTMLObjectElement;\n    "ol": HTMLOListElement;\n    "optgroup": HTMLOptGroupElement;\n    "option": HTMLOptionElement;\n    "output": HTMLOutputElement;\n    "p": HTMLParagraphElement;\n    "picture": HTMLPictureElement;\n    "pre": HTMLPreElement;\n    "progress": HTMLProgressElement;\n    "q": HTMLQuoteElement;\n    "rp": HTMLElement;\n    "rt": HTMLElement;\n    "ruby": HTMLElement;\n    "s": HTMLElement;\n    "samp": HTMLElement;\n    "script": HTMLScriptElement;\n    "search": HTMLElement;\n    "section": HTMLElement;\n    "select": HTMLSelectElement;\n    "slot": HTMLSlotElement;\n    "small": HTMLElement;\n    "source": HTMLSourceElement;\n    "span": HTMLSpanElement;\n    "strong": HTMLElement;\n    "style": HTMLStyleElement;\n    "sub": HTMLElement;\n    "summary": HTMLElement;\n    "sup": HTMLElement;\n    "table": HTMLTableElement;\n    "tbody": HTMLTableSectionElement;\n    "td": HTMLTableCellElement;\n    "template": HTMLTemplateElement;\n    "textarea": HTMLTextAreaElement;\n    "tfoot": HTMLTableSectionElement;\n    "th": HTMLTableCellElement;\n    "thead": HTMLTableSectionElement;\n    "time": HTMLTimeElement;\n    "title": HTMLTitleElement;\n    "tr": HTMLTableRowElement;\n    "track": HTMLTrackElement;\n    "u": HTMLElement;\n    "ul": HTMLUListElement;\n    "var": HTMLElement;\n    "video": HTMLVideoElement;\n    "wbr": HTMLElement;\n}\n\ninterface HTMLElementDeprecatedTagNameMap {\n    "acronym": HTMLElement;\n    "applet": HTMLUnknownElement;\n    "basefont": HTMLElement;\n    "bgsound": HTMLUnknownElement;\n    "big": HTMLElement;\n    "blink": HTMLUnknownElement;\n    "center": HTMLElement;\n    "dir": HTMLDirectoryElement;\n    "font": HTMLFontElement;\n    "frame": HTMLFrameElement;\n    "frameset": HTMLFrameSetElement;\n    "isindex": HTMLUnknownElement;\n    "keygen": HTMLUnknownElement;\n    "listing": HTMLPreElement;\n    "marquee": HTMLMarqueeElement;\n    "menuitem": HTMLElement;\n    "multicol": HTMLUnknownElement;\n    "nextid": HTMLUnknownElement;\n    "nobr": HTMLElement;\n    "noembed": HTMLElement;\n    "noframes": HTMLElement;\n    "param": HTMLParamElement;\n    "plaintext": HTMLElement;\n    "rb": HTMLElement;\n    "rtc": HTMLElement;\n    "spacer": HTMLUnknownElement;\n    "strike": HTMLElement;\n    "tt": HTMLElement;\n    "xmp": HTMLPreElement;\n}\n\ninterface SVGElementTagNameMap {\n    "a": SVGAElement;\n    "animate": SVGAnimateElement;\n    "animateMotion": SVGAnimateMotionElement;\n    "animateTransform": SVGAnimateTransformElement;\n    "circle": SVGCircleElement;\n    "clipPath": SVGClipPathElement;\n    "defs": SVGDefsElement;\n    "desc": SVGDescElement;\n    "ellipse": SVGEllipseElement;\n    "feBlend": SVGFEBlendElement;\n    "feColorMatrix": SVGFEColorMatrixElement;\n    "feComponentTransfer": SVGFEComponentTransferElement;\n    "feComposite": SVGFECompositeElement;\n    "feConvolveMatrix": SVGFEConvolveMatrixElement;\n    "feDiffuseLighting": SVGFEDiffuseLightingElement;\n    "feDisplacementMap": SVGFEDisplacementMapElement;\n    "feDistantLight": SVGFEDistantLightElement;\n    "feDropShadow": SVGFEDropShadowElement;\n    "feFlood": SVGFEFloodElement;\n    "feFuncA": SVGFEFuncAElement;\n    "feFuncB": SVGFEFuncBElement;\n    "feFuncG": SVGFEFuncGElement;\n    "feFuncR": SVGFEFuncRElement;\n    "feGaussianBlur": SVGFEGaussianBlurElement;\n    "feImage": SVGFEImageElement;\n    "feMerge": SVGFEMergeElement;\n    "feMergeNode": SVGFEMergeNodeElement;\n    "feMorphology": SVGFEMorphologyElement;\n    "feOffset": SVGFEOffsetElement;\n    "fePointLight": SVGFEPointLightElement;\n    "feSpecularLighting": SVGFESpecularLightingElement;\n    "feSpotLight": SVGFESpotLightElement;\n    "feTile": SVGFETileElement;\n    "feTurbulence": SVGFETurbulenceElement;\n    "filter": SVGFilterElement;\n    "foreignObject": SVGForeignObjectElement;\n    "g": SVGGElement;\n    "image": SVGImageElement;\n    "line": SVGLineElement;\n    "linearGradient": SVGLinearGradientElement;\n    "marker": SVGMarkerElement;\n    "mask": SVGMaskElement;\n    "metadata": SVGMetadataElement;\n    "mpath": SVGMPathElement;\n    "path": SVGPathElement;\n    "pattern": SVGPatternElement;\n    "polygon": SVGPolygonElement;\n    "polyline": SVGPolylineElement;\n    "radialGradient": SVGRadialGradientElement;\n    "rect": SVGRectElement;\n    "script": SVGScriptElement;\n    "set": SVGSetElement;\n    "stop": SVGStopElement;\n    "style": SVGStyleElement;\n    "svg": SVGSVGElement;\n    "switch": SVGSwitchElement;\n    "symbol": SVGSymbolElement;\n    "text": SVGTextElement;\n    "textPath": SVGTextPathElement;\n    "title": SVGTitleElement;\n    "tspan": SVGTSpanElement;\n    "use": SVGUseElement;\n    "view": SVGViewElement;\n}\n\ninterface MathMLElementTagNameMap {\n    "annotation": MathMLElement;\n    "annotation-xml": MathMLElement;\n    "maction": MathMLElement;\n    "math": MathMLElement;\n    "merror": MathMLElement;\n    "mfrac": MathMLElement;\n    "mi": MathMLElement;\n    "mmultiscripts": MathMLElement;\n    "mn": MathMLElement;\n    "mo": MathMLElement;\n    "mover": MathMLElement;\n    "mpadded": MathMLElement;\n    "mphantom": MathMLElement;\n    "mprescripts": MathMLElement;\n    "mroot": MathMLElement;\n    "mrow": MathMLElement;\n    "ms": MathMLElement;\n    "mspace": MathMLElement;\n    "msqrt": MathMLElement;\n    "mstyle": MathMLElement;\n    "msub": MathMLElement;\n    "msubsup": MathMLElement;\n    "msup": MathMLElement;\n    "mtable": MathMLElement;\n    "mtd": MathMLElement;\n    "mtext": MathMLElement;\n    "mtr": MathMLElement;\n    "munder": MathMLElement;\n    "munderover": MathMLElement;\n    "semantics": MathMLElement;\n}\n\n/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */\ntype ElementTagNameMap = HTMLElementTagNameMap & Pick<SVGElementTagNameMap, Exclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>>;\n\ndeclare var Audio: {\n    new(src?: string): HTMLAudioElement;\n};\ndeclare var Image: {\n    new(width?: number, height?: number): HTMLImageElement;\n};\ndeclare var Option: {\n    new(text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement;\n};\n/**\n * @deprecated This is a legacy alias of `navigator`.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator)\n */\ndeclare var clientInformation: Navigator;\n/**\n * Returns true if the window has been closed, false otherwise.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/closed)\n */\ndeclare var closed: boolean;\n/**\n * Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/customElements)\n */\ndeclare var customElements: CustomElementRegistry;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicePixelRatio) */\ndeclare var devicePixelRatio: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/document) */\ndeclare var document: Document;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/event)\n */\ndeclare var event: Event | undefined;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/external)\n */\ndeclare var external: External;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frameElement) */\ndeclare var frameElement: Element | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/frames) */\ndeclare var frames: WindowProxy;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/history) */\ndeclare var history: History;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerHeight) */\ndeclare var innerHeight: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/innerWidth) */\ndeclare var innerWidth: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/length) */\ndeclare var length: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/location) */\ndeclare var location: Location;\n/**\n * Returns true if the location bar is visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/locationbar)\n */\ndeclare var locationbar: BarProp;\n/**\n * Returns true if the menu bar is visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/menubar)\n */\ndeclare var menubar: BarProp;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/name) */\n/** @deprecated */\ndeclare const name: void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/navigator) */\ndeclare var navigator: Navigator;\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/devicemotion_event)\n */\ndeclare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientation_event)\n */\ndeclare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/deviceorientationabsolute_event)\n */\ndeclare var ondeviceorientationabsolute: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientationchange_event)\n */\ndeclare var onorientationchange: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/opener) */\ndeclare var opener: any;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/orientation)\n */\ndeclare var orientation: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerHeight) */\ndeclare var outerHeight: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/outerWidth) */\ndeclare var outerWidth: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */\ndeclare var pageXOffset: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */\ndeclare var pageYOffset: number;\n/**\n * Refers to either the parent WindowProxy, or itself.\n *\n * It can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/parent)\n */\ndeclare var parent: WindowProxy;\n/**\n * Returns true if the personal bar is visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/personalbar)\n */\ndeclare var personalbar: BarProp;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screen) */\ndeclare var screen: Screen;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenLeft) */\ndeclare var screenLeft: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenTop) */\ndeclare var screenTop: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenX) */\ndeclare var screenX: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/screenY) */\ndeclare var screenY: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollX) */\ndeclare var scrollX: number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollY) */\ndeclare var scrollY: number;\n/**\n * Returns true if the scrollbars are visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollbars)\n */\ndeclare var scrollbars: BarProp;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/self) */\ndeclare var self: Window & typeof globalThis;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/speechSynthesis) */\ndeclare var speechSynthesis: SpeechSynthesis;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/status)\n */\ndeclare var status: string;\n/**\n * Returns true if the status bar is visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/statusbar)\n */\ndeclare var statusbar: BarProp;\n/**\n * Returns true if the toolbar is visible; otherwise, returns false.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/toolbar)\n */\ndeclare var toolbar: BarProp;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/top) */\ndeclare var top: WindowProxy | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/visualViewport) */\ndeclare var visualViewport: VisualViewport | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/window) */\ndeclare var window: Window & typeof globalThis;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/alert) */\ndeclare function alert(message?: any): void;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/blur)\n */\ndeclare function blur(): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/cancelIdleCallback) */\ndeclare function cancelIdleCallback(handle: number): void;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/captureEvents)\n */\ndeclare function captureEvents(): void;\n/**\n * Closes the window.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/close)\n */\ndeclare function close(): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/confirm) */\ndeclare function confirm(message?: string): boolean;\n/**\n * Moves the focus to the window\'s browsing context, if any.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/focus)\n */\ndeclare function focus(): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle) */\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/getSelection) */\ndeclare function getSelection(): Selection | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/matchMedia) */\ndeclare function matchMedia(query: string): MediaQueryList;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveBy) */\ndeclare function moveBy(x: number, y: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/moveTo) */\ndeclare function moveTo(x: number, y: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/open) */\ndeclare function open(url?: string | URL, target?: string, features?: string): WindowProxy | null;\n/**\n * Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n *\n * Objects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n *\n * A target origin can be specified using the targetOrigin member of options. If not provided, it defaults to "/". This default restricts the message to same-origin targets only.\n *\n * If the origin of the target window doesn\'t match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to "*".\n *\n * Throws a "DataCloneError" DOMException if transfer array contains duplicate objects or if message could not be cloned.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/postMessage)\n */\ndeclare function postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;\ndeclare function postMessage(message: any, options?: WindowPostMessageOptions): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/print) */\ndeclare function print(): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/prompt) */\ndeclare function prompt(message?: string, _default?: string): string | null;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/releaseEvents)\n */\ndeclare function releaseEvents(): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/requestIdleCallback) */\ndeclare function requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeBy) */\ndeclare function resizeBy(x: number, y: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/resizeTo) */\ndeclare function resizeTo(width: number, height: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scroll) */\ndeclare function scroll(options?: ScrollToOptions): void;\ndeclare function scroll(x: number, y: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollBy) */\ndeclare function scrollBy(options?: ScrollToOptions): void;\ndeclare function scrollBy(x: number, y: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/scrollTo) */\ndeclare function scrollTo(options?: ScrollToOptions): void;\ndeclare function scrollTo(x: number, y: number): void;\n/**\n * Cancels the document load.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/stop)\n */\ndeclare function stop(): void;\ndeclare function toString(): string;\n/**\n * Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)\n */\ndeclare function dispatchEvent(event: Event): boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame) */\ndeclare function cancelAnimationFrame(handle: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame) */\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\n/**\n * Fires when the user aborts the download.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)\n */\ndeclare var onabort: ((this: Window, ev: UIEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event) */\ndeclare var onanimationcancel: ((this: Window, ev: AnimationEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event) */\ndeclare var onanimationend: ((this: Window, ev: AnimationEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event) */\ndeclare var onanimationiteration: ((this: Window, ev: AnimationEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event) */\ndeclare var onanimationstart: ((this: Window, ev: AnimationEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event) */\ndeclare var onauxclick: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event) */\ndeclare var onbeforeinput: ((this: Window, ev: InputEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event) */\ndeclare var onbeforetoggle: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the object loses the input focus.\n * @param ev The focus event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)\n */\ndeclare var onblur: ((this: Window, ev: FocusEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event) */\ndeclare var oncancel: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when playback is possible, but would require further buffering.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)\n */\ndeclare var oncanplay: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event) */\ndeclare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the contents of the object or selection have changed.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)\n */\ndeclare var onchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user clicks the left mouse button on the object\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)\n */\ndeclare var onclick: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event) */\ndeclare var onclose: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event) */\ndeclare var oncontextlost: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user clicks the right mouse button in the client area, opening the context menu.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)\n */\ndeclare var oncontextmenu: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event) */\ndeclare var oncontextrestored: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event) */\ndeclare var oncopy: ((this: Window, ev: ClipboardEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event) */\ndeclare var oncuechange: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event) */\ndeclare var oncut: ((this: Window, ev: ClipboardEvent) => any) | null;\n/**\n * Fires when the user double-clicks the object.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)\n */\ndeclare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires on the source object continuously during a drag operation.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)\n */\ndeclare var ondrag: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the source object when the user releases the mouse at the close of a drag operation.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)\n */\ndeclare var ondragend: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target element when the user drags the object to a valid drop target.\n * @param ev The drag event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)\n */\ndeclare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\n * @param ev The drag event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)\n */\ndeclare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target element continuously while the user drags the object over a valid drop target.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)\n */\ndeclare var ondragover: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the source object when the user starts to drag a text selection or selected object.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)\n */\ndeclare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event) */\ndeclare var ondrop: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Occurs when the duration attribute is updated.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)\n */\ndeclare var ondurationchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the media element is reset to its initial state.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)\n */\ndeclare var onemptied: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the end of playback is reached.\n * @param ev The event\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)\n */\ndeclare var onended: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when an error occurs during object loading.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)\n */\ndeclare var onerror: OnErrorEventHandler;\n/**\n * Fires when the object receives focus.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)\n */\ndeclare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event) */\ndeclare var onformdata: ((this: Window, ev: FormDataEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event) */\ndeclare var ongotpointercapture: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event) */\ndeclare var oninput: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event) */\ndeclare var oninvalid: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user presses a key.\n * @param ev The keyboard event\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)\n */\ndeclare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires when the user presses an alphanumeric key.\n * @param ev The event.\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)\n */\ndeclare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires when the user releases a key.\n * @param ev The keyboard event\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)\n */\ndeclare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires immediately after the browser loads the object.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)\n */\ndeclare var onload: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when media data is loaded at the current playback position.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)\n */\ndeclare var onloadeddata: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the duration and dimensions of the media have been determined.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)\n */\ndeclare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when Internet Explorer begins looking for media data.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)\n */\ndeclare var onloadstart: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event) */\ndeclare var onlostpointercapture: ((this: Window, ev: PointerEvent) => any) | null;\n/**\n * Fires when the user clicks the object with either mouse button.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)\n */\ndeclare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event) */\ndeclare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event) */\ndeclare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse over the object.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)\n */\ndeclare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse pointer outside the boundaries of the object.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)\n */\ndeclare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse pointer into the object.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)\n */\ndeclare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user releases a mouse button while the mouse is over the object.\n * @param ev The mouse event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)\n */\ndeclare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event) */\ndeclare var onpaste: ((this: Window, ev: ClipboardEvent) => any) | null;\n/**\n * Occurs when playback is paused.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)\n */\ndeclare var onpause: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the play method is requested.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)\n */\ndeclare var onplay: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the audio or video has started playing.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)\n */\ndeclare var onplaying: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event) */\ndeclare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event) */\ndeclare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event) */\ndeclare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event) */\ndeclare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event) */\ndeclare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event) */\ndeclare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event) */\ndeclare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event) */\ndeclare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;\n/**\n * Occurs to indicate progress while downloading media data.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)\n */\ndeclare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\n/**\n * Occurs when the playback rate is increased or decreased.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)\n */\ndeclare var onratechange: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user resets a form.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)\n */\ndeclare var onreset: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event) */\ndeclare var onresize: ((this: Window, ev: UIEvent) => any) | null;\n/**\n * Fires when the user repositions the scroll box in the scroll bar on the object.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)\n */\ndeclare var onscroll: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event) */\ndeclare var onscrollend: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event) */\ndeclare var onsecuritypolicyviolation: ((this: Window, ev: SecurityPolicyViolationEvent) => any) | null;\n/**\n * Occurs when the seek operation ends.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)\n */\ndeclare var onseeked: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the current playback position is moved.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)\n */\ndeclare var onseeking: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the current selection changes.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)\n */\ndeclare var onselect: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event) */\ndeclare var onselectionchange: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event) */\ndeclare var onselectstart: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event) */\ndeclare var onslotchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the download has stopped.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)\n */\ndeclare var onstalled: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event) */\ndeclare var onsubmit: ((this: Window, ev: SubmitEvent) => any) | null;\n/**\n * Occurs if the load operation has been intentionally halted.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)\n */\ndeclare var onsuspend: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs to indicate the current playback position.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)\n */\ndeclare var ontimeupdate: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event) */\ndeclare var ontoggle: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event) */\ndeclare var ontouchcancel: ((this: Window, ev: TouchEvent) => any) | null | undefined;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event) */\ndeclare var ontouchend: ((this: Window, ev: TouchEvent) => any) | null | undefined;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event) */\ndeclare var ontouchmove: ((this: Window, ev: TouchEvent) => any) | null | undefined;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event) */\ndeclare var ontouchstart: ((this: Window, ev: TouchEvent) => any) | null | undefined;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event) */\ndeclare var ontransitioncancel: ((this: Window, ev: TransitionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event) */\ndeclare var ontransitionend: ((this: Window, ev: TransitionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event) */\ndeclare var ontransitionrun: ((this: Window, ev: TransitionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event) */\ndeclare var ontransitionstart: ((this: Window, ev: TransitionEvent) => any) | null;\n/**\n * Occurs when the volume is changed, or playback is muted or unmuted.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)\n */\ndeclare var onvolumechange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when playback stops because the next frame of a video resource is not available.\n * @param ev The event.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)\n */\ndeclare var onwaiting: ((this: Window, ev: Event) => any) | null;\n/**\n * @deprecated This is a legacy alias of `onanimationend`.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)\n */\ndeclare var onwebkitanimationend: ((this: Window, ev: Event) => any) | null;\n/**\n * @deprecated This is a legacy alias of `onanimationiteration`.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)\n */\ndeclare var onwebkitanimationiteration: ((this: Window, ev: Event) => any) | null;\n/**\n * @deprecated This is a legacy alias of `onanimationstart`.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)\n */\ndeclare var onwebkitanimationstart: ((this: Window, ev: Event) => any) | null;\n/**\n * @deprecated This is a legacy alias of `ontransitionend`.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)\n */\ndeclare var onwebkittransitionend: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event) */\ndeclare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/afterprint_event) */\ndeclare var onafterprint: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeprint_event) */\ndeclare var onbeforeprint: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/beforeunload_event) */\ndeclare var onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepadconnected_event) */\ndeclare var ongamepadconnected: ((this: Window, ev: GamepadEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/gamepaddisconnected_event) */\ndeclare var ongamepaddisconnected: ((this: Window, ev: GamepadEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/hashchange_event) */\ndeclare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/languagechange_event) */\ndeclare var onlanguagechange: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/message_event) */\ndeclare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/messageerror_event) */\ndeclare var onmessageerror: ((this: Window, ev: MessageEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/offline_event) */\ndeclare var onoffline: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/online_event) */\ndeclare var ononline: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagehide_event) */\ndeclare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pagereveal_event) */\ndeclare var onpagereveal: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageshow_event) */\ndeclare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/pageswap_event) */\ndeclare var onpageswap: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/popstate_event) */\ndeclare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/rejectionhandled_event) */\ndeclare var onrejectionhandled: ((this: Window, ev: PromiseRejectionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/storage_event) */\ndeclare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unhandledrejection_event) */\ndeclare var onunhandledrejection: ((this: Window, ev: PromiseRejectionEvent) => any) | null;\n/**\n * @deprecated\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/unload_event)\n */\ndeclare var onunload: ((this: Window, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/localStorage) */\ndeclare var localStorage: Storage;\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)\n */\ndeclare var caches: CacheStorage;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */\ndeclare var crossOriginIsolated: boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */\ndeclare var crypto: Crypto;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */\ndeclare var indexedDB: IDBFactory;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */\ndeclare var isSecureContext: boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */\ndeclare var origin: string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */\ndeclare var performance: Performance;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */\ndeclare function atob(data: string): string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */\ndeclare function btoa(data: string): string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearInterval) */\ndeclare function clearInterval(id: number | undefined): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearTimeout) */\ndeclare function clearTimeout(id: number | undefined): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/createImageBitmap) */\ndeclare function createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch) */\ndeclare function fetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response>;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/queueMicrotask) */\ndeclare function queueMicrotask(callback: VoidFunction): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/reportError) */\ndeclare function reportError(e: any): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setInterval) */\ndeclare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setTimeout) */\ndeclare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/structuredClone) */\ndeclare function structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/sessionStorage) */\ndeclare var sessionStorage: Storage;\ndeclare function addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\ndeclare function removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\ntype AlgorithmIdentifier = Algorithm | string;\ntype AllowSharedBufferSource = ArrayBuffer | ArrayBufferView;\ntype AutoFill = AutoFillBase | `${OptionalPrefixToken<AutoFillSection>}${OptionalPrefixToken<AutoFillAddressKind>}${AutoFillField}${OptionalPostfixToken<AutoFillCredentialField>}`;\ntype AutoFillField = AutoFillNormalField | `${OptionalPrefixToken<AutoFillContactKind>}${AutoFillContactField}`;\ntype AutoFillSection = `section-${string}`;\ntype Base64URLString = string;\ntype BigInteger = Uint8Array;\ntype BlobPart = BufferSource | Blob | string;\ntype BodyInit = ReadableStream | XMLHttpRequestBodyInit;\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype COSEAlgorithmIdentifier = number;\ntype CSSKeywordish = string | CSSKeywordValue;\ntype CSSNumberish = number | CSSNumericValue;\ntype CSSPerspectiveValue = CSSNumericValue | CSSKeywordish;\ntype CSSUnparsedSegment = string | CSSVariableReferenceValue;\ntype CanvasImageSource = HTMLOrSVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | OffscreenCanvas | VideoFrame;\ntype ClipboardItemData = Promise<string | Blob>;\ntype ClipboardItems = ClipboardItem[];\ntype ConstrainBoolean = boolean | ConstrainBooleanParameters;\ntype ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;\ntype ConstrainDouble = number | ConstrainDoubleRange;\ntype ConstrainULong = number | ConstrainULongRange;\ntype DOMHighResTimeStamp = number;\ntype EpochTimeStamp = number;\ntype EventListenerOrEventListenerObject = EventListener | EventListenerObject;\ntype FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;\ntype Float32List = Float32Array | GLfloat[];\ntype FormDataEntryValue = File | string;\ntype GLbitfield = number;\ntype GLboolean = boolean;\ntype GLclampf = number;\ntype GLenum = number;\ntype GLfloat = number;\ntype GLint = number;\ntype GLint64 = number;\ntype GLintptr = number;\ntype GLsizei = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLuint64 = number;\ntype HTMLOrSVGImageElement = HTMLImageElement | SVGImageElement;\ntype HTMLOrSVGScriptElement = HTMLScriptElement | SVGScriptElement;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype HeadersInit = [string, string][] | Record<string, string> | Headers;\ntype IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype ImageBufferSource = AllowSharedBufferSource | ReadableStream;\ntype Int32List = Int32Array | GLint[];\ntype LineAndPositionSetting = number | AutoKeyword;\ntype MediaProvider = MediaStream | MediaSource | Blob;\ntype MessageEventSource = WindowProxy | MessagePort | ServiceWorker;\ntype MutationRecordType = "attributes" | "characterData" | "childList";\ntype NamedCurve = string;\ntype OffscreenRenderingContext = OffscreenCanvasRenderingContext2D | ImageBitmapRenderingContext | WebGLRenderingContext | WebGL2RenderingContext;\ntype OnBeforeUnloadEventHandler = OnBeforeUnloadEventHandlerNonNull | null;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype OptionalPostfixToken<T extends string> = ` ${T}` | "";\ntype OptionalPrefixToken<T extends string> = `${T} ` | "";\ntype PerformanceEntryList = PerformanceEntry[];\ntype PublicKeyCredentialClientCapabilities = Record<string, boolean>;\ntype PublicKeyCredentialJSON = any;\ntype RTCRtpTransform = RTCRtpScriptTransform;\ntype ReadableStreamController<T> = ReadableStreamDefaultController<T> | ReadableByteStreamController;\ntype ReadableStreamReadResult<T> = ReadableStreamReadValueResult<T> | ReadableStreamReadDoneResult<T>;\ntype ReadableStreamReader<T> = ReadableStreamDefaultReader<T> | ReadableStreamBYOBReader;\ntype RenderingContext = CanvasRenderingContext2D | ImageBitmapRenderingContext | WebGLRenderingContext | WebGL2RenderingContext;\ntype ReportList = Report[];\ntype RequestInfo = Request | string;\ntype TexImageSource = ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | OffscreenCanvas | VideoFrame;\ntype TimerHandler = string | Function;\ntype Transferable = OffscreenCanvas | ImageBitmap | MessagePort | MediaSourceHandle | ReadableStream | WritableStream | TransformStream | AudioData | VideoFrame | RTCDataChannel | ArrayBuffer;\ntype Uint32List = Uint32Array | GLuint[];\ntype VibratePattern = number | number[];\ntype WindowProxy = Window;\ntype XMLHttpRequestBodyInit = Blob | BufferSource | FormData | URLSearchParams | string;\ntype AlignSetting = "center" | "end" | "left" | "right" | "start";\ntype AlphaOption = "discard" | "keep";\ntype AnimationPlayState = "finished" | "idle" | "paused" | "running";\ntype AnimationReplaceState = "active" | "persisted" | "removed";\ntype AppendMode = "segments" | "sequence";\ntype AttestationConveyancePreference = "direct" | "enterprise" | "indirect" | "none";\ntype AudioContextLatencyCategory = "balanced" | "interactive" | "playback";\ntype AudioContextState = "closed" | "running" | "suspended";\ntype AudioSampleFormat = "f32" | "f32-planar" | "s16" | "s16-planar" | "s32" | "s32-planar" | "u8" | "u8-planar";\ntype AuthenticatorAttachment = "cross-platform" | "platform";\ntype AuthenticatorTransport = "ble" | "hybrid" | "internal" | "nfc" | "usb";\ntype AutoFillAddressKind = "billing" | "shipping";\ntype AutoFillBase = "" | "off" | "on";\ntype AutoFillContactField = "email" | "tel" | "tel-area-code" | "tel-country-code" | "tel-extension" | "tel-local" | "tel-local-prefix" | "tel-local-suffix" | "tel-national";\ntype AutoFillContactKind = "home" | "mobile" | "work";\ntype AutoFillCredentialField = "webauthn";\ntype AutoFillNormalField = "additional-name" | "address-level1" | "address-level2" | "address-level3" | "address-level4" | "address-line1" | "address-line2" | "address-line3" | "bday-day" | "bday-month" | "bday-year" | "cc-csc" | "cc-exp" | "cc-exp-month" | "cc-exp-year" | "cc-family-name" | "cc-given-name" | "cc-name" | "cc-number" | "cc-type" | "country" | "country-name" | "current-password" | "family-name" | "given-name" | "honorific-prefix" | "honorific-suffix" | "name" | "new-password" | "one-time-code" | "organization" | "postal-code" | "street-address" | "transaction-amount" | "transaction-currency" | "username";\ntype AutoKeyword = "auto";\ntype AutomationRate = "a-rate" | "k-rate";\ntype AvcBitstreamFormat = "annexb" | "avc";\ntype BinaryType = "arraybuffer" | "blob";\ntype BiquadFilterType = "allpass" | "bandpass" | "highpass" | "highshelf" | "lowpass" | "lowshelf" | "notch" | "peaking";\ntype BitrateMode = "constant" | "variable";\ntype CSSMathOperator = "clamp" | "invert" | "max" | "min" | "negate" | "product" | "sum";\ntype CSSNumericBaseType = "angle" | "flex" | "frequency" | "length" | "percent" | "resolution" | "time";\ntype CanPlayTypeResult = "" | "maybe" | "probably";\ntype CanvasDirection = "inherit" | "ltr" | "rtl";\ntype CanvasFillRule = "evenodd" | "nonzero";\ntype CanvasFontKerning = "auto" | "none" | "normal";\ntype CanvasFontStretch = "condensed" | "expanded" | "extra-condensed" | "extra-expanded" | "normal" | "semi-condensed" | "semi-expanded" | "ultra-condensed" | "ultra-expanded";\ntype CanvasFontVariantCaps = "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";\ntype CanvasLineCap = "butt" | "round" | "square";\ntype CanvasLineJoin = "bevel" | "miter" | "round";\ntype CanvasTextAlign = "center" | "end" | "left" | "right" | "start";\ntype CanvasTextBaseline = "alphabetic" | "bottom" | "hanging" | "ideographic" | "middle" | "top";\ntype CanvasTextRendering = "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";\ntype ChannelCountMode = "clamped-max" | "explicit" | "max";\ntype ChannelInterpretation = "discrete" | "speakers";\ntype ClientTypes = "all" | "sharedworker" | "window" | "worker";\ntype CodecState = "closed" | "configured" | "unconfigured";\ntype ColorGamut = "p3" | "rec2020" | "srgb";\ntype ColorSpaceConversion = "default" | "none";\ntype CompositeOperation = "accumulate" | "add" | "replace";\ntype CompositeOperationOrAuto = "accumulate" | "add" | "auto" | "replace";\ntype CompressionFormat = "deflate" | "deflate-raw" | "gzip";\ntype CredentialMediationRequirement = "conditional" | "optional" | "required" | "silent";\ntype DOMParserSupportedType = "application/xhtml+xml" | "application/xml" | "image/svg+xml" | "text/html" | "text/xml";\ntype DirectionSetting = "" | "lr" | "rl";\ntype DisplayCaptureSurfaceType = "browser" | "monitor" | "window";\ntype DistanceModelType = "exponential" | "inverse" | "linear";\ntype DocumentReadyState = "complete" | "interactive" | "loading";\ntype DocumentVisibilityState = "hidden" | "visible";\ntype EncodedAudioChunkType = "delta" | "key";\ntype EncodedVideoChunkType = "delta" | "key";\ntype EndOfStreamError = "decode" | "network";\ntype EndingType = "native" | "transparent";\ntype FileSystemHandleKind = "directory" | "file";\ntype FillMode = "auto" | "backwards" | "both" | "forwards" | "none";\ntype FontDisplay = "auto" | "block" | "fallback" | "optional" | "swap";\ntype FontFaceLoadStatus = "error" | "loaded" | "loading" | "unloaded";\ntype FontFaceSetLoadStatus = "loaded" | "loading";\ntype FullscreenNavigationUI = "auto" | "hide" | "show";\ntype GamepadHapticEffectType = "dual-rumble" | "trigger-rumble";\ntype GamepadHapticsResult = "complete" | "preempted";\ntype GamepadMappingType = "" | "standard" | "xr-standard";\ntype GlobalCompositeOperation = "color" | "color-burn" | "color-dodge" | "copy" | "darken" | "destination-atop" | "destination-in" | "destination-out" | "destination-over" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "lighter" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "soft-light" | "source-atop" | "source-in" | "source-out" | "source-over" | "xor";\ntype HardwareAcceleration = "no-preference" | "prefer-hardware" | "prefer-software";\ntype HdrMetadataType = "smpteSt2086" | "smpteSt2094-10" | "smpteSt2094-40";\ntype HighlightType = "grammar-error" | "highlight" | "spelling-error";\ntype IDBCursorDirection = "next" | "nextunique" | "prev" | "prevunique";\ntype IDBRequestReadyState = "done" | "pending";\ntype IDBTransactionDurability = "default" | "relaxed" | "strict";\ntype IDBTransactionMode = "readonly" | "readwrite" | "versionchange";\ntype ImageOrientation = "flipY" | "from-image" | "none";\ntype ImageSmoothingQuality = "high" | "low" | "medium";\ntype InsertPosition = "afterbegin" | "afterend" | "beforebegin" | "beforeend";\ntype IterationCompositeOperation = "accumulate" | "replace";\ntype KeyFormat = "jwk" | "pkcs8" | "raw" | "spki";\ntype KeyType = "private" | "public" | "secret";\ntype KeyUsage = "decrypt" | "deriveBits" | "deriveKey" | "encrypt" | "sign" | "unwrapKey" | "verify" | "wrapKey";\ntype LatencyMode = "quality" | "realtime";\ntype LineAlignSetting = "center" | "end" | "start";\ntype LockMode = "exclusive" | "shared";\ntype MIDIPortConnectionState = "closed" | "open" | "pending";\ntype MIDIPortDeviceState = "connected" | "disconnected";\ntype MIDIPortType = "input" | "output";\ntype MediaDecodingType = "file" | "media-source" | "webrtc";\ntype MediaDeviceKind = "audioinput" | "audiooutput" | "videoinput";\ntype MediaEncodingType = "record" | "webrtc";\ntype MediaKeyMessageType = "individualization-request" | "license-release" | "license-renewal" | "license-request";\ntype MediaKeySessionClosedReason = "closed-by-application" | "hardware-context-reset" | "internal-error" | "release-acknowledged" | "resource-evicted";\ntype MediaKeySessionType = "persistent-license" | "temporary";\ntype MediaKeyStatus = "expired" | "internal-error" | "output-downscaled" | "output-restricted" | "released" | "status-pending" | "usable" | "usable-in-future";\ntype MediaKeysRequirement = "not-allowed" | "optional" | "required";\ntype MediaSessionAction = "nexttrack" | "pause" | "play" | "previoustrack" | "seekbackward" | "seekforward" | "seekto" | "skipad" | "stop";\ntype MediaSessionPlaybackState = "none" | "paused" | "playing";\ntype MediaStreamTrackState = "ended" | "live";\ntype NavigationTimingType = "back_forward" | "navigate" | "prerender" | "reload";\ntype NavigationType = "push" | "reload" | "replace" | "traverse";\ntype NotificationDirection = "auto" | "ltr" | "rtl";\ntype NotificationPermission = "default" | "denied" | "granted";\ntype OffscreenRenderingContextId = "2d" | "bitmaprenderer" | "webgl" | "webgl2" | "webgpu";\ntype OpusBitstreamFormat = "ogg" | "opus";\ntype OrientationType = "landscape-primary" | "landscape-secondary" | "portrait-primary" | "portrait-secondary";\ntype OscillatorType = "custom" | "sawtooth" | "sine" | "square" | "triangle";\ntype OverSampleType = "2x" | "4x" | "none";\ntype PanningModelType = "HRTF" | "equalpower";\ntype PaymentComplete = "fail" | "success" | "unknown";\ntype PaymentShippingType = "delivery" | "pickup" | "shipping";\ntype PermissionName = "camera" | "geolocation" | "microphone" | "midi" | "notifications" | "persistent-storage" | "push" | "screen-wake-lock" | "storage-access";\ntype PermissionState = "denied" | "granted" | "prompt";\ntype PlaybackDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";\ntype PositionAlignSetting = "auto" | "center" | "line-left" | "line-right";\ntype PredefinedColorSpace = "display-p3" | "srgb";\ntype PremultiplyAlpha = "default" | "none" | "premultiply";\ntype PresentationStyle = "attachment" | "inline" | "unspecified";\ntype PublicKeyCredentialType = "public-key";\ntype PushEncryptionKeyName = "auth" | "p256dh";\ntype RTCBundlePolicy = "balanced" | "max-bundle" | "max-compat";\ntype RTCDataChannelState = "closed" | "closing" | "connecting" | "open";\ntype RTCDegradationPreference = "balanced" | "maintain-framerate" | "maintain-resolution";\ntype RTCDtlsRole = "client" | "server" | "unknown";\ntype RTCDtlsTransportState = "closed" | "connected" | "connecting" | "failed" | "new";\ntype RTCEncodedVideoFrameType = "delta" | "empty" | "key";\ntype RTCErrorDetailType = "data-channel-failure" | "dtls-failure" | "fingerprint-failure" | "hardware-encoder-error" | "hardware-encoder-not-available" | "sctp-failure" | "sdp-syntax-error";\ntype RTCIceCandidateType = "host" | "prflx" | "relay" | "srflx";\ntype RTCIceComponent = "rtcp" | "rtp";\ntype RTCIceConnectionState = "checking" | "closed" | "completed" | "connected" | "disconnected" | "failed" | "new";\ntype RTCIceGathererState = "complete" | "gathering" | "new";\ntype RTCIceGatheringState = "complete" | "gathering" | "new";\ntype RTCIceProtocol = "tcp" | "udp";\ntype RTCIceRole = "controlled" | "controlling" | "unknown";\ntype RTCIceTcpCandidateType = "active" | "passive" | "so";\ntype RTCIceTransportPolicy = "all" | "relay";\ntype RTCIceTransportState = "checking" | "closed" | "completed" | "connected" | "disconnected" | "failed" | "new";\ntype RTCPeerConnectionState = "closed" | "connected" | "connecting" | "disconnected" | "failed" | "new";\ntype RTCPriorityType = "high" | "low" | "medium" | "very-low";\ntype RTCQualityLimitationReason = "bandwidth" | "cpu" | "none" | "other";\ntype RTCRtcpMuxPolicy = "require";\ntype RTCRtpTransceiverDirection = "inactive" | "recvonly" | "sendonly" | "sendrecv" | "stopped";\ntype RTCSctpTransportState = "closed" | "connected" | "connecting";\ntype RTCSdpType = "answer" | "offer" | "pranswer" | "rollback";\ntype RTCSignalingState = "closed" | "have-local-offer" | "have-local-pranswer" | "have-remote-offer" | "have-remote-pranswer" | "stable";\ntype RTCStatsIceCandidatePairState = "failed" | "frozen" | "in-progress" | "inprogress" | "succeeded" | "waiting";\ntype RTCStatsType = "candidate-pair" | "certificate" | "codec" | "data-channel" | "inbound-rtp" | "local-candidate" | "media-playout" | "media-source" | "outbound-rtp" | "peer-connection" | "remote-candidate" | "remote-inbound-rtp" | "remote-outbound-rtp" | "transport";\ntype ReadableStreamReaderMode = "byob";\ntype ReadableStreamType = "bytes";\ntype ReadyState = "closed" | "ended" | "open";\ntype RecordingState = "inactive" | "paused" | "recording";\ntype ReferrerPolicy = "" | "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url";\ntype RemotePlaybackState = "connected" | "connecting" | "disconnected";\ntype RequestCache = "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload";\ntype RequestCredentials = "include" | "omit" | "same-origin";\ntype RequestDestination = "" | "audio" | "audioworklet" | "document" | "embed" | "font" | "frame" | "iframe" | "image" | "manifest" | "object" | "paintworklet" | "report" | "script" | "sharedworker" | "style" | "track" | "video" | "worker" | "xslt";\ntype RequestMode = "cors" | "navigate" | "no-cors" | "same-origin";\ntype RequestPriority = "auto" | "high" | "low";\ntype RequestRedirect = "error" | "follow" | "manual";\ntype ResidentKeyRequirement = "discouraged" | "preferred" | "required";\ntype ResizeObserverBoxOptions = "border-box" | "content-box" | "device-pixel-content-box";\ntype ResizeQuality = "high" | "low" | "medium" | "pixelated";\ntype ResponseType = "basic" | "cors" | "default" | "error" | "opaque" | "opaqueredirect";\ntype ScrollBehavior = "auto" | "instant" | "smooth";\ntype ScrollLogicalPosition = "center" | "end" | "nearest" | "start";\ntype ScrollRestoration = "auto" | "manual";\ntype ScrollSetting = "" | "up";\ntype SecurityPolicyViolationEventDisposition = "enforce" | "report";\ntype SelectionMode = "end" | "preserve" | "select" | "start";\ntype ServiceWorkerState = "activated" | "activating" | "installed" | "installing" | "parsed" | "redundant";\ntype ServiceWorkerUpdateViaCache = "all" | "imports" | "none";\ntype ShadowRootMode = "closed" | "open";\ntype SlotAssignmentMode = "manual" | "named";\ntype SpeechSynthesisErrorCode = "audio-busy" | "audio-hardware" | "canceled" | "interrupted" | "invalid-argument" | "language-unavailable" | "network" | "not-allowed" | "synthesis-failed" | "synthesis-unavailable" | "text-too-long" | "voice-unavailable";\ntype TextTrackKind = "captions" | "chapters" | "descriptions" | "metadata" | "subtitles";\ntype TextTrackMode = "disabled" | "hidden" | "showing";\ntype TouchType = "direct" | "stylus";\ntype TransferFunction = "hlg" | "pq" | "srgb";\ntype UserVerificationRequirement = "discouraged" | "preferred" | "required";\ntype VideoColorPrimaries = "bt470bg" | "bt709" | "smpte170m";\ntype VideoEncoderBitrateMode = "constant" | "quantizer" | "variable";\ntype VideoFacingModeEnum = "environment" | "left" | "right" | "user";\ntype VideoMatrixCoefficients = "bt470bg" | "bt709" | "rgb" | "smpte170m";\ntype VideoPixelFormat = "BGRA" | "BGRX" | "I420" | "I420A" | "I422" | "I444" | "NV12" | "RGBA" | "RGBX";\ntype VideoTransferCharacteristics = "bt709" | "iec61966-2-1" | "smpte170m";\ntype WakeLockType = "screen";\ntype WebGLPowerPreference = "default" | "high-performance" | "low-power";\ntype WebTransportCongestionControl = "default" | "low-latency" | "throughput";\ntype WebTransportErrorSource = "session" | "stream";\ntype WorkerType = "classic" | "module";\ntype WriteCommandType = "seek" | "truncate" | "write";\ntype XMLHttpRequestResponseType = "" | "arraybuffer" | "blob" | "document" | "json" | "text";\n'],["file:///node_modules/typescript/lib/lib.dom.iterable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Window Iterable APIs\n/////////////////////////////\n\ninterface AudioParam {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioParam/setValueCurveAtTime) */\n    setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): AudioParam;\n}\n\ninterface AudioParamMap extends ReadonlyMap<string, AudioParam> {\n}\n\ninterface BaseAudioContext {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createIIRFilter) */\n    createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIRFilterNode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BaseAudioContext/createPeriodicWave) */\n    createPeriodicWave(real: Iterable<number>, imag: Iterable<number>, constraints?: PeriodicWaveConstraints): PeriodicWave;\n}\n\ninterface CSSKeyframesRule {\n    [Symbol.iterator](): ArrayIterator<CSSKeyframeRule>;\n}\n\ninterface CSSNumericArray {\n    [Symbol.iterator](): ArrayIterator<CSSNumericValue>;\n    entries(): ArrayIterator<[number, CSSNumericValue]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSNumericValue>;\n}\n\ninterface CSSRuleList {\n    [Symbol.iterator](): ArrayIterator<CSSRule>;\n}\n\ninterface CSSStyleDeclaration {\n    [Symbol.iterator](): ArrayIterator<string>;\n}\n\ninterface CSSTransformValue {\n    [Symbol.iterator](): ArrayIterator<CSSTransformComponent>;\n    entries(): ArrayIterator<[number, CSSTransformComponent]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSTransformComponent>;\n}\n\ninterface CSSUnparsedValue {\n    [Symbol.iterator](): ArrayIterator<CSSUnparsedSegment>;\n    entries(): ArrayIterator<[number, CSSUnparsedSegment]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSUnparsedSegment>;\n}\n\ninterface Cache {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */\n    addAll(requests: Iterable<RequestInfo>): Promise<void>;\n}\n\ninterface CanvasPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/roundRect) */\n    roundRect(x: number, y: number, w: number, h: number, radii?: number | DOMPointInit | Iterable<number | DOMPointInit>): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */\n    setLineDash(segments: Iterable<number>): void;\n}\n\ninterface CustomStateSet extends Set<string> {\n}\n\ninterface DOMRectList {\n    [Symbol.iterator](): ArrayIterator<DOMRect>;\n}\n\ninterface DOMStringList {\n    [Symbol.iterator](): ArrayIterator<string>;\n}\n\ninterface DOMTokenList {\n    [Symbol.iterator](): ArrayIterator<string>;\n    entries(): ArrayIterator<[number, string]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<string>;\n}\n\ninterface DataTransferItemList {\n    [Symbol.iterator](): ArrayIterator<DataTransferItem>;\n}\n\ninterface EventCounts extends ReadonlyMap<string, number> {\n}\n\ninterface FileList {\n    [Symbol.iterator](): ArrayIterator<File>;\n}\n\ninterface FontFaceSet extends Set<FontFace> {\n}\n\ninterface FormDataIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): FormDataIterator<T>;\n}\n\ninterface FormData {\n    [Symbol.iterator](): FormDataIterator<[string, FormDataEntryValue]>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): FormDataIterator<[string, FormDataEntryValue]>;\n    /** Returns a list of keys in the list. */\n    keys(): FormDataIterator<string>;\n    /** Returns a list of values in the list. */\n    values(): FormDataIterator<FormDataEntryValue>;\n}\n\ninterface HTMLAllCollection {\n    [Symbol.iterator](): ArrayIterator<Element>;\n}\n\ninterface HTMLCollectionBase {\n    [Symbol.iterator](): ArrayIterator<Element>;\n}\n\ninterface HTMLCollectionOf<T extends Element> {\n    [Symbol.iterator](): ArrayIterator<T>;\n}\n\ninterface HTMLFormElement {\n    [Symbol.iterator](): ArrayIterator<Element>;\n}\n\ninterface HTMLSelectElement {\n    [Symbol.iterator](): ArrayIterator<HTMLOptionElement>;\n}\n\ninterface HeadersIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): HeadersIterator<T>;\n}\n\ninterface Headers {\n    [Symbol.iterator](): HeadersIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all key/value pairs contained in this object. */\n    entries(): HeadersIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all keys of the key/value pairs contained in this object. */\n    keys(): HeadersIterator<string>;\n    /** Returns an iterator allowing to go through all values of the key/value pairs contained in this object. */\n    values(): HeadersIterator<string>;\n}\n\ninterface Highlight extends Set<AbstractRange> {\n}\n\ninterface HighlightRegistry extends Map<string, Highlight> {\n}\n\ninterface IDBDatabase {\n    /**\n     * Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)\n     */\n    transaction(storeNames: string | Iterable<string>, mode?: IDBTransactionMode, options?: IDBTransactionOptions): IDBTransaction;\n}\n\ninterface IDBObjectStore {\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex)\n     */\n    createIndex(name: string, keyPath: string | Iterable<string>, options?: IDBIndexParameters): IDBIndex;\n}\n\ninterface ImageTrackList {\n    [Symbol.iterator](): ArrayIterator<ImageTrack>;\n}\n\ninterface MIDIInputMap extends ReadonlyMap<string, MIDIInput> {\n}\n\ninterface MIDIOutput {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MIDIOutput/send) */\n    send(data: Iterable<number>, timestamp?: DOMHighResTimeStamp): void;\n}\n\ninterface MIDIOutputMap extends ReadonlyMap<string, MIDIOutput> {\n}\n\ninterface MediaKeyStatusMapIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): MediaKeyStatusMapIterator<T>;\n}\n\ninterface MediaKeyStatusMap {\n    [Symbol.iterator](): MediaKeyStatusMapIterator<[BufferSource, MediaKeyStatus]>;\n    entries(): MediaKeyStatusMapIterator<[BufferSource, MediaKeyStatus]>;\n    keys(): MediaKeyStatusMapIterator<BufferSource>;\n    values(): MediaKeyStatusMapIterator<MediaKeyStatus>;\n}\n\ninterface MediaList {\n    [Symbol.iterator](): ArrayIterator<string>;\n}\n\ninterface MessageEvent<T = any> {\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;\n}\n\ninterface MimeTypeArray {\n    [Symbol.iterator](): ArrayIterator<MimeType>;\n}\n\ninterface NamedNodeMap {\n    [Symbol.iterator](): ArrayIterator<Attr>;\n}\n\ninterface Navigator {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/requestMediaKeySystemAccess)\n     */\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: Iterable<MediaKeySystemConfiguration>): Promise<MediaKeySystemAccess>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/vibrate) */\n    vibrate(pattern: Iterable<number>): boolean;\n}\n\ninterface NodeList {\n    [Symbol.iterator](): ArrayIterator<Node>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): ArrayIterator<[number, Node]>;\n    /** Returns an list of keys in the list. */\n    keys(): ArrayIterator<number>;\n    /** Returns an list of values in the list. */\n    values(): ArrayIterator<Node>;\n}\n\ninterface NodeListOf<TNode extends Node> {\n    [Symbol.iterator](): ArrayIterator<TNode>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): ArrayIterator<[number, TNode]>;\n    /** Returns an list of keys in the list. */\n    keys(): ArrayIterator<number>;\n    /** Returns an list of values in the list. */\n    values(): ArrayIterator<TNode>;\n}\n\ninterface Plugin {\n    [Symbol.iterator](): ArrayIterator<MimeType>;\n}\n\ninterface PluginArray {\n    [Symbol.iterator](): ArrayIterator<Plugin>;\n}\n\ninterface RTCRtpTransceiver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpTransceiver/setCodecPreferences) */\n    setCodecPreferences(codecs: Iterable<RTCRtpCodec>): void;\n}\n\ninterface RTCStatsReport extends ReadonlyMap<string, any> {\n}\n\ninterface SVGLengthList {\n    [Symbol.iterator](): ArrayIterator<SVGLength>;\n}\n\ninterface SVGNumberList {\n    [Symbol.iterator](): ArrayIterator<SVGNumber>;\n}\n\ninterface SVGPointList {\n    [Symbol.iterator](): ArrayIterator<DOMPoint>;\n}\n\ninterface SVGStringList {\n    [Symbol.iterator](): ArrayIterator<string>;\n}\n\ninterface SVGTransformList {\n    [Symbol.iterator](): ArrayIterator<SVGTransform>;\n}\n\ninterface SourceBufferList {\n    [Symbol.iterator](): ArrayIterator<SourceBuffer>;\n}\n\ninterface SpeechRecognitionResult {\n    [Symbol.iterator](): ArrayIterator<SpeechRecognitionAlternative>;\n}\n\ninterface SpeechRecognitionResultList {\n    [Symbol.iterator](): ArrayIterator<SpeechRecognitionResult>;\n}\n\ninterface StylePropertyMapReadOnlyIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): StylePropertyMapReadOnlyIterator<T>;\n}\n\ninterface StylePropertyMapReadOnly {\n    [Symbol.iterator](): StylePropertyMapReadOnlyIterator<[string, Iterable<CSSStyleValue>]>;\n    entries(): StylePropertyMapReadOnlyIterator<[string, Iterable<CSSStyleValue>]>;\n    keys(): StylePropertyMapReadOnlyIterator<string>;\n    values(): StylePropertyMapReadOnlyIterator<Iterable<CSSStyleValue>>;\n}\n\ninterface StyleSheetList {\n    [Symbol.iterator](): ArrayIterator<CSSStyleSheet>;\n}\n\ninterface SubtleCrypto {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveKey) */\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/generateKey) */\n    generateKey(algorithm: "Ed25519" | { name: "Ed25519" }, extractable: boolean, keyUsages: ReadonlyArray<"sign" | "verify">): Promise<CryptoKeyPair>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKeyPair | CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/unwrapKey) */\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n}\n\ninterface TextTrackCueList {\n    [Symbol.iterator](): ArrayIterator<TextTrackCue>;\n}\n\ninterface TextTrackList {\n    [Symbol.iterator](): ArrayIterator<TextTrack>;\n}\n\ninterface TouchList {\n    [Symbol.iterator](): ArrayIterator<Touch>;\n}\n\ninterface URLSearchParamsIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): URLSearchParamsIterator<T>;\n}\n\ninterface URLSearchParams {\n    [Symbol.iterator](): URLSearchParamsIterator<[string, string]>;\n    /** Returns an array of key, value pairs for every entry in the search params. */\n    entries(): URLSearchParamsIterator<[string, string]>;\n    /** Returns a list of keys in the search params. */\n    keys(): URLSearchParamsIterator<string>;\n    /** Returns a list of values in the search params. */\n    values(): URLSearchParamsIterator<string>;\n}\n\ninterface ViewTransitionTypeSet extends Set<string> {\n}\n\ninterface WEBGL_draw_buffers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */\n    drawBuffersWEBGL(buffers: Iterable<GLenum>): void;\n}\n\ninterface WEBGL_multi_draw {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: number, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: number, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: number, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: number, drawcount: GLsizei): void;\n}\n\ninterface WebGL2RenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLfloat>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLint>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLuint>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */\n    drawBuffers(buffers: Iterable<GLenum>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */\n    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */\n    getUniformIndices(program: WebGLProgram, uniformNames: Iterable<string>): Iterable<GLuint> | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */\n    invalidateFramebuffer(target: GLenum, attachments: Iterable<GLenum>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */\n    invalidateSubFramebuffer(target: GLenum, attachments: Iterable<GLenum>, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */\n    transformFeedbackVaryings(program: WebGLProgram, varyings: Iterable<string>, bufferMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4iv(index: GLuint, values: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4uiv(index: GLuint, values: Iterable<GLuint>): void;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n}\n\ninterface WebGLRenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4fv(index: GLuint, values: Iterable<GLfloat>): void;\n}\n\ninterface WebGLRenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n}\n'],["file:///node_modules/typescript/lib/lib.es2015.collection.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Map<K, V> {\n    clear(): void;\n    /**\n     * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.\n     */\n    delete(key: K): boolean;\n    /**\n     * Executes a provided function once per each key/value pair in the Map, in insertion order.\n     */\n    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n    /**\n     * Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.\n     * @returns Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.\n     */\n    get(key: K): V | undefined;\n    /**\n     * @returns boolean indicating whether an element with the specified key exists or not.\n     */\n    has(key: K): boolean;\n    /**\n     * Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.\n     */\n    set(key: K, value: V): this;\n    /**\n     * @returns the number of elements in the Map.\n     */\n    readonly size: number;\n}\n\ninterface MapConstructor {\n    new (): Map<any, any>;\n    new <K, V>(entries?: readonly (readonly [K, V])[] | null): Map<K, V>;\n    readonly prototype: Map<any, any>;\n}\ndeclare var Map: MapConstructor;\n\ninterface ReadonlyMap<K, V> {\n    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;\n    get(key: K): V | undefined;\n    has(key: K): boolean;\n    readonly size: number;\n}\n\ninterface WeakMap<K extends WeakKey, V> {\n    /**\n     * Removes the specified element from the WeakMap.\n     * @returns true if the element was successfully removed, or false if it was not present.\n     */\n    delete(key: K): boolean;\n    /**\n     * @returns a specified element.\n     */\n    get(key: K): V | undefined;\n    /**\n     * @returns a boolean indicating whether an element with the specified key exists or not.\n     */\n    has(key: K): boolean;\n    /**\n     * Adds a new element with a specified key and value.\n     * @param key Must be an object or symbol.\n     */\n    set(key: K, value: V): this;\n}\n\ninterface WeakMapConstructor {\n    new <K extends WeakKey = WeakKey, V = any>(entries?: readonly (readonly [K, V])[] | null): WeakMap<K, V>;\n    readonly prototype: WeakMap<WeakKey, any>;\n}\ndeclare var WeakMap: WeakMapConstructor;\n\ninterface Set<T> {\n    /**\n     * Appends a new element with a specified value to the end of the Set.\n     */\n    add(value: T): this;\n\n    clear(): void;\n    /**\n     * Removes a specified value from the Set.\n     * @returns Returns true if an element in the Set existed and has been removed, or false if the element does not exist.\n     */\n    delete(value: T): boolean;\n    /**\n     * Executes a provided function once per each value in the Set object, in insertion order.\n     */\n    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n    /**\n     * @returns a boolean indicating whether an element with the specified value exists in the Set or not.\n     */\n    has(value: T): boolean;\n    /**\n     * @returns the number of (unique) elements in Set.\n     */\n    readonly size: number;\n}\n\ninterface SetConstructor {\n    new <T = any>(values?: readonly T[] | null): Set<T>;\n    readonly prototype: Set<any>;\n}\ndeclare var Set: SetConstructor;\n\ninterface ReadonlySet<T> {\n    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;\n    has(value: T): boolean;\n    readonly size: number;\n}\n\ninterface WeakSet<T extends WeakKey> {\n    /**\n     * Appends a new value to the end of the WeakSet.\n     */\n    add(value: T): this;\n    /**\n     * Removes the specified element from the WeakSet.\n     * @returns Returns true if the element existed and has been removed, or false if the element does not exist.\n     */\n    delete(value: T): boolean;\n    /**\n     * @returns a boolean indicating whether a value exists in the WeakSet or not.\n     */\n    has(value: T): boolean;\n}\n\ninterface WeakSetConstructor {\n    new <T extends WeakKey = WeakKey>(values?: readonly T[] | null): WeakSet<T>;\n    readonly prototype: WeakSet<WeakKey>;\n}\ndeclare var WeakSet: WeakSetConstructor;\n'],["file:///node_modules/typescript/lib/lib.es2015.core.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Array<T> {\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find<S extends T>(predicate: (value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\n    find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: T, start?: number, end?: number): this;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string;\n}\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an array-like object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from<T>(arrayLike: ArrayLike<T>): T[];\n\n    /**\n     * Creates an array from an iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of<T>(...items: T[]): T[];\n}\n\ninterface DateConstructor {\n    new (value: number | string | Date): Date;\n}\n\ninterface Function {\n    /**\n     * Returns the name of the function. Function names are read-only and can not be changed.\n     */\n    readonly name: string;\n}\n\ninterface Math {\n    /**\n     * Returns the number of leading zero bits in the 32-bit binary representation of a number.\n     * @param x A numeric expression.\n     */\n    clz32(x: number): number;\n\n    /**\n     * Returns the result of 32-bit multiplication of two numbers.\n     * @param x First number\n     * @param y Second number\n     */\n    imul(x: number, y: number): number;\n\n    /**\n     * Returns the sign of the x, indicating whether x is positive, negative or zero.\n     * @param x The numeric expression to test\n     */\n    sign(x: number): number;\n\n    /**\n     * Returns the base 10 logarithm of a number.\n     * @param x A numeric expression.\n     */\n    log10(x: number): number;\n\n    /**\n     * Returns the base 2 logarithm of a number.\n     * @param x A numeric expression.\n     */\n    log2(x: number): number;\n\n    /**\n     * Returns the natural logarithm of 1 + x.\n     * @param x A numeric expression.\n     */\n    log1p(x: number): number;\n\n    /**\n     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to\n     * subtracting 1 from the exponential function of x (e raised to the power of x, where e\n     * is the base of the natural logarithms).\n     * @param x A numeric expression.\n     */\n    expm1(x: number): number;\n\n    /**\n     * Returns the hyperbolic cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    cosh(x: number): number;\n\n    /**\n     * Returns the hyperbolic sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    sinh(x: number): number;\n\n    /**\n     * Returns the hyperbolic tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    tanh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    acosh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    asinh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    atanh(x: number): number;\n\n    /**\n     * Returns the square root of the sum of squares of its arguments.\n     * @param values Values to compute the square root for.\n     *     If no arguments are passed, the result is +0.\n     *     If there is only one argument, the result is the absolute value.\n     *     If any argument is +Infinity or -Infinity, the result is +Infinity.\n     *     If any argument is NaN, the result is NaN.\n     *     If all arguments are either +0 or −0, the result is +0.\n     */\n    hypot(...values: number[]): number;\n\n    /**\n     * Returns the integral part of the a numeric expression, x, removing any fractional digits.\n     * If x is already an integer, the result is x.\n     * @param x A numeric expression.\n     */\n    trunc(x: number): number;\n\n    /**\n     * Returns the nearest single precision float representation of a number.\n     * @param x A numeric expression.\n     */\n    fround(x: number): number;\n\n    /**\n     * Returns an implementation-dependent approximation to the cube root of number.\n     * @param x A numeric expression.\n     */\n    cbrt(x: number): number;\n}\n\ninterface NumberConstructor {\n    /**\n     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1\n     * that is representable as a Number value, which is approximately:\n     * 2.2204460492503130808472633361816 x 10‍−‍16.\n     */\n    readonly EPSILON: number;\n\n    /**\n     * Returns true if passed value is finite.\n     * Unlike the global isFinite, Number.isFinite doesn\'t forcibly convert the parameter to a\n     * number. Only finite values of the type number, result in true.\n     * @param number A numeric value.\n     */\n    isFinite(number: unknown): boolean;\n\n    /**\n     * Returns true if the value passed is an integer, false otherwise.\n     * @param number A numeric value.\n     */\n    isInteger(number: unknown): boolean;\n\n    /**\n     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\n     * number). Unlike the global isNaN(), Number.isNaN() doesn\'t forcefully convert the parameter\n     * to a number. Only values of the type number, that are also NaN, result in true.\n     * @param number A numeric value.\n     */\n    isNaN(number: unknown): boolean;\n\n    /**\n     * Returns true if the value passed is a safe integer.\n     * @param number A numeric value.\n     */\n    isSafeInteger(number: unknown): boolean;\n\n    /**\n     * The value of the largest integer n such that n and n + 1 are both exactly representable as\n     * a Number value.\n     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.\n     */\n    readonly MAX_SAFE_INTEGER: number;\n\n    /**\n     * The value of the smallest integer n such that n and n − 1 are both exactly representable as\n     * a Number value.\n     * The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).\n     */\n    readonly MIN_SAFE_INTEGER: number;\n\n    /**\n     * Converts a string to a floating-point number.\n     * @param string A string that contains a floating-point number.\n     */\n    parseFloat(string: string): number;\n\n    /**\n     * Converts A string to an integer.\n     * @param string A string to convert into a number.\n     * @param radix A value between 2 and 36 that specifies the base of the number in `string`.\n     * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\n     * All other strings are considered decimal.\n     */\n    parseInt(string: string, radix?: number): number;\n}\n\ninterface ObjectConstructor {\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source The source object from which to copy properties.\n     */\n    assign<T extends {}, U>(target: T, source: U): T & U;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source1 The first source object from which to copy properties.\n     * @param source2 The second source object from which to copy properties.\n     */\n    assign<T extends {}, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source1 The first source object from which to copy properties.\n     * @param source2 The second source object from which to copy properties.\n     * @param source3 The third source object from which to copy properties.\n     */\n    assign<T extends {}, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param sources One or more source objects from which to copy properties\n     */\n    assign(target: object, ...sources: any[]): any;\n\n    /**\n     * Returns an array of all symbol properties found directly on object o.\n     * @param o Object to retrieve the symbols from.\n     */\n    getOwnPropertySymbols(o: any): symbol[];\n\n    /**\n     * Returns the names of the enumerable string properties and methods of an object.\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    keys(o: {}): string[];\n\n    /**\n     * Returns true if the values are the same value, false otherwise.\n     * @param value1 The first value.\n     * @param value2 The second value.\n     */\n    is(value1: any, value2: any): boolean;\n\n    /**\n     * Sets the prototype of a specified object o to object proto or null. Returns the object o.\n     * @param o The object to change its prototype.\n     * @param proto The value of the new prototype or null.\n     */\n    setPrototypeOf(o: any, proto: object | null): any;\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find<S extends T>(predicate: (value: T, index: number, obj: readonly T[]) => value is S, thisArg?: any): S | undefined;\n    find(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): T | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number;\n\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions & Intl.DateTimeFormatOptions): string;\n}\n\ninterface RegExp {\n    /**\n     * Returns a string indicating the flags of the regular expression in question. This field is read-only.\n     * The characters in this string are sequenced and concatenated in the following order:\n     *\n     *    - "g" for global\n     *    - "i" for ignoreCase\n     *    - "m" for multiline\n     *    - "u" for unicode\n     *    - "y" for sticky\n     *\n     * If no flags are set, the value is the empty string.\n     */\n    readonly flags: string;\n\n    /**\n     * Returns a Boolean value indicating the state of the sticky flag (y) used with a regular\n     * expression. Default is false. Read-only.\n     */\n    readonly sticky: boolean;\n\n    /**\n     * Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular\n     * expression. Default is false. Read-only.\n     */\n    readonly unicode: boolean;\n}\n\ninterface RegExpConstructor {\n    new (pattern: RegExp | string, flags?: string): RegExp;\n    (pattern: RegExp | string, flags?: string): RegExp;\n}\n\ninterface String {\n    /**\n     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n     * value of the UTF-16 encoded code point starting at the string element at position pos in\n     * the String resulting from converting this object to a String.\n     * If there is no element at that position, the result is undefined.\n     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n     */\n    codePointAt(pos: number): number | undefined;\n\n    /**\n     * Returns true if searchString appears as a substring of the result of converting this\n     * object to a String, at one or more positions that are\n     * greater than or equal to position; otherwise, returns false.\n     * @param searchString search string\n     * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n     */\n    includes(searchString: string, position?: number): boolean;\n\n    /**\n     * Returns true if the sequence of elements of searchString converted to a String is the\n     * same as the corresponding elements of this object (converted to a String) starting at\n     * endPosition – length(this). Otherwise returns false.\n     */\n    endsWith(searchString: string, endPosition?: number): boolean;\n\n    /**\n     * Returns the String value result of normalizing the string into the normalization form\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\n     * is "NFC"\n     */\n    normalize(form: "NFC" | "NFD" | "NFKC" | "NFKD"): string;\n\n    /**\n     * Returns the String value result of normalizing the string into the normalization form\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\n     * is "NFC"\n     */\n    normalize(form?: string): string;\n\n    /**\n     * Returns a String value that is made from count copies appended together. If count is 0,\n     * the empty string is returned.\n     * @param count number of copies to append\n     */\n    repeat(count: number): string;\n\n    /**\n     * Returns true if the sequence of elements of searchString converted to a String is the\n     * same as the corresponding elements of this object (converted to a String) starting at\n     * position. Otherwise returns false.\n     */\n    startsWith(searchString: string, position?: number): boolean;\n\n    /**\n     * Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n     * @deprecated A legacy feature for browser compatibility\n     * @param name\n     */\n    anchor(name: string): string;\n\n    /**\n     * Returns a `<big>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    big(): string;\n\n    /**\n     * Returns a `<blink>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    blink(): string;\n\n    /**\n     * Returns a `<b>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    bold(): string;\n\n    /**\n     * Returns a `<tt>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    fixed(): string;\n\n    /**\n     * Returns a `<font>` HTML element and sets the color attribute value\n     * @deprecated A legacy feature for browser compatibility\n     */\n    fontcolor(color: string): string;\n\n    /**\n     * Returns a `<font>` HTML element and sets the size attribute value\n     * @deprecated A legacy feature for browser compatibility\n     */\n    fontsize(size: number): string;\n\n    /**\n     * Returns a `<font>` HTML element and sets the size attribute value\n     * @deprecated A legacy feature for browser compatibility\n     */\n    fontsize(size: string): string;\n\n    /**\n     * Returns an `<i>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    italics(): string;\n\n    /**\n     * Returns an `<a>` HTML element and sets the href attribute value\n     * @deprecated A legacy feature for browser compatibility\n     */\n    link(url: string): string;\n\n    /**\n     * Returns a `<small>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    small(): string;\n\n    /**\n     * Returns a `<strike>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    strike(): string;\n\n    /**\n     * Returns a `<sub>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    sub(): string;\n\n    /**\n     * Returns a `<sup>` HTML element\n     * @deprecated A legacy feature for browser compatibility\n     */\n    sup(): string;\n}\n\ninterface StringConstructor {\n    /**\n     * Return the String value whose elements are, in order, the elements in the List elements.\n     * If length is 0, the empty string is returned.\n     */\n    fromCodePoint(...codePoints: number[]): string;\n\n    /**\n     * String.raw is usually used as a tag function of a Tagged Template String. When called as\n     * such, the first argument will be a well formed template call site object and the rest\n     * parameter will contain the substitution values. It can also be called directly, for example,\n     * to interleave strings and values from your own tag function, and in this case the only thing\n     * it needs from the first argument is the raw property.\n     * @param template A well-formed template string call site representation.\n     * @param substitutions A set of substitution values.\n     */\n    raw(template: { raw: readonly string[] | ArrayLike<string>; }, ...substitutions: any[]): string;\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    toLocaleString(locales: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2015.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es5" />\n/// <reference lib="es2015.core" />\n/// <reference lib="es2015.collection" />\n/// <reference lib="es2015.iterable" />\n/// <reference lib="es2015.generator" />\n/// <reference lib="es2015.promise" />\n/// <reference lib="es2015.proxy" />\n/// <reference lib="es2015.reflect" />\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.symbol.wellknown" />\n'],["file:///node_modules/typescript/lib/lib.es2015.generator.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n\ninterface Generator<T = unknown, TReturn = any, TNext = any> extends IteratorObject<T, TReturn, TNext> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...[value]: [] | [TNext]): IteratorResult<T, TReturn>;\n    return(value: TReturn): IteratorResult<T, TReturn>;\n    throw(e: any): IteratorResult<T, TReturn>;\n    [Symbol.iterator](): Generator<T, TReturn, TNext>;\n}\n\ninterface GeneratorFunction {\n    /**\n     * Creates a new Generator object.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: any[]): Generator;\n    /**\n     * Creates a new Generator object.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: any[]): Generator;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Generator;\n}\n\ninterface GeneratorFunctionConstructor {\n    /**\n     * Creates a new Generator function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): GeneratorFunction;\n    /**\n     * Creates a new Generator function.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: string[]): GeneratorFunction;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: GeneratorFunction;\n}\n'],["file:///node_modules/typescript/lib/lib.es2015.iterable.d.ts","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\n/// <reference lib=\"es2015.symbol\" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that returns the default iterator for an object. Called by the semantics of the\n     * for-of statement.\n     */\n    readonly iterator: unique symbol;\n}\n\ninterface IteratorYieldResult<TYield> {\n    done?: false;\n    value: TYield;\n}\n\ninterface IteratorReturnResult<TReturn> {\n    done: true;\n    value: TReturn;\n}\n\ntype IteratorResult<T, TReturn = any> = IteratorYieldResult<T> | IteratorReturnResult<TReturn>;\n\ninterface Iterator<T, TReturn = any, TNext = any> {\n    // NOTE: 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...[value]: [] | [TNext]): IteratorResult<T, TReturn>;\n    return?(value?: TReturn): IteratorResult<T, TReturn>;\n    throw?(e?: any): IteratorResult<T, TReturn>;\n}\n\ninterface Iterable<T, TReturn = any, TNext = any> {\n    [Symbol.iterator](): Iterator<T, TReturn, TNext>;\n}\n\n/**\n * Describes a user-defined {@link Iterator} that is also iterable.\n */\ninterface IterableIterator<T, TReturn = any, TNext = any> extends Iterator<T, TReturn, TNext> {\n    [Symbol.iterator](): IterableIterator<T, TReturn, TNext>;\n}\n\n/**\n * Describes an {@link Iterator} produced by the runtime that inherits from the intrinsic `Iterator.prototype`.\n */\ninterface IteratorObject<T, TReturn = unknown, TNext = unknown> extends Iterator<T, TReturn, TNext> {\n    [Symbol.iterator](): IteratorObject<T, TReturn, TNext>;\n}\n\n/**\n * Defines the `TReturn` type used for built-in iterators produced by `Array`, `Map`, `Set`, and others.\n * This is `undefined` when `strictBuiltInIteratorReturn` is `true`; otherwise, this is `any`.\n */\ntype BuiltinIteratorReturn = intrinsic;\n\ninterface ArrayIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): ArrayIterator<T>;\n}\n\ninterface Array<T> {\n    /** Iterator */\n    [Symbol.iterator](): ArrayIterator<T>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, T]>;\n\n    /**\n     * Returns an iterable of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an iterable of values in the array\n     */\n    values(): ArrayIterator<T>;\n}\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an iterable object.\n     * @param iterable An iterable object to convert to an array.\n     */\n    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\n\n    /**\n     * Creates an array from an iterable object.\n     * @param iterable An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\n}\n\ninterface ReadonlyArray<T> {\n    /** Iterator of values in the array. */\n    [Symbol.iterator](): ArrayIterator<T>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, T]>;\n\n    /**\n     * Returns an iterable of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an iterable of values in the array\n     */\n    values(): ArrayIterator<T>;\n}\n\ninterface IArguments {\n    /** Iterator */\n    [Symbol.iterator](): ArrayIterator<any>;\n}\n\ninterface MapIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): MapIterator<T>;\n}\n\ninterface Map<K, V> {\n    /** Returns an iterable of entries in the map. */\n    [Symbol.iterator](): MapIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the map.\n     */\n    entries(): MapIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of keys in the map\n     */\n    keys(): MapIterator<K>;\n\n    /**\n     * Returns an iterable of values in the map\n     */\n    values(): MapIterator<V>;\n}\n\ninterface ReadonlyMap<K, V> {\n    /** Returns an iterable of entries in the map. */\n    [Symbol.iterator](): MapIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the map.\n     */\n    entries(): MapIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of keys in the map\n     */\n    keys(): MapIterator<K>;\n\n    /**\n     * Returns an iterable of values in the map\n     */\n    values(): MapIterator<V>;\n}\n\ninterface MapConstructor {\n    new (): Map<any, any>;\n    new <K, V>(iterable?: Iterable<readonly [K, V]> | null): Map<K, V>;\n}\n\ninterface WeakMap<K extends WeakKey, V> {}\n\ninterface WeakMapConstructor {\n    new <K extends WeakKey, V>(iterable: Iterable<readonly [K, V]>): WeakMap<K, V>;\n}\n\ninterface SetIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): SetIterator<T>;\n}\n\ninterface Set<T> {\n    /** Iterates over values in the set. */\n    [Symbol.iterator](): SetIterator<T>;\n\n    /**\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\n     */\n    entries(): SetIterator<[T, T]>;\n\n    /**\n     * Despite its name, returns an iterable of the values in the set.\n     */\n    keys(): SetIterator<T>;\n\n    /**\n     * Returns an iterable of values in the set.\n     */\n    values(): SetIterator<T>;\n}\n\ninterface ReadonlySet<T> {\n    /** Iterates over values in the set. */\n    [Symbol.iterator](): SetIterator<T>;\n\n    /**\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\n     */\n    entries(): SetIterator<[T, T]>;\n\n    /**\n     * Despite its name, returns an iterable of the values in the set.\n     */\n    keys(): SetIterator<T>;\n\n    /**\n     * Returns an iterable of values in the set.\n     */\n    values(): SetIterator<T>;\n}\n\ninterface SetConstructor {\n    new <T>(iterable?: Iterable<T> | null): Set<T>;\n}\n\ninterface WeakSet<T extends WeakKey> {}\n\ninterface WeakSetConstructor {\n    new <T extends WeakKey = WeakKey>(iterable: Iterable<T>): WeakSet<T>;\n}\n\ninterface Promise<T> {}\n\ninterface PromiseConstructor {\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An iterable of Promises.\n     * @returns A new Promise.\n     */\n    all<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>[]>;\n\n    /**\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\n     * or rejected.\n     * @param values An iterable of Promises.\n     * @returns A new Promise.\n     */\n    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>>;\n}\n\ninterface StringIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): StringIterator<T>;\n}\n\ninterface String {\n    /** Iterator */\n    [Symbol.iterator](): StringIterator<string>;\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Int8ArrayConstructor {\n    new (elements: Iterable<number>): Int8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Int8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Uint8ArrayConstructor {\n    new (elements: Iterable<number>): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Uint8ClampedArrayConstructor {\n    new (elements: Iterable<number>): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Int16ArrayConstructor {\n    new (elements: Iterable<number>): Int16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Int16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Uint16ArrayConstructor {\n    new (elements: Iterable<number>): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Int32ArrayConstructor {\n    new (elements: Iterable<number>): Int32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Int32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Uint32ArrayConstructor {\n    new (elements: Iterable<number>): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Float32ArrayConstructor {\n    new (elements: Iterable<number>): Float32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Float32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n}\n\ninterface Float64ArrayConstructor {\n    new (elements: Iterable<number>): Float64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Float64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;\n}\n"],["file:///node_modules/typescript/lib/lib.es2015.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface PromiseConstructor {\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Promise<any>;\n\n    /**\n     * Creates a new Promise.\n     * @param executor A callback used to initialize the promise. This callback is passed two arguments:\n     * a resolve callback used to resolve the promise with a value or the result of another promise,\n     * and a reject callback used to reject the promise with a provided reason or error.\n     */\n    new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T extends readonly unknown[] | []>(values: T): Promise<{ -readonly [P in keyof T]: Awaited<T[P]>; }>;\n\n    // see: lib.es2015.iterable.d.ts\n    // all<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>[]>;\n\n    /**\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\n     * or rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    race<T extends readonly unknown[] | []>(values: T): Promise<Awaited<T[number]>>;\n\n    // see: lib.es2015.iterable.d.ts\n    // race<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>>;\n\n    /**\n     * Creates a new rejected promise for the provided reason.\n     * @param reason The reason the promise was rejected.\n     * @returns A new rejected Promise.\n     */\n    reject<T = never>(reason?: any): Promise<T>;\n\n    /**\n     * Creates a new resolved promise.\n     * @returns A resolved promise.\n     */\n    resolve(): Promise<void>;\n    /**\n     * Creates a new resolved promise for the provided value.\n     * @param value A promise.\n     * @returns A promise whose internal state matches the provided promise.\n     */\n    resolve<T>(value: T): Promise<Awaited<T>>;\n    /**\n     * Creates a new resolved promise for the provided value.\n     * @param value A promise.\n     * @returns A promise whose internal state matches the provided promise.\n     */\n    resolve<T>(value: T | PromiseLike<T>): Promise<Awaited<T>>;\n}\n\ndeclare var Promise: PromiseConstructor;\n'],["file:///node_modules/typescript/lib/lib.es2015.proxy.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ProxyHandler<T extends object> {\n    /**\n     * A trap method for a function call.\n     * @param target The original callable object which is being proxied.\n     */\n    apply?(target: T, thisArg: any, argArray: any[]): any;\n\n    /**\n     * A trap for the `new` operator.\n     * @param target The original object which is being proxied.\n     * @param newTarget The constructor that was originally called.\n     */\n    construct?(target: T, argArray: any[], newTarget: Function): object;\n\n    /**\n     * A trap for `Object.defineProperty()`.\n     * @param target The original object which is being proxied.\n     * @returns A `Boolean` indicating whether or not the property has been defined.\n     */\n    defineProperty?(target: T, property: string | symbol, attributes: PropertyDescriptor): boolean;\n\n    /**\n     * A trap for the `delete` operator.\n     * @param target The original object which is being proxied.\n     * @param p The name or `Symbol` of the property to delete.\n     * @returns A `Boolean` indicating whether or not the property was deleted.\n     */\n    deleteProperty?(target: T, p: string | symbol): boolean;\n\n    /**\n     * A trap for getting a property value.\n     * @param target The original object which is being proxied.\n     * @param p The name or `Symbol` of the property to get.\n     * @param receiver The proxy or an object that inherits from the proxy.\n     */\n    get?(target: T, p: string | symbol, receiver: any): any;\n\n    /**\n     * A trap for `Object.getOwnPropertyDescriptor()`.\n     * @param target The original object which is being proxied.\n     * @param p The name of the property whose description should be retrieved.\n     */\n    getOwnPropertyDescriptor?(target: T, p: string | symbol): PropertyDescriptor | undefined;\n\n    /**\n     * A trap for the `[[GetPrototypeOf]]` internal method.\n     * @param target The original object which is being proxied.\n     */\n    getPrototypeOf?(target: T): object | null;\n\n    /**\n     * A trap for the `in` operator.\n     * @param target The original object which is being proxied.\n     * @param p The name or `Symbol` of the property to check for existence.\n     */\n    has?(target: T, p: string | symbol): boolean;\n\n    /**\n     * A trap for `Object.isExtensible()`.\n     * @param target The original object which is being proxied.\n     */\n    isExtensible?(target: T): boolean;\n\n    /**\n     * A trap for `Reflect.ownKeys()`.\n     * @param target The original object which is being proxied.\n     */\n    ownKeys?(target: T): ArrayLike<string | symbol>;\n\n    /**\n     * A trap for `Object.preventExtensions()`.\n     * @param target The original object which is being proxied.\n     */\n    preventExtensions?(target: T): boolean;\n\n    /**\n     * A trap for setting a property value.\n     * @param target The original object which is being proxied.\n     * @param p The name or `Symbol` of the property to set.\n     * @param receiver The object to which the assignment was originally directed.\n     * @returns A `Boolean` indicating whether or not the property was set.\n     */\n    set?(target: T, p: string | symbol, newValue: any, receiver: any): boolean;\n\n    /**\n     * A trap for `Object.setPrototypeOf()`.\n     * @param target The original object which is being proxied.\n     * @param newPrototype The object\'s new prototype or `null`.\n     */\n    setPrototypeOf?(target: T, v: object | null): boolean;\n}\n\ninterface ProxyConstructor {\n    /**\n     * Creates a revocable Proxy object.\n     * @param target A target object to wrap with Proxy.\n     * @param handler An object whose properties define the behavior of Proxy when an operation is attempted on it.\n     */\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\n\n    /**\n     * Creates a Proxy object. The Proxy object allows you to create an object that can be used in place of the\n     * original object, but which may redefine fundamental Object operations like getting, setting, and defining\n     * properties. Proxy objects are commonly used to log property accesses, validate, format, or sanitize inputs.\n     * @param target A target object to wrap with Proxy.\n     * @param handler An object whose properties define the behavior of Proxy when an operation is attempted on it.\n     */\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\n}\ndeclare var Proxy: ProxyConstructor;\n'],["file:///node_modules/typescript/lib/lib.es2015.reflect.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Reflect {\n    /**\n     * Calls the function with the specified object as the this value\n     * and the elements of specified array as the arguments.\n     * @param target The function to call.\n     * @param thisArgument The object to be used as the this object.\n     * @param argumentsList An array of argument values to be passed to the function.\n     */\n    function apply<T, A extends readonly any[], R>(\n        target: (this: T, ...args: A) => R,\n        thisArgument: T,\n        argumentsList: Readonly<A>,\n    ): R;\n    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;\n\n    /**\n     * Constructs the target with the elements of specified array as the arguments\n     * and the specified constructor as the `new.target` value.\n     * @param target The constructor to invoke.\n     * @param argumentsList An array of argument values to be passed to the constructor.\n     * @param newTarget The constructor to be used as the `new.target` object.\n     */\n    function construct<A extends readonly any[], R>(\n        target: new (...args: A) => R,\n        argumentsList: Readonly<A>,\n        newTarget?: new (...args: any) => any,\n    ): R;\n    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: Function): any;\n\n    /**\n     * Adds a property to an object, or modifies attributes of an existing property.\n     * @param target Object on which to add or modify the property. This can be a native JavaScript object\n     *        (that is, a user-defined object or a built in object) or a DOM object.\n     * @param propertyKey The property name.\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\n     */\n    function defineProperty(target: object, propertyKey: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): boolean;\n\n    /**\n     * Removes a property from an object, equivalent to `delete target[propertyKey]`,\n     * except it won\'t throw if `target[propertyKey]` is non-configurable.\n     * @param target Object from which to remove the own property.\n     * @param propertyKey The property name.\n     */\n    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;\n\n    /**\n     * Gets the property of target, equivalent to `target[propertyKey]` when `receiver === target`.\n     * @param target Object that contains the property on itself or in its prototype chain.\n     * @param propertyKey The property name.\n     * @param receiver The reference to use as the `this` value in the getter function,\n     *        if `target[propertyKey]` is an accessor property.\n     */\n    function get<T extends object, P extends PropertyKey>(\n        target: T,\n        propertyKey: P,\n        receiver?: unknown,\n    ): P extends keyof T ? T[P] : any;\n\n    /**\n     * Gets the own property descriptor of the specified object.\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object\'s prototype.\n     * @param target Object that contains the property.\n     * @param propertyKey The property name.\n     */\n    function getOwnPropertyDescriptor<T extends object, P extends PropertyKey>(\n        target: T,\n        propertyKey: P,\n    ): TypedPropertyDescriptor<P extends keyof T ? T[P] : any> | undefined;\n\n    /**\n     * Returns the prototype of an object.\n     * @param target The object that references the prototype.\n     */\n    function getPrototypeOf(target: object): object | null;\n\n    /**\n     * Equivalent to `propertyKey in target`.\n     * @param target Object that contains the property on itself or in its prototype chain.\n     * @param propertyKey Name of the property.\n     */\n    function has(target: object, propertyKey: PropertyKey): boolean;\n\n    /**\n     * Returns a value that indicates whether new properties can be added to an object.\n     * @param target Object to test.\n     */\n    function isExtensible(target: object): boolean;\n\n    /**\n     * Returns the string and symbol keys of the own properties of an object. The own properties of an object\n     * are those that are defined directly on that object, and are not inherited from the object\'s prototype.\n     * @param target Object that contains the own properties.\n     */\n    function ownKeys(target: object): (string | symbol)[];\n\n    /**\n     * Prevents the addition of new properties to an object.\n     * @param target Object to make non-extensible.\n     * @return Whether the object has been made non-extensible.\n     */\n    function preventExtensions(target: object): boolean;\n\n    /**\n     * Sets the property of target, equivalent to `target[propertyKey] = value` when `receiver === target`.\n     * @param target Object that contains the property on itself or in its prototype chain.\n     * @param propertyKey Name of the property.\n     * @param receiver The reference to use as the `this` value in the setter function,\n     *        if `target[propertyKey]` is an accessor property.\n     */\n    function set<T extends object, P extends PropertyKey>(\n        target: T,\n        propertyKey: P,\n        value: P extends keyof T ? T[P] : any,\n        receiver?: any,\n    ): boolean;\n    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;\n\n    /**\n     * Sets the prototype of a specified object o to object proto or null.\n     * @param target The object to change its prototype.\n     * @param proto The value of the new prototype or null.\n     * @return Whether setting the prototype was successful.\n     */\n    function setPrototypeOf(target: object, proto: object | null): boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2015.symbol.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface SymbolConstructor {\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Symbol;\n\n    /**\n     * Returns a new unique Symbol value.\n     * @param  description Description of the new Symbol object.\n     */\n    (description?: string | number): symbol;\n\n    /**\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\n     * Otherwise, returns a new symbol with this key.\n     * @param key key to search for.\n     */\n    for(key: string): symbol;\n\n    /**\n     * Returns a key from the global symbol registry matching the given Symbol if found.\n     * Otherwise, returns a undefined.\n     * @param sym Symbol to find the key for.\n     */\n    keyFor(sym: symbol): string | undefined;\n}\n\ndeclare var Symbol: SymbolConstructor;\n'],["file:///node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that determines if a constructor object recognizes an object as one of the\n     * constructor’s instances. Called by the semantics of the instanceof operator.\n     */\n    readonly hasInstance: unique symbol;\n\n    /**\n     * A Boolean value that if true indicates that an object should flatten to its array elements\n     * by Array.prototype.concat.\n     */\n    readonly isConcatSpreadable: unique symbol;\n\n    /**\n     * A regular expression method that matches the regular expression against a string. Called\n     * by the String.prototype.match method.\n     */\n    readonly match: unique symbol;\n\n    /**\n     * A regular expression method that replaces matched substrings of a string. Called by the\n     * String.prototype.replace method.\n     */\n    readonly replace: unique symbol;\n\n    /**\n     * A regular expression method that returns the index within a string that matches the\n     * regular expression. Called by the String.prototype.search method.\n     */\n    readonly search: unique symbol;\n\n    /**\n     * A function valued property that is the constructor function that is used to create\n     * derived objects.\n     */\n    readonly species: unique symbol;\n\n    /**\n     * A regular expression method that splits a string at the indices that match the regular\n     * expression. Called by the String.prototype.split method.\n     */\n    readonly split: unique symbol;\n\n    /**\n     * A method that converts an object to a corresponding primitive value.\n     * Called by the ToPrimitive abstract operation.\n     */\n    readonly toPrimitive: unique symbol;\n\n    /**\n     * A String value that is used in the creation of the default string description of an object.\n     * Called by the built-in method Object.prototype.toString.\n     */\n    readonly toStringTag: unique symbol;\n\n    /**\n     * An Object whose truthy properties are properties that are excluded from the \'with\'\n     * environment bindings of the associated objects.\n     */\n    readonly unscopables: unique symbol;\n}\n\ninterface Symbol {\n    /**\n     * Converts a Symbol object to a symbol.\n     */\n    [Symbol.toPrimitive](hint: string): symbol;\n\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Array<T> {\n    /**\n     * Is an object whose properties have the value \'true\'\n     * when they will be absent when used in a \'with\' statement.\n     */\n    readonly [Symbol.unscopables]: {\n        [K in keyof any[]]?: boolean;\n    };\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Is an object whose properties have the value \'true\'\n     * when they will be absent when used in a \'with\' statement.\n     */\n    readonly [Symbol.unscopables]: {\n        [K in keyof readonly any[]]?: boolean;\n    };\n}\n\ninterface Date {\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: "default"): string;\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: "string"): string;\n    /**\n     * Converts a Date object to a number.\n     */\n    [Symbol.toPrimitive](hint: "number"): number;\n    /**\n     * Converts a Date object to a string or number.\n     *\n     * @param hint The strings "number", "string", or "default" to specify what primitive to return.\n     *\n     * @throws {TypeError} If \'hint\' was given something other than "number", "string", or "default".\n     * @returns A number if \'hint\' was "number", a string if \'hint\' was "string" or "default".\n     */\n    [Symbol.toPrimitive](hint: string): string | number;\n}\n\ninterface Map<K, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakMap<K extends WeakKey, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Set<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakSet<T extends WeakKey> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface JSON {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Function {\n    /**\n     * Determines whether the given value inherits from this function if this function was used\n     * as a constructor function.\n     *\n     * A constructor function can control which objects are recognized as its instances by\n     * \'instanceof\' by overriding this method.\n     */\n    [Symbol.hasInstance](value: any): boolean;\n}\n\ninterface GeneratorFunction {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Math {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Promise<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface PromiseConstructor {\n    readonly [Symbol.species]: PromiseConstructor;\n}\n\ninterface RegExp {\n    /**\n     * Matches a string with this regular expression, and returns an array containing the results of\n     * that search.\n     * @param string A string to search within.\n     */\n    [Symbol.match](string: string): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replaceValue A String object or string literal containing the text to replace for every\n     *                     successful match of this regular expression.\n     */\n    [Symbol.replace](string: string, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replacer A function that returns the replacement text.\n     */\n    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;\n\n    /**\n     * Finds the position beginning first substring match in a regular expression search\n     * using this regular expression.\n     *\n     * @param string The string to search within.\n     */\n    [Symbol.search](string: string): number;\n\n    /**\n     * Returns an array of substrings that were delimited by strings in the original input that\n     * match against this regular expression.\n     *\n     * If the regular expression contains capturing parentheses, then each time this\n     * regular expression matches, the results (including any undefined results) of the\n     * capturing parentheses are spliced.\n     *\n     * @param string string value to split\n     * @param limit if not undefined, the output array is truncated so that it contains no more\n     * than \'limit\' elements.\n     */\n    [Symbol.split](string: string, limit?: number): string[];\n}\n\ninterface RegExpConstructor {\n    readonly [Symbol.species]: RegExpConstructor;\n}\n\ninterface String {\n    /**\n     * Matches a string or an object that supports being matched against, and returns an array\n     * containing the results of that search, or null if no matches are found.\n     * @param matcher An object that supports being matched against.\n     */\n    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;\n\n    /**\n     * Passes a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\n     * @param searchValue An object that supports searching for and replacing matches within a string.\n     * @param replaceValue The replacement text.\n     */\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using an object that supports replacement within a string.\n     * @param searchValue A object can search for and replace matches within a string.\n     * @param replacer A function that returns the replacement text.\n     */\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\n\n    /**\n     * Finds the first substring match in a regular expression search.\n     * @param searcher An object which supports searching within a string.\n     */\n    search(searcher: { [Symbol.search](string: string): number; }): number;\n\n    /**\n     * Split a string into substrings using the specified separator and return them as an array.\n     * @param splitter An object that can split a string.\n     * @param limit A value used to limit the number of elements returned in the array.\n     */\n    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];\n}\n\ninterface ArrayBuffer {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface DataView<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Int8Array";\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Uint8Array";\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Uint8ClampedArray";\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Int16Array";\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Uint16Array";\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Int32Array";\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Uint32Array";\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Float32Array";\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    readonly [Symbol.toStringTag]: "Float64Array";\n}\n\ninterface ArrayConstructor {\n    readonly [Symbol.species]: ArrayConstructor;\n}\ninterface MapConstructor {\n    readonly [Symbol.species]: MapConstructor;\n}\ninterface SetConstructor {\n    readonly [Symbol.species]: SetConstructor;\n}\ninterface ArrayBufferConstructor {\n    readonly [Symbol.species]: ArrayBufferConstructor;\n}\n'],["file:///node_modules/typescript/lib/lib.es2016.array.include.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Array<T> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: T, fromIndex?: number): boolean;\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: T, fromIndex?: number): boolean;\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2016.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015" />\n/// <reference lib="es2016.array.include" />\n/// <reference lib="es2016.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2016.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2016" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n'],["file:///node_modules/typescript/lib/lib.es2016.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    /**\n     * The `Intl.getCanonicalLocales()` method returns an array containing\n     * the canonical locale names. Duplicates will be omitted and elements\n     * will be validated as structurally valid language tags.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales)\n     *\n     * @param locale A list of String values for which to get the canonical locale names\n     * @returns An array containing the canonical and validated locale names.\n     */\n    function getCanonicalLocales(locale?: string | readonly string[]): string[];\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ArrayBufferConstructor {\n    new (): ArrayBuffer;\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2016" />\n/// <reference lib="es2017.arraybuffer" />\n/// <reference lib="es2017.date" />\n/// <reference lib="es2017.intl" />\n/// <reference lib="es2017.object" />\n/// <reference lib="es2017.sharedmemory" />\n/// <reference lib="es2017.string" />\n/// <reference lib="es2017.typedarrays" />\n'],["file:///node_modules/typescript/lib/lib.es2017.date.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface DateConstructor {\n    /**\n     * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\n     * @param monthIndex The month as a number between 0 and 11 (January to December).\n     * @param date The date as a number between 1 and 31.\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\n     */\n    UTC(year: number, monthIndex?: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2017" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n'],["file:///node_modules/typescript/lib/lib.es2017.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    interface DateTimeFormatPartTypesRegistry {\n        day: any;\n        dayPeriod: any;\n        era: any;\n        hour: any;\n        literal: any;\n        minute: any;\n        month: any;\n        second: any;\n        timeZoneName: any;\n        weekday: any;\n        year: any;\n    }\n\n    type DateTimeFormatPartTypes = keyof DateTimeFormatPartTypesRegistry;\n\n    interface DateTimeFormatPart {\n        type: DateTimeFormatPartTypes;\n        value: string;\n    }\n\n    interface DateTimeFormat {\n        formatToParts(date?: Date | number): DateTimeFormatPart[];\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.object.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ObjectConstructor {\n    /**\n     * Returns an array of values of the enumerable own properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    values<T>(o: { [s: string]: T; } | ArrayLike<T>): T[];\n\n    /**\n     * Returns an array of values of the enumerable own properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    values(o: {}): any[];\n\n    /**\n     * Returns an array of key/values of the enumerable own properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    entries<T>(o: { [s: string]: T; } | ArrayLike<T>): [string, T][];\n\n    /**\n     * Returns an array of key/values of the enumerable own properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    entries(o: {}): [string, any][];\n\n    /**\n     * Returns an object containing all own property descriptors of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    getOwnPropertyDescriptors<T>(o: T): { [P in keyof T]: TypedPropertyDescriptor<T[P]>; } & { [x: string]: PropertyDescriptor; };\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.symbol.wellknown" />\n\ninterface SharedArrayBuffer {\n    /**\n     * Read-only. The length of the ArrayBuffer (in bytes).\n     */\n    readonly byteLength: number;\n\n    /**\n     * Returns a section of an SharedArrayBuffer.\n     */\n    slice(begin?: number, end?: number): SharedArrayBuffer;\n    readonly [Symbol.species]: SharedArrayBuffer;\n    readonly [Symbol.toStringTag]: "SharedArrayBuffer";\n}\n\ninterface SharedArrayBufferConstructor {\n    readonly prototype: SharedArrayBuffer;\n    new (byteLength?: number): SharedArrayBuffer;\n}\ndeclare var SharedArrayBuffer: SharedArrayBufferConstructor;\n\ninterface ArrayBufferTypes {\n    SharedArrayBuffer: SharedArrayBuffer;\n}\n\ninterface Atomics {\n    /**\n     * Adds a value to the value at the given position in the array, returning the original value.\n     * Until this atomic operation completes, any other read or write operation against the array\n     * will block.\n     */\n    add(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * Stores the bitwise AND of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or\n     * write operation against the array will block.\n     */\n    and(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * Replaces the value at the given position in the array if the original value equals the given\n     * expected value, returning the original value. Until this atomic operation completes, any\n     * other read or write operation against the array will block.\n     */\n    compareExchange(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, expectedValue: number, replacementValue: number): number;\n\n    /**\n     * Replaces the value at the given position in the array, returning the original value. Until\n     * this atomic operation completes, any other read or write operation against the array will\n     * block.\n     */\n    exchange(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * Returns a value indicating whether high-performance algorithms can use atomic operations\n     * (`true`) or must use locks (`false`) for the given number of bytes-per-element of a typed\n     * array.\n     */\n    isLockFree(size: number): boolean;\n\n    /**\n     * Returns the value at the given position in the array. Until this atomic operation completes,\n     * any other read or write operation against the array will block.\n     */\n    load(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number): number;\n\n    /**\n     * Stores the bitwise OR of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or write\n     * operation against the array will block.\n     */\n    or(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * Stores a value at the given position in the array, returning the new value. Until this\n     * atomic operation completes, any other read or write operation against the array will block.\n     */\n    store(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * Subtracts a value from the value at the given position in the array, returning the original\n     * value. Until this atomic operation completes, any other read or write operation against the\n     * array will block.\n     */\n    sub(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    /**\n     * If the value at the given position in the array is equal to the provided value, the current\n     * agent is put to sleep causing execution to suspend until the timeout expires (returning\n     * `"timed-out"`) or until the agent is awoken (returning `"ok"`); otherwise, returns\n     * `"not-equal"`.\n     */\n    wait(typedArray: Int32Array<ArrayBufferLike>, index: number, value: number, timeout?: number): "ok" | "not-equal" | "timed-out";\n\n    /**\n     * Wakes up sleeping agents that are waiting on the given index of the array, returning the\n     * number of agents that were awoken.\n     * @param typedArray A shared Int32Array<ArrayBufferLike>.\n     * @param index The position in the typedArray to wake up on.\n     * @param count The number of sleeping agents to notify. Defaults to +Infinity.\n     */\n    notify(typedArray: Int32Array<ArrayBufferLike>, index: number, count?: number): number;\n\n    /**\n     * Stores the bitwise XOR of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or write\n     * operation against the array will block.\n     */\n    xor(typedArray: Int8Array<ArrayBufferLike> | Uint8Array<ArrayBufferLike> | Int16Array<ArrayBufferLike> | Uint16Array<ArrayBufferLike> | Int32Array<ArrayBufferLike> | Uint32Array<ArrayBufferLike>, index: number, value: number): number;\n\n    readonly [Symbol.toStringTag]: "Atomics";\n}\n\ndeclare var Atomics: Atomics;\n'],["file:///node_modules/typescript/lib/lib.es2017.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /**\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n     * The padding is applied from the start (left) of the current string.\n     *\n     * @param maxLength The length of the resulting string once the current string has been padded.\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n     *\n     * @param fillString The string to pad the current string with.\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\n     *        The default value for this parameter is " " (U+0020).\n     */\n    padStart(maxLength: number, fillString?: string): string;\n\n    /**\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n     * The padding is applied from the end (right) of the current string.\n     *\n     * @param maxLength The length of the resulting string once the current string has been padded.\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n     *\n     * @param fillString The string to pad the current string with.\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\n     *        The default value for this parameter is " " (U+0020).\n     */\n    padEnd(maxLength: number, fillString?: string): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2017.typedarrays.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Int8ArrayConstructor {\n    new (): Int8Array<ArrayBuffer>;\n}\n\ninterface Uint8ArrayConstructor {\n    new (): Uint8Array<ArrayBuffer>;\n}\n\ninterface Uint8ClampedArrayConstructor {\n    new (): Uint8ClampedArray<ArrayBuffer>;\n}\n\ninterface Int16ArrayConstructor {\n    new (): Int16Array<ArrayBuffer>;\n}\n\ninterface Uint16ArrayConstructor {\n    new (): Uint16Array<ArrayBuffer>;\n}\n\ninterface Int32ArrayConstructor {\n    new (): Int32Array<ArrayBuffer>;\n}\n\ninterface Uint32ArrayConstructor {\n    new (): Uint32Array<ArrayBuffer>;\n}\n\ninterface Float32ArrayConstructor {\n    new (): Float32Array<ArrayBuffer>;\n}\n\ninterface Float64ArrayConstructor {\n    new (): Float64Array<ArrayBuffer>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2018.asynciterable" />\n\ninterface AsyncGenerator<T = unknown, TReturn = any, TNext = any> extends AsyncIteratorObject<T, TReturn, TNext> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...[value]: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\n    return(value: TReturn | PromiseLike<TReturn>): Promise<IteratorResult<T, TReturn>>;\n    throw(e: any): Promise<IteratorResult<T, TReturn>>;\n    [Symbol.asyncIterator](): AsyncGenerator<T, TReturn, TNext>;\n}\n\ninterface AsyncGeneratorFunction {\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: any[]): AsyncGenerator;\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: any[]): AsyncGenerator;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGenerator;\n}\n\ninterface AsyncGeneratorFunctionConstructor {\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGeneratorFunction;\n}\n'],["file:///node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.iterable" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that returns the default async iterator for an object. Called by the semantics of\n     * the for-await-of statement.\n     */\n    readonly asyncIterator: unique symbol;\n}\n\ninterface AsyncIterator<T, TReturn = any, TNext = any> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...[value]: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\n    return?(value?: TReturn | PromiseLike<TReturn>): Promise<IteratorResult<T, TReturn>>;\n    throw?(e?: any): Promise<IteratorResult<T, TReturn>>;\n}\n\ninterface AsyncIterable<T, TReturn = any, TNext = any> {\n    [Symbol.asyncIterator](): AsyncIterator<T, TReturn, TNext>;\n}\n\n/**\n * Describes a user-defined {@link AsyncIterator} that is also async iterable.\n */\ninterface AsyncIterableIterator<T, TReturn = any, TNext = any> extends AsyncIterator<T, TReturn, TNext> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<T, TReturn, TNext>;\n}\n\n/**\n * Describes an {@link AsyncIterator} produced by the runtime that inherits from the intrinsic `AsyncIterator.prototype`.\n */\ninterface AsyncIteratorObject<T, TReturn = unknown, TNext = unknown> extends AsyncIterator<T, TReturn, TNext> {\n    [Symbol.asyncIterator](): AsyncIteratorObject<T, TReturn, TNext>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2018.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2017" />\n/// <reference lib="es2018.asynciterable" />\n/// <reference lib="es2018.asyncgenerator" />\n/// <reference lib="es2018.promise" />\n/// <reference lib="es2018.regexp" />\n/// <reference lib="es2018.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2018.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2018" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2018.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    // http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Determining-Plural-Categories\n    type LDMLPluralRule = "zero" | "one" | "two" | "few" | "many" | "other";\n    type PluralRuleType = "cardinal" | "ordinal";\n\n    interface PluralRulesOptions {\n        localeMatcher?: "lookup" | "best fit" | undefined;\n        type?: PluralRuleType | undefined;\n        minimumIntegerDigits?: number | undefined;\n        minimumFractionDigits?: number | undefined;\n        maximumFractionDigits?: number | undefined;\n        minimumSignificantDigits?: number | undefined;\n        maximumSignificantDigits?: number | undefined;\n    }\n\n    interface ResolvedPluralRulesOptions {\n        locale: string;\n        pluralCategories: LDMLPluralRule[];\n        type: PluralRuleType;\n        minimumIntegerDigits: number;\n        minimumFractionDigits: number;\n        maximumFractionDigits: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n    }\n\n    interface PluralRules {\n        resolvedOptions(): ResolvedPluralRulesOptions;\n        select(n: number): LDMLPluralRule;\n    }\n\n    interface PluralRulesConstructor {\n        new (locales?: string | readonly string[], options?: PluralRulesOptions): PluralRules;\n        (locales?: string | readonly string[], options?: PluralRulesOptions): PluralRules;\n        supportedLocalesOf(locales: string | readonly string[], options?: { localeMatcher?: "lookup" | "best fit"; }): string[];\n    }\n\n    const PluralRules: PluralRulesConstructor;\n\n    interface NumberFormatPartTypeRegistry {\n        literal: never;\n        nan: never;\n        infinity: never;\n        percent: never;\n        integer: never;\n        group: never;\n        decimal: never;\n        fraction: never;\n        plusSign: never;\n        minusSign: never;\n        percentSign: never;\n        currency: never;\n    }\n\n    type NumberFormatPartTypes = keyof NumberFormatPartTypeRegistry;\n\n    interface NumberFormatPart {\n        type: NumberFormatPartTypes;\n        value: string;\n    }\n\n    interface NumberFormat {\n        formatToParts(number?: number | bigint): NumberFormatPart[];\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2018.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface Promise<T> {\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): Promise<T>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2018.regexp.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface RegExpMatchArray {\n    groups?: {\n        [key: string]: string;\n    };\n}\n\ninterface RegExpExecArray {\n    groups?: {\n        [key: string]: string;\n    };\n}\n\ninterface RegExp {\n    /**\n     * Returns a Boolean value indicating the state of the dotAll flag (s) used with a regular expression.\n     * Default is false. Read-only.\n     */\n    readonly dotAll: boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2019.array.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ntype FlatArray<Arr, Depth extends number> = {\n    done: Arr;\n    recur: Arr extends ReadonlyArray<infer InnerArr> ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][Depth]>\n        : Arr;\n}[Depth extends -1 ? "done" : "recur"];\n\ninterface ReadonlyArray<T> {\n    /**\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\n     * a new array.\n     * This is identical to a map followed by flat with depth 1.\n     *\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\n     * callback function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\n     * thisArg is omitted, undefined is used as the this value.\n     */\n    flatMap<U, This = undefined>(\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n        thisArg?: This,\n    ): U[];\n\n    /**\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\n     * specified depth.\n     *\n     * @param depth The maximum recursion depth\n     */\n    flat<A, D extends number = 1>(\n        this: A,\n        depth?: D,\n    ): FlatArray<A, D>[];\n}\n\ninterface Array<T> {\n    /**\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\n     * a new array.\n     * This is identical to a map followed by flat with depth 1.\n     *\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\n     * callback function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\n     * thisArg is omitted, undefined is used as the this value.\n     */\n    flatMap<U, This = undefined>(\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n        thisArg?: This,\n    ): U[];\n\n    /**\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\n     * specified depth.\n     *\n     * @param depth The maximum recursion depth\n     */\n    flat<A, D extends number = 1>(\n        this: A,\n        depth?: D,\n    ): FlatArray<A, D>[];\n}\n'],["file:///node_modules/typescript/lib/lib.es2019.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2018" />\n/// <reference lib="es2019.array" />\n/// <reference lib="es2019.object" />\n/// <reference lib="es2019.string" />\n/// <reference lib="es2019.symbol" />\n/// <reference lib="es2019.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2019.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2019" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2019.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    interface DateTimeFormatPartTypesRegistry {\n        unknown: never;\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2019.object.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n\ninterface ObjectConstructor {\n    /**\n     * Returns an object created by key-value entries for properties and methods\n     * @param entries An iterable object that contains key-value entries for properties and methods.\n     */\n    fromEntries<T = any>(entries: Iterable<readonly [PropertyKey, T]>): { [k: string]: T; };\n\n    /**\n     * Returns an object created by key-value entries for properties and methods\n     * @param entries An iterable object that contains key-value entries for properties and methods.\n     */\n    fromEntries(entries: Iterable<readonly any[]>): any;\n}\n'],["file:///node_modules/typescript/lib/lib.es2019.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /** Removes the trailing white space and line terminator characters from a string. */\n    trimEnd(): string;\n\n    /** Removes the leading white space and line terminator characters from a string. */\n    trimStart(): string;\n\n    /**\n     * Removes the leading white space and line terminator characters from a string.\n     * @deprecated A legacy feature for browser compatibility. Use `trimStart` instead\n     */\n    trimLeft(): string;\n\n    /**\n     * Removes the trailing white space and line terminator characters from a string.\n     * @deprecated A legacy feature for browser compatibility. Use `trimEnd` instead\n     */\n    trimRight(): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2019.symbol.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Symbol {\n    /**\n     * Expose the [[Description]] internal slot of a symbol directly.\n     */\n    readonly description: string | undefined;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.bigint.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020.intl" />\n\ninterface BigIntToLocaleStringOptions {\n    /**\n     * The locale matching algorithm to use.The default is "best fit". For information about this option, see the {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation Intl page}.\n     */\n    localeMatcher?: string;\n    /**\n     * The formatting style to use , the default is "decimal".\n     */\n    style?: string;\n\n    numberingSystem?: string;\n    /**\n     * The unit to use in unit formatting, Possible values are core unit identifiers, defined in UTS #35, Part 2, Section 6. A subset of units from the full list was selected for use in ECMAScript. Pairs of simple units can be concatenated with "-per-" to make a compound unit. There is no default value; if the style is "unit", the unit property must be provided.\n     */\n    unit?: string;\n\n    /**\n     * The unit formatting style to use in unit formatting, the defaults is "short".\n     */\n    unitDisplay?: string;\n\n    /**\n     * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as "USD" for the US dollar, "EUR" for the euro, or "CNY" for the Chinese RMB — see the Current currency & funds code list. There is no default value; if the style is "currency", the currency property must be provided. It is only used when [[Style]] has the value "currency".\n     */\n    currency?: string;\n\n    /**\n     * How to display the currency in currency formatting. It is only used when [[Style]] has the value "currency". The default is "symbol".\n     *\n     * "symbol" to use a localized currency symbol such as €,\n     *\n     * "code" to use the ISO currency code,\n     *\n     * "name" to use a localized currency name such as "dollar"\n     */\n    currencyDisplay?: string;\n\n    /**\n     * Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. The default is true.\n     */\n    useGrouping?: boolean;\n\n    /**\n     * The minimum number of integer digits to use. Possible values are from 1 to 21; the default is 1.\n     */\n    minimumIntegerDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\n\n    /**\n     * The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the {@link http://www.currency-iso.org/en/home/tables/table-a1.html ISO 4217 currency codes list} (2 if the list doesn\'t provide that information).\n     */\n    minimumFractionDigits?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\n\n    /**\n     * The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the {@link http://www.currency-iso.org/en/home/tables/table-a1.html ISO 4217 currency codes list} (2 if the list doesn\'t provide that information); the default for percent formatting is the larger of minimumFractionDigits and 0.\n     */\n    maximumFractionDigits?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\n\n    /**\n     * The minimum number of significant digits to use. Possible values are from 1 to 21; the default is 1.\n     */\n    minimumSignificantDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\n\n    /**\n     * The maximum number of significant digits to use. Possible values are from 1 to 21; the default is 21.\n     */\n    maximumSignificantDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\n\n    /**\n     * The formatting that should be displayed for the number, the defaults is "standard"\n     *\n     *     "standard" plain number formatting\n     *\n     *     "scientific" return the order-of-magnitude for formatted number.\n     *\n     *     "engineering" return the exponent of ten when divisible by three\n     *\n     *     "compact" string representing exponent, defaults is using the "short" form\n     */\n    notation?: string;\n\n    /**\n     * used only when notation is "compact"\n     */\n    compactDisplay?: string;\n}\n\ninterface BigInt {\n    /**\n     * Returns a string representation of an object.\n     * @param radix Specifies a radix for converting numeric values to strings.\n     */\n    toString(radix?: number): string;\n\n    /** Returns a string representation appropriate to the host environment\'s current locale. */\n    toLocaleString(locales?: Intl.LocalesArgument, options?: BigIntToLocaleStringOptions): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): bigint;\n\n    readonly [Symbol.toStringTag]: "BigInt";\n}\n\ninterface BigIntConstructor {\n    (value: bigint | boolean | number | string): bigint;\n    readonly prototype: BigInt;\n\n    /**\n     * Interprets the low bits of a BigInt as a 2\'s-complement signed integer.\n     * All higher bits are discarded.\n     * @param bits The number of low bits to use\n     * @param int The BigInt whose bits to extract\n     */\n    asIntN(bits: number, int: bigint): bigint;\n    /**\n     * Interprets the low bits of a BigInt as an unsigned integer.\n     * All higher bits are discarded.\n     * @param bits The number of low bits to use\n     * @param int The BigInt whose bits to extract\n     */\n    asUintN(bits: number, int: bigint): bigint;\n}\n\ndeclare var BigInt: BigIntConstructor;\n\n/**\n * A typed array of 64-bit signed integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated, an exception is raised.\n */\ninterface BigInt64Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /** The size in bytes of each element in the array. */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /** The ArrayBuffer instance referenced by the array. */\n    readonly buffer: TArrayBuffer;\n\n    /** The length in bytes of the array. */\n    readonly byteLength: number;\n\n    /** The offset in bytes of the array. */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /** Yields index, value pairs for every entry in the array. */\n    entries(): ArrayIterator<[number, bigint]>;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns false,\n     * or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: bigint, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => any, thisArg?: any): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => void, thisArg?: any): void;\n\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: bigint, fromIndex?: number): boolean;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: bigint, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /** Yields each index in the array. */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: bigint, fromIndex?: number): number;\n\n    /** The length of the array. */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigInt64Array<TArrayBuffer>) => bigint): bigint;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigInt64Array<TArrayBuffer>) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigInt64Array<TArrayBuffer>) => bigint): bigint;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigInt64Array<TArrayBuffer>) => U, initialValue: U): U;\n\n    /** Reverses the elements in the array. */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<bigint>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array.\n     */\n    slice(start?: number, end?: number): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls the\n     * predicate function for each element in the array until the predicate returns true, or until\n     * the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: bigint, index: number, array: BigInt64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;\n\n    /**\n     * Sorts the array.\n     * @param compareFn The function used to determine the order of the elements. If omitted, the elements are sorted in ascending order.\n     */\n    sort(compareFn?: (a: bigint, b: bigint) => number | bigint): this;\n\n    /**\n     * Gets a new BigInt64Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): BigInt64Array<TArrayBuffer>;\n\n    /** Converts the array to a string by using the current locale. */\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\n\n    /** Returns a string representation of the array. */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): BigInt64Array<TArrayBuffer>;\n\n    /** Yields each value in the array. */\n    values(): ArrayIterator<bigint>;\n\n    [Symbol.iterator](): ArrayIterator<bigint>;\n\n    readonly [Symbol.toStringTag]: "BigInt64Array";\n\n    [index: number]: bigint;\n}\ninterface BigInt64ArrayConstructor {\n    readonly prototype: BigInt64Array<ArrayBufferLike>;\n    new (length?: number): BigInt64Array<ArrayBuffer>;\n    new (array: ArrayLike<bigint> | Iterable<bigint>): BigInt64Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): BigInt64Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): BigInt64Array<ArrayBuffer>;\n    new (array: ArrayLike<bigint> | ArrayBuffer): BigInt64Array<ArrayBuffer>;\n\n    /** The size in bytes of each element in the array. */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: bigint[]): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<bigint>): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<bigint>): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigInt64Array<ArrayBuffer>;\n}\ndeclare var BigInt64Array: BigInt64ArrayConstructor;\n\n/**\n * A typed array of 64-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated, an exception is raised.\n */\ninterface BigUint64Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /** The size in bytes of each element in the array. */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /** The ArrayBuffer instance referenced by the array. */\n    readonly buffer: TArrayBuffer;\n\n    /** The length in bytes of the array. */\n    readonly byteLength: number;\n\n    /** The offset in bytes of the array. */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /** Yields index, value pairs for every entry in the array. */\n    entries(): ArrayIterator<[number, bigint]>;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns false,\n     * or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: bigint, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => any, thisArg?: any): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): bigint | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => void, thisArg?: any): void;\n\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: bigint, fromIndex?: number): boolean;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: bigint, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /** Yields each index in the array. */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: bigint, fromIndex?: number): number;\n\n    /** The length of the array. */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigUint64Array<TArrayBuffer>) => bigint): bigint;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigUint64Array<TArrayBuffer>) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigUint64Array<TArrayBuffer>) => bigint): bigint;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigUint64Array<TArrayBuffer>) => U, initialValue: U): U;\n\n    /** Reverses the elements in the array. */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<bigint>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array.\n     */\n    slice(start?: number, end?: number): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls the\n     * predicate function for each element in the array until the predicate returns true, or until\n     * the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: bigint, index: number, array: BigUint64Array<TArrayBuffer>) => boolean, thisArg?: any): boolean;\n\n    /**\n     * Sorts the array.\n     * @param compareFn The function used to determine the order of the elements. If omitted, the elements are sorted in ascending order.\n     */\n    sort(compareFn?: (a: bigint, b: bigint) => number | bigint): this;\n\n    /**\n     * Gets a new BigUint64Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): BigUint64Array<TArrayBuffer>;\n\n    /** Converts the array to a string by using the current locale. */\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\n\n    /** Returns a string representation of the array. */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): BigUint64Array<TArrayBuffer>;\n\n    /** Yields each value in the array. */\n    values(): ArrayIterator<bigint>;\n\n    [Symbol.iterator](): ArrayIterator<bigint>;\n\n    readonly [Symbol.toStringTag]: "BigUint64Array";\n\n    [index: number]: bigint;\n}\ninterface BigUint64ArrayConstructor {\n    readonly prototype: BigUint64Array<ArrayBufferLike>;\n    new (length?: number): BigUint64Array<ArrayBuffer>;\n    new (array: ArrayLike<bigint> | Iterable<bigint>): BigUint64Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): BigUint64Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): BigUint64Array<ArrayBuffer>;\n    new (array: ArrayLike<bigint> | ArrayBuffer): BigUint64Array<ArrayBuffer>;\n\n    /** The size in bytes of each element in the array. */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: bigint[]): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<bigint>): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<bigint>): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => bigint, thisArg?: any): BigUint64Array<ArrayBuffer>;\n}\ndeclare var BigUint64Array: BigUint64ArrayConstructor;\n\ninterface DataView<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Gets the BigInt64 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getBigInt64(byteOffset: number, littleEndian?: boolean): bigint;\n\n    /**\n     * Gets the BigUint64 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getBigUint64(byteOffset: number, littleEndian?: boolean): bigint;\n\n    /**\n     * Stores a BigInt64 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setBigInt64(byteOffset: number, value: bigint, littleEndian?: boolean): void;\n\n    /**\n     * Stores a BigUint64 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setBigUint64(byteOffset: number, value: bigint, littleEndian?: boolean): void;\n}\n\ndeclare namespace Intl {\n    interface NumberFormat {\n        format(value: number | bigint): string;\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2019" />\n/// <reference lib="es2020.bigint" />\n/// <reference lib="es2020.date" />\n/// <reference lib="es2020.number" />\n/// <reference lib="es2020.promise" />\n/// <reference lib="es2020.sharedmemory" />\n/// <reference lib="es2020.string" />\n/// <reference lib="es2020.symbol.wellknown" />\n/// <reference lib="es2020.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2020.date.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020.intl" />\n\ninterface Date {\n    /**\n     * Converts a date and time to a string by using the current or specified locale.\n     * @param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(locales?: Intl.LocalesArgument, options?: Intl.DateTimeFormatOptions): string;\n\n    /**\n     * Converts a date to a string by using the current or specified locale.\n     * @param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleDateString(locales?: Intl.LocalesArgument, options?: Intl.DateTimeFormatOptions): string;\n\n    /**\n     * Converts a time to a string by using the current or specified locale.\n     * @param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleTimeString(locales?: Intl.LocalesArgument, options?: Intl.DateTimeFormatOptions): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2020.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2018.intl" />\ndeclare namespace Intl {\n    /**\n     * A string that is a valid [Unicode BCP 47 Locale Identifier](https://unicode.org/reports/tr35/#Unicode_locale_identifier).\n     *\n     * For example: "fa", "es-MX", "zh-Hant-TW".\n     *\n     * See [MDN - Intl - locales argument](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n     */\n    type UnicodeBCP47LocaleIdentifier = string;\n\n    /**\n     * Unit to use in the relative time internationalized message.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/format#Parameters).\n     */\n    type RelativeTimeFormatUnit =\n        | "year"\n        | "years"\n        | "quarter"\n        | "quarters"\n        | "month"\n        | "months"\n        | "week"\n        | "weeks"\n        | "day"\n        | "days"\n        | "hour"\n        | "hours"\n        | "minute"\n        | "minutes"\n        | "second"\n        | "seconds";\n\n    /**\n     * Value of the `unit` property in objects returned by\n     * `Intl.RelativeTimeFormat.prototype.formatToParts()`. `formatToParts` and\n     * `format` methods accept either singular or plural unit names as input,\n     * but `formatToParts` only outputs singular (e.g. "day") not plural (e.g.\n     * "days").\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/formatToParts#Using_formatToParts).\n     */\n    type RelativeTimeFormatUnitSingular =\n        | "year"\n        | "quarter"\n        | "month"\n        | "week"\n        | "day"\n        | "hour"\n        | "minute"\n        | "second";\n\n    /**\n     * The locale matching algorithm to use.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation).\n     */\n    type RelativeTimeFormatLocaleMatcher = "lookup" | "best fit";\n\n    /**\n     * The format of output message.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\n     */\n    type RelativeTimeFormatNumeric = "always" | "auto";\n\n    /**\n     * The length of the internationalized message.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\n     */\n    type RelativeTimeFormatStyle = "long" | "short" | "narrow";\n\n    /**\n     * The locale or locales to use\n     *\n     * See [MDN - Intl - locales argument](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\n     */\n    type LocalesArgument = UnicodeBCP47LocaleIdentifier | Locale | readonly (UnicodeBCP47LocaleIdentifier | Locale)[] | undefined;\n\n    /**\n     * An object with some or all of properties of `options` parameter\n     * of `Intl.RelativeTimeFormat` constructor.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\n     */\n    interface RelativeTimeFormatOptions {\n        /** The locale matching algorithm to use. For information about this option, see [Intl page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation). */\n        localeMatcher?: RelativeTimeFormatLocaleMatcher;\n        /** The format of output message. */\n        numeric?: RelativeTimeFormatNumeric;\n        /** The length of the internationalized message. */\n        style?: RelativeTimeFormatStyle;\n    }\n\n    /**\n     * An object with properties reflecting the locale\n     * and formatting options computed during initialization\n     * of the `Intl.RelativeTimeFormat` object\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/resolvedOptions#Description).\n     */\n    interface ResolvedRelativeTimeFormatOptions {\n        locale: UnicodeBCP47LocaleIdentifier;\n        style: RelativeTimeFormatStyle;\n        numeric: RelativeTimeFormatNumeric;\n        numberingSystem: string;\n    }\n\n    /**\n     * An object representing the relative time format in parts\n     * that can be used for custom locale-aware formatting.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/formatToParts#Using_formatToParts).\n     */\n    type RelativeTimeFormatPart =\n        | {\n            type: "literal";\n            value: string;\n        }\n        | {\n            type: Exclude<NumberFormatPartTypes, "literal">;\n            value: string;\n            unit: RelativeTimeFormatUnitSingular;\n        };\n\n    interface RelativeTimeFormat {\n        /**\n         * Formats a value and a unit according to the locale\n         * and formatting options of the given\n         * [`Intl.RelativeTimeFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat)\n         * object.\n         *\n         * While this method automatically provides the correct plural forms,\n         * the grammatical form is otherwise as neutral as possible.\n         *\n         * It is the caller\'s responsibility to handle cut-off logic\n         * such as deciding between displaying "in 7 days" or "in 1 week".\n         * This API does not support relative dates involving compound units.\n         * e.g "in 5 days and 4 hours".\n         *\n         * @param value -  Numeric value to use in the internationalized relative time message\n         *\n         * @param unit - [Unit](https://tc39.es/ecma402/#sec-singularrelativetimeunit) to use in the relative time internationalized message.\n         *\n         * @throws `RangeError` if `unit` was given something other than `unit` possible values\n         *\n         * @returns {string} Internationalized relative time message as string\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/format).\n         */\n        format(value: number, unit: RelativeTimeFormatUnit): string;\n\n        /**\n         *  Returns an array of objects representing the relative time format in parts that can be used for custom locale-aware formatting.\n         *\n         *  @param value - Numeric value to use in the internationalized relative time message\n         *\n         *  @param unit - [Unit](https://tc39.es/ecma402/#sec-singularrelativetimeunit) to use in the relative time internationalized message.\n         *\n         *  @throws `RangeError` if `unit` was given something other than `unit` possible values\n         *\n         *  [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/formatToParts).\n         */\n        formatToParts(value: number, unit: RelativeTimeFormatUnit): RelativeTimeFormatPart[];\n\n        /**\n         * Provides access to the locale and options computed during initialization of this `Intl.RelativeTimeFormat` object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/resolvedOptions).\n         */\n        resolvedOptions(): ResolvedRelativeTimeFormatOptions;\n    }\n\n    /**\n     * The [`Intl.RelativeTimeFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat)\n     * object is a constructor for objects that enable language-sensitive relative time formatting.\n     *\n     * [Compatibility](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat#Browser_compatibility).\n     */\n    const RelativeTimeFormat: {\n        /**\n         * Creates [Intl.RelativeTimeFormat](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat) objects\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the locales argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters)\n         *  with some or all of options of `RelativeTimeFormatOptions`.\n         *\n         * @returns [Intl.RelativeTimeFormat](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat) object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat).\n         */\n        new (\n            locales?: LocalesArgument,\n            options?: RelativeTimeFormatOptions,\n        ): RelativeTimeFormat;\n\n        /**\n         * Returns an array containing those of the provided locales\n         * that are supported in date and time formatting\n         * without having to fall back to the runtime\'s default locale.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the locales argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters)\n         *  with some or all of options of the formatting.\n         *\n         * @returns An array containing those of the provided locales\n         *  that are supported in date and time formatting\n         *  without having to fall back to the runtime\'s default locale.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/supportedLocalesOf).\n         */\n        supportedLocalesOf(\n            locales?: LocalesArgument,\n            options?: RelativeTimeFormatOptions,\n        ): UnicodeBCP47LocaleIdentifier[];\n    };\n\n    interface NumberFormatOptionsStyleRegistry {\n        unit: never;\n    }\n\n    interface NumberFormatOptionsCurrencyDisplayRegistry {\n        narrowSymbol: never;\n    }\n\n    interface NumberFormatOptionsSignDisplayRegistry {\n        auto: never;\n        never: never;\n        always: never;\n        exceptZero: never;\n    }\n\n    type NumberFormatOptionsSignDisplay = keyof NumberFormatOptionsSignDisplayRegistry;\n\n    interface NumberFormatOptions {\n        numberingSystem?: string | undefined;\n        compactDisplay?: "short" | "long" | undefined;\n        notation?: "standard" | "scientific" | "engineering" | "compact" | undefined;\n        signDisplay?: NumberFormatOptionsSignDisplay | undefined;\n        unit?: string | undefined;\n        unitDisplay?: "short" | "long" | "narrow" | undefined;\n        currencySign?: "standard" | "accounting" | undefined;\n    }\n\n    interface ResolvedNumberFormatOptions {\n        compactDisplay?: "short" | "long";\n        notation: "standard" | "scientific" | "engineering" | "compact";\n        signDisplay: NumberFormatOptionsSignDisplay;\n        unit?: string;\n        unitDisplay?: "short" | "long" | "narrow";\n        currencySign?: "standard" | "accounting";\n    }\n\n    interface NumberFormatPartTypeRegistry {\n        compact: never;\n        exponentInteger: never;\n        exponentMinusSign: never;\n        exponentSeparator: never;\n        unit: never;\n        unknown: never;\n    }\n\n    interface DateTimeFormatOptions {\n        calendar?: string | undefined;\n        dayPeriod?: "narrow" | "short" | "long" | undefined;\n        numberingSystem?: string | undefined;\n\n        dateStyle?: "full" | "long" | "medium" | "short" | undefined;\n        timeStyle?: "full" | "long" | "medium" | "short" | undefined;\n        hourCycle?: "h11" | "h12" | "h23" | "h24" | undefined;\n    }\n\n    type LocaleHourCycleKey = "h12" | "h23" | "h11" | "h24";\n    type LocaleCollationCaseFirst = "upper" | "lower" | "false";\n\n    interface LocaleOptions {\n        /** A string containing the language, and the script and region if available. */\n        baseName?: string;\n        /** The part of the Locale that indicates the locale\'s calendar era. */\n        calendar?: string;\n        /** Flag that defines whether case is taken into account for the locale\'s collation rules. */\n        caseFirst?: LocaleCollationCaseFirst;\n        /** The collation type used for sorting */\n        collation?: string;\n        /** The time keeping format convention used by the locale. */\n        hourCycle?: LocaleHourCycleKey;\n        /** The primary language subtag associated with the locale. */\n        language?: string;\n        /** The numeral system used by the locale. */\n        numberingSystem?: string;\n        /** Flag that defines whether the locale has special collation handling for numeric characters. */\n        numeric?: boolean;\n        /** The region of the world (usually a country) associated with the locale. Possible values are region codes as defined by ISO 3166-1. */\n        region?: string;\n        /** The script used for writing the particular language used in the locale. Possible values are script codes as defined by ISO 15924. */\n        script?: string;\n    }\n\n    interface Locale extends LocaleOptions {\n        /** A string containing the language, and the script and region if available. */\n        baseName: string;\n        /** The primary language subtag associated with the locale. */\n        language: string;\n        /** Gets the most likely values for the language, script, and region of the locale based on existing values. */\n        maximize(): Locale;\n        /** Attempts to remove information about the locale that would be added by calling `Locale.maximize()`. */\n        minimize(): Locale;\n        /** Returns the locale\'s full locale identifier string. */\n        toString(): UnicodeBCP47LocaleIdentifier;\n    }\n\n    /**\n     * Constructor creates [Intl.Locale](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale)\n     * objects\n     *\n     * @param tag - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646).\n     *  For the general form and interpretation of the locales argument,\n     *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n     *\n     * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/Locale#Parameters) with some or all of options of the locale.\n     *\n     * @returns [Intl.Locale](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale) object.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale).\n     */\n    const Locale: {\n        new (tag: UnicodeBCP47LocaleIdentifier | Locale, options?: LocaleOptions): Locale;\n    };\n\n    type DisplayNamesFallback =\n        | "code"\n        | "none";\n\n    type DisplayNamesType =\n        | "language"\n        | "region"\n        | "script"\n        | "calendar"\n        | "dateTimeField"\n        | "currency";\n\n    type DisplayNamesLanguageDisplay =\n        | "dialect"\n        | "standard";\n\n    interface DisplayNamesOptions {\n        localeMatcher?: RelativeTimeFormatLocaleMatcher;\n        style?: RelativeTimeFormatStyle;\n        type: DisplayNamesType;\n        languageDisplay?: DisplayNamesLanguageDisplay;\n        fallback?: DisplayNamesFallback;\n    }\n\n    interface ResolvedDisplayNamesOptions {\n        locale: UnicodeBCP47LocaleIdentifier;\n        style: RelativeTimeFormatStyle;\n        type: DisplayNamesType;\n        fallback: DisplayNamesFallback;\n        languageDisplay?: DisplayNamesLanguageDisplay;\n    }\n\n    interface DisplayNames {\n        /**\n         * Receives a code and returns a string based on the locale and options provided when instantiating\n         * [`Intl.DisplayNames()`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames)\n         *\n         * @param code The `code` to provide depends on the `type` passed to display name during creation:\n         *  - If the type is `"region"`, code should be either an [ISO-3166 two letters region code](https://www.iso.org/iso-3166-country-codes.html),\n         *    or a [three digits UN M49 Geographic Regions](https://unstats.un.org/unsd/methodology/m49/).\n         *  - If the type is `"script"`, code should be an [ISO-15924 four letters script code](https://unicode.org/iso15924/iso15924-codes.html).\n         *  - If the type is `"language"`, code should be a `languageCode` ["-" `scriptCode`] ["-" `regionCode` ] *("-" `variant` )\n         *    subsequence of the unicode_language_id grammar in [UTS 35\'s Unicode Language and Locale Identifiers grammar](https://unicode.org/reports/tr35/#Unicode_language_identifier).\n         *    `languageCode` is either a two letters ISO 639-1 language code or a three letters ISO 639-2 language code.\n         *  - If the type is `"currency"`, code should be a [3-letter ISO 4217 currency code](https://www.iso.org/iso-4217-currency-codes.html).\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/of).\n         */\n        of(code: string): string | undefined;\n        /**\n         * Returns a new object with properties reflecting the locale and style formatting options computed during the construction of the current\n         * [`Intl/DisplayNames`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames) object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/resolvedOptions).\n         */\n        resolvedOptions(): ResolvedDisplayNamesOptions;\n    }\n\n    /**\n     * The [`Intl.DisplayNames()`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames)\n     * object enables the consistent translation of language, region and script display names.\n     *\n     * [Compatibility](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames#browser_compatibility).\n     */\n    const DisplayNames: {\n        prototype: DisplayNames;\n\n        /**\n         * @param locales A string with a BCP 47 language tag, or an array of such strings.\n         *   For the general form and interpretation of the `locales` argument, see the [Intl](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\n         *   page.\n         *\n         * @param options An object for setting up a display name.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/DisplayNames).\n         */\n        new (locales: LocalesArgument, options: DisplayNamesOptions): DisplayNames;\n\n        /**\n         * Returns an array containing those of the provided locales that are supported in display names without having to fall back to the runtime\'s default locale.\n         *\n         * @param locales A string with a BCP 47 language tag, or an array of such strings.\n         *   For the general form and interpretation of the `locales` argument, see the [Intl](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\n         *   page.\n         *\n         * @param options An object with a locale matcher.\n         *\n         * @returns An array of strings representing a subset of the given locale tags that are supported in display names without having to fall back to the runtime\'s default locale.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/supportedLocalesOf).\n         */\n        supportedLocalesOf(locales?: LocalesArgument, options?: { localeMatcher?: RelativeTimeFormatLocaleMatcher; }): UnicodeBCP47LocaleIdentifier[];\n    };\n\n    interface CollatorConstructor {\n        new (locales?: LocalesArgument, options?: CollatorOptions): Collator;\n        (locales?: LocalesArgument, options?: CollatorOptions): Collator;\n        supportedLocalesOf(locales: LocalesArgument, options?: CollatorOptions): string[];\n    }\n\n    interface DateTimeFormatConstructor {\n        new (locales?: LocalesArgument, options?: DateTimeFormatOptions): DateTimeFormat;\n        (locales?: LocalesArgument, options?: DateTimeFormatOptions): DateTimeFormat;\n        supportedLocalesOf(locales: LocalesArgument, options?: DateTimeFormatOptions): string[];\n    }\n\n    interface NumberFormatConstructor {\n        new (locales?: LocalesArgument, options?: NumberFormatOptions): NumberFormat;\n        (locales?: LocalesArgument, options?: NumberFormatOptions): NumberFormat;\n        supportedLocalesOf(locales: LocalesArgument, options?: NumberFormatOptions): string[];\n    }\n\n    interface PluralRulesConstructor {\n        new (locales?: LocalesArgument, options?: PluralRulesOptions): PluralRules;\n        (locales?: LocalesArgument, options?: PluralRulesOptions): PluralRules;\n\n        supportedLocalesOf(locales: LocalesArgument, options?: { localeMatcher?: "lookup" | "best fit"; }): string[];\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.number.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020.intl" />\n\ninterface Number {\n    /**\n     * Converts a number to a string by using the current or specified locale.\n     * @param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(locales?: Intl.LocalesArgument, options?: Intl.NumberFormatOptions): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface PromiseFulfilledResult<T> {\n    status: "fulfilled";\n    value: T;\n}\n\ninterface PromiseRejectedResult {\n    status: "rejected";\n    reason: any;\n}\n\ntype PromiseSettledResult<T> = PromiseFulfilledResult<T> | PromiseRejectedResult;\n\ninterface PromiseConstructor {\n    /**\n     * Creates a Promise that is resolved with an array of results when all\n     * of the provided Promises resolve or reject.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    allSettled<T extends readonly unknown[] | []>(values: T): Promise<{ -readonly [P in keyof T]: PromiseSettledResult<Awaited<T[P]>>; }>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all\n     * of the provided Promises resolve or reject.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    allSettled<T>(values: Iterable<T | PromiseLike<T>>): Promise<PromiseSettledResult<Awaited<T>>[]>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020.bigint" />\n\ninterface Atomics {\n    /**\n     * Adds a value to the value at the given position in the array, returning the original value.\n     * Until this atomic operation completes, any other read or write operation against the array\n     * will block.\n     */\n    add(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * Stores the bitwise AND of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or\n     * write operation against the array will block.\n     */\n    and(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * Replaces the value at the given position in the array if the original value equals the given\n     * expected value, returning the original value. Until this atomic operation completes, any\n     * other read or write operation against the array will block.\n     */\n    compareExchange(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, expectedValue: bigint, replacementValue: bigint): bigint;\n\n    /**\n     * Replaces the value at the given position in the array, returning the original value. Until\n     * this atomic operation completes, any other read or write operation against the array will\n     * block.\n     */\n    exchange(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * Returns the value at the given position in the array. Until this atomic operation completes,\n     * any other read or write operation against the array will block.\n     */\n    load(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number): bigint;\n\n    /**\n     * Stores the bitwise OR of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or write\n     * operation against the array will block.\n     */\n    or(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * Stores a value at the given position in the array, returning the new value. Until this\n     * atomic operation completes, any other read or write operation against the array will block.\n     */\n    store(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * Subtracts a value from the value at the given position in the array, returning the original\n     * value. Until this atomic operation completes, any other read or write operation against the\n     * array will block.\n     */\n    sub(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n\n    /**\n     * If the value at the given position in the array is equal to the provided value, the current\n     * agent is put to sleep causing execution to suspend until the timeout expires (returning\n     * `"timed-out"`) or until the agent is awoken (returning `"ok"`); otherwise, returns\n     * `"not-equal"`.\n     */\n    wait(typedArray: BigInt64Array<ArrayBufferLike>, index: number, value: bigint, timeout?: number): "ok" | "not-equal" | "timed-out";\n\n    /**\n     * Wakes up sleeping agents that are waiting on the given index of the array, returning the\n     * number of agents that were awoken.\n     * @param typedArray A shared BigInt64Array.\n     * @param index The position in the typedArray to wake up on.\n     * @param count The number of sleeping agents to notify. Defaults to +Infinity.\n     */\n    notify(typedArray: BigInt64Array<ArrayBufferLike>, index: number, count?: number): number;\n\n    /**\n     * Stores the bitwise XOR of a value with the value at the given position in the array,\n     * returning the original value. Until this atomic operation completes, any other read or write\n     * operation against the array will block.\n     */\n    xor(typedArray: BigInt64Array<ArrayBufferLike> | BigUint64Array<ArrayBufferLike>, index: number, value: bigint): bigint;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n/// <reference lib="es2020.intl" />\n/// <reference lib="es2020.symbol.wellknown" />\n\ninterface String {\n    /**\n     * Matches a string with a regular expression, and returns an iterable of matches\n     * containing the results of that search.\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\n     */\n    matchAll(regexp: RegExp): RegExpStringIterator<RegExpExecArray>;\n\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale. */\n    toLocaleLowerCase(locales?: Intl.LocalesArgument): string;\n\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale. */\n    toLocaleUpperCase(locales?: Intl.LocalesArgument): string;\n\n    /**\n     * Determines whether two strings are equivalent in the current or specified locale.\n     * @param that String to compare to target string\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n     * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\n     */\n    localeCompare(that: string, locales?: Intl.LocalesArgument, options?: Intl.CollatorOptions): number;\n}\n'],["file:///node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n/// <reference lib="es2015.symbol" />\n\ninterface SymbolConstructor {\n    /**\n     * A regular expression method that matches the regular expression against a string. Called\n     * by the String.prototype.matchAll method.\n     */\n    readonly matchAll: unique symbol;\n}\n\ninterface RegExpStringIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): RegExpStringIterator<T>;\n}\n\ninterface RegExp {\n    /**\n     * Matches a string with this regular expression, and returns an iterable of matches\n     * containing the results of that search.\n     * @param string A string to search within.\n     */\n    [Symbol.matchAll](str: string): RegExpStringIterator<RegExpMatchArray>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2021.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020" />\n/// <reference lib="es2021.promise" />\n/// <reference lib="es2021.string" />\n/// <reference lib="es2021.weakref" />\n/// <reference lib="es2021.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2021.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2021" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2021.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    interface DateTimeFormatPartTypesRegistry {\n        fractionalSecond: any;\n    }\n\n    interface DateTimeFormatOptions {\n        formatMatcher?: "basic" | "best fit" | "best fit" | undefined;\n        dateStyle?: "full" | "long" | "medium" | "short" | undefined;\n        timeStyle?: "full" | "long" | "medium" | "short" | undefined;\n        dayPeriod?: "narrow" | "short" | "long" | undefined;\n        fractionalSecondDigits?: 1 | 2 | 3 | undefined;\n    }\n\n    interface DateTimeRangeFormatPart extends DateTimeFormatPart {\n        source: "startRange" | "endRange" | "shared";\n    }\n\n    interface DateTimeFormat {\n        formatRange(startDate: Date | number | bigint, endDate: Date | number | bigint): string;\n        formatRangeToParts(startDate: Date | number | bigint, endDate: Date | number | bigint): DateTimeRangeFormatPart[];\n    }\n\n    interface ResolvedDateTimeFormatOptions {\n        formatMatcher?: "basic" | "best fit" | "best fit";\n        dateStyle?: "full" | "long" | "medium" | "short";\n        timeStyle?: "full" | "long" | "medium" | "short";\n        hourCycle?: "h11" | "h12" | "h23" | "h24";\n        dayPeriod?: "narrow" | "short" | "long";\n        fractionalSecondDigits?: 1 | 2 | 3;\n    }\n\n    /**\n     * The locale matching algorithm to use.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat#parameters).\n     */\n    type ListFormatLocaleMatcher = "lookup" | "best fit";\n\n    /**\n     * The format of output message.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat#parameters).\n     */\n    type ListFormatType = "conjunction" | "disjunction" | "unit";\n\n    /**\n     * The length of the formatted message.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat#parameters).\n     */\n    type ListFormatStyle = "long" | "short" | "narrow";\n\n    /**\n     * An object with some or all properties of the `Intl.ListFormat` constructor `options` parameter.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat#parameters).\n     */\n    interface ListFormatOptions {\n        /** The locale matching algorithm to use. For information about this option, see [Intl page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation). */\n        localeMatcher?: ListFormatLocaleMatcher | undefined;\n        /** The format of output message. */\n        type?: ListFormatType | undefined;\n        /** The length of the internationalized message. */\n        style?: ListFormatStyle | undefined;\n    }\n\n    interface ResolvedListFormatOptions {\n        locale: string;\n        style: ListFormatStyle;\n        type: ListFormatType;\n    }\n\n    interface ListFormat {\n        /**\n         * Returns a string with a language-specific representation of the list.\n         *\n         * @param list - An iterable object, such as an [Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array).\n         *\n         * @throws `TypeError` if `list` includes something other than the possible values.\n         *\n         * @returns {string} A language-specific formatted string representing the elements of the list.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/format).\n         */\n        format(list: Iterable<string>): string;\n\n        /**\n         * Returns an Array of objects representing the different components that can be used to format a list of values in a locale-aware fashion.\n         *\n         * @param list - An iterable object, such as an [Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array), to be formatted according to a locale.\n         *\n         * @throws `TypeError` if `list` includes something other than the possible values.\n         *\n         * @returns {{ type: "element" | "literal", value: string; }[]} An Array of components which contains the formatted parts from the list.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/formatToParts).\n         */\n        formatToParts(list: Iterable<string>): { type: "element" | "literal"; value: string; }[];\n\n        /**\n         * Returns a new object with properties reflecting the locale and style\n         * formatting options computed during the construction of the current\n         * `Intl.ListFormat` object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/resolvedOptions).\n         */\n        resolvedOptions(): ResolvedListFormatOptions;\n    }\n\n    const ListFormat: {\n        prototype: ListFormat;\n\n        /**\n         * Creates [Intl.ListFormat](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat) objects that\n         * enable language-sensitive list formatting.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/ListFormat#parameters)\n         *  with some or all options of `ListFormatOptions`.\n         *\n         * @returns [Intl.ListFormatOptions](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat) object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat).\n         */\n        new (locales?: LocalesArgument, options?: ListFormatOptions): ListFormat;\n\n        /**\n         * Returns an array containing those of the provided locales that are\n         * supported in list formatting without having to fall back to the runtime\'s default locale.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/supportedLocalesOf#parameters).\n         *  with some or all possible options.\n         *\n         * @returns An array of strings representing a subset of the given locale tags that are supported in list\n         *  formatting without having to fall back to the runtime\'s default locale.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat/supportedLocalesOf).\n         */\n        supportedLocalesOf(locales: LocalesArgument, options?: Pick<ListFormatOptions, "localeMatcher">): UnicodeBCP47LocaleIdentifier[];\n    };\n}\n'],["file:///node_modules/typescript/lib/lib.es2021.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface AggregateError extends Error {\n    errors: any[];\n}\n\ninterface AggregateErrorConstructor {\n    new (errors: Iterable<any>, message?: string): AggregateError;\n    (errors: Iterable<any>, message?: string): AggregateError;\n    readonly prototype: AggregateError;\n}\n\ndeclare var AggregateError: AggregateErrorConstructor;\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface PromiseConstructor {\n    /**\n     * The any function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an AggregateError containing an array of rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.\n     * @param values An array or iterable of Promises.\n     * @returns A new Promise.\n     */\n    any<T extends readonly unknown[] | []>(values: T): Promise<Awaited<T[number]>>;\n\n    /**\n     * The any function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an AggregateError containing an array of rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.\n     * @param values An array or iterable of Promises.\n     * @returns A new Promise.\n     */\n    any<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2021.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /**\n     * Replace all instances of a substring in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n     */\n    replaceAll(searchValue: string | RegExp, replaceValue: string): string;\n\n    /**\n     * Replace all instances of a substring in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replacer A function that returns the replacement text.\n     */\n    replaceAll(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es2021.weakref.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol.wellknown" />\n\ninterface WeakRef<T extends WeakKey> {\n    readonly [Symbol.toStringTag]: "WeakRef";\n\n    /**\n     * Returns the WeakRef instance\'s target value, or undefined if the target value has been\n     * reclaimed.\n     * In es2023 the value can be either a symbol or an object, in previous versions only object is permissible.\n     */\n    deref(): T | undefined;\n}\n\ninterface WeakRefConstructor {\n    readonly prototype: WeakRef<any>;\n\n    /**\n     * Creates a WeakRef instance for the given target value.\n     * In es2023 the value can be either a symbol or an object, in previous versions only object is permissible.\n     * @param target The target value for the WeakRef instance.\n     */\n    new <T extends WeakKey>(target: T): WeakRef<T>;\n}\n\ndeclare var WeakRef: WeakRefConstructor;\n\ninterface FinalizationRegistry<T> {\n    readonly [Symbol.toStringTag]: "FinalizationRegistry";\n\n    /**\n     * Registers a value with the registry.\n     * In es2023 the value can be either a symbol or an object, in previous versions only object is permissible.\n     * @param target The target value to register.\n     * @param heldValue The value to pass to the finalizer for this value. This cannot be the\n     * target value.\n     * @param unregisterToken The token to pass to the unregister method to unregister the target\n     * value. If not provided, the target cannot be unregistered.\n     */\n    register(target: WeakKey, heldValue: T, unregisterToken?: WeakKey): void;\n\n    /**\n     * Unregisters a value from the registry.\n     * In es2023 the value can be either a symbol or an object, in previous versions only object is permissible.\n     * @param unregisterToken The token that was used as the unregisterToken argument when calling\n     * register to register the target value.\n     */\n    unregister(unregisterToken: WeakKey): boolean;\n}\n\ninterface FinalizationRegistryConstructor {\n    readonly prototype: FinalizationRegistry<any>;\n\n    /**\n     * Creates a finalization registry with an associated cleanup callback\n     * @param cleanupCallback The callback to call after a value in the registry has been reclaimed.\n     */\n    new <T>(cleanupCallback: (heldValue: T) => void): FinalizationRegistry<T>;\n}\n\ndeclare var FinalizationRegistry: FinalizationRegistryConstructor;\n'],["file:///node_modules/typescript/lib/lib.es2022.array.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface Array<T> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): T | undefined;\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): T | undefined;\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n}\n\ninterface BigInt64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): bigint | undefined;\n}\n\ninterface BigUint64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): bigint | undefined;\n}\n'],["file:///node_modules/typescript/lib/lib.es2022.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2021" />\n/// <reference lib="es2022.array" />\n/// <reference lib="es2022.error" />\n/// <reference lib="es2022.intl" />\n/// <reference lib="es2022.object" />\n/// <reference lib="es2022.regexp" />\n/// <reference lib="es2022.string" />\n'],["file:///node_modules/typescript/lib/lib.es2022.error.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2021.promise" />\n\ninterface ErrorOptions {\n    cause?: unknown;\n}\n\ninterface Error {\n    cause?: unknown;\n}\n\ninterface ErrorConstructor {\n    new (message?: string, options?: ErrorOptions): Error;\n    (message?: string, options?: ErrorOptions): Error;\n}\n\ninterface EvalErrorConstructor {\n    new (message?: string, options?: ErrorOptions): EvalError;\n    (message?: string, options?: ErrorOptions): EvalError;\n}\n\ninterface RangeErrorConstructor {\n    new (message?: string, options?: ErrorOptions): RangeError;\n    (message?: string, options?: ErrorOptions): RangeError;\n}\n\ninterface ReferenceErrorConstructor {\n    new (message?: string, options?: ErrorOptions): ReferenceError;\n    (message?: string, options?: ErrorOptions): ReferenceError;\n}\n\ninterface SyntaxErrorConstructor {\n    new (message?: string, options?: ErrorOptions): SyntaxError;\n    (message?: string, options?: ErrorOptions): SyntaxError;\n}\n\ninterface TypeErrorConstructor {\n    new (message?: string, options?: ErrorOptions): TypeError;\n    (message?: string, options?: ErrorOptions): TypeError;\n}\n\ninterface URIErrorConstructor {\n    new (message?: string, options?: ErrorOptions): URIError;\n    (message?: string, options?: ErrorOptions): URIError;\n}\n\ninterface AggregateErrorConstructor {\n    new (\n        errors: Iterable<any>,\n        message?: string,\n        options?: ErrorOptions,\n    ): AggregateError;\n    (\n        errors: Iterable<any>,\n        message?: string,\n        options?: ErrorOptions,\n    ): AggregateError;\n}\n'],["file:///node_modules/typescript/lib/lib.es2022.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2022" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2022.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    /**\n     * An object with some or all properties of the `Intl.Segmenter` constructor `options` parameter.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/Segmenter#parameters)\n     */\n    interface SegmenterOptions {\n        /** The locale matching algorithm to use. For information about this option, see [Intl page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation). */\n        localeMatcher?: "best fit" | "lookup" | undefined;\n        /** The type of input to be split */\n        granularity?: "grapheme" | "word" | "sentence" | undefined;\n    }\n\n    interface Segmenter {\n        /**\n         * Returns `Segments` object containing the segments of the input string, using the segmenter\'s locale and granularity.\n         *\n         * @param input - The text to be segmented as a `string`.\n         *\n         * @returns A new iterable Segments object containing the segments of the input string, using the segmenter\'s locale and granularity.\n         */\n        segment(input: string): Segments;\n        resolvedOptions(): ResolvedSegmenterOptions;\n    }\n\n    interface ResolvedSegmenterOptions {\n        locale: string;\n        granularity: "grapheme" | "word" | "sentence";\n    }\n\n    interface SegmentIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n        [Symbol.iterator](): SegmentIterator<T>;\n    }\n\n    interface Segments {\n        /**\n         * Returns an object describing the segment in the original string that includes the code unit at a specified index.\n         *\n         * @param codeUnitIndex - A number specifying the index of the code unit in the original input string. If the value is omitted, it defaults to `0`.\n         */\n        containing(codeUnitIndex?: number): SegmentData;\n\n        /** Returns an iterator to iterate over the segments. */\n        [Symbol.iterator](): SegmentIterator<SegmentData>;\n    }\n\n    interface SegmentData {\n        /** A string containing the segment extracted from the original input string. */\n        segment: string;\n        /** The code unit index in the original input string at which the segment begins. */\n        index: number;\n        /** The complete input string that was segmented. */\n        input: string;\n        /**\n         * A boolean value only if granularity is "word"; otherwise, undefined.\n         * If granularity is "word", then isWordLike is true when the segment is word-like (i.e., consists of letters/numbers/ideographs/etc.); otherwise, false.\n         */\n        isWordLike?: boolean;\n    }\n\n    const Segmenter: {\n        prototype: Segmenter;\n\n        /**\n         * Creates a new `Intl.Segmenter` object.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/Segmenter#parameters)\n         *  with some or all options of `SegmenterOptions`.\n         *\n         * @returns [Intl.Segmenter](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segments) object.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter).\n         */\n        new (locales?: LocalesArgument, options?: SegmenterOptions): Segmenter;\n\n        /**\n         * Returns an array containing those of the provided locales that are supported without having to fall back to the runtime\'s default locale.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options An [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/supportedLocalesOf#parameters).\n         *  with some or all possible options.\n         *\n         * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/supportedLocalesOf)\n         */\n        supportedLocalesOf(locales: LocalesArgument, options?: Pick<SegmenterOptions, "localeMatcher">): UnicodeBCP47LocaleIdentifier[];\n    };\n\n    /**\n     * Returns a sorted array of the supported collation, calendar, currency, numbering system, timezones, and units by the implementation.\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf)\n     *\n     * @param key A string indicating the category of values to return.\n     * @returns A sorted array of the supported values.\n     */\n    function supportedValuesOf(key: "calendar" | "collation" | "currency" | "numberingSystem" | "timeZone" | "unit"): string[];\n}\n'],["file:///node_modules/typescript/lib/lib.es2022.object.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ObjectConstructor {\n    /**\n     * Determines whether an object has a property with the specified name.\n     * @param o An object.\n     * @param v A property name.\n     */\n    hasOwn(o: object, v: PropertyKey): boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2022.regexp.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface RegExpMatchArray {\n    indices?: RegExpIndicesArray;\n}\n\ninterface RegExpExecArray {\n    indices?: RegExpIndicesArray;\n}\n\ninterface RegExpIndicesArray extends Array<[number, number]> {\n    groups?: {\n        [key: string]: [number, number];\n    };\n}\n\ninterface RegExp {\n    /**\n     * Returns a Boolean value indicating the state of the hasIndices flag (d) used with a regular expression.\n     * Default is false. Read-only.\n     */\n    readonly hasIndices: boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2022.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /**\n     * Returns a new String consisting of the single UTF-16 code unit located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): string | undefined;\n}\n'],["file:///node_modules/typescript/lib/lib.es2023.array.d.ts","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface Array<T> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S | undefined;\n    findLast(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): number;\n\n    /**\n     * Returns a copy of an array with its elements reversed.\n     */\n    toReversed(): T[];\n\n    /**\n     * Returns a copy of an array with its elements sorted.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, UTF-16 code unit order.\n     * ```ts\n     * [11, 2, 22, 1].toSorted((a, b) => a - b) // [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: T, b: T) => number): T[];\n\n    /**\n     * Copies an array and removes elements and, if necessary, inserts new elements in their place. Returns the copied array.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @param items Elements to insert into the copied array in place of the deleted elements.\n     * @returns The copied array.\n     */\n    toSpliced(start: number, deleteCount: number, ...items: T[]): T[];\n\n    /**\n     * Copies an array and removes elements while returning the remaining elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @returns A copy of the original array with the remaining elements.\n     */\n    toSpliced(start: number, deleteCount?: number): T[];\n\n    /**\n     * Copies an array, then overwrites the value at the provided index with the\n     * given value. If the index is negative, then it replaces from the end\n     * of the array.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to write into the copied array.\n     * @returns The copied array with the updated value.\n     */\n    with(index: number, value: T): T[];\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends T>(\n        predicate: (value: T, index: number, array: readonly T[]) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (value: T, index: number, array: readonly T[]) => unknown,\n        thisArg?: any,\n    ): T | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (value: T, index: number, array: readonly T[]) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copied array with all of its elements reversed.\n     */\n    toReversed(): T[];\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, UTF-16 code unit order.\n     * ```ts\n     * [11, 2, 22, 1].toSorted((a, b) => a - b) // [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: T, b: T) => number): T[];\n\n    /**\n     * Copies an array and removes elements while, if necessary, inserting new elements in their place, returning the remaining elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @param items Elements to insert into the copied array in place of the deleted elements.\n     * @returns A copy of the original array with the remaining elements.\n     */\n    toSpliced(start: number, deleteCount: number, ...items: T[]): T[];\n\n    /**\n     * Copies an array and removes elements while returning the remaining elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @returns A copy of the original array with the remaining elements.\n     */\n    toSpliced(start: number, deleteCount?: number): T[];\n\n    /**\n     * Copies an array, then overwrites the value at the provided index with the\n     * given value. If the index is negative, then it replaces from the end\n     * of the array\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: T): T[];\n}\n\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Int8Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Int8Array.from([11, 2, 22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Int8Array(4) [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Int8Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Int8Array<ArrayBuffer>;\n}\n\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Uint8Array.from([11, 2, 22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Uint8Array(4) [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Uint8Array<ArrayBuffer>;\n}\n\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Uint8ClampedArray.from([11, 2, 22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Uint8ClampedArray(4) [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Uint8ClampedArray<ArrayBuffer>;\n}\n\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Int16Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Int16Array.from([11, 2, -22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Int16Array(4) [-22, 1, 2, 11]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Int16Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Int16Array<ArrayBuffer>;\n}\n\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Uint16Array.from([11, 2, 22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Uint16Array(4) [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Uint16Array<ArrayBuffer>;\n}\n\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (value: number, index: number, array: this) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Int32Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Int32Array.from([11, 2, -22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Int32Array(4) [-22, 1, 2, 11]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Int32Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Int32Array<ArrayBuffer>;\n}\n\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Uint32Array.from([11, 2, 22, 1]);\n     * myNums.toSorted((a, b) => a - b) // Uint32Array(4) [1, 2, 11, 22]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Uint32Array<ArrayBuffer>;\n}\n\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Float32Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Float32Array.from([11.25, 2, -22.5, 1]);\n     * myNums.toSorted((a, b) => a - b) // Float32Array(4) [-22.5, 1, 2, 11.5]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Float32Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Float32Array<ArrayBuffer>;\n}\n\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Float64Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Float64Array.from([11.25, 2, -22.5, 1]);\n     * myNums.toSorted((a, b) => a - b) // Float64Array(4) [-22.5, 1, 2, 11.5]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Float64Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Float64Array<ArrayBuffer>;\n}\n\ninterface BigInt64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends bigint>(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): bigint | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = BigInt64Array.from([11n, 2n, -22n, 1n]);\n     * myNums.toSorted((a, b) => Number(a - b)) // BigInt64Array(4) [-22n, 1n, 2n, 11n]\n     * ```\n     */\n    toSorted(compareFn?: (a: bigint, b: bigint) => number): BigInt64Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given bigint at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: bigint): BigInt64Array<ArrayBuffer>;\n}\n\ninterface BigUint64Array<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends bigint>(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): bigint | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: bigint,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = BigUint64Array.from([11n, 2n, 22n, 1n]);\n     * myNums.toSorted((a, b) => Number(a - b)) // BigUint64Array(4) [1n, 2n, 11n, 22n]\n     * ```\n     */\n    toSorted(compareFn?: (a: bigint, b: bigint) => number): BigUint64Array<ArrayBuffer>;\n\n    /**\n     * Copies the array and inserts the given bigint at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: bigint): BigUint64Array<ArrayBuffer>;\n}\n"],["file:///node_modules/typescript/lib/lib.es2023.collection.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface WeakKeyTypes {\n    symbol: symbol;\n}\n'],["file:///node_modules/typescript/lib/lib.es2023.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2022" />\n/// <reference lib="es2023.array" />\n/// <reference lib="es2023.collection" />\n/// <reference lib="es2023.intl" />\n'],["file:///node_modules/typescript/lib/lib.es2023.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2023" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2023.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    interface NumberFormatOptionsUseGroupingRegistry {\n        min2: never;\n        auto: never;\n        always: never;\n    }\n\n    interface NumberFormatOptionsSignDisplayRegistry {\n        negative: never;\n    }\n\n    interface NumberFormatOptions {\n        roundingPriority?: "auto" | "morePrecision" | "lessPrecision" | undefined;\n        roundingIncrement?: 1 | 2 | 5 | 10 | 20 | 25 | 50 | 100 | 200 | 250 | 500 | 1000 | 2000 | 2500 | 5000 | undefined;\n        roundingMode?: "ceil" | "floor" | "expand" | "trunc" | "halfCeil" | "halfFloor" | "halfExpand" | "halfTrunc" | "halfEven" | undefined;\n        trailingZeroDisplay?: "auto" | "stripIfInteger" | undefined;\n    }\n\n    interface ResolvedNumberFormatOptions {\n        roundingPriority: "auto" | "morePrecision" | "lessPrecision";\n        roundingMode: "ceil" | "floor" | "expand" | "trunc" | "halfCeil" | "halfFloor" | "halfExpand" | "halfTrunc" | "halfEven";\n        roundingIncrement: 1 | 2 | 5 | 10 | 20 | 25 | 50 | 100 | 200 | 250 | 500 | 1000 | 2000 | 2500 | 5000;\n        trailingZeroDisplay: "auto" | "stripIfInteger";\n    }\n\n    interface NumberRangeFormatPart extends NumberFormatPart {\n        source: "startRange" | "endRange" | "shared";\n    }\n\n    type StringNumericLiteral = `${number}` | "Infinity" | "-Infinity" | "+Infinity";\n\n    interface NumberFormat {\n        format(value: number | bigint | StringNumericLiteral): string;\n        formatToParts(value: number | bigint | StringNumericLiteral): NumberFormatPart[];\n        formatRange(start: number | bigint | StringNumericLiteral, end: number | bigint | StringNumericLiteral): string;\n        formatRangeToParts(start: number | bigint | StringNumericLiteral, end: number | bigint | StringNumericLiteral): NumberRangeFormatPart[];\n    }\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.arraybuffer.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ArrayBuffer {\n    /**\n     * If this ArrayBuffer is resizable, returns the maximum byte length given during construction; returns the byte length if not.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/maxByteLength)\n     */\n    get maxByteLength(): number;\n\n    /**\n     * Returns true if this ArrayBuffer can be resized.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/resizable)\n     */\n    get resizable(): boolean;\n\n    /**\n     * Resizes the ArrayBuffer to the specified size (in bytes).\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/resize)\n     */\n    resize(newByteLength?: number): void;\n\n    /**\n     * Returns a boolean indicating whether or not this buffer has been detached (transferred).\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/detached)\n     */\n    get detached(): boolean;\n\n    /**\n     * Creates a new ArrayBuffer with the same byte content as this buffer, then detaches this buffer.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer)\n     */\n    transfer(newByteLength?: number): ArrayBuffer;\n\n    /**\n     * Creates a new non-resizable ArrayBuffer with the same byte content as this buffer, then detaches this buffer.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transferToFixedLength)\n     */\n    transferToFixedLength(newByteLength?: number): ArrayBuffer;\n}\n\ninterface ArrayBufferConstructor {\n    new (byteLength: number, options?: { maxByteLength?: number; }): ArrayBuffer;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.collection.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface MapConstructor {\n    /**\n     * Groups members of an iterable according to the return value of the passed callback.\n     * @param items An iterable.\n     * @param keySelector A callback which will be invoked for each item in items.\n     */\n    groupBy<K, T>(\n        items: Iterable<T>,\n        keySelector: (item: T, index: number) => K,\n    ): Map<K, T[]>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2023" />\n/// <reference lib="es2024.arraybuffer" />\n/// <reference lib="es2024.collection" />\n/// <reference lib="es2024.object" />\n/// <reference lib="es2024.promise" />\n/// <reference lib="es2024.regexp" />\n/// <reference lib="es2024.sharedmemory" />\n/// <reference lib="es2024.string" />\n'],["file:///node_modules/typescript/lib/lib.es2024.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2024" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.es2024.object.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ObjectConstructor {\n    /**\n     * Groups members of an iterable according to the return value of the passed callback.\n     * @param items An iterable.\n     * @param keySelector A callback which will be invoked for each item in items.\n     */\n    groupBy<K extends PropertyKey, T>(\n        items: Iterable<T>,\n        keySelector: (item: T, index: number) => K,\n    ): Partial<Record<K, T[]>>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface PromiseWithResolvers<T> {\n    promise: Promise<T>;\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (reason?: any) => void;\n}\n\ninterface PromiseConstructor {\n    /**\n     * Creates a new Promise and returns it in an object, along with its resolve and reject functions.\n     * @returns An object with the properties `promise`, `resolve`, and `reject`.\n     *\n     * ```ts\n     * const { promise, resolve, reject } = Promise.withResolvers<T>();\n     * ```\n     */\n    withResolvers<T>(): PromiseWithResolvers<T>;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.regexp.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface RegExp {\n    /**\n     * Returns a Boolean value indicating the state of the unicodeSets flag (v) used with a regular expression.\n     * Default is false. Read-only.\n     */\n    readonly unicodeSets: boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.sharedmemory.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2020.bigint" />\n\ninterface Atomics {\n    /**\n     * A non-blocking, asynchronous version of wait which is usable on the main thread.\n     * Waits asynchronously on a shared memory location and returns a Promise\n     * @param typedArray A shared Int32Array or BigInt64Array.\n     * @param index The position in the typedArray to wait on.\n     * @param value The expected value to test.\n     * @param [timeout] The expected value to test.\n     */\n    waitAsync(typedArray: Int32Array, index: number, value: number, timeout?: number): { async: false; value: "not-equal" | "timed-out"; } | { async: true; value: Promise<"ok" | "timed-out">; };\n\n    /**\n     * A non-blocking, asynchronous version of wait which is usable on the main thread.\n     * Waits asynchronously on a shared memory location and returns a Promise\n     * @param typedArray A shared Int32Array or BigInt64Array.\n     * @param index The position in the typedArray to wait on.\n     * @param value The expected value to test.\n     * @param [timeout] The expected value to test.\n     */\n    waitAsync(typedArray: BigInt64Array, index: number, value: bigint, timeout?: number): { async: false; value: "not-equal" | "timed-out"; } | { async: true; value: Promise<"ok" | "timed-out">; };\n}\n\ninterface SharedArrayBuffer {\n    /**\n     * Returns true if this SharedArrayBuffer can be grown.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/growable)\n     */\n    get growable(): boolean;\n\n    /**\n     * If this SharedArrayBuffer is growable, returns the maximum byte length given during construction; returns the byte length if not.\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/maxByteLength)\n     */\n    get maxByteLength(): number;\n\n    /**\n     * Grows the SharedArrayBuffer to the specified size (in bytes).\n     *\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/grow)\n     */\n    grow(newByteLength?: number): void;\n}\n\ninterface SharedArrayBufferConstructor {\n    new (byteLength: number, options?: { maxByteLength?: number; }): SharedArrayBuffer;\n}\n'],["file:///node_modules/typescript/lib/lib.es2024.string.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /**\n     * Returns true if all leading surrogates and trailing surrogates appear paired and in order.\n     */\n    isWellFormed(): boolean;\n\n    /**\n     * Returns a string where all lone or out-of-order surrogates have been replaced by the Unicode replacement character (U+FFFD).\n     */\n    toWellFormed(): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es5.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="decorators" />\n/// <reference lib="decorators.legacy" />\n\n/////////////////////////////\n/// ECMAScript APIs\n/////////////////////////////\n\ndeclare var NaN: number;\ndeclare var Infinity: number;\n\n/**\n * Evaluates JavaScript code and executes it.\n * @param x A String value that contains valid JavaScript code.\n */\ndeclare function eval(x: string): any;\n\n/**\n * Converts a string to an integer.\n * @param string A string to convert into a number.\n * @param radix A value between 2 and 36 that specifies the base of the number in `string`.\n * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\n * All other strings are considered decimal.\n */\ndeclare function parseInt(string: string, radix?: number): number;\n\n/**\n * Converts a string to a floating-point number.\n * @param string A string that contains a floating-point number.\n */\ndeclare function parseFloat(string: string): number;\n\n/**\n * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\n * @param number A numeric value.\n */\ndeclare function isNaN(number: number): boolean;\n\n/**\n * Determines whether a supplied number is finite.\n * @param number Any numeric value.\n */\ndeclare function isFinite(number: number): boolean;\n\n/**\n * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\n * @param encodedURI A value representing an encoded URI.\n */\ndeclare function decodeURI(encodedURI: string): string;\n\n/**\n * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n * @param encodedURIComponent A value representing an encoded URI component.\n */\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\n\n/**\n * Encodes a text string as a valid Uniform Resource Identifier (URI)\n * @param uri A value representing an unencoded URI.\n */\ndeclare function encodeURI(uri: string): string;\n\n/**\n * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\n * @param uriComponent A value representing an unencoded URI component.\n */\ndeclare function encodeURIComponent(uriComponent: string | number | boolean): string;\n\n/**\n * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\n * @deprecated A legacy feature for browser compatibility\n * @param string A string value\n */\ndeclare function escape(string: string): string;\n\n/**\n * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\n * @deprecated A legacy feature for browser compatibility\n * @param string A string value\n */\ndeclare function unescape(string: string): string;\n\ninterface Symbol {\n    /** Returns a string representation of an object. */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): symbol;\n}\n\ndeclare type PropertyKey = string | number | symbol;\n\ninterface PropertyDescriptor {\n    configurable?: boolean;\n    enumerable?: boolean;\n    value?: any;\n    writable?: boolean;\n    get?(): any;\n    set?(v: any): void;\n}\n\ninterface PropertyDescriptorMap {\n    [key: PropertyKey]: PropertyDescriptor;\n}\n\ninterface Object {\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\n    constructor: Function;\n\n    /** Returns a string representation of an object. */\n    toString(): string;\n\n    /** Returns a date converted to a string using the current locale. */\n    toLocaleString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Object;\n\n    /**\n     * Determines whether an object has a property with the specified name.\n     * @param v A property name.\n     */\n    hasOwnProperty(v: PropertyKey): boolean;\n\n    /**\n     * Determines whether an object exists in another object\'s prototype chain.\n     * @param v Another object whose prototype chain is to be checked.\n     */\n    isPrototypeOf(v: Object): boolean;\n\n    /**\n     * Determines whether a specified property is enumerable.\n     * @param v A property name.\n     */\n    propertyIsEnumerable(v: PropertyKey): boolean;\n}\n\ninterface ObjectConstructor {\n    new (value?: any): Object;\n    (): any;\n    (value: any): any;\n\n    /** A reference to the prototype for a class of objects. */\n    readonly prototype: Object;\n\n    /**\n     * Returns the prototype of an object.\n     * @param o The object that references the prototype.\n     */\n    getPrototypeOf(o: any): any;\n\n    /**\n     * Gets the own property descriptor of the specified object.\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object\'s prototype.\n     * @param o Object that contains the property.\n     * @param p Name of the property.\n     */\n    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;\n\n    /**\n     * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n     * on that object, and are not inherited from the object\'s prototype. The properties of an object include both fields (objects) and functions.\n     * @param o Object that contains the own properties.\n     */\n    getOwnPropertyNames(o: any): string[];\n\n    /**\n     * Creates an object that has the specified prototype or that has null prototype.\n     * @param o Object to use as a prototype. May be null.\n     */\n    create(o: object | null): any;\n\n    /**\n     * Creates an object that has the specified prototype, and that optionally contains specified properties.\n     * @param o Object to use as a prototype. May be null\n     * @param properties JavaScript object that contains one or more property descriptors.\n     */\n    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;\n\n    /**\n     * Adds a property to an object, or modifies attributes of an existing property.\n     * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\n     * @param p The property name.\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\n     */\n    defineProperty<T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): T;\n\n    /**\n     * Adds one or more properties to an object, and/or modifies attributes of existing properties.\n     * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\n     * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\n     */\n    defineProperties<T>(o: T, properties: PropertyDescriptorMap & ThisType<any>): T;\n\n    /**\n     * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    seal<T>(o: T): T;\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param f Object on which to lock the attributes.\n     */\n    freeze<T extends Function>(f: T): T;\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    freeze<T extends { [idx: string]: U | null | undefined | object; }, U extends string | bigint | number | boolean | symbol>(o: T): Readonly<T>;\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    freeze<T>(o: T): Readonly<T>;\n\n    /**\n     * Prevents the addition of new properties to an object.\n     * @param o Object to make non-extensible.\n     */\n    preventExtensions<T>(o: T): T;\n\n    /**\n     * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\n     * @param o Object to test.\n     */\n    isSealed(o: any): boolean;\n\n    /**\n     * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\n     * @param o Object to test.\n     */\n    isFrozen(o: any): boolean;\n\n    /**\n     * Returns a value that indicates whether new properties can be added to an object.\n     * @param o Object to test.\n     */\n    isExtensible(o: any): boolean;\n\n    /**\n     * Returns the names of the enumerable string properties and methods of an object.\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    keys(o: object): string[];\n}\n\n/**\n * Provides functionality common to all JavaScript objects.\n */\ndeclare var Object: ObjectConstructor;\n\n/**\n * Creates a new function.\n */\ninterface Function {\n    /**\n     * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\n     * @param thisArg The object to be used as the this object.\n     * @param argArray A set of arguments to be passed to the function.\n     */\n    apply(this: Function, thisArg: any, argArray?: any): any;\n\n    /**\n     * Calls a method of an object, substituting another object for the current object.\n     * @param thisArg The object to be used as the current object.\n     * @param argArray A list of arguments to be passed to the method.\n     */\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg An object to which the this keyword can refer inside the new function.\n     * @param argArray A list of arguments to be passed to the new function.\n     */\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\n\n    /** Returns a string representation of a function. */\n    toString(): string;\n\n    prototype: any;\n    readonly length: number;\n\n    // Non-standard extensions\n    arguments: any;\n    caller: Function;\n}\n\ninterface FunctionConstructor {\n    /**\n     * Creates a new function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): Function;\n    (...args: string[]): Function;\n    readonly prototype: Function;\n}\n\ndeclare var Function: FunctionConstructor;\n\n/**\n * Extracts the type of the \'this\' parameter of a function type, or \'unknown\' if the function type has no \'this\' parameter.\n */\ntype ThisParameterType<T> = T extends (this: infer U, ...args: never) => any ? U : unknown;\n\n/**\n * Removes the \'this\' parameter from a function type.\n */\ntype OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer A) => infer R ? (...args: A) => R : T;\n\ninterface CallableFunction extends Function {\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     */\n    apply<T, R>(this: (this: T) => R, thisArg: T): R;\n\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args An array of argument values to be passed to the function.\n     */\n    apply<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, args: A): R;\n\n    /**\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args Argument values to be passed to the function.\n     */\n    call<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, ...args: A): R;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     */\n    bind<T>(this: T, thisArg: ThisParameterType<T>): OmitThisParameter<T>;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     * @param args Arguments to bind to the parameters of the function.\n     */\n    bind<T, A extends any[], B extends any[], R>(this: (this: T, ...args: [...A, ...B]) => R, thisArg: T, ...args: A): (...args: B) => R;\n}\n\ninterface NewableFunction extends Function {\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     */\n    apply<T>(this: new () => T, thisArg: T): void;\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args An array of argument values to be passed to the function.\n     */\n    apply<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, args: A): void;\n\n    /**\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args Argument values to be passed to the function.\n     */\n    call<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, ...args: A): void;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     */\n    bind<T>(this: T, thisArg: any): T;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     * @param args Arguments to bind to the parameters of the function.\n     */\n    bind<A extends any[], B extends any[], R>(this: new (...args: [...A, ...B]) => R, thisArg: any, ...args: A): new (...args: B) => R;\n}\n\ninterface IArguments {\n    [index: number]: any;\n    length: number;\n    callee: Function;\n}\n\ninterface String {\n    /** Returns a string representation of a string. */\n    toString(): string;\n\n    /**\n     * Returns the character at the specified index.\n     * @param pos The zero-based index of the desired character.\n     */\n    charAt(pos: number): string;\n\n    /**\n     * Returns the Unicode value of the character at the specified location.\n     * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\n     */\n    charCodeAt(index: number): number;\n\n    /**\n     * Returns a string that contains the concatenation of two or more strings.\n     * @param strings The strings to append to the end of the string.\n     */\n    concat(...strings: string[]): string;\n\n    /**\n     * Returns the position of the first occurrence of a substring.\n     * @param searchString The substring to search for in the string\n     * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\n     */\n    indexOf(searchString: string, position?: number): number;\n\n    /**\n     * Returns the last occurrence of a substring in the string.\n     * @param searchString The substring to search for.\n     * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\n     */\n    lastIndexOf(searchString: string, position?: number): number;\n\n    /**\n     * Determines whether two strings are equivalent in the current locale.\n     * @param that String to compare to target string\n     */\n    localeCompare(that: string): number;\n\n    /**\n     * Matches a string with a regular expression, and returns an array containing the results of that search.\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\n     */\n    match(regexp: string | RegExp): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using a regular expression or search string.\n     * @param searchValue A string or regular expression to search for.\n     * @param replaceValue A string containing the text to replace. When the {@linkcode searchValue} is a `RegExp`, all matches are replaced if the `g` flag is set (or only those matches at the beginning, if the `y` flag is also present). Otherwise, only the first match of {@linkcode searchValue} is replaced.\n     */\n    replace(searchValue: string | RegExp, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replacer A function that returns the replacement text.\n     */\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\n\n    /**\n     * Finds the first substring match in a regular expression search.\n     * @param regexp The regular expression pattern and applicable flags.\n     */\n    search(regexp: string | RegExp): number;\n\n    /**\n     * Returns a section of a string.\n     * @param start The index to the beginning of the specified portion of stringObj.\n     * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\n     * If this value is not specified, the substring continues to the end of stringObj.\n     */\n    slice(start?: number, end?: number): string;\n\n    /**\n     * Split a string into substrings using the specified separator and return them as an array.\n     * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n     * @param limit A value used to limit the number of elements returned in the array.\n     */\n    split(separator: string | RegExp, limit?: number): string[];\n\n    /**\n     * Returns the substring at the specified location within a String object.\n     * @param start The zero-based index number indicating the beginning of the substring.\n     * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\n     * If end is omitted, the characters from start through the end of the original string are returned.\n     */\n    substring(start: number, end?: number): string;\n\n    /** Converts all the alphabetic characters in a string to lowercase. */\n    toLowerCase(): string;\n\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale. */\n    toLocaleLowerCase(locales?: string | string[]): string;\n\n    /** Converts all the alphabetic characters in a string to uppercase. */\n    toUpperCase(): string;\n\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale. */\n    toLocaleUpperCase(locales?: string | string[]): string;\n\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\n    trim(): string;\n\n    /** Returns the length of a String object. */\n    readonly length: number;\n\n    // IE extensions\n    /**\n     * Gets a substring beginning at the specified location and having the specified length.\n     * @deprecated A legacy feature for browser compatibility\n     * @param from The starting position of the desired substring. The index of the first character in the string is zero.\n     * @param length The number of characters to include in the returned substring.\n     */\n    substr(from: number, length?: number): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): string;\n\n    readonly [index: number]: string;\n}\n\ninterface StringConstructor {\n    new (value?: any): String;\n    (value?: any): string;\n    readonly prototype: String;\n    fromCharCode(...codes: number[]): string;\n}\n\n/**\n * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\n */\ndeclare var String: StringConstructor;\n\ninterface Boolean {\n    /** Returns the primitive value of the specified object. */\n    valueOf(): boolean;\n}\n\ninterface BooleanConstructor {\n    new (value?: any): Boolean;\n    <T>(value?: T): boolean;\n    readonly prototype: Boolean;\n}\n\ndeclare var Boolean: BooleanConstructor;\n\ninterface Number {\n    /**\n     * Returns a string representation of an object.\n     * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\n     */\n    toString(radix?: number): string;\n\n    /**\n     * Returns a string representing a number in fixed-point notation.\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\n     */\n    toFixed(fractionDigits?: number): string;\n\n    /**\n     * Returns a string containing a number represented in exponential notation.\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\n     */\n    toExponential(fractionDigits?: number): string;\n\n    /**\n     * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n     * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\n     */\n    toPrecision(precision?: number): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): number;\n}\n\ninterface NumberConstructor {\n    new (value?: any): Number;\n    (value?: any): number;\n    readonly prototype: Number;\n\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\n    readonly MAX_VALUE: number;\n\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\n    readonly MIN_VALUE: number;\n\n    /**\n     * A value that is not a number.\n     * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\n     */\n    readonly NaN: number;\n\n    /**\n     * A value that is less than the largest negative number that can be represented in JavaScript.\n     * JavaScript displays NEGATIVE_INFINITY values as -infinity.\n     */\n    readonly NEGATIVE_INFINITY: number;\n\n    /**\n     * A value greater than the largest number that can be represented in JavaScript.\n     * JavaScript displays POSITIVE_INFINITY values as infinity.\n     */\n    readonly POSITIVE_INFINITY: number;\n}\n\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\ndeclare var Number: NumberConstructor;\n\ninterface TemplateStringsArray extends ReadonlyArray<string> {\n    readonly raw: readonly string[];\n}\n\n/**\n * The type of `import.meta`.\n *\n * If you need to declare that a given property exists on `import.meta`,\n * this type may be augmented via interface merging.\n */\ninterface ImportMeta {\n}\n\n/**\n * The type for the optional second argument to `import()`.\n *\n * If your host environment supports additional options, this type may be\n * augmented via interface merging.\n */\ninterface ImportCallOptions {\n    /** @deprecated*/ assert?: ImportAssertions;\n    with?: ImportAttributes;\n}\n\n/**\n * The type for the `assert` property of the optional second argument to `import()`.\n * @deprecated\n */\ninterface ImportAssertions {\n    [key: string]: string;\n}\n\n/**\n * The type for the `with` property of the optional second argument to `import()`.\n */\ninterface ImportAttributes {\n    [key: string]: string;\n}\n\ninterface Math {\n    /** The mathematical constant e. This is Euler\'s number, the base of natural logarithms. */\n    readonly E: number;\n    /** The natural logarithm of 10. */\n    readonly LN10: number;\n    /** The natural logarithm of 2. */\n    readonly LN2: number;\n    /** The base-2 logarithm of e. */\n    readonly LOG2E: number;\n    /** The base-10 logarithm of e. */\n    readonly LOG10E: number;\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\n    readonly PI: number;\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\n    readonly SQRT1_2: number;\n    /** The square root of 2. */\n    readonly SQRT2: number;\n    /**\n     * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\n     * For example, the absolute value of -5 is the same as the absolute value of 5.\n     * @param x A numeric expression for which the absolute value is needed.\n     */\n    abs(x: number): number;\n    /**\n     * Returns the arc cosine (or inverse cosine) of a number.\n     * @param x A numeric expression.\n     */\n    acos(x: number): number;\n    /**\n     * Returns the arcsine of a number.\n     * @param x A numeric expression.\n     */\n    asin(x: number): number;\n    /**\n     * Returns the arctangent of a number.\n     * @param x A numeric expression for which the arctangent is needed.\n     */\n    atan(x: number): number;\n    /**\n     * Returns the angle (in radians) between the X axis and the line going through both the origin and the given point.\n     * @param y A numeric expression representing the cartesian y-coordinate.\n     * @param x A numeric expression representing the cartesian x-coordinate.\n     */\n    atan2(y: number, x: number): number;\n    /**\n     * Returns the smallest integer greater than or equal to its numeric argument.\n     * @param x A numeric expression.\n     */\n    ceil(x: number): number;\n    /**\n     * Returns the cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    cos(x: number): number;\n    /**\n     * Returns e (the base of natural logarithms) raised to a power.\n     * @param x A numeric expression representing the power of e.\n     */\n    exp(x: number): number;\n    /**\n     * Returns the greatest integer less than or equal to its numeric argument.\n     * @param x A numeric expression.\n     */\n    floor(x: number): number;\n    /**\n     * Returns the natural logarithm (base e) of a number.\n     * @param x A numeric expression.\n     */\n    log(x: number): number;\n    /**\n     * Returns the larger of a set of supplied numeric expressions.\n     * @param values Numeric expressions to be evaluated.\n     */\n    max(...values: number[]): number;\n    /**\n     * Returns the smaller of a set of supplied numeric expressions.\n     * @param values Numeric expressions to be evaluated.\n     */\n    min(...values: number[]): number;\n    /**\n     * Returns the value of a base expression taken to a specified power.\n     * @param x The base value of the expression.\n     * @param y The exponent value of the expression.\n     */\n    pow(x: number, y: number): number;\n    /** Returns a pseudorandom number between 0 and 1. */\n    random(): number;\n    /**\n     * Returns a supplied numeric expression rounded to the nearest integer.\n     * @param x The value to be rounded to the nearest integer.\n     */\n    round(x: number): number;\n    /**\n     * Returns the sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    sin(x: number): number;\n    /**\n     * Returns the square root of a number.\n     * @param x A numeric expression.\n     */\n    sqrt(x: number): number;\n    /**\n     * Returns the tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    tan(x: number): number;\n}\n/** An intrinsic object that provides basic mathematics functionality and constants. */\ndeclare var Math: Math;\n\n/** Enables basic storage and retrieval of dates and times. */\ninterface Date {\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\n    toString(): string;\n    /** Returns a date as a string value. */\n    toDateString(): string;\n    /** Returns a time as a string value. */\n    toTimeString(): string;\n    /** Returns a value as a string value appropriate to the host environment\'s current locale. */\n    toLocaleString(): string;\n    /** Returns a date as a string value appropriate to the host environment\'s current locale. */\n    toLocaleDateString(): string;\n    /** Returns a time as a string value appropriate to the host environment\'s current locale. */\n    toLocaleTimeString(): string;\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\n    valueOf(): number;\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\n    getTime(): number;\n    /** Gets the year, using local time. */\n    getFullYear(): number;\n    /** Gets the year using Universal Coordinated Time (UTC). */\n    getUTCFullYear(): number;\n    /** Gets the month, using local time. */\n    getMonth(): number;\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMonth(): number;\n    /** Gets the day-of-the-month, using local time. */\n    getDate(): number;\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\n    getUTCDate(): number;\n    /** Gets the day of the week, using local time. */\n    getDay(): number;\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\n    getUTCDay(): number;\n    /** Gets the hours in a date, using local time. */\n    getHours(): number;\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\n    getUTCHours(): number;\n    /** Gets the minutes of a Date object, using local time. */\n    getMinutes(): number;\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMinutes(): number;\n    /** Gets the seconds of a Date object, using local time. */\n    getSeconds(): number;\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCSeconds(): number;\n    /** Gets the milliseconds of a Date, using local time. */\n    getMilliseconds(): number;\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMilliseconds(): number;\n    /** Gets the difference in minutes between Universal Coordinated Time (UTC) and the time on the local computer. */\n    getTimezoneOffset(): number;\n    /**\n     * Sets the date and time value in the Date object.\n     * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\n     */\n    setTime(time: number): number;\n    /**\n     * Sets the milliseconds value in the Date object using local time.\n     * @param ms A numeric value equal to the millisecond value.\n     */\n    setMilliseconds(ms: number): number;\n    /**\n     * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\n     * @param ms A numeric value equal to the millisecond value.\n     */\n    setUTCMilliseconds(ms: number): number;\n\n    /**\n     * Sets the seconds value in the Date object using local time.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setSeconds(sec: number, ms?: number): number;\n    /**\n     * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCSeconds(sec: number, ms?: number): number;\n    /**\n     * Sets the minutes value in the Date object using local time.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setMinutes(min: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the hour value in the Date object using local time.\n     * @param hours A numeric value equal to the hours value.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\n     * @param hours A numeric value equal to the hours value.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the numeric day-of-the-month value of the Date object using local time.\n     * @param date A numeric value equal to the day of the month.\n     */\n    setDate(date: number): number;\n    /**\n     * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\n     * @param date A numeric value equal to the day of the month.\n     */\n    setUTCDate(date: number): number;\n    /**\n     * Sets the month value in the Date object using local time.\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\n     * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\n     */\n    setMonth(month: number, date?: number): number;\n    /**\n     * Sets the month value in the Date object using Universal Coordinated Time (UTC).\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\n     * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\n     */\n    setUTCMonth(month: number, date?: number): number;\n    /**\n     * Sets the year of the Date object using local time.\n     * @param year A numeric value for the year.\n     * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\n     * @param date A numeric value equal for the day of the month.\n     */\n    setFullYear(year: number, month?: number, date?: number): number;\n    /**\n     * Sets the year value in the Date object using Universal Coordinated Time (UTC).\n     * @param year A numeric value equal to the year.\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\n     * @param date A numeric value equal to the day of the month.\n     */\n    setUTCFullYear(year: number, month?: number, date?: number): number;\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\n    toUTCString(): string;\n    /** Returns a date as a string value in ISO format. */\n    toISOString(): string;\n    /** Used by the JSON.stringify method to enable the transformation of an object\'s data for JavaScript Object Notation (JSON) serialization. */\n    toJSON(key?: any): string;\n}\n\ninterface DateConstructor {\n    new (): Date;\n    new (value: number | string): Date;\n    /**\n     * Creates a new Date.\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\n     * @param monthIndex The month as a number between 0 and 11 (January to December).\n     * @param date The date as a number between 1 and 31.\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\n     */\n    new (year: number, monthIndex: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\n    (): string;\n    readonly prototype: Date;\n    /**\n     * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\n     * @param s A date string\n     */\n    parse(s: string): number;\n    /**\n     * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\n     * @param monthIndex The month as a number between 0 and 11 (January to December).\n     * @param date The date as a number between 1 and 31.\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\n     */\n    UTC(year: number, monthIndex: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\n    /** Returns the number of milliseconds elapsed since midnight, January 1, 1970 Universal Coordinated Time (UTC). */\n    now(): number;\n}\n\ndeclare var Date: DateConstructor;\n\ninterface RegExpMatchArray extends Array<string> {\n    /**\n     * The index of the search at which the result was found.\n     */\n    index?: number;\n    /**\n     * A copy of the search string.\n     */\n    input?: string;\n    /**\n     * The first match. This will always be present because `null` will be returned if there are no matches.\n     */\n    0: string;\n}\n\ninterface RegExpExecArray extends Array<string> {\n    /**\n     * The index of the search at which the result was found.\n     */\n    index: number;\n    /**\n     * A copy of the search string.\n     */\n    input: string;\n    /**\n     * The first match. This will always be present because `null` will be returned if there are no matches.\n     */\n    0: string;\n}\n\ninterface RegExp {\n    /**\n     * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\n     * @param string The String object or string literal on which to perform the search.\n     */\n    exec(string: string): RegExpExecArray | null;\n\n    /**\n     * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\n     * @param string String on which to perform the search.\n     */\n    test(string: string): boolean;\n\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\n    readonly source: string;\n\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\n    readonly global: boolean;\n\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\n    readonly ignoreCase: boolean;\n\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\n    readonly multiline: boolean;\n\n    lastIndex: number;\n\n    // Non-standard extensions\n    /** @deprecated A legacy feature for browser compatibility */\n    compile(pattern: string, flags?: string): this;\n}\n\ninterface RegExpConstructor {\n    new (pattern: RegExp | string): RegExp;\n    new (pattern: string, flags?: string): RegExp;\n    (pattern: RegExp | string): RegExp;\n    (pattern: string, flags?: string): RegExp;\n    readonly "prototype": RegExp;\n\n    // Non-standard extensions\n    /** @deprecated A legacy feature for browser compatibility */\n    "$1": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$2": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$3": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$4": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$5": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$6": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$7": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$8": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$9": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "input": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$_": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "lastMatch": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$&": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "lastParen": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$+": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "leftContext": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$`": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "rightContext": string;\n    /** @deprecated A legacy feature for browser compatibility */\n    "$\'": string;\n}\n\ndeclare var RegExp: RegExpConstructor;\n\ninterface Error {\n    name: string;\n    message: string;\n    stack?: string;\n}\n\ninterface ErrorConstructor {\n    new (message?: string): Error;\n    (message?: string): Error;\n    readonly prototype: Error;\n}\n\ndeclare var Error: ErrorConstructor;\n\ninterface EvalError extends Error {\n}\n\ninterface EvalErrorConstructor extends ErrorConstructor {\n    new (message?: string): EvalError;\n    (message?: string): EvalError;\n    readonly prototype: EvalError;\n}\n\ndeclare var EvalError: EvalErrorConstructor;\n\ninterface RangeError extends Error {\n}\n\ninterface RangeErrorConstructor extends ErrorConstructor {\n    new (message?: string): RangeError;\n    (message?: string): RangeError;\n    readonly prototype: RangeError;\n}\n\ndeclare var RangeError: RangeErrorConstructor;\n\ninterface ReferenceError extends Error {\n}\n\ninterface ReferenceErrorConstructor extends ErrorConstructor {\n    new (message?: string): ReferenceError;\n    (message?: string): ReferenceError;\n    readonly prototype: ReferenceError;\n}\n\ndeclare var ReferenceError: ReferenceErrorConstructor;\n\ninterface SyntaxError extends Error {\n}\n\ninterface SyntaxErrorConstructor extends ErrorConstructor {\n    new (message?: string): SyntaxError;\n    (message?: string): SyntaxError;\n    readonly prototype: SyntaxError;\n}\n\ndeclare var SyntaxError: SyntaxErrorConstructor;\n\ninterface TypeError extends Error {\n}\n\ninterface TypeErrorConstructor extends ErrorConstructor {\n    new (message?: string): TypeError;\n    (message?: string): TypeError;\n    readonly prototype: TypeError;\n}\n\ndeclare var TypeError: TypeErrorConstructor;\n\ninterface URIError extends Error {\n}\n\ninterface URIErrorConstructor extends ErrorConstructor {\n    new (message?: string): URIError;\n    (message?: string): URIError;\n    readonly prototype: URIError;\n}\n\ndeclare var URIError: URIErrorConstructor;\n\ninterface JSON {\n    /**\n     * Converts a JavaScript Object Notation (JSON) string into an object.\n     * @param text A valid JSON string.\n     * @param reviver A function that transforms the results. This function is called for each member of the object.\n     * If a member contains nested objects, the nested objects are transformed before the parent object is.\n     */\n    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;\n    /**\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n     * @param value A JavaScript value, usually an object or array, to be converted.\n     * @param replacer A function that transforms the results.\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n     */\n    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;\n    /**\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n     * @param value A JavaScript value, usually an object or array, to be converted.\n     * @param replacer An array of strings and numbers that acts as an approved list for selecting the object properties that will be stringified.\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n     */\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;\n}\n\n/**\n * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\n */\ndeclare var JSON: JSON;\n\n/////////////////////////////\n/// ECMAScript Array API (specially handled by compiler)\n/////////////////////////////\n\ninterface ReadonlyArray<T> {\n    /**\n     * Gets the length of the array. This is a number one higher than the highest element defined in an array.\n     */\n    readonly length: number;\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n    /**\n     * Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.\n     */\n    toLocaleString(): string;\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: ConcatArray<T>[]): T[];\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: (T | ConcatArray<T>)[]): T[];\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): T[];\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n     */\n    indexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Returns the index of the last occurrence of a specified value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n     */\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): this is readonly S[];\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void;\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\n\n    readonly [n: number]: T;\n}\n\ninterface ConcatArray<T> {\n    readonly length: number;\n    readonly [n: number]: T;\n    join(separator?: string): string;\n    slice(start?: number, end?: number): T[];\n}\n\ninterface Array<T> {\n    /**\n     * Gets or sets the length of the array. This is a number one higher than the highest index in the array.\n     */\n    length: number;\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n    /**\n     * Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.\n     */\n    toLocaleString(): string;\n    /**\n     * Removes the last element from an array and returns it.\n     * If the array is empty, undefined is returned and the array is not modified.\n     */\n    pop(): T | undefined;\n    /**\n     * Appends new elements to the end of an array, and returns the new length of the array.\n     * @param items New elements to add to the array.\n     */\n    push(...items: T[]): number;\n    /**\n     * Combines two or more arrays.\n     * This method returns a new array without modifying any existing arrays.\n     * @param items Additional arrays and/or items to add to the end of the array.\n     */\n    concat(...items: ConcatArray<T>[]): T[];\n    /**\n     * Combines two or more arrays.\n     * This method returns a new array without modifying any existing arrays.\n     * @param items Additional arrays and/or items to add to the end of the array.\n     */\n    concat(...items: (T | ConcatArray<T>)[]): T[];\n    /**\n     * Adds all the elements of an array into a string, separated by the specified separator string.\n     * @param separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n    /**\n     * Reverses the elements in an array in place.\n     * This method mutates the array and returns a reference to the same array.\n     */\n    reverse(): T[];\n    /**\n     * Removes the first element from an array and returns it.\n     * If the array is empty, undefined is returned and the array is not modified.\n     */\n    shift(): T | undefined;\n    /**\n     * Returns a copy of a section of an array.\n     * For both start and end, a negative index can be used to indicate an offset from the end of the array.\n     * For example, -2 refers to the second to last element of the array.\n     * @param start The beginning index of the specified portion of the array.\n     * If start is undefined, then the slice begins at index 0.\n     * @param end The end index of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     * If end is undefined, then the slice extends to the end of the array.\n     */\n    slice(start?: number, end?: number): T[];\n    /**\n     * Sorts an array in place.\n     * This method mutates the array and returns a reference to the same array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they\'re equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, UTF-16 code unit order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: T, b: T) => number): this;\n    /**\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @returns An array containing the elements that were deleted.\n     */\n    splice(start: number, deleteCount?: number): T[];\n    /**\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @param items Elements to insert into the array in place of the deleted elements.\n     * @returns An array containing the elements that were deleted.\n     */\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\n    /**\n     * Inserts new elements at the start of an array, and returns the new length of the array.\n     * @param items Elements to insert at the start of the array.\n     */\n    unshift(...items: T[]): number;\n    /**\n     * Returns the index of the first occurrence of a value in an array, or -1 if it is not present.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n     */\n    indexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.\n     */\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n\n    [n: number]: T;\n}\n\ninterface ArrayConstructor {\n    new (arrayLength?: number): any[];\n    new <T>(arrayLength: number): T[];\n    new <T>(...items: T[]): T[];\n    (arrayLength?: number): any[];\n    <T>(arrayLength: number): T[];\n    <T>(...items: T[]): T[];\n    isArray(arg: any): arg is any[];\n    readonly prototype: any[];\n}\n\ndeclare var Array: ArrayConstructor;\n\ninterface TypedPropertyDescriptor<T> {\n    enumerable?: boolean;\n    configurable?: boolean;\n    writable?: boolean;\n    value?: T;\n    get?: () => T;\n    set?: (value: T) => void;\n}\n\ndeclare type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;\n\ninterface PromiseLike<T> {\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;\n}\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface Promise<T> {\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\n\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\n}\n\n/**\n * Recursively unwraps the "awaited type" of a type. Non-promise "thenables" should resolve to `never`. This emulates the behavior of `await`.\n */\ntype Awaited<T> = T extends null | undefined ? T : // special case for `null | undefined` when not in `--strictNullChecks` mode\n    T extends object & { then(onfulfilled: infer F, ...args: infer _): any; } ? // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped\n        F extends ((value: infer V, ...args: infer _) => any) ? // if the argument to `then` is callable, extracts the first argument\n            Awaited<V> : // recursively unwrap the value\n        never : // the argument to `then` was not callable\n    T; // non-object or non-thenable\n\ninterface ArrayLike<T> {\n    readonly length: number;\n    readonly [n: number]: T;\n}\n\n/**\n * Make all properties in T optional\n */\ntype Partial<T> = {\n    [P in keyof T]?: T[P];\n};\n\n/**\n * Make all properties in T required\n */\ntype Required<T> = {\n    [P in keyof T]-?: T[P];\n};\n\n/**\n * Make all properties in T readonly\n */\ntype Readonly<T> = {\n    readonly [P in keyof T]: T[P];\n};\n\n/**\n * From T, pick a set of properties whose keys are in the union K\n */\ntype Pick<T, K extends keyof T> = {\n    [P in K]: T[P];\n};\n\n/**\n * Construct a type with a set of properties K of type T\n */\ntype Record<K extends keyof any, T> = {\n    [P in K]: T;\n};\n\n/**\n * Exclude from T those types that are assignable to U\n */\ntype Exclude<T, U> = T extends U ? never : T;\n\n/**\n * Extract from T those types that are assignable to U\n */\ntype Extract<T, U> = T extends U ? T : never;\n\n/**\n * Construct a type with the properties of T except for those in type K.\n */\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Exclude null and undefined from T\n */\ntype NonNullable<T> = T & {};\n\n/**\n * Obtain the parameters of a function type in a tuple\n */\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\n\n/**\n * Obtain the parameters of a constructor function type in a tuple\n */\ntype ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never;\n\n/**\n * Obtain the return type of a function type\n */\ntype ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;\n\n/**\n * Obtain the return type of a constructor function type\n */\ntype InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any;\n\n/**\n * Convert string literal type to uppercase\n */\ntype Uppercase<S extends string> = intrinsic;\n\n/**\n * Convert string literal type to lowercase\n */\ntype Lowercase<S extends string> = intrinsic;\n\n/**\n * Convert first character of string literal type to uppercase\n */\ntype Capitalize<S extends string> = intrinsic;\n\n/**\n * Convert first character of string literal type to lowercase\n */\ntype Uncapitalize<S extends string> = intrinsic;\n\n/**\n * Marker for non-inference type position\n */\ntype NoInfer<T> = intrinsic;\n\n/**\n * Marker for contextual \'this\' type\n */\ninterface ThisType<T> {}\n\n/**\n * Stores types to be used with WeakSet, WeakMap, WeakRef, and FinalizationRegistry\n */\ninterface WeakKeyTypes {\n    object: object;\n}\n\ntype WeakKey = WeakKeyTypes[keyof WeakKeyTypes];\n\n/**\n * Represents a raw buffer of binary data, which is used to store data for the\n * different typed arrays. ArrayBuffers cannot be read from or written to directly,\n * but can be passed to a typed array or DataView Object to interpret the raw\n * buffer as needed.\n */\ninterface ArrayBuffer {\n    /**\n     * Read-only. The length of the ArrayBuffer (in bytes).\n     */\n    readonly byteLength: number;\n\n    /**\n     * Returns a section of an ArrayBuffer.\n     */\n    slice(begin?: number, end?: number): ArrayBuffer;\n}\n\n/**\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\n */\ninterface ArrayBufferTypes {\n    ArrayBuffer: ArrayBuffer;\n}\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\n\ninterface ArrayBufferConstructor {\n    readonly prototype: ArrayBuffer;\n    new (byteLength: number): ArrayBuffer;\n    isView(arg: any): arg is ArrayBufferView;\n}\ndeclare var ArrayBuffer: ArrayBufferConstructor;\n\ninterface ArrayBufferView<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n}\n\ninterface DataView<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    readonly buffer: TArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    /**\n     * Gets the Float32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Float64 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Int8 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getInt8(byteOffset: number): number;\n\n    /**\n     * Gets the Int16 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\n    /**\n     * Gets the Int32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Uint8 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getUint8(byteOffset: number): number;\n\n    /**\n     * Gets the Uint16 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Uint32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Stores an Float32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Float64 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Int8 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     */\n    setInt8(byteOffset: number, value: number): void;\n\n    /**\n     * Stores an Int16 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Int32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Uint8 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     */\n    setUint8(byteOffset: number, value: number): void;\n\n    /**\n     * Stores an Uint16 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Uint32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\n}\ninterface DataViewConstructor {\n    readonly prototype: DataView<ArrayBufferLike>;\n    new <TArrayBuffer extends ArrayBufferLike & { BYTES_PER_ELEMENT?: never; }>(buffer: TArrayBuffer, byteOffset?: number, byteLength?: number): DataView<TArrayBuffer>;\n}\ndeclare var DataView: DataViewConstructor;\n\n/**\n * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\n * number of bytes could not be allocated an exception is raised.\n */\ninterface Int8Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int8Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int8Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Int8Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int8Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Int8ArrayConstructor {\n    readonly prototype: Int8Array<ArrayBufferLike>;\n    new (length: number): Int8Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Int8Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int8Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int8Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Int8Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Array<ArrayBuffer>;\n}\ndeclare var Int8Array: Int8ArrayConstructor;\n\n/**\n * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint8Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint8Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Uint8ArrayConstructor {\n    readonly prototype: Uint8Array<ArrayBufferLike>;\n    new (length: number): Uint8Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Uint8Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint8Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Uint8Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint8Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Array<ArrayBuffer>;\n}\ndeclare var Uint8Array: Uint8ArrayConstructor;\n\n/**\n * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\n * If the requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint8ClampedArray<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint8ClampedArray<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Uint8ClampedArrayConstructor {\n    readonly prototype: Uint8ClampedArray<ArrayBufferLike>;\n    new (length: number): Uint8ClampedArray<ArrayBuffer>;\n    new (array: ArrayLike<number>): Uint8ClampedArray<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint8ClampedArray<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8ClampedArray<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint8ClampedArray<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray<ArrayBuffer>;\n}\ndeclare var Uint8ClampedArray: Uint8ClampedArrayConstructor;\n\n/**\n * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Int16Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int16Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int16Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Int16Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int16Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Int16ArrayConstructor {\n    readonly prototype: Int16Array<ArrayBufferLike>;\n    new (length: number): Int16Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Int16Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int16Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int16Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Int16Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Array<ArrayBuffer>;\n}\ndeclare var Int16Array: Int16ArrayConstructor;\n\n/**\n * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint16Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint16Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Uint16ArrayConstructor {\n    readonly prototype: Uint16Array<ArrayBufferLike>;\n    new (length: number): Uint16Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Uint16Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint16Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint16Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Uint16Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16Array<ArrayBuffer>;\n}\ndeclare var Uint16Array: Uint16ArrayConstructor;\n/**\n * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Int32Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Int32Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Int32Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Int32Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int32Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Int32ArrayConstructor {\n    readonly prototype: Int32Array<ArrayBufferLike>;\n    new (length: number): Int32Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Int32Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int32Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int32Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Int32Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Array<ArrayBuffer>;\n}\ndeclare var Int32Array: Int32ArrayConstructor;\n\n/**\n * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint32Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint32Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Uint32ArrayConstructor {\n    readonly prototype: Uint32Array<ArrayBufferLike>;\n    new (length: number): Uint32Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Uint32Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint32Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint32Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Uint32Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32Array<ArrayBuffer>;\n}\ndeclare var Uint32Array: Uint32ArrayConstructor;\n\n/**\n * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\n * of bytes could not be allocated an exception is raised.\n */\ninterface Float32Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float32Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float32Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Float32Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Float32Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Float32ArrayConstructor {\n    readonly prototype: Float32Array<ArrayBufferLike>;\n    new (length: number): Float32Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Float32Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Float32Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float32Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Float32Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Float32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Float32Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32Array<ArrayBuffer>;\n}\ndeclare var Float32Array: Float32ArrayConstructor;\n\n/**\n * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\n * number of bytes could not be allocated an exception is raised.\n */\ninterface Float64Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float64Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float64Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Float64Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Float64Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    [index: number]: number;\n}\ninterface Float64ArrayConstructor {\n    readonly prototype: Float64Array<ArrayBufferLike>;\n    new (length: number): Float64Array<ArrayBuffer>;\n    new (array: ArrayLike<number>): Float64Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Float64Array<TArrayBuffer>;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float64Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | ArrayBuffer): Float64Array<ArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Float64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Float64Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64Array<ArrayBuffer>;\n}\ndeclare var Float64Array: Float64ArrayConstructor;\n\n/////////////////////////////\n/// ECMAScript Internationalization API\n/////////////////////////////\n\ndeclare namespace Intl {\n    interface CollatorOptions {\n        usage?: "sort" | "search" | undefined;\n        localeMatcher?: "lookup" | "best fit" | undefined;\n        numeric?: boolean | undefined;\n        caseFirst?: "upper" | "lower" | "false" | undefined;\n        sensitivity?: "base" | "accent" | "case" | "variant" | undefined;\n        collation?: "big5han" | "compat" | "dict" | "direct" | "ducet" | "emoji" | "eor" | "gb2312" | "phonebk" | "phonetic" | "pinyin" | "reformed" | "searchjl" | "stroke" | "trad" | "unihan" | "zhuyin" | undefined;\n        ignorePunctuation?: boolean | undefined;\n    }\n\n    interface ResolvedCollatorOptions {\n        locale: string;\n        usage: string;\n        sensitivity: string;\n        ignorePunctuation: boolean;\n        collation: string;\n        caseFirst: string;\n        numeric: boolean;\n    }\n\n    interface Collator {\n        compare(x: string, y: string): number;\n        resolvedOptions(): ResolvedCollatorOptions;\n    }\n\n    interface CollatorConstructor {\n        new (locales?: string | string[], options?: CollatorOptions): Collator;\n        (locales?: string | string[], options?: CollatorOptions): Collator;\n        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];\n    }\n\n    var Collator: CollatorConstructor;\n\n    interface NumberFormatOptionsStyleRegistry {\n        decimal: never;\n        percent: never;\n        currency: never;\n    }\n\n    type NumberFormatOptionsStyle = keyof NumberFormatOptionsStyleRegistry;\n\n    interface NumberFormatOptionsCurrencyDisplayRegistry {\n        code: never;\n        symbol: never;\n        name: never;\n    }\n\n    type NumberFormatOptionsCurrencyDisplay = keyof NumberFormatOptionsCurrencyDisplayRegistry;\n\n    interface NumberFormatOptionsUseGroupingRegistry {}\n\n    type NumberFormatOptionsUseGrouping = {} extends NumberFormatOptionsUseGroupingRegistry ? boolean : keyof NumberFormatOptionsUseGroupingRegistry | "true" | "false" | boolean;\n    type ResolvedNumberFormatOptionsUseGrouping = {} extends NumberFormatOptionsUseGroupingRegistry ? boolean : keyof NumberFormatOptionsUseGroupingRegistry | false;\n\n    interface NumberFormatOptions {\n        localeMatcher?: "lookup" | "best fit" | undefined;\n        style?: NumberFormatOptionsStyle | undefined;\n        currency?: string | undefined;\n        currencyDisplay?: NumberFormatOptionsCurrencyDisplay | undefined;\n        useGrouping?: NumberFormatOptionsUseGrouping | undefined;\n        minimumIntegerDigits?: number | undefined;\n        minimumFractionDigits?: number | undefined;\n        maximumFractionDigits?: number | undefined;\n        minimumSignificantDigits?: number | undefined;\n        maximumSignificantDigits?: number | undefined;\n    }\n\n    interface ResolvedNumberFormatOptions {\n        locale: string;\n        numberingSystem: string;\n        style: NumberFormatOptionsStyle;\n        currency?: string;\n        currencyDisplay?: NumberFormatOptionsCurrencyDisplay;\n        minimumIntegerDigits: number;\n        minimumFractionDigits?: number;\n        maximumFractionDigits?: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n        useGrouping: ResolvedNumberFormatOptionsUseGrouping;\n    }\n\n    interface NumberFormat {\n        format(value: number): string;\n        resolvedOptions(): ResolvedNumberFormatOptions;\n    }\n\n    interface NumberFormatConstructor {\n        new (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\n        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\n        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];\n        readonly prototype: NumberFormat;\n    }\n\n    var NumberFormat: NumberFormatConstructor;\n\n    interface DateTimeFormatOptions {\n        localeMatcher?: "best fit" | "lookup" | undefined;\n        weekday?: "long" | "short" | "narrow" | undefined;\n        era?: "long" | "short" | "narrow" | undefined;\n        year?: "numeric" | "2-digit" | undefined;\n        month?: "numeric" | "2-digit" | "long" | "short" | "narrow" | undefined;\n        day?: "numeric" | "2-digit" | undefined;\n        hour?: "numeric" | "2-digit" | undefined;\n        minute?: "numeric" | "2-digit" | undefined;\n        second?: "numeric" | "2-digit" | undefined;\n        timeZoneName?: "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric" | undefined;\n        formatMatcher?: "best fit" | "basic" | undefined;\n        hour12?: boolean | undefined;\n        timeZone?: string | undefined;\n    }\n\n    interface ResolvedDateTimeFormatOptions {\n        locale: string;\n        calendar: string;\n        numberingSystem: string;\n        timeZone: string;\n        hour12?: boolean;\n        weekday?: string;\n        era?: string;\n        year?: string;\n        month?: string;\n        day?: string;\n        hour?: string;\n        minute?: string;\n        second?: string;\n        timeZoneName?: string;\n    }\n\n    interface DateTimeFormat {\n        format(date?: Date | number): string;\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\n    }\n\n    interface DateTimeFormatConstructor {\n        new (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\n        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\n        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];\n        readonly prototype: DateTimeFormat;\n    }\n\n    var DateTimeFormat: DateTimeFormatConstructor;\n}\n\ninterface String {\n    /**\n     * Determines whether two strings are equivalent in the current or specified locale.\n     * @param that String to compare to target string\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n     * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\n     */\n    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;\n}\n\ninterface Number {\n    /**\n     * Converts a number to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\n}\n\ninterface Date {\n    /**\n     * Converts a date and time to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\n    /**\n     * Converts a date to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\n\n    /**\n     * Converts a time to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\n}\n'],["file:///node_modules/typescript/lib/lib.es6.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015" />\n/// <reference lib="dom" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n'],["file:///node_modules/typescript/lib/lib.esnext.array.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an async iterator or iterable object.\n     * @param iterableOrArrayLike An async iterator or array-like object to convert to an array.\n     */\n    fromAsync<T>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T | PromiseLike<T>> | ArrayLike<T | PromiseLike<T>>): Promise<T[]>;\n\n    /**\n     * Creates an array from an async iterator or iterable object.\n     *\n     * @param iterableOrArrayLike An async iterator or array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of itarableOrArrayLike.\n     *      Each return value is awaited before being added to result array.\n     * @param thisArg Value of \'this\' used when executing mapfn.\n     */\n    fromAsync<T, U>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T> | ArrayLike<T>, mapFn: (value: Awaited<T>, index: number) => U, thisArg?: any): Promise<Awaited<U>[]>;\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.collection.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2024.collection" />\n\ninterface ReadonlySetLike<T> {\n    /**\n     * Despite its name, returns an iterator of the values in the set-like.\n     */\n    keys(): Iterator<T>;\n    /**\n     * @returns a boolean indicating whether an element with the specified value exists in the set-like or not.\n     */\n    has(value: T): boolean;\n    /**\n     * @returns the number of (unique) elements in the set-like.\n     */\n    readonly size: number;\n}\n\ninterface Set<T> {\n    /**\n     * @returns a new Set containing all the elements in this Set and also all the elements in the argument.\n     */\n    union<U>(other: ReadonlySetLike<U>): Set<T | U>;\n    /**\n     * @returns a new Set containing all the elements which are both in this Set and in the argument.\n     */\n    intersection<U>(other: ReadonlySetLike<U>): Set<T & U>;\n    /**\n     * @returns a new Set containing all the elements in this Set which are not also in the argument.\n     */\n    difference<U>(other: ReadonlySetLike<U>): Set<T>;\n    /**\n     * @returns a new Set containing all the elements which are in either this Set or in the argument, but not in both.\n     */\n    symmetricDifference<U>(other: ReadonlySetLike<U>): Set<T | U>;\n    /**\n     * @returns a boolean indicating whether all the elements in this Set are also in the argument.\n     */\n    isSubsetOf(other: ReadonlySetLike<unknown>): boolean;\n    /**\n     * @returns a boolean indicating whether all the elements in the argument are also in this Set.\n     */\n    isSupersetOf(other: ReadonlySetLike<unknown>): boolean;\n    /**\n     * @returns a boolean indicating whether this Set has no elements in common with the argument.\n     */\n    isDisjointFrom(other: ReadonlySetLike<unknown>): boolean;\n}\n\ninterface ReadonlySet<T> {\n    /**\n     * @returns a new Set containing all the elements in this Set and also all the elements in the argument.\n     */\n    union<U>(other: ReadonlySetLike<U>): Set<T | U>;\n    /**\n     * @returns a new Set containing all the elements which are both in this Set and in the argument.\n     */\n    intersection<U>(other: ReadonlySetLike<U>): Set<T & U>;\n    /**\n     * @returns a new Set containing all the elements in this Set which are not also in the argument.\n     */\n    difference<U>(other: ReadonlySetLike<U>): Set<T>;\n    /**\n     * @returns a new Set containing all the elements which are in either this Set or in the argument, but not in both.\n     */\n    symmetricDifference<U>(other: ReadonlySetLike<U>): Set<T | U>;\n    /**\n     * @returns a boolean indicating whether all the elements in this Set are also in the argument.\n     */\n    isSubsetOf(other: ReadonlySetLike<unknown>): boolean;\n    /**\n     * @returns a boolean indicating whether all the elements in the argument are also in this Set.\n     */\n    isSupersetOf(other: ReadonlySetLike<unknown>): boolean;\n    /**\n     * @returns a boolean indicating whether this Set has no elements in common with the argument.\n     */\n    isDisjointFrom(other: ReadonlySetLike<unknown>): boolean;\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2024" />\n/// <reference lib="esnext.intl" />\n/// <reference lib="esnext.decorators" />\n/// <reference lib="esnext.disposable" />\n/// <reference lib="esnext.collection" />\n/// <reference lib="esnext.array" />\n/// <reference lib="esnext.iterator" />\n/// <reference lib="esnext.promise" />\n/// <reference lib="esnext.float16" />\n'],["file:///node_modules/typescript/lib/lib.esnext.decorators.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="decorators" />\n\ninterface SymbolConstructor {\n    readonly metadata: unique symbol;\n}\n\ninterface Function {\n    [Symbol.metadata]: DecoratorMetadata | null;\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.disposable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.iterable" />\n/// <reference lib="es2018.asynciterable" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that is used to release resources held by an object. Called by the semantics of the `using` statement.\n     */\n    readonly dispose: unique symbol;\n\n    /**\n     * A method that is used to asynchronously release resources held by an object. Called by the semantics of the `await using` statement.\n     */\n    readonly asyncDispose: unique symbol;\n}\n\ninterface Disposable {\n    [Symbol.dispose](): void;\n}\n\ninterface AsyncDisposable {\n    [Symbol.asyncDispose](): PromiseLike<void>;\n}\n\ninterface SuppressedError extends Error {\n    error: any;\n    suppressed: any;\n}\n\ninterface SuppressedErrorConstructor {\n    new (error: any, suppressed: any, message?: string): SuppressedError;\n    (error: any, suppressed: any, message?: string): SuppressedError;\n    readonly prototype: SuppressedError;\n}\ndeclare var SuppressedError: SuppressedErrorConstructor;\n\ninterface DisposableStack {\n    /**\n     * Returns a value indicating whether this stack has been disposed.\n     */\n    readonly disposed: boolean;\n    /**\n     * Disposes each resource in the stack in the reverse order that they were added.\n     */\n    dispose(): void;\n    /**\n     * Adds a disposable resource to the stack, returning the resource.\n     * @param value The resource to add. `null` and `undefined` will not be added, but will be returned.\n     * @returns The provided {@link value}.\n     */\n    use<T extends Disposable | null | undefined>(value: T): T;\n    /**\n     * Adds a value and associated disposal callback as a resource to the stack.\n     * @param value The value to add.\n     * @param onDispose The callback to use in place of a `[Symbol.dispose]()` method. Will be invoked with `value`\n     * as the first parameter.\n     * @returns The provided {@link value}.\n     */\n    adopt<T>(value: T, onDispose: (value: T) => void): T;\n    /**\n     * Adds a callback to be invoked when the stack is disposed.\n     */\n    defer(onDispose: () => void): void;\n    /**\n     * Move all resources out of this stack and into a new `DisposableStack`, and marks this stack as disposed.\n     * @example\n     * ```ts\n     * class C {\n     *   #res1: Disposable;\n     *   #res2: Disposable;\n     *   #disposables: DisposableStack;\n     *   constructor() {\n     *     // stack will be disposed when exiting constructor for any reason\n     *     using stack = new DisposableStack();\n     *\n     *     // get first resource\n     *     this.#res1 = stack.use(getResource1());\n     *\n     *     // get second resource. If this fails, both `stack` and `#res1` will be disposed.\n     *     this.#res2 = stack.use(getResource2());\n     *\n     *     // all operations succeeded, move resources out of `stack` so that they aren\'t disposed\n     *     // when constructor exits\n     *     this.#disposables = stack.move();\n     *   }\n     *\n     *   [Symbol.dispose]() {\n     *     this.#disposables.dispose();\n     *   }\n     * }\n     * ```\n     */\n    move(): DisposableStack;\n    [Symbol.dispose](): void;\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface DisposableStackConstructor {\n    new (): DisposableStack;\n    readonly prototype: DisposableStack;\n}\ndeclare var DisposableStack: DisposableStackConstructor;\n\ninterface AsyncDisposableStack {\n    /**\n     * Returns a value indicating whether this stack has been disposed.\n     */\n    readonly disposed: boolean;\n    /**\n     * Disposes each resource in the stack in the reverse order that they were added.\n     */\n    disposeAsync(): Promise<void>;\n    /**\n     * Adds a disposable resource to the stack, returning the resource.\n     * @param value The resource to add. `null` and `undefined` will not be added, but will be returned.\n     * @returns The provided {@link value}.\n     */\n    use<T extends AsyncDisposable | Disposable | null | undefined>(value: T): T;\n    /**\n     * Adds a value and associated disposal callback as a resource to the stack.\n     * @param value The value to add.\n     * @param onDisposeAsync The callback to use in place of a `[Symbol.asyncDispose]()` method. Will be invoked with `value`\n     * as the first parameter.\n     * @returns The provided {@link value}.\n     */\n    adopt<T>(value: T, onDisposeAsync: (value: T) => PromiseLike<void> | void): T;\n    /**\n     * Adds a callback to be invoked when the stack is disposed.\n     */\n    defer(onDisposeAsync: () => PromiseLike<void> | void): void;\n    /**\n     * Move all resources out of this stack and into a new `DisposableStack`, and marks this stack as disposed.\n     * @example\n     * ```ts\n     * class C {\n     *   #res1: Disposable;\n     *   #res2: Disposable;\n     *   #disposables: DisposableStack;\n     *   constructor() {\n     *     // stack will be disposed when exiting constructor for any reason\n     *     using stack = new DisposableStack();\n     *\n     *     // get first resource\n     *     this.#res1 = stack.use(getResource1());\n     *\n     *     // get second resource. If this fails, both `stack` and `#res1` will be disposed.\n     *     this.#res2 = stack.use(getResource2());\n     *\n     *     // all operations succeeded, move resources out of `stack` so that they aren\'t disposed\n     *     // when constructor exits\n     *     this.#disposables = stack.move();\n     *   }\n     *\n     *   [Symbol.dispose]() {\n     *     this.#disposables.dispose();\n     *   }\n     * }\n     * ```\n     */\n    move(): AsyncDisposableStack;\n    [Symbol.asyncDispose](): Promise<void>;\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface AsyncDisposableStackConstructor {\n    new (): AsyncDisposableStack;\n    readonly prototype: AsyncDisposableStack;\n}\ndeclare var AsyncDisposableStack: AsyncDisposableStackConstructor;\n\ninterface IteratorObject<T, TReturn, TNext> extends Disposable {\n}\n\ninterface AsyncIteratorObject<T, TReturn, TNext> extends AsyncDisposable {\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.float16.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.iterable" />\n\n/**\n * A typed array of 16-bit float values. The contents are initialized to 0. If the requested number\n * of bytes could not be allocated an exception is raised.\n */\ninterface Float16Array<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: TArrayBuffer;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the item located at the specified index.\n     * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n     */\n    at(index: number): number | undefined;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(predicate: (value: number, index: number, array: this) => any, thisArg?: any): Float16Array<ArrayBuffer>;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(predicate: (value: number, index: number, obj: this) => boolean, thisArg?: any): number;\n\n    /**\n     * Returns the value of the last element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate findLast calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found, findLast\n     * immediately returns that element value. Otherwise, findLast returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLast<S extends number>(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => value is S,\n        thisArg?: any,\n    ): S | undefined;\n    findLast(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number | undefined;\n\n    /**\n     * Returns the index of the last element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findLastIndex(\n        predicate: (\n            value: number,\n            index: number,\n            array: this,\n        ) => unknown,\n        thisArg?: any,\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: number, index: number, array: this) => void, thisArg?: any): void;\n\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(callbackfn: (value: number, index: number, array: this) => number, thisArg?: any): Float16Array<ArrayBuffer>;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: this) => number, initialValue: number): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: this) => U, initialValue: U): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): this;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index \'end\'.\n     */\n    slice(start?: number, end?: number): Float16Array<ArrayBuffer>;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(predicate: (value: number, index: number, array: this) => unknown, thisArg?: any): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they\'re equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Float16Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Float16Array<TArrayBuffer>;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\n\n    /**\n     * Copies the array and returns the copy with the elements in reverse order.\n     */\n    toReversed(): Float16Array<ArrayBuffer>;\n\n    /**\n     * Copies and sorts the array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if the first argument is less than the second argument, zero if they\'re equal, and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending order.\n     * ```ts\n     * const myNums = Float16Array.from([11.25, 2, -22.5, 1]);\n     * myNums.toSorted((a, b) => a - b) // Float16Array(4) [-22.5, 1, 2, 11.5]\n     * ```\n     */\n    toSorted(compareFn?: (a: number, b: number) => number): Float16Array<ArrayBuffer>;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): this;\n\n    /**\n     * Copies the array and inserts the given number at the provided index.\n     * @param index The index of the value to overwrite. If the index is\n     * negative, then it replaces from the end of the array.\n     * @param value The value to insert into the copied array.\n     * @returns A copy of the original array with the inserted value.\n     */\n    with(index: number, value: number): Float16Array<ArrayBuffer>;\n\n    [index: number]: number;\n\n    [Symbol.iterator](): ArrayIterator<number>;\n\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): ArrayIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): ArrayIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): ArrayIterator<number>;\n\n    readonly [Symbol.toStringTag]: "Float16Array";\n}\n\ninterface Float16ArrayConstructor {\n    readonly prototype: Float16Array<ArrayBufferLike>;\n    new (length?: number): Float16Array<ArrayBuffer>;\n    new (array: ArrayLike<number> | Iterable<number>): Float16Array<ArrayBuffer>;\n    new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Float16Array<TArrayBuffer>;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Float16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Float16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     */\n    from(elements: Iterable<number>): Float16Array<ArrayBuffer>;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param elements An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T>(elements: Iterable<T>, mapfn?: (v: T, k: number) => number, thisArg?: any): Float16Array<ArrayBuffer>;\n}\ndeclare var Float16Array: Float16ArrayConstructor;\n\ninterface Math {\n    /**\n     * Returns the nearest half precision float representation of a number.\n     * @param x A numeric expression.\n     */\n    f16round(x: number): number;\n}\n\ninterface DataView<TArrayBuffer extends ArrayBufferLike> {\n    /**\n     * Gets the Float16 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     * @param littleEndian If false or undefined, a big-endian value should be read.\n     */\n    getFloat16(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Stores an Float16 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written.\n     */\n    setFloat16(byteOffset: number, value: number, littleEndian?: boolean): void;\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.full.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="esnext" />\n/// <reference lib="dom" />\n/// <reference lib="webworker.importscripts" />\n/// <reference lib="scripthost" />\n/// <reference lib="dom.iterable" />\n/// <reference lib="dom.asynciterable" />\n'],["file:///node_modules/typescript/lib/lib.esnext.intl.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Intl {\n    // Empty\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.iterator.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n\n// NOTE: This is specified as what is essentially an unreachable module. All actual global declarations can be found\n//       in the `declare global` section, below. This is necessary as there is currently no way to declare an `abstract`\n//       member without declaring a `class`, but declaring `class Iterator<T>` globally would conflict with TypeScript\'s\n//       general purpose `Iterator<T>` interface.\nexport {};\n\n// Abstract type that allows us to mark `next` as `abstract`\ndeclare abstract class Iterator<T, TResult = undefined, TNext = unknown> { // eslint-disable-line @typescript-eslint/no-unsafe-declaration-merging\n    abstract next(value?: TNext): IteratorResult<T, TResult>;\n}\n\n// Merge all members of `IteratorObject<T>` into `Iterator<T>`\ninterface Iterator<T, TResult, TNext> extends globalThis.IteratorObject<T, TResult, TNext> {}\n\n// Capture the `Iterator` constructor in a type we can use in the `extends` clause of `IteratorConstructor`.\ntype IteratorObjectConstructor = typeof Iterator;\n\ndeclare global {\n    // Global `IteratorObject<T, TReturn, TNext>` interface that can be augmented by polyfills\n    interface IteratorObject<T, TReturn, TNext> {\n        /**\n         * Returns this iterator.\n         */\n        [Symbol.iterator](): IteratorObject<T, TReturn, TNext>;\n\n        /**\n         * Creates an iterator whose values are the result of applying the callback to the values from this iterator.\n         * @param callbackfn A function that accepts up to two arguments to be used to transform values from the underlying iterator.\n         */\n        map<U>(callbackfn: (value: T, index: number) => U): IteratorObject<U, undefined, unknown>;\n\n        /**\n         * Creates an iterator whose values are those from this iterator for which the provided predicate returns true.\n         * @param predicate A function that accepts up to two arguments to be used to test values from the underlying iterator.\n         */\n        filter<S extends T>(predicate: (value: T, index: number) => value is S): IteratorObject<S, undefined, unknown>;\n\n        /**\n         * Creates an iterator whose values are those from this iterator for which the provided predicate returns true.\n         * @param predicate A function that accepts up to two arguments to be used to test values from the underlying iterator.\n         */\n        filter(predicate: (value: T, index: number) => unknown): IteratorObject<T, undefined, unknown>;\n\n        /**\n         * Creates an iterator whose values are the values from this iterator, stopping once the provided limit is reached.\n         * @param limit The maximum number of values to yield.\n         */\n        take(limit: number): IteratorObject<T, undefined, unknown>;\n\n        /**\n         * Creates an iterator whose values are the values from this iterator after skipping the provided count.\n         * @param count The number of values to drop.\n         */\n        drop(count: number): IteratorObject<T, undefined, unknown>;\n\n        /**\n         * Creates an iterator whose values are the result of applying the callback to the values from this iterator and then flattening the resulting iterators or iterables.\n         * @param callback A function that accepts up to two arguments to be used to transform values from the underlying iterator into new iterators or iterables to be flattened into the result.\n         */\n        flatMap<U>(callback: (value: T, index: number) => Iterator<U, unknown, undefined> | Iterable<U, unknown, undefined>): IteratorObject<U, undefined, unknown>;\n\n        /**\n         * Calls the specified callback function for all the elements in this iterator. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the iterator.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of a value from the iterator.\n         */\n        reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number) => T): T;\n        reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number) => T, initialValue: T): T;\n\n        /**\n         * Calls the specified callback function for all the elements in this iterator. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the iterator.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of a value from the iterator.\n         */\n        reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number) => U, initialValue: U): U;\n\n        /**\n         * Creates a new array from the values yielded by this iterator.\n         */\n        toArray(): T[];\n\n        /**\n         * Performs the specified action for each element in the iterator.\n         * @param callbackfn A function that accepts up to two arguments. forEach calls the callbackfn function one time for each element in the iterator.\n         */\n        forEach(callbackfn: (value: T, index: number) => void): void;\n\n        /**\n         * Determines whether the specified callback function returns true for any element of this iterator.\n         * @param predicate A function that accepts up to two arguments. The some method calls\n         * the predicate function for each element in this iterator until the predicate returns a value\n         * true, or until the end of the iterator.\n         */\n        some(predicate: (value: T, index: number) => unknown): boolean;\n\n        /**\n         * Determines whether all the members of this iterator satisfy the specified test.\n         * @param predicate A function that accepts up to two arguments. The every method calls\n         * the predicate function for each element in this iterator until the predicate returns\n         * false, or until the end of this iterator.\n         */\n        every(predicate: (value: T, index: number) => unknown): boolean;\n\n        /**\n         * Returns the value of the first element in this iterator where predicate is true, and undefined\n         * otherwise.\n         * @param predicate find calls predicate once for each element of this iterator, in\n         * order, until it finds one where predicate returns true. If such an element is found, find\n         * immediately returns that element value. Otherwise, find returns undefined.\n         */\n        find<S extends T>(predicate: (value: T, index: number) => value is S): S | undefined;\n        find(predicate: (value: T, index: number) => unknown): T | undefined;\n\n        readonly [Symbol.toStringTag]: string;\n    }\n\n    // Global `IteratorConstructor` interface that can be augmented by polyfills\n    interface IteratorConstructor extends IteratorObjectConstructor {\n        /**\n         * Creates a native iterator from an iterator or iterable object.\n         * Returns its input if the input already inherits from the built-in Iterator class.\n         * @param value An iterator or iterable object to convert a native iterator.\n         */\n        from<T>(value: Iterator<T, unknown, undefined> | Iterable<T, unknown, undefined>): IteratorObject<T, undefined, unknown>;\n    }\n\n    var Iterator: IteratorConstructor;\n}\n'],["file:///node_modules/typescript/lib/lib.esnext.promise.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\ninterface PromiseConstructor {\n    /**\n     * Takes a callback of any kind (returns or throws, synchronously or asynchronously) and wraps its result\n     * in a Promise.\n     *\n     * @param callbackFn A function that is called synchronously. It can do anything: either return\n     * a value, throw an error, or return a promise.\n     * @param args Additional arguments, that will be passed to the callback.\n     *\n     * @returns A Promise that is:\n     * - Already fulfilled, if the callback synchronously returns a value.\n     * - Already rejected, if the callback synchronously throws an error.\n     * - Asynchronously fulfilled or rejected, if the callback returns a promise.\n     */\n    try<T, U extends unknown[]>(callbackFn: (...args: U) => T | PromiseLike<T>, ...args: U): Promise<Awaited<T>>;\n}\n'],["file:///node_modules/typescript/lib/lib.scripthost.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Windows Script Host APIS\n/////////////////////////////\n\ninterface ActiveXObject {\n    new (s: string): any;\n}\ndeclare var ActiveXObject: ActiveXObject;\n\ninterface ITextWriter {\n    Write(s: string): void;\n    WriteLine(s: string): void;\n    Close(): void;\n}\n\ninterface TextStreamBase {\n    /**\n     * The column number of the current character position in an input stream.\n     */\n    Column: number;\n\n    /**\n     * The current line number in an input stream.\n     */\n    Line: number;\n\n    /**\n     * Closes a text stream.\n     * It is not necessary to close standard streams; they close automatically when the process ends. If\n     * you close a standard stream, be aware that any other pointers to that standard stream become invalid.\n     */\n    Close(): void;\n}\n\ninterface TextStreamWriter extends TextStreamBase {\n    /**\n     * Sends a string to an output stream.\n     */\n    Write(s: string): void;\n\n    /**\n     * Sends a specified number of blank lines (newline characters) to an output stream.\n     */\n    WriteBlankLines(intLines: number): void;\n\n    /**\n     * Sends a string followed by a newline character to an output stream.\n     */\n    WriteLine(s: string): void;\n}\n\ninterface TextStreamReader extends TextStreamBase {\n    /**\n     * Returns a specified number of characters from an input stream, starting at the current pointer position.\n     * Does not return until the ENTER key is pressed.\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\n     */\n    Read(characters: number): string;\n\n    /**\n     * Returns all characters from an input stream.\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\n     */\n    ReadAll(): string;\n\n    /**\n     * Returns an entire line from an input stream.\n     * Although this method extracts the newline character, it does not add it to the returned string.\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\n     */\n    ReadLine(): string;\n\n    /**\n     * Skips a specified number of characters when reading from an input text stream.\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\n     * @param characters Positive number of characters to skip forward. (Backward skipping is not supported.)\n     */\n    Skip(characters: number): void;\n\n    /**\n     * Skips the next line when reading from an input text stream.\n     * Can only be used on a stream in reading mode, not writing or appending mode.\n     */\n    SkipLine(): void;\n\n    /**\n     * Indicates whether the stream pointer position is at the end of a line.\n     */\n    AtEndOfLine: boolean;\n\n    /**\n     * Indicates whether the stream pointer position is at the end of a stream.\n     */\n    AtEndOfStream: boolean;\n}\n\ndeclare var WScript: {\n    /**\n     * Outputs text to either a message box (under WScript.exe) or the command console window followed by\n     * a newline (under CScript.exe).\n     */\n    Echo(s: any): void;\n\n    /**\n     * Exposes the write-only error output stream for the current script.\n     * Can be accessed only while using CScript.exe.\n     */\n    StdErr: TextStreamWriter;\n\n    /**\n     * Exposes the write-only output stream for the current script.\n     * Can be accessed only while using CScript.exe.\n     */\n    StdOut: TextStreamWriter;\n    Arguments: { length: number; Item(n: number): string; };\n\n    /**\n     *  The full path of the currently running script.\n     */\n    ScriptFullName: string;\n\n    /**\n     * Forces the script to stop immediately, with an optional exit code.\n     */\n    Quit(exitCode?: number): number;\n\n    /**\n     * The Windows Script Host build version number.\n     */\n    BuildVersion: number;\n\n    /**\n     * Fully qualified path of the host executable.\n     */\n    FullName: string;\n\n    /**\n     * Gets/sets the script mode - interactive(true) or batch(false).\n     */\n    Interactive: boolean;\n\n    /**\n     * The name of the host executable (WScript.exe or CScript.exe).\n     */\n    Name: string;\n\n    /**\n     * Path of the directory containing the host executable.\n     */\n    Path: string;\n\n    /**\n     * The filename of the currently running script.\n     */\n    ScriptName: string;\n\n    /**\n     * Exposes the read-only input stream for the current script.\n     * Can be accessed only while using CScript.exe.\n     */\n    StdIn: TextStreamReader;\n\n    /**\n     * Windows Script Host version\n     */\n    Version: string;\n\n    /**\n     * Connects a COM object\'s event sources to functions named with a given prefix, in the form prefix_event.\n     */\n    ConnectObject(objEventSource: any, strPrefix: string): void;\n\n    /**\n     * Creates a COM object.\n     * @param strProgiID\n     * @param strPrefix Function names in the form prefix_event will be bound to this object\'s COM events.\n     */\n    CreateObject(strProgID: string, strPrefix?: string): any;\n\n    /**\n     * Disconnects a COM object from its event sources.\n     */\n    DisconnectObject(obj: any): void;\n\n    /**\n     * Retrieves an existing object with the specified ProgID from memory, or creates a new one from a file.\n     * @param strPathname Fully qualified path to the file containing the object persisted to disk.\n     *                       For objects in memory, pass a zero-length string.\n     * @param strProgID\n     * @param strPrefix Function names in the form prefix_event will be bound to this object\'s COM events.\n     */\n    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;\n\n    /**\n     * Suspends script execution for a specified length of time, then continues execution.\n     * @param intTime Interval (in milliseconds) to suspend script execution.\n     */\n    Sleep(intTime: number): void;\n};\n\n/**\n * WSH is an alias for WScript under Windows Script Host\n */\ndeclare var WSH: typeof WScript;\n\n/**\n * Represents an Automation SAFEARRAY\n */\ndeclare class SafeArray<T = any> {\n    private constructor();\n    private SafeArray_typekey: SafeArray<T>;\n}\n\n/**\n * Allows enumerating over a COM collection, which may not have indexed item access.\n */\ninterface Enumerator<T = any> {\n    /**\n     * Returns true if the current item is the last one in the collection, or the collection is empty,\n     * or the current item is undefined.\n     */\n    atEnd(): boolean;\n\n    /**\n     * Returns the current item in the collection\n     */\n    item(): T;\n\n    /**\n     * Resets the current item in the collection to the first item. If there are no items in the collection,\n     * the current item is set to undefined.\n     */\n    moveFirst(): void;\n\n    /**\n     * Moves the current item to the next item in the collection. If the enumerator is at the end of\n     * the collection or the collection is empty, the current item is set to undefined.\n     */\n    moveNext(): void;\n}\n\ninterface EnumeratorConstructor {\n    new <T = any>(safearray: SafeArray<T>): Enumerator<T>;\n    new <T = any>(collection: { Item(index: any): T; }): Enumerator<T>;\n    new <T = any>(collection: any): Enumerator<T>;\n}\n\ndeclare var Enumerator: EnumeratorConstructor;\n\n/**\n * Enables reading from a COM safe array, which might have an alternate lower bound, or multiple dimensions.\n */\ninterface VBArray<T = any> {\n    /**\n     * Returns the number of dimensions (1-based).\n     */\n    dimensions(): number;\n\n    /**\n     * Takes an index for each dimension in the array, and returns the item at the corresponding location.\n     */\n    getItem(dimension1Index: number, ...dimensionNIndexes: number[]): T;\n\n    /**\n     * Returns the smallest available index for a given dimension.\n     * @param dimension 1-based dimension (defaults to 1)\n     */\n    lbound(dimension?: number): number;\n\n    /**\n     * Returns the largest available index for a given dimension.\n     * @param dimension 1-based dimension (defaults to 1)\n     */\n    ubound(dimension?: number): number;\n\n    /**\n     * Returns a Javascript array with all the elements in the VBArray. If there are multiple dimensions,\n     * each successive dimension is appended to the end of the array.\n     * Example: [[1,2,3],[4,5,6]] becomes [1,2,3,4,5,6]\n     */\n    toArray(): T[];\n}\n\ninterface VBArrayConstructor {\n    new <T = any>(safeArray: SafeArray<T>): VBArray<T>;\n}\n\ndeclare var VBArray: VBArrayConstructor;\n\n/**\n * Automation date (VT_DATE)\n */\ndeclare class VarDate {\n    private constructor();\n    private VarDate_typekey: VarDate;\n}\n\ninterface DateConstructor {\n    new (vd: VarDate): Date;\n}\n\ninterface Date {\n    getVarDate: () => VarDate;\n}\n'],["file:///node_modules/typescript/lib/lib.webworker.asynciterable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Worker Async Iterable APIs\n/////////////////////////////\n\ninterface FileSystemDirectoryHandleAsyncIterator<T> extends AsyncIteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.asyncIterator](): FileSystemDirectoryHandleAsyncIterator<T>;\n}\n\ninterface FileSystemDirectoryHandle {\n    [Symbol.asyncIterator](): FileSystemDirectoryHandleAsyncIterator<[string, FileSystemHandle]>;\n    entries(): FileSystemDirectoryHandleAsyncIterator<[string, FileSystemHandle]>;\n    keys(): FileSystemDirectoryHandleAsyncIterator<string>;\n    values(): FileSystemDirectoryHandleAsyncIterator<FileSystemHandle>;\n}\n\ninterface ReadableStreamAsyncIterator<T> extends AsyncIteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.asyncIterator](): ReadableStreamAsyncIterator<T>;\n}\n\ninterface ReadableStream<R = any> {\n    [Symbol.asyncIterator](options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n    values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n}\n'],["file:///node_modules/typescript/lib/lib.webworker.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Worker APIs\n/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface AesCbcParams extends Algorithm {\n    iv: BufferSource;\n}\n\ninterface AesCtrParams extends Algorithm {\n    counter: BufferSource;\n    length: number;\n}\n\ninterface AesDerivedKeyParams extends Algorithm {\n    length: number;\n}\n\ninterface AesGcmParams extends Algorithm {\n    additionalData?: BufferSource;\n    iv: BufferSource;\n    tagLength?: number;\n}\n\ninterface AesKeyAlgorithm extends KeyAlgorithm {\n    length: number;\n}\n\ninterface AesKeyGenParams extends Algorithm {\n    length: number;\n}\n\ninterface Algorithm {\n    name: string;\n}\n\ninterface AudioConfiguration {\n    bitrate?: number;\n    channels?: string;\n    contentType: string;\n    samplerate?: number;\n    spatialRendering?: boolean;\n}\n\ninterface AudioDataCopyToOptions {\n    format?: AudioSampleFormat;\n    frameCount?: number;\n    frameOffset?: number;\n    planeIndex: number;\n}\n\ninterface AudioDataInit {\n    data: BufferSource;\n    format: AudioSampleFormat;\n    numberOfChannels: number;\n    numberOfFrames: number;\n    sampleRate: number;\n    timestamp: number;\n    transfer?: ArrayBuffer[];\n}\n\ninterface AudioDecoderConfig {\n    codec: string;\n    description?: BufferSource;\n    numberOfChannels: number;\n    sampleRate: number;\n}\n\ninterface AudioDecoderInit {\n    error: WebCodecsErrorCallback;\n    output: AudioDataOutputCallback;\n}\n\ninterface AudioDecoderSupport {\n    config?: AudioDecoderConfig;\n    supported?: boolean;\n}\n\ninterface AudioEncoderConfig {\n    bitrate?: number;\n    bitrateMode?: BitrateMode;\n    codec: string;\n    numberOfChannels: number;\n    opus?: OpusEncoderConfig;\n    sampleRate: number;\n}\n\ninterface AudioEncoderInit {\n    error: WebCodecsErrorCallback;\n    output: EncodedAudioChunkOutputCallback;\n}\n\ninterface AudioEncoderSupport {\n    config?: AudioEncoderConfig;\n    supported?: boolean;\n}\n\ninterface AvcEncoderConfig {\n    format?: AvcBitstreamFormat;\n}\n\ninterface BlobPropertyBag {\n    endings?: EndingType;\n    type?: string;\n}\n\ninterface CSSMatrixComponentOptions {\n    is2D?: boolean;\n}\n\ninterface CSSNumericType {\n    angle?: number;\n    flex?: number;\n    frequency?: number;\n    length?: number;\n    percent?: number;\n    percentHint?: CSSNumericBaseType;\n    resolution?: number;\n    time?: number;\n}\n\ninterface CacheQueryOptions {\n    ignoreMethod?: boolean;\n    ignoreSearch?: boolean;\n    ignoreVary?: boolean;\n}\n\ninterface ClientQueryOptions {\n    includeUncontrolled?: boolean;\n    type?: ClientTypes;\n}\n\ninterface CloseEventInit extends EventInit {\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\ninterface CryptoKeyPair {\n    privateKey: CryptoKey;\n    publicKey: CryptoKey;\n}\n\ninterface CustomEventInit<T = any> extends EventInit {\n    detail?: T;\n}\n\ninterface DOMMatrix2DInit {\n    a?: number;\n    b?: number;\n    c?: number;\n    d?: number;\n    e?: number;\n    f?: number;\n    m11?: number;\n    m12?: number;\n    m21?: number;\n    m22?: number;\n    m41?: number;\n    m42?: number;\n}\n\ninterface DOMMatrixInit extends DOMMatrix2DInit {\n    is2D?: boolean;\n    m13?: number;\n    m14?: number;\n    m23?: number;\n    m24?: number;\n    m31?: number;\n    m32?: number;\n    m33?: number;\n    m34?: number;\n    m43?: number;\n    m44?: number;\n}\n\ninterface DOMPointInit {\n    w?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\ninterface DOMQuadInit {\n    p1?: DOMPointInit;\n    p2?: DOMPointInit;\n    p3?: DOMPointInit;\n    p4?: DOMPointInit;\n}\n\ninterface DOMRectInit {\n    height?: number;\n    width?: number;\n    x?: number;\n    y?: number;\n}\n\ninterface EcKeyGenParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyImportParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcdhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface EcdsaParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface EncodedAudioChunkInit {\n    data: AllowSharedBufferSource;\n    duration?: number;\n    timestamp: number;\n    transfer?: ArrayBuffer[];\n    type: EncodedAudioChunkType;\n}\n\ninterface EncodedAudioChunkMetadata {\n    decoderConfig?: AudioDecoderConfig;\n}\n\ninterface EncodedVideoChunkInit {\n    data: AllowSharedBufferSource;\n    duration?: number;\n    timestamp: number;\n    type: EncodedVideoChunkType;\n}\n\ninterface EncodedVideoChunkMetadata {\n    decoderConfig?: VideoDecoderConfig;\n}\n\ninterface ErrorEventInit extends EventInit {\n    colno?: number;\n    error?: any;\n    filename?: string;\n    lineno?: number;\n    message?: string;\n}\n\ninterface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n}\n\ninterface EventListenerOptions {\n    capture?: boolean;\n}\n\ninterface EventSourceInit {\n    withCredentials?: boolean;\n}\n\ninterface ExtendableEventInit extends EventInit {\n}\n\ninterface ExtendableMessageEventInit extends ExtendableEventInit {\n    data?: any;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: Client | ServiceWorker | MessagePort | null;\n}\n\ninterface FetchEventInit extends ExtendableEventInit {\n    clientId?: string;\n    handled?: Promise<void>;\n    preloadResponse?: Promise<any>;\n    replacesClientId?: string;\n    request: Request;\n    resultingClientId?: string;\n}\n\ninterface FilePropertyBag extends BlobPropertyBag {\n    lastModified?: number;\n}\n\ninterface FileSystemCreateWritableOptions {\n    keepExistingData?: boolean;\n}\n\ninterface FileSystemGetDirectoryOptions {\n    create?: boolean;\n}\n\ninterface FileSystemGetFileOptions {\n    create?: boolean;\n}\n\ninterface FileSystemReadWriteOptions {\n    at?: number;\n}\n\ninterface FileSystemRemoveOptions {\n    recursive?: boolean;\n}\n\ninterface FontFaceDescriptors {\n    ascentOverride?: string;\n    descentOverride?: string;\n    display?: FontDisplay;\n    featureSettings?: string;\n    lineGapOverride?: string;\n    stretch?: string;\n    style?: string;\n    unicodeRange?: string;\n    weight?: string;\n}\n\ninterface FontFaceSetLoadEventInit extends EventInit {\n    fontfaces?: FontFace[];\n}\n\ninterface GetNotificationOptions {\n    tag?: string;\n}\n\ninterface HkdfParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    info: BufferSource;\n    salt: BufferSource;\n}\n\ninterface HmacImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface HmacKeyGenParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\ninterface IDBIndexParameters {\n    multiEntry?: boolean;\n    unique?: boolean;\n}\n\ninterface IDBObjectStoreParameters {\n    autoIncrement?: boolean;\n    keyPath?: string | string[] | null;\n}\n\ninterface IDBTransactionOptions {\n    durability?: IDBTransactionDurability;\n}\n\ninterface IDBVersionChangeEventInit extends EventInit {\n    newVersion?: number | null;\n    oldVersion?: number;\n}\n\ninterface ImageBitmapOptions {\n    colorSpaceConversion?: ColorSpaceConversion;\n    imageOrientation?: ImageOrientation;\n    premultiplyAlpha?: PremultiplyAlpha;\n    resizeHeight?: number;\n    resizeQuality?: ResizeQuality;\n    resizeWidth?: number;\n}\n\ninterface ImageBitmapRenderingContextSettings {\n    alpha?: boolean;\n}\n\ninterface ImageDataSettings {\n    colorSpace?: PredefinedColorSpace;\n}\n\ninterface ImageDecodeOptions {\n    completeFramesOnly?: boolean;\n    frameIndex?: number;\n}\n\ninterface ImageDecodeResult {\n    complete: boolean;\n    image: VideoFrame;\n}\n\ninterface ImageDecoderInit {\n    colorSpaceConversion?: ColorSpaceConversion;\n    data: ImageBufferSource;\n    desiredHeight?: number;\n    desiredWidth?: number;\n    preferAnimation?: boolean;\n    transfer?: ArrayBuffer[];\n    type: string;\n}\n\ninterface ImageEncodeOptions {\n    quality?: number;\n    type?: string;\n}\n\ninterface JsonWebKey {\n    alg?: string;\n    crv?: string;\n    d?: string;\n    dp?: string;\n    dq?: string;\n    e?: string;\n    ext?: boolean;\n    k?: string;\n    key_ops?: string[];\n    kty?: string;\n    n?: string;\n    oth?: RsaOtherPrimesInfo[];\n    p?: string;\n    q?: string;\n    qi?: string;\n    use?: string;\n    x?: string;\n    y?: string;\n}\n\ninterface KeyAlgorithm {\n    name: string;\n}\n\ninterface LockInfo {\n    clientId?: string;\n    mode?: LockMode;\n    name?: string;\n}\n\ninterface LockManagerSnapshot {\n    held?: LockInfo[];\n    pending?: LockInfo[];\n}\n\ninterface LockOptions {\n    ifAvailable?: boolean;\n    mode?: LockMode;\n    signal?: AbortSignal;\n    steal?: boolean;\n}\n\ninterface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaDecodingConfiguration;\n}\n\ninterface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaEncodingConfiguration;\n}\n\ninterface MediaCapabilitiesInfo {\n    powerEfficient: boolean;\n    smooth: boolean;\n    supported: boolean;\n}\n\ninterface MediaConfiguration {\n    audio?: AudioConfiguration;\n    video?: VideoConfiguration;\n}\n\ninterface MediaDecodingConfiguration extends MediaConfiguration {\n    type: MediaDecodingType;\n}\n\ninterface MediaEncodingConfiguration extends MediaConfiguration {\n    type: MediaEncodingType;\n}\n\ninterface MediaStreamTrackProcessorInit {\n    maxBufferSize?: number;\n}\n\ninterface MessageEventInit<T = any> extends EventInit {\n    data?: T;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: MessageEventSource | null;\n}\n\ninterface MultiCacheQueryOptions extends CacheQueryOptions {\n    cacheName?: string;\n}\n\ninterface NavigationPreloadState {\n    enabled?: boolean;\n    headerValue?: string;\n}\n\ninterface NotificationEventInit extends ExtendableEventInit {\n    action?: string;\n    notification: Notification;\n}\n\ninterface NotificationOptions {\n    badge?: string;\n    body?: string;\n    data?: any;\n    dir?: NotificationDirection;\n    icon?: string;\n    lang?: string;\n    requireInteraction?: boolean;\n    silent?: boolean | null;\n    tag?: string;\n}\n\ninterface OpusEncoderConfig {\n    complexity?: number;\n    format?: OpusBitstreamFormat;\n    frameDuration?: number;\n    packetlossperc?: number;\n    usedtx?: boolean;\n    useinbandfec?: boolean;\n}\n\ninterface Pbkdf2Params extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    iterations: number;\n    salt: BufferSource;\n}\n\ninterface PerformanceMarkOptions {\n    detail?: any;\n    startTime?: DOMHighResTimeStamp;\n}\n\ninterface PerformanceMeasureOptions {\n    detail?: any;\n    duration?: DOMHighResTimeStamp;\n    end?: string | DOMHighResTimeStamp;\n    start?: string | DOMHighResTimeStamp;\n}\n\ninterface PerformanceObserverInit {\n    buffered?: boolean;\n    entryTypes?: string[];\n    type?: string;\n}\n\ninterface PermissionDescriptor {\n    name: PermissionName;\n}\n\ninterface PlaneLayout {\n    offset: number;\n    stride: number;\n}\n\ninterface ProgressEventInit extends EventInit {\n    lengthComputable?: boolean;\n    loaded?: number;\n    total?: number;\n}\n\ninterface PromiseRejectionEventInit extends EventInit {\n    promise: Promise<any>;\n    reason?: any;\n}\n\ninterface PushEventInit extends ExtendableEventInit {\n    data?: PushMessageDataInit;\n}\n\ninterface PushSubscriptionJSON {\n    endpoint?: string;\n    expirationTime?: EpochTimeStamp | null;\n    keys?: Record<string, string>;\n}\n\ninterface PushSubscriptionOptionsInit {\n    applicationServerKey?: BufferSource | string | null;\n    userVisibleOnly?: boolean;\n}\n\ninterface QueuingStrategy<T = any> {\n    highWaterMark?: number;\n    size?: QueuingStrategySize<T>;\n}\n\ninterface QueuingStrategyInit {\n    /**\n     * Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n     *\n     * Note that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw.\n     */\n    highWaterMark: number;\n}\n\ninterface RTCEncodedAudioFrameMetadata {\n    contributingSources?: number[];\n    payloadType?: number;\n    sequenceNumber?: number;\n    synchronizationSource?: number;\n}\n\ninterface RTCEncodedVideoFrameMetadata {\n    contributingSources?: number[];\n    dependencies?: number[];\n    frameId?: number;\n    height?: number;\n    payloadType?: number;\n    spatialIndex?: number;\n    synchronizationSource?: number;\n    temporalIndex?: number;\n    timestamp?: number;\n    width?: number;\n}\n\ninterface ReadableStreamGetReaderOptions {\n    /**\n     * Creates a ReadableStreamBYOBReader and locks the stream to the new reader.\n     *\n     * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams, i.e. streams which were constructed specifically with the ability to handle "bring your own buffer" reading. The returned BYOB reader provides the ability to directly read individual chunks from the stream via its read() method, into developer-supplied buffers, allowing more precise control over allocation.\n     */\n    mode?: ReadableStreamReaderMode;\n}\n\ninterface ReadableStreamIteratorOptions {\n    /**\n     * Asynchronously iterates over the chunks in the stream\'s internal queue.\n     *\n     * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader. The lock will be released if the async iterator\'s return() method is called, e.g. by breaking out of the loop.\n     *\n     * By default, calling the async iterator\'s return() method will also cancel the stream. To prevent this, use the stream\'s values() method, passing true for the preventCancel option.\n     */\n    preventCancel?: boolean;\n}\n\ninterface ReadableStreamReadDoneResult<T> {\n    done: true;\n    value?: T;\n}\n\ninterface ReadableStreamReadValueResult<T> {\n    done: false;\n    value: T;\n}\n\ninterface ReadableWritablePair<R = any, W = any> {\n    readable: ReadableStream<R>;\n    /**\n     * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     */\n    writable: WritableStream<W>;\n}\n\ninterface RegistrationOptions {\n    scope?: string;\n    type?: WorkerType;\n    updateViaCache?: ServiceWorkerUpdateViaCache;\n}\n\ninterface ReportingObserverOptions {\n    buffered?: boolean;\n    types?: string[];\n}\n\ninterface RequestInit {\n    /** A BodyInit object or null to set request\'s body. */\n    body?: BodyInit | null;\n    /** A string indicating how the request will interact with the browser\'s cache to set request\'s cache. */\n    cache?: RequestCache;\n    /** A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials. */\n    credentials?: RequestCredentials;\n    /** A Headers object, an object literal, or an array of two-item arrays to set request\'s headers. */\n    headers?: HeadersInit;\n    /** A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity. */\n    integrity?: string;\n    /** A boolean to set request\'s keepalive. */\n    keepalive?: boolean;\n    /** A string to set request\'s method. */\n    method?: string;\n    /** A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode. */\n    mode?: RequestMode;\n    priority?: RequestPriority;\n    /** A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect. */\n    redirect?: RequestRedirect;\n    /** A string whose value is a same-origin URL, "about:client", or the empty string, to set request\'s referrer. */\n    referrer?: string;\n    /** A referrer policy to set request\'s referrerPolicy. */\n    referrerPolicy?: ReferrerPolicy;\n    /** An AbortSignal to set request\'s signal. */\n    signal?: AbortSignal | null;\n    /** Can only be null. Used to disassociate request from any Window. */\n    window?: null;\n}\n\ninterface ResponseInit {\n    headers?: HeadersInit;\n    status?: number;\n    statusText?: string;\n}\n\ninterface RsaHashedImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaKeyGenParams extends Algorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaOaepParams extends Algorithm {\n    label?: BufferSource;\n}\n\ninterface RsaOtherPrimesInfo {\n    d?: string;\n    r?: string;\n    t?: string;\n}\n\ninterface RsaPssParams extends Algorithm {\n    saltLength: number;\n}\n\ninterface SecurityPolicyViolationEventInit extends EventInit {\n    blockedURI?: string;\n    columnNumber?: number;\n    disposition?: SecurityPolicyViolationEventDisposition;\n    documentURI?: string;\n    effectiveDirective?: string;\n    lineNumber?: number;\n    originalPolicy?: string;\n    referrer?: string;\n    sample?: string;\n    sourceFile?: string;\n    statusCode?: number;\n    violatedDirective?: string;\n}\n\ninterface StorageEstimate {\n    quota?: number;\n    usage?: number;\n}\n\ninterface StreamPipeOptions {\n    preventAbort?: boolean;\n    preventCancel?: boolean;\n    /**\n     * Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     *\n     * Errors and closures of the source and destination streams propagate as follows:\n     *\n     * An error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source\'s error, or with any error that occurs during aborting the destination.\n     *\n     * An error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination\'s error, or with any error that occurs during canceling the source.\n     *\n     * When this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n     *\n     * If destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n     *\n     * The signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n     */\n    preventClose?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface StructuredSerializeOptions {\n    transfer?: Transferable[];\n}\n\ninterface TextDecodeOptions {\n    stream?: boolean;\n}\n\ninterface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n}\n\ninterface TextEncoderEncodeIntoResult {\n    read: number;\n    written: number;\n}\n\ninterface Transformer<I = any, O = any> {\n    flush?: TransformerFlushCallback<O>;\n    readableType?: undefined;\n    start?: TransformerStartCallback<O>;\n    transform?: TransformerTransformCallback<I, O>;\n    writableType?: undefined;\n}\n\ninterface UnderlyingByteSource {\n    autoAllocateChunkSize?: number;\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;\n    start?: (controller: ReadableByteStreamController) => any;\n    type: "bytes";\n}\n\ninterface UnderlyingDefaultSource<R = any> {\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: (controller: ReadableStreamDefaultController<R>) => void | PromiseLike<void>;\n    start?: (controller: ReadableStreamDefaultController<R>) => any;\n    type?: undefined;\n}\n\ninterface UnderlyingSink<W = any> {\n    abort?: UnderlyingSinkAbortCallback;\n    close?: UnderlyingSinkCloseCallback;\n    start?: UnderlyingSinkStartCallback;\n    type?: undefined;\n    write?: UnderlyingSinkWriteCallback<W>;\n}\n\ninterface UnderlyingSource<R = any> {\n    autoAllocateChunkSize?: number;\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: UnderlyingSourcePullCallback<R>;\n    start?: UnderlyingSourceStartCallback<R>;\n    type?: ReadableStreamType;\n}\n\ninterface VideoColorSpaceInit {\n    fullRange?: boolean | null;\n    matrix?: VideoMatrixCoefficients | null;\n    primaries?: VideoColorPrimaries | null;\n    transfer?: VideoTransferCharacteristics | null;\n}\n\ninterface VideoConfiguration {\n    bitrate: number;\n    colorGamut?: ColorGamut;\n    contentType: string;\n    framerate: number;\n    hasAlphaChannel?: boolean;\n    hdrMetadataType?: HdrMetadataType;\n    height: number;\n    scalabilityMode?: string;\n    transferFunction?: TransferFunction;\n    width: number;\n}\n\ninterface VideoDecoderConfig {\n    codec: string;\n    codedHeight?: number;\n    codedWidth?: number;\n    colorSpace?: VideoColorSpaceInit;\n    description?: AllowSharedBufferSource;\n    displayAspectHeight?: number;\n    displayAspectWidth?: number;\n    hardwareAcceleration?: HardwareAcceleration;\n    optimizeForLatency?: boolean;\n}\n\ninterface VideoDecoderInit {\n    error: WebCodecsErrorCallback;\n    output: VideoFrameOutputCallback;\n}\n\ninterface VideoDecoderSupport {\n    config?: VideoDecoderConfig;\n    supported?: boolean;\n}\n\ninterface VideoEncoderConfig {\n    alpha?: AlphaOption;\n    avc?: AvcEncoderConfig;\n    bitrate?: number;\n    bitrateMode?: VideoEncoderBitrateMode;\n    codec: string;\n    contentHint?: string;\n    displayHeight?: number;\n    displayWidth?: number;\n    framerate?: number;\n    hardwareAcceleration?: HardwareAcceleration;\n    height: number;\n    latencyMode?: LatencyMode;\n    scalabilityMode?: string;\n    width: number;\n}\n\ninterface VideoEncoderEncodeOptions {\n    avc?: VideoEncoderEncodeOptionsForAvc;\n    keyFrame?: boolean;\n}\n\ninterface VideoEncoderEncodeOptionsForAvc {\n    quantizer?: number | null;\n}\n\ninterface VideoEncoderInit {\n    error: WebCodecsErrorCallback;\n    output: EncodedVideoChunkOutputCallback;\n}\n\ninterface VideoEncoderSupport {\n    config?: VideoEncoderConfig;\n    supported?: boolean;\n}\n\ninterface VideoFrameBufferInit {\n    codedHeight: number;\n    codedWidth: number;\n    colorSpace?: VideoColorSpaceInit;\n    displayHeight?: number;\n    displayWidth?: number;\n    duration?: number;\n    format: VideoPixelFormat;\n    layout?: PlaneLayout[];\n    timestamp: number;\n    visibleRect?: DOMRectInit;\n}\n\ninterface VideoFrameCopyToOptions {\n    colorSpace?: PredefinedColorSpace;\n    format?: VideoPixelFormat;\n    layout?: PlaneLayout[];\n    rect?: DOMRectInit;\n}\n\ninterface VideoFrameInit {\n    alpha?: AlphaOption;\n    displayHeight?: number;\n    displayWidth?: number;\n    duration?: number;\n    timestamp?: number;\n    visibleRect?: DOMRectInit;\n}\n\ninterface WebGLContextAttributes {\n    alpha?: boolean;\n    antialias?: boolean;\n    depth?: boolean;\n    desynchronized?: boolean;\n    failIfMajorPerformanceCaveat?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    stencil?: boolean;\n}\n\ninterface WebGLContextEventInit extends EventInit {\n    statusMessage?: string;\n}\n\ninterface WebTransportCloseInfo {\n    closeCode?: number;\n    reason?: string;\n}\n\ninterface WebTransportErrorOptions {\n    source?: WebTransportErrorSource;\n    streamErrorCode?: number | null;\n}\n\ninterface WebTransportHash {\n    algorithm?: string;\n    value?: BufferSource;\n}\n\ninterface WebTransportOptions {\n    allowPooling?: boolean;\n    congestionControl?: WebTransportCongestionControl;\n    requireUnreliable?: boolean;\n    serverCertificateHashes?: WebTransportHash[];\n}\n\ninterface WebTransportSendStreamOptions {\n    sendOrder?: number;\n}\n\ninterface WorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\ninterface WriteParams {\n    data?: BufferSource | Blob | string | null;\n    position?: number | null;\n    size?: number | null;\n    type: WriteCommandType;\n}\n\n/**\n * The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays)\n */\ninterface ANGLE_instanced_arrays {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE) */\n    drawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE) */\n    drawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, primcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE) */\n    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88FE;\n}\n\n/**\n * A controller object that allows you to abort one or more DOM requests as and when desired.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController)\n */\ninterface AbortController {\n    /**\n     * Returns the AbortSignal object associated with this object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/signal)\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Invoking this method will set this object\'s AbortSignal\'s aborted flag and signal to any observers that the associated activity is to be aborted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortController/abort)\n     */\n    abort(reason?: any): void;\n}\n\ndeclare var AbortController: {\n    prototype: AbortController;\n    new(): AbortController;\n};\n\ninterface AbortSignalEventMap {\n    "abort": Event;\n}\n\n/**\n * A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)\n */\ninterface AbortSignal extends EventTarget {\n    /**\n     * Returns true if this AbortSignal\'s AbortController has signaled to abort, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)\n     */\n    readonly aborted: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event) */\n    onabort: ((this: AbortSignal, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason) */\n    readonly reason: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/throwIfAborted) */\n    throwIfAborted(): void;\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AbortSignal: {\n    prototype: AbortSignal;\n    new(): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_static) */\n    abort(reason?: any): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/any_static) */\n    any(signals: AbortSignal[]): AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/timeout_static) */\n    timeout(milliseconds: number): AbortSignal;\n};\n\ninterface AbstractWorkerEventMap {\n    "error": ErrorEvent;\n}\n\ninterface AbstractWorker {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/error_event) */\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface AnimationFrameProvider {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame) */\n    cancelAnimationFrame(handle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame) */\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData) */\ninterface AudioData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/duration) */\n    readonly duration: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/format) */\n    readonly format: AudioSampleFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfChannels) */\n    readonly numberOfChannels: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/numberOfFrames) */\n    readonly numberOfFrames: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/sampleRate) */\n    readonly sampleRate: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/allocationSize) */\n    allocationSize(options: AudioDataCopyToOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/clone) */\n    clone(): AudioData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioData/copyTo) */\n    copyTo(destination: AllowSharedBufferSource, options: AudioDataCopyToOptions): void;\n}\n\ndeclare var AudioData: {\n    prototype: AudioData;\n    new(init: AudioDataInit): AudioData;\n};\n\ninterface AudioDecoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder)\n */\ninterface AudioDecoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decodeQueueSize) */\n    readonly decodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/dequeue_event) */\n    ondequeue: ((this: AudioDecoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/configure) */\n    configure(config: AudioDecoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/decode) */\n    decode(chunk: EncodedAudioChunk): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof AudioDecoderEventMap>(type: K, listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioDecoderEventMap>(type: K, listener: (this: AudioDecoder, ev: AudioDecoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioDecoder: {\n    prototype: AudioDecoder;\n    new(init: AudioDecoderInit): AudioDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioDecoder/isConfigSupported_static) */\n    isConfigSupported(config: AudioDecoderConfig): Promise<AudioDecoderSupport>;\n};\n\ninterface AudioEncoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder)\n */\ninterface AudioEncoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encodeQueueSize) */\n    readonly encodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/dequeue_event) */\n    ondequeue: ((this: AudioEncoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/configure) */\n    configure(config: AudioEncoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/encode) */\n    encode(data: AudioData): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof AudioEncoderEventMap>(type: K, listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioEncoderEventMap>(type: K, listener: (this: AudioEncoder, ev: AudioEncoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioEncoder: {\n    prototype: AudioEncoder;\n    new(init: AudioEncoderInit): AudioEncoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/AudioEncoder/isConfigSupported_static) */\n    isConfigSupported(config: AudioEncoderConfig): Promise<AudioEncoderSupport>;\n};\n\n/**\n * A file-like object of immutable, raw data. Blobs represent data that isn\'t necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user\'s system.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)\n */\ninterface Blob {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/arrayBuffer) */\n    arrayBuffer(): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/bytes) */\n    bytes(): Promise<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/stream) */\n    stream(): ReadableStream<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n    text(): Promise<string>;\n}\n\ndeclare var Blob: {\n    prototype: Blob;\n    new(blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n};\n\ninterface Body {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body) */\n    readonly body: ReadableStream<Uint8Array> | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed) */\n    readonly bodyUsed: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/arrayBuffer) */\n    arrayBuffer(): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/blob) */\n    blob(): Promise<Blob>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bytes) */\n    bytes(): Promise<Uint8Array>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/formData) */\n    formData(): Promise<FormData>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/json) */\n    json(): Promise<any>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/text) */\n    text(): Promise<string>;\n}\n\ninterface BroadcastChannelEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel) */\ninterface BroadcastChannel extends EventTarget {\n    /**\n     * Returns the channel name (as passed to the constructor).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/name)\n     */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/message_event) */\n    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/messageerror_event) */\n    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /**\n     * Closes the BroadcastChannel object, opening it up to garbage collection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/close)\n     */\n    close(): void;\n    /**\n     * Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/BroadcastChannel/postMessage)\n     */\n    postMessage(message: any): void;\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BroadcastChannel: {\n    prototype: BroadcastChannel;\n    new(name: string): BroadcastChannel;\n};\n\n/**\n * This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy)\n */\ninterface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/highWaterMark) */\n    readonly highWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ByteLengthQueuingStrategy/size) */\n    readonly size: QueuingStrategySize<ArrayBufferView>;\n}\n\ndeclare var ByteLengthQueuingStrategy: {\n    prototype: ByteLengthQueuingStrategy;\n    new(init: QueuingStrategyInit): ByteLengthQueuingStrategy;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSImageValue) */\ninterface CSSImageValue extends CSSStyleValue {\n}\n\ndeclare var CSSImageValue: {\n    prototype: CSSImageValue;\n    new(): CSSImageValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeywordValue) */\ninterface CSSKeywordValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSKeywordValue/value) */\n    value: string;\n}\n\ndeclare var CSSKeywordValue: {\n    prototype: CSSKeywordValue;\n    new(value: string): CSSKeywordValue;\n};\n\ninterface CSSMathClamp extends CSSMathValue {\n    readonly lower: CSSNumericValue;\n    readonly upper: CSSNumericValue;\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathClamp: {\n    prototype: CSSMathClamp;\n    new(lower: CSSNumberish, value: CSSNumberish, upper: CSSNumberish): CSSMathClamp;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathInvert) */\ninterface CSSMathInvert extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathInvert/value) */\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathInvert: {\n    prototype: CSSMathInvert;\n    new(arg: CSSNumberish): CSSMathInvert;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMax) */\ninterface CSSMathMax extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMax/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathMax: {\n    prototype: CSSMathMax;\n    new(...args: CSSNumberish[]): CSSMathMax;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin) */\ninterface CSSMathMin extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathMin/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathMin: {\n    prototype: CSSMathMin;\n    new(...args: CSSNumberish[]): CSSMathMin;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate) */\ninterface CSSMathNegate extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathNegate/value) */\n    readonly value: CSSNumericValue;\n}\n\ndeclare var CSSMathNegate: {\n    prototype: CSSMathNegate;\n    new(arg: CSSNumberish): CSSMathNegate;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathProduct) */\ninterface CSSMathProduct extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathProduct/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathProduct: {\n    prototype: CSSMathProduct;\n    new(...args: CSSNumberish[]): CSSMathProduct;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum) */\ninterface CSSMathSum extends CSSMathValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathSum/values) */\n    readonly values: CSSNumericArray;\n}\n\ndeclare var CSSMathSum: {\n    prototype: CSSMathSum;\n    new(...args: CSSNumberish[]): CSSMathSum;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue) */\ninterface CSSMathValue extends CSSNumericValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMathValue/operator) */\n    readonly operator: CSSMathOperator;\n}\n\ndeclare var CSSMathValue: {\n    prototype: CSSMathValue;\n    new(): CSSMathValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMatrixComponent) */\ninterface CSSMatrixComponent extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSMatrixComponent/matrix) */\n    matrix: DOMMatrix;\n}\n\ndeclare var CSSMatrixComponent: {\n    prototype: CSSMatrixComponent;\n    new(matrix: DOMMatrixReadOnly, options?: CSSMatrixComponentOptions): CSSMatrixComponent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericArray) */\ninterface CSSNumericArray {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericArray/length) */\n    readonly length: number;\n    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, thisArg?: any): void;\n    [index: number]: CSSNumericValue;\n}\n\ndeclare var CSSNumericArray: {\n    prototype: CSSNumericArray;\n    new(): CSSNumericArray;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue) */\ninterface CSSNumericValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/add) */\n    add(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/div) */\n    div(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/equals) */\n    equals(...value: CSSNumberish[]): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/max) */\n    max(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/min) */\n    min(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/mul) */\n    mul(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/sub) */\n    sub(...values: CSSNumberish[]): CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/to) */\n    to(unit: string): CSSUnitValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/toSum) */\n    toSum(...units: string[]): CSSMathSum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSNumericValue/type) */\n    type(): CSSNumericType;\n}\n\ndeclare var CSSNumericValue: {\n    prototype: CSSNumericValue;\n    new(): CSSNumericValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPerspective) */\ninterface CSSPerspective extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSPerspective/length) */\n    length: CSSPerspectiveValue;\n}\n\ndeclare var CSSPerspective: {\n    prototype: CSSPerspective;\n    new(length: CSSPerspectiveValue): CSSPerspective;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate) */\ninterface CSSRotate extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/angle) */\n    angle: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/x) */\n    x: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/y) */\n    y: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSRotate/z) */\n    z: CSSNumberish;\n}\n\ndeclare var CSSRotate: {\n    prototype: CSSRotate;\n    new(angle: CSSNumericValue): CSSRotate;\n    new(x: CSSNumberish, y: CSSNumberish, z: CSSNumberish, angle: CSSNumericValue): CSSRotate;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale) */\ninterface CSSScale extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/x) */\n    x: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/y) */\n    y: CSSNumberish;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSScale/z) */\n    z: CSSNumberish;\n}\n\ndeclare var CSSScale: {\n    prototype: CSSScale;\n    new(x: CSSNumberish, y: CSSNumberish, z?: CSSNumberish): CSSScale;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew) */\ninterface CSSSkew extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ax) */\n    ax: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkew/ay) */\n    ay: CSSNumericValue;\n}\n\ndeclare var CSSSkew: {\n    prototype: CSSSkew;\n    new(ax: CSSNumericValue, ay: CSSNumericValue): CSSSkew;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewX) */\ninterface CSSSkewX extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewX/ax) */\n    ax: CSSNumericValue;\n}\n\ndeclare var CSSSkewX: {\n    prototype: CSSSkewX;\n    new(ax: CSSNumericValue): CSSSkewX;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewY) */\ninterface CSSSkewY extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSSkewY/ay) */\n    ay: CSSNumericValue;\n}\n\ndeclare var CSSSkewY: {\n    prototype: CSSSkewY;\n    new(ay: CSSNumericValue): CSSSkewY;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSStyleValue) */\ninterface CSSStyleValue {\n    toString(): string;\n}\n\ndeclare var CSSStyleValue: {\n    prototype: CSSStyleValue;\n    new(): CSSStyleValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent) */\ninterface CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/is2D) */\n    is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformComponent/toMatrix) */\n    toMatrix(): DOMMatrix;\n    toString(): string;\n}\n\ndeclare var CSSTransformComponent: {\n    prototype: CSSTransformComponent;\n    new(): CSSTransformComponent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue) */\ninterface CSSTransformValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/is2D) */\n    readonly is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTransformValue/toMatrix) */\n    toMatrix(): DOMMatrix;\n    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) => void, thisArg?: any): void;\n    [index: number]: CSSTransformComponent;\n}\n\ndeclare var CSSTransformValue: {\n    prototype: CSSTransformValue;\n    new(transforms: CSSTransformComponent[]): CSSTransformValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate) */\ninterface CSSTranslate extends CSSTransformComponent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/x) */\n    x: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/y) */\n    y: CSSNumericValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSTranslate/z) */\n    z: CSSNumericValue;\n}\n\ndeclare var CSSTranslate: {\n    prototype: CSSTranslate;\n    new(x: CSSNumericValue, y: CSSNumericValue, z?: CSSNumericValue): CSSTranslate;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue) */\ninterface CSSUnitValue extends CSSNumericValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/unit) */\n    readonly unit: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnitValue/value) */\n    value: number;\n}\n\ndeclare var CSSUnitValue: {\n    prototype: CSSUnitValue;\n    new(value: number, unit: string): CSSUnitValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnparsedValue) */\ninterface CSSUnparsedValue extends CSSStyleValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSUnparsedValue/length) */\n    readonly length: number;\n    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => void, thisArg?: any): void;\n    [index: number]: CSSUnparsedSegment;\n}\n\ndeclare var CSSUnparsedValue: {\n    prototype: CSSUnparsedValue;\n    new(members: CSSUnparsedSegment[]): CSSUnparsedValue;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue) */\ninterface CSSVariableReferenceValue {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/fallback) */\n    readonly fallback: CSSUnparsedValue | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CSSVariableReferenceValue/variable) */\n    variable: string;\n}\n\ndeclare var CSSVariableReferenceValue: {\n    prototype: CSSVariableReferenceValue;\n    new(variable: string, fallback?: CSSUnparsedValue | null): CSSVariableReferenceValue;\n};\n\n/**\n * Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don\'t have to use it in conjunction with service workers, even though it is defined in the service worker spec.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache)\n */\ninterface Cache {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/add) */\n    add(request: RequestInfo | URL): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */\n    addAll(requests: RequestInfo[]): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/delete) */\n    delete(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/keys) */\n    keys(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Request>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/match) */\n    match(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<Response | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/matchAll) */\n    matchAll(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Response>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/put) */\n    put(request: RequestInfo | URL, response: Response): Promise<void>;\n}\n\ndeclare var Cache: {\n    prototype: Cache;\n    new(): Cache;\n};\n\n/**\n * The storage for Cache objects.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage)\n */\ninterface CacheStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/delete) */\n    delete(cacheName: string): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/has) */\n    has(cacheName: string): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/keys) */\n    keys(): Promise<string[]>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/match) */\n    match(request: RequestInfo | URL, options?: MultiCacheQueryOptions): Promise<Response | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CacheStorage/open) */\n    open(cacheName: string): Promise<Cache>;\n}\n\ndeclare var CacheStorage: {\n    prototype: CacheStorage;\n    new(): CacheStorage;\n};\n\ninterface CanvasCompositing {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalAlpha) */\n    globalAlpha: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation) */\n    globalCompositeOperation: GlobalCompositeOperation;\n}\n\ninterface CanvasDrawImage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/drawImage) */\n    drawImage(image: CanvasImageSource, dx: number, dy: number): void;\n    drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number): void;\n    drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number): void;\n}\n\ninterface CanvasDrawPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/beginPath) */\n    beginPath(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clip) */\n    clip(fillRule?: CanvasFillRule): void;\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fill) */\n    fill(fillRule?: CanvasFillRule): void;\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInPath) */\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isPointInStroke) */\n    isPointInStroke(x: number, y: number): boolean;\n    isPointInStroke(path: Path2D, x: number, y: number): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/stroke) */\n    stroke(): void;\n    stroke(path: Path2D): void;\n}\n\ninterface CanvasFillStrokeStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillStyle) */\n    fillStyle: string | CanvasGradient | CanvasPattern;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeStyle) */\n    strokeStyle: string | CanvasGradient | CanvasPattern;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createConicGradient) */\n    createConicGradient(startAngle: number, x: number, y: number): CanvasGradient;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createLinearGradient) */\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createPattern) */\n    createPattern(image: CanvasImageSource, repetition: string | null): CanvasPattern | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createRadialGradient) */\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n}\n\ninterface CanvasFilters {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/filter) */\n    filter: string;\n}\n\n/**\n * An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasGradient)\n */\ninterface CanvasGradient {\n    /**\n     * Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n     *\n     * Throws an "IndexSizeError" DOMException if the offset is out of range. Throws a "SyntaxError" DOMException if the color cannot be parsed.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasGradient/addColorStop)\n     */\n    addColorStop(offset: number, color: string): void;\n}\n\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new(): CanvasGradient;\n};\n\ninterface CanvasImageData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/createImageData) */\n    createImageData(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    createImageData(imagedata: ImageData): ImageData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getImageData) */\n    getImageData(sx: number, sy: number, sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/putImageData) */\n    putImageData(imagedata: ImageData, dx: number, dy: number): void;\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void;\n}\n\ninterface CanvasImageSmoothing {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled) */\n    imageSmoothingEnabled: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality) */\n    imageSmoothingQuality: ImageSmoothingQuality;\n}\n\ninterface CanvasPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arc) */\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/arcTo) */\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo) */\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/closePath) */\n    closePath(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/ellipse) */\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineTo) */\n    lineTo(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/moveTo) */\n    moveTo(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo) */\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rect) */\n    rect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/roundRect) */\n    roundRect(x: number, y: number, w: number, h: number, radii?: number | DOMPointInit | (number | DOMPointInit)[]): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineCap) */\n    lineCap: CanvasLineCap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineDashOffset) */\n    lineDashOffset: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineJoin) */\n    lineJoin: CanvasLineJoin;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/lineWidth) */\n    lineWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/miterLimit) */\n    miterLimit: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getLineDash) */\n    getLineDash(): number[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */\n    setLineDash(segments: number[]): void;\n}\n\n/**\n * An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasPattern)\n */\ninterface CanvasPattern {\n    /**\n     * Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasPattern/setTransform)\n     */\n    setTransform(transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new(): CanvasPattern;\n};\n\ninterface CanvasRect {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/clearRect) */\n    clearRect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillRect) */\n    fillRect(x: number, y: number, w: number, h: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeRect) */\n    strokeRect(x: number, y: number, w: number, h: number): void;\n}\n\ninterface CanvasShadowStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowBlur) */\n    shadowBlur: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowColor) */\n    shadowColor: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX) */\n    shadowOffsetX: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY) */\n    shadowOffsetY: number;\n}\n\ninterface CanvasState {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/isContextLost) */\n    isContextLost(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/reset) */\n    reset(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/restore) */\n    restore(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/save) */\n    save(): void;\n}\n\ninterface CanvasText {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fillText) */\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/measureText) */\n    measureText(text: string): TextMetrics;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/strokeText) */\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\n}\n\ninterface CanvasTextDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/direction) */\n    direction: CanvasDirection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/font) */\n    font: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontKerning) */\n    fontKerning: CanvasFontKerning;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontStretch) */\n    fontStretch: CanvasFontStretch;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps) */\n    fontVariantCaps: CanvasFontVariantCaps;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/letterSpacing) */\n    letterSpacing: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textAlign) */\n    textAlign: CanvasTextAlign;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textBaseline) */\n    textBaseline: CanvasTextBaseline;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/textRendering) */\n    textRendering: CanvasTextRendering;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/wordSpacing) */\n    wordSpacing: string;\n}\n\ninterface CanvasTransform {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/getTransform) */\n    getTransform(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/resetTransform) */\n    resetTransform(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rotate) */\n    rotate(angle: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/scale) */\n    scale(x: number, y: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setTransform) */\n    setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    setTransform(transform?: DOMMatrix2DInit): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/transform) */\n    transform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/translate) */\n    translate(x: number, y: number): void;\n}\n\n/**\n * The Client\xa0interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific\xa0WindowClient. You can get\xa0Client/WindowClient\xa0objects from methods such as Clients.matchAll() and\xa0Clients.get().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client)\n */\ninterface Client {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/frameType) */\n    readonly frameType: FrameType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/id) */\n    readonly id: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/type) */\n    readonly type: ClientTypes;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/url) */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Client/postMessage) */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n}\n\ndeclare var Client: {\n    prototype: Client;\n    new(): Client;\n};\n\n/**\n * Provides access to\xa0Client\xa0objects. Access it\xa0via self.clients\xa0within a\xa0service worker.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clients)\n */\ninterface Clients {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clients/claim) */\n    claim(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clients/get) */\n    get(id: string): Promise<Client | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clients/matchAll) */\n    matchAll<T extends ClientQueryOptions>(options?: T): Promise<ReadonlyArray<T["type"] extends "window" ? WindowClient : Client>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Clients/openWindow) */\n    openWindow(url: string | URL): Promise<WindowClient | null>;\n}\n\ndeclare var Clients: {\n    prototype: Clients;\n    new(): Clients;\n};\n\n/**\n * A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object\'s onclose attribute.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent)\n */\ninterface CloseEvent extends Event {\n    /**\n     * Returns the WebSocket connection close code provided by the server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/code)\n     */\n    readonly code: number;\n    /**\n     * Returns the WebSocket connection close reason provided by the server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/reason)\n     */\n    readonly reason: string;\n    /**\n     * Returns true if the connection closed cleanly; false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CloseEvent/wasClean)\n     */\n    readonly wasClean: boolean;\n}\n\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream) */\ninterface CompressionStream extends GenericTransformStream {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var CompressionStream: {\n    prototype: CompressionStream;\n    new(format: CompressionFormat): CompressionStream;\n};\n\n/**\n * This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy)\n */\ninterface CountQueuingStrategy extends QueuingStrategy {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/highWaterMark) */\n    readonly highWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CountQueuingStrategy/size) */\n    readonly size: QueuingStrategySize;\n}\n\ndeclare var CountQueuingStrategy: {\n    prototype: CountQueuingStrategy;\n    new(init: QueuingStrategyInit): CountQueuingStrategy;\n};\n\n/**\n * Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto)\n */\ninterface Crypto {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/subtle)\n     */\n    readonly subtle: SubtleCrypto;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/getRandomValues) */\n    getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Crypto/randomUUID)\n     */\n    randomUUID(): `${string}-${string}-${string}-${string}-${string}`;\n}\n\ndeclare var Crypto: {\n    prototype: Crypto;\n    new(): Crypto;\n};\n\n/**\n * The CryptoKey dictionary of the Web Crypto API represents a cryptographic key.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey)\n */\ninterface CryptoKey {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/algorithm) */\n    readonly algorithm: KeyAlgorithm;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/extractable) */\n    readonly extractable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/type) */\n    readonly type: KeyType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CryptoKey/usages) */\n    readonly usages: KeyUsage[];\n}\n\ndeclare var CryptoKey: {\n    prototype: CryptoKey;\n    new(): CryptoKey;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent) */\ninterface CustomEvent<T = any> extends Event {\n    /**\n     * Returns any custom data event was created with. Typically used for synthetic events.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent/detail)\n     */\n    readonly detail: T;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CustomEvent/initCustomEvent)\n     */\n    initCustomEvent(type: string, bubbles?: boolean, cancelable?: boolean, detail?: T): void;\n}\n\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new<T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\n};\n\n/**\n * An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException)\n */\ninterface DOMException extends Error {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/code)\n     */\n    readonly code: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/message) */\n    readonly message: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMException/name) */\n    readonly name: string;\n    readonly INDEX_SIZE_ERR: 1;\n    readonly DOMSTRING_SIZE_ERR: 2;\n    readonly HIERARCHY_REQUEST_ERR: 3;\n    readonly WRONG_DOCUMENT_ERR: 4;\n    readonly INVALID_CHARACTER_ERR: 5;\n    readonly NO_DATA_ALLOWED_ERR: 6;\n    readonly NO_MODIFICATION_ALLOWED_ERR: 7;\n    readonly NOT_FOUND_ERR: 8;\n    readonly NOT_SUPPORTED_ERR: 9;\n    readonly INUSE_ATTRIBUTE_ERR: 10;\n    readonly INVALID_STATE_ERR: 11;\n    readonly SYNTAX_ERR: 12;\n    readonly INVALID_MODIFICATION_ERR: 13;\n    readonly NAMESPACE_ERR: 14;\n    readonly INVALID_ACCESS_ERR: 15;\n    readonly VALIDATION_ERR: 16;\n    readonly TYPE_MISMATCH_ERR: 17;\n    readonly SECURITY_ERR: 18;\n    readonly NETWORK_ERR: 19;\n    readonly ABORT_ERR: 20;\n    readonly URL_MISMATCH_ERR: 21;\n    readonly QUOTA_EXCEEDED_ERR: 22;\n    readonly TIMEOUT_ERR: 23;\n    readonly INVALID_NODE_TYPE_ERR: 24;\n    readonly DATA_CLONE_ERR: 25;\n}\n\ndeclare var DOMException: {\n    prototype: DOMException;\n    new(message?: string, name?: string): DOMException;\n    readonly INDEX_SIZE_ERR: 1;\n    readonly DOMSTRING_SIZE_ERR: 2;\n    readonly HIERARCHY_REQUEST_ERR: 3;\n    readonly WRONG_DOCUMENT_ERR: 4;\n    readonly INVALID_CHARACTER_ERR: 5;\n    readonly NO_DATA_ALLOWED_ERR: 6;\n    readonly NO_MODIFICATION_ALLOWED_ERR: 7;\n    readonly NOT_FOUND_ERR: 8;\n    readonly NOT_SUPPORTED_ERR: 9;\n    readonly INUSE_ATTRIBUTE_ERR: 10;\n    readonly INVALID_STATE_ERR: 11;\n    readonly SYNTAX_ERR: 12;\n    readonly INVALID_MODIFICATION_ERR: 13;\n    readonly NAMESPACE_ERR: 14;\n    readonly INVALID_ACCESS_ERR: 15;\n    readonly VALIDATION_ERR: 16;\n    readonly TYPE_MISMATCH_ERR: 17;\n    readonly SECURITY_ERR: 18;\n    readonly NETWORK_ERR: 19;\n    readonly ABORT_ERR: 20;\n    readonly URL_MISMATCH_ERR: 21;\n    readonly QUOTA_EXCEEDED_ERR: 22;\n    readonly TIMEOUT_ERR: 23;\n    readonly INVALID_NODE_TYPE_ERR: 24;\n    readonly DATA_CLONE_ERR: 25;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix) */\ninterface DOMMatrix extends DOMMatrixReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    a: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    b: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    c: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    d: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    e: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    f: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m11: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m12: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m13: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m14: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m21: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m22: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m23: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m24: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m31: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m32: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m33: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m34: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m41: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m42: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m43: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix#instance_properties) */\n    m44: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/invertSelf) */\n    invertSelf(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/multiplySelf) */\n    multiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/preMultiplySelf) */\n    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    rotateAxisAngleSelf(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/rotateSelf) */\n    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    scale3dSelf(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scaleSelf(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewXSelf) */\n    skewXSelf(sx?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/skewYSelf) */\n    skewYSelf(sy?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrix/translateSelf) */\n    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrix: {\n    prototype: DOMMatrix;\n    new(init?: string | number[]): DOMMatrix;\n    fromFloat32Array(array32: Float32Array): DOMMatrix;\n    fromFloat64Array(array64: Float64Array): DOMMatrix;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrix;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly) */\ninterface DOMMatrixReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly a: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly b: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly c: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly d: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly e: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly f: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/is2D) */\n    readonly is2D: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/isIdentity) */\n    readonly isIdentity: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m11: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m12: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m13: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m14: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m21: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m22: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m23: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m24: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m31: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m32: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m33: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m34: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m41: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m42: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m43: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly#instance_properties) */\n    readonly m44: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipX) */\n    flipX(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/flipY) */\n    flipY(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/inverse) */\n    inverse(): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/multiply) */\n    multiply(other?: DOMMatrixInit): DOMMatrix;\n    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    rotateAxisAngle(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVector(x?: number, y?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/scale) */\n    scale(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scale3d(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** @deprecated */\n    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;\n    skewX(sx?: number): DOMMatrix;\n    skewY(sy?: number): DOMMatrix;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat32Array) */\n    toFloat32Array(): Float32Array;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toFloat64Array) */\n    toFloat64Array(): Float64Array;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/toJSON) */\n    toJSON(): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/transformPoint) */\n    transformPoint(point?: DOMPointInit): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMMatrixReadOnly/translate) */\n    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrixReadOnly: {\n    prototype: DOMMatrixReadOnly;\n    new(init?: string | number[]): DOMMatrixReadOnly;\n    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;\n    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint) */\ninterface DOMPoint extends DOMPointReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/w) */\n    w: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/x) */\n    x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/y) */\n    y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/z) */\n    z: number;\n}\n\ndeclare var DOMPoint: {\n    prototype: DOMPoint;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPoint/fromPoint_static) */\n    fromPoint(other?: DOMPointInit): DOMPoint;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly) */\ninterface DOMPointReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/w) */\n    readonly w: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/z) */\n    readonly z: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/matrixTransform) */\n    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMPointReadOnly: {\n    prototype: DOMPointReadOnly;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMPointReadOnly/fromPoint_static) */\n    fromPoint(other?: DOMPointInit): DOMPointReadOnly;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad) */\ninterface DOMQuad {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p1) */\n    readonly p1: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p2) */\n    readonly p2: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p3) */\n    readonly p3: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/p4) */\n    readonly p4: DOMPoint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/getBounds) */\n    getBounds(): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMQuad/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMQuad: {\n    prototype: DOMQuad;\n    new(p1?: DOMPointInit, p2?: DOMPointInit, p3?: DOMPointInit, p4?: DOMPointInit): DOMQuad;\n    fromQuad(other?: DOMQuadInit): DOMQuad;\n    fromRect(other?: DOMRectInit): DOMQuad;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect) */\ninterface DOMRect extends DOMRectReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/height) */\n    height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/width) */\n    width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/x) */\n    x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/y) */\n    y: number;\n}\n\ndeclare var DOMRect: {\n    prototype: DOMRect;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRect;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRect/fromRect_static) */\n    fromRect(other?: DOMRectInit): DOMRect;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly) */\ninterface DOMRectReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/bottom) */\n    readonly bottom: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/height) */\n    readonly height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/left) */\n    readonly left: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/right) */\n    readonly right: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/top) */\n    readonly top: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/width) */\n    readonly width: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/x) */\n    readonly x: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/y) */\n    readonly y: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var DOMRectReadOnly: {\n    prototype: DOMRectReadOnly;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMRectReadOnly/fromRect_static) */\n    fromRect(other?: DOMRectInit): DOMRectReadOnly;\n};\n\n/**\n * A type returned by some APIs which contains a list of DOMString (strings).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList)\n */\ninterface DOMStringList {\n    /**\n     * Returns the number of strings in strings.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/length)\n     */\n    readonly length: number;\n    /**\n     * Returns true if strings contains string, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/contains)\n     */\n    contains(string: string): boolean;\n    /**\n     * Returns the string with index index from strings.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DOMStringList/item)\n     */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new(): DOMStringList;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DecompressionStream) */\ninterface DecompressionStream extends GenericTransformStream {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var DecompressionStream: {\n    prototype: DecompressionStream;\n    new(format: CompressionFormat): DecompressionStream;\n};\n\ninterface DedicatedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap, MessageEventTargetEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n    "rtctransform": RTCTransformEvent;\n}\n\n/**\n * (the Worker global scope) is accessible through the self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope)\n */\ninterface DedicatedWorkerGlobalScope extends WorkerGlobalScope, AnimationFrameProvider, MessageEventTarget<DedicatedWorkerGlobalScope> {\n    /**\n     * Returns dedicatedWorkerGlobal\'s name, i.e. the value given to the Worker constructor. Primarily useful for debugging.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/name)\n     */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event) */\n    onrtctransform: ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any) | null;\n    /**\n     * Aborts dedicatedWorkerGlobal.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/close)\n     */\n    close(): void;\n    /**\n     * Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var DedicatedWorkerGlobalScope: {\n    prototype: DedicatedWorkerGlobalScope;\n    new(): DedicatedWorkerGlobalScope;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_blend_minmax) */\ninterface EXT_blend_minmax {\n    readonly MIN_EXT: 0x8007;\n    readonly MAX_EXT: 0x8008;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_color_buffer_float) */\ninterface EXT_color_buffer_float {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_color_buffer_half_float) */\ninterface EXT_color_buffer_half_float {\n    readonly RGBA16F_EXT: 0x881A;\n    readonly RGB16F_EXT: 0x881B;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;\n    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_float_blend) */\ninterface EXT_float_blend {\n}\n\n/**\n * The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_frag_depth)\n */\ninterface EXT_frag_depth {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_sRGB) */\ninterface EXT_sRGB {\n    readonly SRGB_EXT: 0x8C40;\n    readonly SRGB_ALPHA_EXT: 0x8C42;\n    readonly SRGB8_ALPHA8_EXT: 0x8C43;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_shader_texture_lod) */\ninterface EXT_shader_texture_lod {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_compression_bptc) */\ninterface EXT_texture_compression_bptc {\n    readonly COMPRESSED_RGBA_BPTC_UNORM_EXT: 0x8E8C;\n    readonly COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT: 0x8E8D;\n    readonly COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT: 0x8E8E;\n    readonly COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT: 0x8E8F;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_compression_rgtc) */\ninterface EXT_texture_compression_rgtc {\n    readonly COMPRESSED_RED_RGTC1_EXT: 0x8DBB;\n    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8DBC;\n    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8DBD;\n    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8DBE;\n}\n\n/**\n * The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_filter_anisotropic)\n */\ninterface EXT_texture_filter_anisotropic {\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE;\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EXT_texture_norm16) */\ninterface EXT_texture_norm16 {\n    readonly R16_EXT: 0x822A;\n    readonly RG16_EXT: 0x822C;\n    readonly RGB16_EXT: 0x8054;\n    readonly RGBA16_EXT: 0x805B;\n    readonly R16_SNORM_EXT: 0x8F98;\n    readonly RG16_SNORM_EXT: 0x8F99;\n    readonly RGB16_SNORM_EXT: 0x8F9A;\n    readonly RGBA16_SNORM_EXT: 0x8F9B;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk) */\ninterface EncodedAudioChunk {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/byteLength) */\n    readonly byteLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/type) */\n    readonly type: EncodedAudioChunkType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedAudioChunk/copyTo) */\n    copyTo(destination: AllowSharedBufferSource): void;\n}\n\ndeclare var EncodedAudioChunk: {\n    prototype: EncodedAudioChunk;\n    new(init: EncodedAudioChunkInit): EncodedAudioChunk;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk) */\ninterface EncodedVideoChunk {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/byteLength) */\n    readonly byteLength: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/type) */\n    readonly type: EncodedVideoChunkType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EncodedVideoChunk/copyTo) */\n    copyTo(destination: AllowSharedBufferSource): void;\n}\n\ndeclare var EncodedVideoChunk: {\n    prototype: EncodedVideoChunk;\n    new(init: EncodedVideoChunkInit): EncodedVideoChunk;\n};\n\n/**\n * Events providing information related to errors in scripts or in files.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent)\n */\ninterface ErrorEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/colno) */\n    readonly colno: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/error) */\n    readonly error: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/filename) */\n    readonly filename: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/lineno) */\n    readonly lineno: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ErrorEvent/message) */\n    readonly message: string;\n}\n\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new(type: string, eventInitDict?: ErrorEventInit): ErrorEvent;\n};\n\n/**\n * An event which takes place in the DOM.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event)\n */\ninterface Event {\n    /**\n     * Returns true or false depending on how event was initialized. True if event goes through its target\'s ancestors in reverse tree order, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/bubbles)\n     */\n    readonly bubbles: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/cancelBubble)\n     */\n    cancelBubble: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/cancelable)\n     */\n    readonly cancelable: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composed)\n     */\n    readonly composed: boolean;\n    /**\n     * Returns the object whose event listener\'s callback is currently being invoked.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/currentTarget)\n     */\n    readonly currentTarget: EventTarget | null;\n    /**\n     * Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/defaultPrevented)\n     */\n    readonly defaultPrevented: boolean;\n    /**\n     * Returns the event\'s phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/eventPhase)\n     */\n    readonly eventPhase: number;\n    /**\n     * Returns true if event was dispatched by the user agent, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/isTrusted)\n     */\n    readonly isTrusted: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/returnValue)\n     */\n    returnValue: boolean;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/srcElement)\n     */\n    readonly srcElement: EventTarget | null;\n    /**\n     * Returns the object to which event is dispatched (its target).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/target)\n     */\n    readonly target: EventTarget | null;\n    /**\n     * Returns the event\'s timestamp as the number of milliseconds measured relative to the time origin.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/timeStamp)\n     */\n    readonly timeStamp: DOMHighResTimeStamp;\n    /**\n     * Returns the type of event, e.g. "click", "hashchange", or "submit".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/type)\n     */\n    readonly type: string;\n    /**\n     * Returns the invocation target objects of event\'s path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root\'s mode is "closed" that are not reachable from event\'s currentTarget.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/composedPath)\n     */\n    composedPath(): EventTarget[];\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/initEvent)\n     */\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\n    /**\n     * If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/preventDefault)\n     */\n    preventDefault(): void;\n    /**\n     * Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopImmediatePropagation)\n     */\n    stopImmediatePropagation(): void;\n    /**\n     * When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Event/stopPropagation)\n     */\n    stopPropagation(): void;\n    readonly NONE: 0;\n    readonly CAPTURING_PHASE: 1;\n    readonly AT_TARGET: 2;\n    readonly BUBBLING_PHASE: 3;\n}\n\ndeclare var Event: {\n    prototype: Event;\n    new(type: string, eventInitDict?: EventInit): Event;\n    readonly NONE: 0;\n    readonly CAPTURING_PHASE: 1;\n    readonly AT_TARGET: 2;\n    readonly BUBBLING_PHASE: 3;\n};\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\ninterface EventListenerObject {\n    handleEvent(object: Event): void;\n}\n\ninterface EventSourceEventMap {\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource) */\ninterface EventSource extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/error_event) */\n    onerror: ((this: EventSource, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/message_event) */\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/open_event) */\n    onopen: ((this: EventSource, ev: Event) => any) | null;\n    /**\n     * Returns the state of this EventSource object\'s connection. It can have the values described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL providing the event stream.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/url)\n     */\n    readonly url: string;\n    /**\n     * Returns true if the credentials mode for connection requests to the URL providing the event stream is set to "include", and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/withCredentials)\n     */\n    readonly withCredentials: boolean;\n    /**\n     * Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventSource/close)\n     */\n    close(): void;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSED: 2;\n    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var EventSource: {\n    prototype: EventSource;\n    new(url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSED: 2;\n};\n\n/**\n * EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget)\n */\ninterface EventTarget {\n    /**\n     * Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n     *\n     * The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options\'s capture.\n     *\n     * When set to true, options\'s capture prevents callback from being invoked when the event\'s eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event\'s eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event\'s eventPhase attribute value is AT_TARGET.\n     *\n     * When set to true, options\'s passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in \xa7 2.8 Observing event listeners.\n     *\n     * When set to true, options\'s once indicates that the callback will only be invoked once after which the event listener will be removed.\n     *\n     * If an AbortSignal is passed for options\'s signal, then the event listener will be removed when signal is aborted.\n     *\n     * The event listener is appended to target\'s event listener list and is not appended if it has the same type, callback, and capture.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\n     */\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: AddEventListenerOptions | boolean): void;\n    /**\n     * Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)\n     */\n    dispatchEvent(event: Event): boolean;\n    /**\n     * Removes the event listener in target\'s event listener list with the same type, callback, and options.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\n     */\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\n}\n\ndeclare var EventTarget: {\n    prototype: EventTarget;\n    new(): EventTarget;\n};\n\n/**\n * Extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableEvent)\n */\ninterface ExtendableEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableEvent/waitUntil) */\n    waitUntil(f: Promise<any>): void;\n}\n\ndeclare var ExtendableEvent: {\n    prototype: ExtendableEvent;\n    new(type: string, eventInitDict?: ExtendableEventInit): ExtendableEvent;\n};\n\n/**\n * This ServiceWorker API interface represents the event object of a message event fired on a service worker (when a channel message is received on the ServiceWorkerGlobalScope from another context) — extends the lifetime of such events.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent)\n */\ninterface ExtendableMessageEvent extends ExtendableEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/data) */\n    readonly data: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/lastEventId) */\n    readonly lastEventId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/ports) */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ExtendableMessageEvent/source) */\n    readonly source: Client | ServiceWorker | MessagePort | null;\n}\n\ndeclare var ExtendableMessageEvent: {\n    prototype: ExtendableMessageEvent;\n    new(type: string, eventInitDict?: ExtendableMessageEventInit): ExtendableMessageEvent;\n};\n\n/**\n * This is the event type for fetch\xa0events dispatched on the\xa0service worker global scope. It contains information about the fetch, including the\xa0request and how the receiver will treat the response. It provides the event.respondWith() method, which allows us to provide a response to this fetch.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent)\n */\ninterface FetchEvent extends ExtendableEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/clientId) */\n    readonly clientId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/handled) */\n    readonly handled: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/preloadResponse) */\n    readonly preloadResponse: Promise<any>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/request) */\n    readonly request: Request;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/resultingClientId) */\n    readonly resultingClientId: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FetchEvent/respondWith) */\n    respondWith(r: Response | PromiseLike<Response>): void;\n}\n\ndeclare var FetchEvent: {\n    prototype: FetchEvent;\n    new(type: string, eventInitDict: FetchEventInit): FetchEvent;\n};\n\n/**\n * Provides information about files and allows JavaScript in a web page to access their content.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/File)\n */\ninterface File extends Blob {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n    readonly lastModified: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/webkitRelativePath) */\n    readonly webkitRelativePath: string;\n}\n\ndeclare var File: {\n    prototype: File;\n    new(fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;\n};\n\n/**\n * An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type="file"> element. It\'s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList)\n */\ninterface FileList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileList/item) */\n    item(index: number): File | null;\n    [index: number]: File;\n}\n\ndeclare var FileList: {\n    prototype: FileList;\n    new(): FileList;\n};\n\ninterface FileReaderEventMap {\n    "abort": ProgressEvent<FileReader>;\n    "error": ProgressEvent<FileReader>;\n    "load": ProgressEvent<FileReader>;\n    "loadend": ProgressEvent<FileReader>;\n    "loadstart": ProgressEvent<FileReader>;\n    "progress": ProgressEvent<FileReader>;\n}\n\n/**\n * Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user\'s computer, using File or Blob objects to specify the file or data to read.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader)\n */\ninterface FileReader extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error) */\n    readonly error: DOMException | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort_event) */\n    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/error_event) */\n    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/load_event) */\n    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadend_event) */\n    onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/loadstart_event) */\n    onloadstart: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/progress_event) */\n    onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readyState) */\n    readonly readyState: typeof FileReader.EMPTY | typeof FileReader.LOADING | typeof FileReader.DONE;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/result) */\n    readonly result: string | ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/abort) */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsArrayBuffer) */\n    readAsArrayBuffer(blob: Blob): void;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsBinaryString)\n     */\n    readAsBinaryString(blob: Blob): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsDataURL) */\n    readAsDataURL(blob: Blob): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReader/readAsText) */\n    readAsText(blob: Blob, encoding?: string): void;\n    readonly EMPTY: 0;\n    readonly LOADING: 1;\n    readonly DONE: 2;\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FileReader: {\n    prototype: FileReader;\n    new(): FileReader;\n    readonly EMPTY: 0;\n    readonly LOADING: 1;\n    readonly DONE: 2;\n};\n\n/**\n * Allows to read File or Blob objects in a synchronous way.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReaderSync)\n */\ninterface FileReaderSync {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReaderSync/readAsArrayBuffer) */\n    readAsArrayBuffer(blob: Blob): ArrayBuffer;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReaderSync/readAsBinaryString)\n     */\n    readAsBinaryString(blob: Blob): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReaderSync/readAsDataURL) */\n    readAsDataURL(blob: Blob): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileReaderSync/readAsText) */\n    readAsText(blob: Blob, encoding?: string): string;\n}\n\ndeclare var FileReaderSync: {\n    prototype: FileReaderSync;\n    new(): FileReaderSync;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle)\n */\ninterface FileSystemDirectoryHandle extends FileSystemHandle {\n    readonly kind: "directory";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getDirectoryHandle) */\n    getDirectoryHandle(name: string, options?: FileSystemGetDirectoryOptions): Promise<FileSystemDirectoryHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/getFileHandle) */\n    getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/removeEntry) */\n    removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemDirectoryHandle/resolve) */\n    resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;\n}\n\ndeclare var FileSystemDirectoryHandle: {\n    prototype: FileSystemDirectoryHandle;\n    new(): FileSystemDirectoryHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle)\n */\ninterface FileSystemFileHandle extends FileSystemHandle {\n    readonly kind: "file";\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/createSyncAccessHandle) */\n    createSyncAccessHandle(): Promise<FileSystemSyncAccessHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/createWritable) */\n    createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemFileHandle/getFile) */\n    getFile(): Promise<File>;\n}\n\ndeclare var FileSystemFileHandle: {\n    prototype: FileSystemFileHandle;\n    new(): FileSystemFileHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle)\n */\ninterface FileSystemHandle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/kind) */\n    readonly kind: FileSystemHandleKind;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemHandle/isSameEntry) */\n    isSameEntry(other: FileSystemHandle): Promise<boolean>;\n}\n\ndeclare var FileSystemHandle: {\n    prototype: FileSystemHandle;\n    new(): FileSystemHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle)\n */\ninterface FileSystemSyncAccessHandle {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/flush) */\n    flush(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/getSize) */\n    getSize(): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/read) */\n    read(buffer: AllowSharedBufferSource, options?: FileSystemReadWriteOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/truncate) */\n    truncate(newSize: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemSyncAccessHandle/write) */\n    write(buffer: AllowSharedBufferSource, options?: FileSystemReadWriteOptions): number;\n}\n\ndeclare var FileSystemSyncAccessHandle: {\n    prototype: FileSystemSyncAccessHandle;\n    new(): FileSystemSyncAccessHandle;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream)\n */\ninterface FileSystemWritableFileStream extends WritableStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/seek) */\n    seek(position: number): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/truncate) */\n    truncate(size: number): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FileSystemWritableFileStream/write) */\n    write(data: FileSystemWriteChunkType): Promise<void>;\n}\n\ndeclare var FileSystemWritableFileStream: {\n    prototype: FileSystemWritableFileStream;\n    new(): FileSystemWritableFileStream;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace) */\ninterface FontFace {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/ascentOverride) */\n    ascentOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/descentOverride) */\n    descentOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/display) */\n    display: FontDisplay;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/family) */\n    family: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/featureSettings) */\n    featureSettings: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/lineGapOverride) */\n    lineGapOverride: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/loaded) */\n    readonly loaded: Promise<FontFace>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/status) */\n    readonly status: FontFaceLoadStatus;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/stretch) */\n    stretch: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/style) */\n    style: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/unicodeRange) */\n    unicodeRange: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/weight) */\n    weight: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFace/load) */\n    load(): Promise<FontFace>;\n}\n\ndeclare var FontFace: {\n    prototype: FontFace;\n    new(family: string, source: string | BufferSource, descriptors?: FontFaceDescriptors): FontFace;\n};\n\ninterface FontFaceSetEventMap {\n    "loading": FontFaceSetLoadEvent;\n    "loadingdone": FontFaceSetLoadEvent;\n    "loadingerror": FontFaceSetLoadEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet) */\ninterface FontFaceSet extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loading_event) */\n    onloading: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingdone_event) */\n    onloadingdone: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/loadingerror_event) */\n    onloadingerror: ((this: FontFaceSet, ev: FontFaceSetLoadEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready) */\n    readonly ready: Promise<FontFaceSet>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/status) */\n    readonly status: FontFaceSetLoadStatus;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/check) */\n    check(font: string, text?: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSet/load) */\n    load(font: string, text?: string): Promise<FontFace[]>;\n    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;\n    addEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FontFaceSet: {\n    prototype: FontFaceSet;\n    new(): FontFaceSet;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSetLoadEvent) */\ninterface FontFaceSetLoadEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FontFaceSetLoadEvent/fontfaces) */\n    readonly fontfaces: ReadonlyArray<FontFace>;\n}\n\ndeclare var FontFaceSetLoadEvent: {\n    prototype: FontFaceSetLoadEvent;\n    new(type: string, eventInitDict?: FontFaceSetLoadEventInit): FontFaceSetLoadEvent;\n};\n\ninterface FontFaceSource {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts) */\n    readonly fonts: FontFaceSet;\n}\n\n/**\n * Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to "multipart/form-data".\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData)\n */\ninterface FormData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/append) */\n    append(name: string, value: string | Blob): void;\n    append(name: string, value: string): void;\n    append(name: string, blobValue: Blob, filename?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/delete) */\n    delete(name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/get) */\n    get(name: string): FormDataEntryValue | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/getAll) */\n    getAll(name: string): FormDataEntryValue[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/has) */\n    has(name: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/FormData/set) */\n    set(name: string, value: string | Blob): void;\n    set(name: string, value: string): void;\n    set(name: string, blobValue: Blob, filename?: string): void;\n    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;\n}\n\ndeclare var FormData: {\n    prototype: FormData;\n    new(): FormData;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/GPUError)\n */\ninterface GPUError {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/GPUError/message) */\n    readonly message: string;\n}\n\ninterface GenericTransformStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompressionStream/writable) */\n    readonly writable: WritableStream;\n}\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists\xa0of zero or more name and value pairs. \xa0You can add to this using methods like append() (see Examples.)\xa0In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers)\n */\ninterface Headers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/append) */\n    append(name: string, value: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/delete) */\n    delete(name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/get) */\n    get(name: string): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/getSetCookie) */\n    getSetCookie(): string[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/has) */\n    has(name: string): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Headers/set) */\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;\n}\n\ndeclare var Headers: {\n    prototype: Headers;\n    new(init?: HeadersInit): Headers;\n};\n\n/**\n * This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor)\n */\ninterface IDBCursor {\n    /**\n     * Returns the direction ("next", "nextunique", "prev" or "prevunique") of the cursor.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/direction)\n     */\n    readonly direction: IDBCursorDirection;\n    /**\n     * Returns the key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/key)\n     */\n    readonly key: IDBValidKey;\n    /**\n     * Returns the effective key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/primaryKey)\n     */\n    readonly primaryKey: IDBValidKey;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/request) */\n    readonly request: IDBRequest;\n    /**\n     * Returns the IDBObjectStore or IDBIndex the cursor was opened from.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/source)\n     */\n    readonly source: IDBObjectStore | IDBIndex;\n    /**\n     * Advances the cursor through the next count records in range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/advance)\n     */\n    advance(count: number): void;\n    /**\n     * Advances the cursor to the next record in range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continue)\n     */\n    continue(key?: IDBValidKey): void;\n    /**\n     * Advances the cursor to the next record in range matching or after key and primaryKey. Throws an "InvalidAccessError" DOMException if the source is not an index.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/continuePrimaryKey)\n     */\n    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;\n    /**\n     * Delete the record pointed at by the cursor with a new value.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/delete)\n     */\n    delete(): IDBRequest<undefined>;\n    /**\n     * Updated the record pointed at by the cursor with a new value.\n     *\n     * Throws a "DataError" DOMException if the effective object store uses in-line keys and the key would have changed.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursor/update)\n     */\n    update(value: any): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new(): IDBCursor;\n};\n\n/**\n * This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue)\n */\ninterface IDBCursorWithValue extends IDBCursor {\n    /**\n     * Returns the cursor\'s current value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBCursorWithValue/value)\n     */\n    readonly value: any;\n}\n\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new(): IDBCursorWithValue;\n};\n\ninterface IDBDatabaseEventMap {\n    "abort": Event;\n    "close": Event;\n    "error": Event;\n    "versionchange": IDBVersionChangeEvent;\n}\n\n/**\n * This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase)\n */\ninterface IDBDatabase extends EventTarget {\n    /**\n     * Returns the name of the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/name)\n     */\n    readonly name: string;\n    /**\n     * Returns a list of the names of object stores in the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/objectStoreNames)\n     */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close_event) */\n    onclose: ((this: IDBDatabase, ev: Event) => any) | null;\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/versionchange_event) */\n    onversionchange: ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any) | null;\n    /**\n     * Returns the version of the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/version)\n     */\n    readonly version: number;\n    /**\n     * Closes the connection once all running transactions have finished.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/close)\n     */\n    close(): void;\n    /**\n     * Creates a new object store with the given name and options and returns a new IDBObjectStore.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/createObjectStore)\n     */\n    createObjectStore(name: string, options?: IDBObjectStoreParameters): IDBObjectStore;\n    /**\n     * Deletes the object store with the given name.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/deleteObjectStore)\n     */\n    deleteObjectStore(name: string): void;\n    /**\n     * Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)\n     */\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode, options?: IDBTransactionOptions): IDBTransaction;\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new(): IDBDatabase;\n};\n\n/**\n * In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory)\n */\ninterface IDBFactory {\n    /**\n     * Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n     *\n     * Throws a "DataError" DOMException if either input is not a valid key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/cmp)\n     */\n    cmp(first: any, second: any): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/databases) */\n    databases(): Promise<IDBDatabaseInfo[]>;\n    /**\n     * Attempts to delete the named database. If the database already exists and there are open connections that don\'t close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request\'s result will be null.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/deleteDatabase)\n     */\n    deleteDatabase(name: string): IDBOpenDBRequest;\n    /**\n     * Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request\'s result will be the connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBFactory/open)\n     */\n    open(name: string, version?: number): IDBOpenDBRequest;\n}\n\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new(): IDBFactory;\n};\n\n/**\n * IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex)\n */\ninterface IDBIndex {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/keyPath) */\n    readonly keyPath: string | string[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/multiEntry) */\n    readonly multiEntry: boolean;\n    /**\n     * Returns the name of the index.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/name)\n     */\n    name: string;\n    /**\n     * Returns the IDBObjectStore the index belongs to.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/objectStore)\n     */\n    readonly objectStore: IDBObjectStore;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/unique) */\n    readonly unique: boolean;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/count)\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/get)\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAll)\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getAllKeys)\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/getKey)\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openCursor)\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBIndex/openKeyCursor)\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n}\n\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new(): IDBIndex;\n};\n\n/**\n * A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs:\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange)\n */\ninterface IDBKeyRange {\n    /**\n     * Returns lower bound, or undefined if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lower)\n     */\n    readonly lower: any;\n    /**\n     * Returns true if the lower open flag is set, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerOpen)\n     */\n    readonly lowerOpen: boolean;\n    /**\n     * Returns upper bound, or undefined if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upper)\n     */\n    readonly upper: any;\n    /**\n     * Returns true if the upper open flag is set, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperOpen)\n     */\n    readonly upperOpen: boolean;\n    /**\n     * Returns true if key is included in the range, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/includes)\n     */\n    includes(key: any): boolean;\n}\n\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new(): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning from lower to upper. If lowerOpen is true, lower is not included in the range. If upperOpen is true, upper is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/bound_static)\n     */\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange starting at key with no upper bound. If open is true, key is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/lowerBound_static)\n     */\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning only key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/only_static)\n     */\n    only(value: any): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBKeyRange/upperBound_static)\n     */\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\n};\n\n/**\n * This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex\xa0inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our\xa0To-do Notifications\xa0app (view example live.)\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore)\n */\ninterface IDBObjectStore {\n    /**\n     * Returns true if the store has a key generator, and false otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/autoIncrement)\n     */\n    readonly autoIncrement: boolean;\n    /**\n     * Returns a list of the names of indexes in the store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/indexNames)\n     */\n    readonly indexNames: DOMStringList;\n    /**\n     * Returns the key path of the store, or null if none.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/keyPath)\n     */\n    readonly keyPath: string | string[];\n    /**\n     * Returns the name of the store.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/name)\n     */\n    name: string;\n    /**\n     * Returns the associated transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/transaction)\n     */\n    readonly transaction: IDBTransaction;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/add)\n     */\n    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n    /**\n     * Deletes all records in store.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/clear)\n     */\n    clear(): IDBRequest<undefined>;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/count)\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex)\n     */\n    createIndex(name: string, keyPath: string | string[], options?: IDBIndexParameters): IDBIndex;\n    /**\n     * Deletes records in store with the given key or in the given key range in query.\n     *\n     * If successful, request\'s result will be undefined.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/delete)\n     */\n    delete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;\n    /**\n     * Deletes the index in store with the given name.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/deleteIndex)\n     */\n    deleteIndex(name: string): void;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/get)\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAll)\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getAllKeys)\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/getKey)\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/index) */\n    index(name: string): IDBIndex;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openCursor)\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/openKeyCursor)\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/put)\n     */\n    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new(): IDBObjectStore;\n};\n\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\n    "blocked": IDBVersionChangeEvent;\n    "upgradeneeded": IDBVersionChangeEvent;\n}\n\n/**\n * Also inherits methods from its parents IDBRequest and EventTarget.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest)\n */\ninterface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/blocked_event) */\n    onblocked: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event) */\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new(): IDBOpenDBRequest;\n};\n\ninterface IDBRequestEventMap {\n    "error": Event;\n    "success": Event;\n}\n\n/**\n * The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest)\n */\ninterface IDBRequest<T = any> extends EventTarget {\n    /**\n     * When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error)\n     */\n    readonly error: DOMException | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/error_event) */\n    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/success_event) */\n    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /**\n     * Returns "pending" until a request is complete, then returns "done".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/readyState)\n     */\n    readonly readyState: IDBRequestReadyState;\n    /**\n     * When a request is completed, returns the result, or undefined if the request failed. Throws a "InvalidStateError" DOMException if the request is still pending.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/result)\n     */\n    readonly result: T;\n    /**\n     * Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/source)\n     */\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\n    /**\n     * Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBRequest/transaction)\n     */\n    readonly transaction: IDBTransaction | null;\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new(): IDBRequest;\n};\n\ninterface IDBTransactionEventMap {\n    "abort": Event;\n    "complete": Event;\n    "error": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction) */\ninterface IDBTransaction extends EventTarget {\n    /**\n     * Returns the transaction\'s connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/db)\n     */\n    readonly db: IDBDatabase;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/durability) */\n    readonly durability: IDBTransactionDurability;\n    /**\n     * If the transaction was aborted, returns the error (a DOMException) providing the reason.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error)\n     */\n    readonly error: DOMException | null;\n    /**\n     * Returns the mode the transaction was created with ("readonly" or "readwrite"), or "versionchange" for an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/mode)\n     */\n    readonly mode: IDBTransactionMode;\n    /**\n     * Returns a list of the names of object stores in the transaction\'s scope. For an upgrade transaction this is all object stores in the database.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStoreNames)\n     */\n    readonly objectStoreNames: DOMStringList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort_event) */\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/complete_event) */\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/error_event) */\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\n    /**\n     * Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/abort)\n     */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/commit) */\n    commit(): void;\n    /**\n     * Returns an IDBObjectStore in the transaction\'s scope.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBTransaction/objectStore)\n     */\n    objectStore(name: string): IDBObjectStore;\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new(): IDBTransaction;\n};\n\n/**\n * This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent)\n */\ninterface IDBVersionChangeEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/newVersion) */\n    readonly newVersion: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBVersionChangeEvent/oldVersion) */\n    readonly oldVersion: number;\n}\n\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new(type: string, eventInitDict?: IDBVersionChangeEventInit): IDBVersionChangeEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap) */\ninterface ImageBitmap {\n    /**\n     * Returns the intrinsic height of the image, in CSS pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/height)\n     */\n    readonly height: number;\n    /**\n     * Returns the intrinsic width of the image, in CSS pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/width)\n     */\n    readonly width: number;\n    /**\n     * Releases imageBitmap\'s underlying bitmap data.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmap/close)\n     */\n    close(): void;\n}\n\ndeclare var ImageBitmap: {\n    prototype: ImageBitmap;\n    new(): ImageBitmap;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext) */\ninterface ImageBitmapRenderingContext {\n    /**\n     * Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap)\n     */\n    transferFromImageBitmap(bitmap: ImageBitmap | null): void;\n}\n\ndeclare var ImageBitmapRenderingContext: {\n    prototype: ImageBitmapRenderingContext;\n    new(): ImageBitmapRenderingContext;\n};\n\n/**\n * The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData)\n */\ninterface ImageData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/colorSpace) */\n    readonly colorSpace: PredefinedColorSpace;\n    /**\n     * Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/data)\n     */\n    readonly data: Uint8ClampedArray;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/height)\n     */\n    readonly height: number;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageData/width)\n     */\n    readonly width: number;\n}\n\ndeclare var ImageData: {\n    prototype: ImageData;\n    new(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    new(data: Uint8ClampedArray, sw: number, sh?: number, settings?: ImageDataSettings): ImageData;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder)\n */\ninterface ImageDecoder {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/complete) */\n    readonly complete: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/completed) */\n    readonly completed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/tracks) */\n    readonly tracks: ImageTrackList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/decode) */\n    decode(options?: ImageDecodeOptions): Promise<ImageDecodeResult>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/reset) */\n    reset(): void;\n}\n\ndeclare var ImageDecoder: {\n    prototype: ImageDecoder;\n    new(init: ImageDecoderInit): ImageDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageDecoder/isTypeSupported_static) */\n    isTypeSupported(type: string): Promise<boolean>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack) */\ninterface ImageTrack {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/animated) */\n    readonly animated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/frameCount) */\n    readonly frameCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/repetitionCount) */\n    readonly repetitionCount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrack/selected) */\n    selected: boolean;\n}\n\ndeclare var ImageTrack: {\n    prototype: ImageTrack;\n    new(): ImageTrack;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList) */\ninterface ImageTrackList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/length) */\n    readonly length: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedIndex) */\n    readonly selectedIndex: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ImageTrackList/selectedTrack) */\n    readonly selectedTrack: ImageTrack | null;\n    [index: number]: ImageTrack;\n}\n\ndeclare var ImageTrackList: {\n    prototype: ImageTrackList;\n    new(): ImageTrackList;\n};\n\ninterface ImportMeta {\n    url: string;\n    resolve(specifier: string): string;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/KHR_parallel_shader_compile) */\ninterface KHR_parallel_shader_compile {\n    readonly COMPLETION_STATUS_KHR: 0x91B1;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock)\n */\ninterface Lock {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/mode) */\n    readonly mode: LockMode;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Lock/name) */\n    readonly name: string;\n}\n\ndeclare var Lock: {\n    prototype: Lock;\n    new(): Lock;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager)\n */\ninterface LockManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/query) */\n    query(): Promise<LockManagerSnapshot>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/LockManager/request) */\n    request(name: string, callback: LockGrantedCallback): Promise<any>;\n    request(name: string, options: LockOptions, callback: LockGrantedCallback): Promise<any>;\n}\n\ndeclare var LockManager: {\n    prototype: LockManager;\n    new(): LockManager;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities) */\ninterface MediaCapabilities {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/decodingInfo) */\n    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingInfo>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaCapabilities/encodingInfo) */\n    encodingInfo(configuration: MediaEncodingConfiguration): Promise<MediaCapabilitiesEncodingInfo>;\n}\n\ndeclare var MediaCapabilities: {\n    prototype: MediaCapabilities;\n    new(): MediaCapabilities;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaSourceHandle) */\ninterface MediaSourceHandle {\n}\n\ndeclare var MediaSourceHandle: {\n    prototype: MediaSourceHandle;\n    new(): MediaSourceHandle;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrackProcessor) */\ninterface MediaStreamTrackProcessor {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/MediaStreamTrackProcessor/readable) */\n    readonly readable: ReadableStream;\n}\n\ndeclare var MediaStreamTrackProcessor: {\n    prototype: MediaStreamTrackProcessor;\n    new(init: MediaStreamTrackProcessorInit): MediaStreamTrackProcessor;\n};\n\n/**\n * This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel)\n */\ninterface MessageChannel {\n    /**\n     * Returns the first MessagePort object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port1)\n     */\n    readonly port1: MessagePort;\n    /**\n     * Returns the second MessagePort object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageChannel/port2)\n     */\n    readonly port2: MessagePort;\n}\n\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new(): MessageChannel;\n};\n\n/**\n * A message received by a target object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent)\n */\ninterface MessageEvent<T = any> extends Event {\n    /**\n     * Returns the data of the message.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/data)\n     */\n    readonly data: T;\n    /**\n     * Returns the last event ID string, for server-sent events.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/lastEventId)\n     */\n    readonly lastEventId: string;\n    /**\n     * Returns the origin of the message, for server-sent events and cross-document messaging.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/origin)\n     */\n    readonly origin: string;\n    /**\n     * Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/ports)\n     */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /**\n     * Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessageEvent/source)\n     */\n    readonly source: MessageEventSource | null;\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;\n}\n\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new<T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\n};\n\ninterface MessageEventTargetEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\ninterface MessageEventTarget<T> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event) */\n    onmessage: ((this: T, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event) */\n    onmessageerror: ((this: T, ev: MessageEvent) => any) | null;\n    addEventListener<K extends keyof MessageEventTargetEventMap>(type: K, listener: (this: T, ev: MessageEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessageEventTargetEventMap>(type: K, listener: (this: T, ev: MessageEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface MessagePortEventMap extends MessageEventTargetEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort)\n */\ninterface MessagePort extends EventTarget, MessageEventTarget<MessagePort> {\n    /**\n     * Disconnects the port, so that it is no longer active.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/close)\n     */\n    close(): void;\n    /**\n     * Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * Throws a "DataCloneError" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/postMessage)\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /**\n     * Begins dispatching messages received on the port.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/MessagePort/start)\n     */\n    start(): void;\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new(): MessagePort;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager)\n */\ninterface NavigationPreloadManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/disable) */\n    disable(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/enable) */\n    enable(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/getState) */\n    getState(): Promise<NavigationPreloadState>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NavigationPreloadManager/setHeaderValue) */\n    setHeaderValue(value: string): Promise<void>;\n}\n\ndeclare var NavigationPreloadManager: {\n    prototype: NavigationPreloadManager;\n    new(): NavigationPreloadManager;\n};\n\n/** Available only in secure contexts. */\ninterface NavigatorBadge {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/clearAppBadge) */\n    clearAppBadge(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/setAppBadge) */\n    setAppBadge(contents?: number): Promise<void>;\n}\n\ninterface NavigatorConcurrentHardware {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/hardwareConcurrency) */\n    readonly hardwareConcurrency: number;\n}\n\ninterface NavigatorID {\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appCodeName)\n     */\n    readonly appCodeName: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appName)\n     */\n    readonly appName: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/appVersion)\n     */\n    readonly appVersion: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/platform)\n     */\n    readonly platform: string;\n    /**\n     * @deprecated\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/product)\n     */\n    readonly product: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/userAgent) */\n    readonly userAgent: string;\n}\n\ninterface NavigatorLanguage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/language) */\n    readonly language: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/languages) */\n    readonly languages: ReadonlyArray<string>;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorLocks {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/locks) */\n    readonly locks: LockManager;\n}\n\ninterface NavigatorOnLine {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/onLine) */\n    readonly onLine: boolean;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Navigator/storage) */\n    readonly storage: StorageManager;\n}\n\ninterface NotificationEventMap {\n    "click": Event;\n    "close": Event;\n    "error": Event;\n    "show": Event;\n}\n\n/**\n * This Notifications API interface is used to configure and display desktop notifications to the user.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification)\n */\ninterface Notification extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/badge) */\n    readonly badge: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/body) */\n    readonly body: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/data) */\n    readonly data: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/dir) */\n    readonly dir: NotificationDirection;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/icon) */\n    readonly icon: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/lang) */\n    readonly lang: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/click_event) */\n    onclick: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close_event) */\n    onclose: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/error_event) */\n    onerror: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/show_event) */\n    onshow: ((this: Notification, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/requireInteraction) */\n    readonly requireInteraction: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/silent) */\n    readonly silent: boolean | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/tag) */\n    readonly tag: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/title) */\n    readonly title: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/close) */\n    close(): void;\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Notification: {\n    prototype: Notification;\n    new(title: string, options?: NotificationOptions): Notification;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Notification/permission_static) */\n    readonly permission: NotificationPermission;\n};\n\n/**\n * The parameter passed into the onnotificationclick handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/NotificationEvent)\n */\ninterface NotificationEvent extends ExtendableEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NotificationEvent/action) */\n    readonly action: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/NotificationEvent/notification) */\n    readonly notification: Notification;\n}\n\ndeclare var NotificationEvent: {\n    prototype: NotificationEvent;\n    new(type: string, eventInitDict: NotificationEventInit): NotificationEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed) */\ninterface OES_draw_buffers_indexed {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationSeparateiOES) */\n    blendEquationSeparateiOES(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendEquationiOES) */\n    blendEquationiOES(buf: GLuint, mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFuncSeparateiOES) */\n    blendFuncSeparateiOES(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/blendFunciOES) */\n    blendFunciOES(buf: GLuint, src: GLenum, dst: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/colorMaskiOES) */\n    colorMaskiOES(buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/disableiOES) */\n    disableiOES(target: GLenum, index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_draw_buffers_indexed/enableiOES) */\n    enableiOES(target: GLenum, index: GLuint): void;\n}\n\n/**\n * The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements().\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_element_index_uint)\n */\ninterface OES_element_index_uint {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_fbo_render_mipmap) */\ninterface OES_fbo_render_mipmap {\n}\n\n/**\n * The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_standard_derivatives)\n */\ninterface OES_standard_derivatives {\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8B8B;\n}\n\n/**\n * The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_float)\n */\ninterface OES_texture_float {\n}\n\n/**\n * The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_float_linear)\n */\ninterface OES_texture_float_linear {\n}\n\n/**\n * The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_half_float)\n */\ninterface OES_texture_half_float {\n    readonly HALF_FLOAT_OES: 0x8D61;\n}\n\n/**\n * The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_texture_half_float_linear)\n */\ninterface OES_texture_half_float_linear {\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object) */\ninterface OES_vertex_array_object {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/bindVertexArrayOES) */\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/createVertexArrayOES) */\n    createVertexArrayOES(): WebGLVertexArrayObjectOES;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/deleteVertexArrayOES) */\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OES_vertex_array_object/isVertexArrayOES) */\n    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;\n    readonly VERTEX_ARRAY_BINDING_OES: 0x85B5;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OVR_multiview2) */\ninterface OVR_multiview2 {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OVR_multiview2/framebufferTextureMultiviewOVR) */\n    framebufferTextureMultiviewOVR(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, baseViewIndex: GLint, numViews: GLsizei): void;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: 0x9630;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: 0x9632;\n    readonly MAX_VIEWS_OVR: 0x9631;\n    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: 0x9633;\n}\n\ninterface OffscreenCanvasEventMap {\n    "contextlost": Event;\n    "contextrestored": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas) */\ninterface OffscreenCanvas extends EventTarget {\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object\'s bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/height)\n     */\n    height: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextlost_event) */\n    oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/contextrestored_event) */\n    oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object\'s bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/width)\n     */\n    width: number;\n    /**\n     * Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n     *\n     * The argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of "image/png"; that type is also used if the requested type isn\'t supported. If the image format supports variable quality (such as "image/jpeg"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/convertToBlob)\n     */\n    convertToBlob(options?: ImageEncodeOptions): Promise<Blob>;\n    /**\n     * Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: "2d", "bitmaprenderer", "webgl", or "webgl2". options is handled by that API.\n     *\n     * This specification defines the "2d" context below, which is similar but distinct from the "2d" context that is created from a canvas element. The WebGL specifications define the "webgl" and "webgl2" contexts. [WEBGL]\n     *\n     * Returns null if the canvas has already been initialized with another context type (e.g., trying to get a "2d" context after getting a "webgl" context).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/getContext)\n     */\n    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;\n    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;\n    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;\n    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;\n    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext | null;\n    /**\n     * Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvas/transferToImageBitmap)\n     */\n    transferToImageBitmap(): ImageBitmap;\n    addEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: OffscreenCanvas, ev: OffscreenCanvasEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OffscreenCanvas: {\n    prototype: OffscreenCanvas;\n    new(width: number, height: number): OffscreenCanvas;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/OffscreenCanvasRenderingContext2D) */\ninterface OffscreenCanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDrawPath, CanvasFillStrokeStyles, CanvasFilters, CanvasImageData, CanvasImageSmoothing, CanvasPath, CanvasPathDrawingStyles, CanvasRect, CanvasShadowStyles, CanvasState, CanvasText, CanvasTextDrawingStyles, CanvasTransform {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/canvas) */\n    readonly canvas: OffscreenCanvas;\n}\n\ndeclare var OffscreenCanvasRenderingContext2D: {\n    prototype: OffscreenCanvasRenderingContext2D;\n    new(): OffscreenCanvasRenderingContext2D;\n};\n\n/**\n * This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Path2D)\n */\ninterface Path2D extends CanvasPath {\n    /**\n     * Adds to the path the path given by the argument.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Path2D/addPath)\n     */\n    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var Path2D: {\n    prototype: Path2D;\n    new(path?: Path2D | string): Path2D;\n};\n\ninterface PerformanceEventMap {\n    "resourcetimingbufferfull": Event;\n}\n\n/**\n * Provides access to performance-related information for the current page. It\'s part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance)\n */\ninterface Performance extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/resourcetimingbufferfull_event) */\n    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/timeOrigin) */\n    readonly timeOrigin: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMarks) */\n    clearMarks(markName?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearMeasures) */\n    clearMeasures(measureName?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/clearResourceTimings) */\n    clearResourceTimings(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntries) */\n    getEntries(): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByName) */\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/getEntriesByType) */\n    getEntriesByType(type: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/mark) */\n    mark(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/measure) */\n    measure(measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions, endMark?: string): PerformanceMeasure;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/now) */\n    now(): DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/setResourceTimingBufferSize) */\n    setResourceTimingBufferSize(maxSize: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Performance/toJSON) */\n    toJSON(): any;\n    addEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Performance: {\n    prototype: Performance;\n    new(): Performance;\n};\n\n/**\n * Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry)\n */\ninterface PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/duration) */\n    readonly duration: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/entryType) */\n    readonly entryType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/startTime) */\n    readonly startTime: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceEntry/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceEntry: {\n    prototype: PerformanceEntry;\n    new(): PerformanceEntry;\n};\n\n/**\n * PerformanceMark\xa0is an abstract interface for PerformanceEntry objects with an entryType of "mark". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser\'s performance timeline.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark)\n */\ninterface PerformanceMark extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMark/detail) */\n    readonly detail: any;\n}\n\ndeclare var PerformanceMark: {\n    prototype: PerformanceMark;\n    new(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n};\n\n/**\n * PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of "measure". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser\'s performance timeline.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure)\n */\ninterface PerformanceMeasure extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceMeasure/detail) */\n    readonly detail: any;\n}\n\ndeclare var PerformanceMeasure: {\n    prototype: PerformanceMeasure;\n    new(): PerformanceMeasure;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver) */\ninterface PerformanceObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/observe) */\n    observe(options?: PerformanceObserverInit): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/takeRecords) */\n    takeRecords(): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserver: {\n    prototype: PerformanceObserver;\n    new(callback: PerformanceObserverCallback): PerformanceObserver;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserver/supportedEntryTypes_static) */\n    readonly supportedEntryTypes: ReadonlyArray<string>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList) */\ninterface PerformanceObserverEntryList {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntries) */\n    getEntries(): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByName) */\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceObserverEntryList/getEntriesByType) */\n    getEntriesByType(type: string): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserverEntryList: {\n    prototype: PerformanceObserverEntryList;\n    new(): PerformanceObserverEntryList;\n};\n\n/**\n * Enables retrieval and analysis of detailed network timing data regarding the loading of an application\'s resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming)\n */\ninterface PerformanceResourceTiming extends PerformanceEntry {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectEnd) */\n    readonly connectEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/connectStart) */\n    readonly connectStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/decodedBodySize) */\n    readonly decodedBodySize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupEnd) */\n    readonly domainLookupEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/domainLookupStart) */\n    readonly domainLookupStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/encodedBodySize) */\n    readonly encodedBodySize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/fetchStart) */\n    readonly fetchStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/initiatorType) */\n    readonly initiatorType: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/nextHopProtocol) */\n    readonly nextHopProtocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectEnd) */\n    readonly redirectEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/redirectStart) */\n    readonly redirectStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/requestStart) */\n    readonly requestStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseEnd) */\n    readonly responseEnd: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStart) */\n    readonly responseStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/responseStatus) */\n    readonly responseStatus: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/secureConnectionStart) */\n    readonly secureConnectionStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/serverTiming) */\n    readonly serverTiming: ReadonlyArray<PerformanceServerTiming>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/transferSize) */\n    readonly transferSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/workerStart) */\n    readonly workerStart: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceResourceTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceResourceTiming: {\n    prototype: PerformanceResourceTiming;\n    new(): PerformanceResourceTiming;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming) */\ninterface PerformanceServerTiming {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/description) */\n    readonly description: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/duration) */\n    readonly duration: DOMHighResTimeStamp;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PerformanceServerTiming/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var PerformanceServerTiming: {\n    prototype: PerformanceServerTiming;\n    new(): PerformanceServerTiming;\n};\n\ninterface PermissionStatusEventMap {\n    "change": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus) */\ninterface PermissionStatus extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/change_event) */\n    onchange: ((this: PermissionStatus, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PermissionStatus/state) */\n    readonly state: PermissionState;\n    addEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PermissionStatus: {\n    prototype: PermissionStatus;\n    new(): PermissionStatus;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Permissions) */\ninterface Permissions {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Permissions/query) */\n    query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;\n}\n\ndeclare var Permissions: {\n    prototype: Permissions;\n    new(): Permissions;\n};\n\n/**\n * Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent)\n */\ninterface ProgressEvent<T extends EventTarget = EventTarget> extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/lengthComputable) */\n    readonly lengthComputable: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/loaded) */\n    readonly loaded: number;\n    readonly target: T | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ProgressEvent/total) */\n    readonly total: number;\n}\n\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new(type: string, eventInitDict?: ProgressEventInit): ProgressEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent) */\ninterface PromiseRejectionEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/promise) */\n    readonly promise: Promise<any>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PromiseRejectionEvent/reason) */\n    readonly reason: any;\n}\n\ndeclare var PromiseRejectionEvent: {\n    prototype: PromiseRejectionEvent;\n    new(type: string, eventInitDict: PromiseRejectionEventInit): PromiseRejectionEvent;\n};\n\n/**\n * This Push API interface represents a push message that has been received. This event is sent to the global scope of a ServiceWorker. It contains the information sent from an application server to a PushSubscription.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushEvent)\n */\ninterface PushEvent extends ExtendableEvent {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushEvent/data) */\n    readonly data: PushMessageData | null;\n}\n\ndeclare var PushEvent: {\n    prototype: PushEvent;\n    new(type: string, eventInitDict?: PushEventInit): PushEvent;\n};\n\n/**\n * This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager)\n */\ninterface PushManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/getSubscription) */\n    getSubscription(): Promise<PushSubscription | null>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/permissionState) */\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PermissionState>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/subscribe) */\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\n}\n\ndeclare var PushManager: {\n    prototype: PushManager;\n    new(): PushManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushManager/supportedContentEncodings_static) */\n    readonly supportedContentEncodings: ReadonlyArray<string>;\n};\n\n/**\n * This Push API interface provides methods which let you retrieve the push data sent by a server in various formats.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData)\n */\ninterface PushMessageData {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/arrayBuffer) */\n    arrayBuffer(): ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/blob) */\n    blob(): Blob;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/bytes) */\n    bytes(): Uint8Array;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/json) */\n    json(): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushMessageData/text) */\n    text(): string;\n}\n\ndeclare var PushMessageData: {\n    prototype: PushMessageData;\n    new(): PushMessageData;\n};\n\n/**\n * This Push API interface provides a subcription\'s URL endpoint and allows unsubscription from a push service.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription)\n */\ninterface PushSubscription {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/endpoint) */\n    readonly endpoint: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/expirationTime) */\n    readonly expirationTime: EpochTimeStamp | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/options) */\n    readonly options: PushSubscriptionOptions;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/getKey) */\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/toJSON) */\n    toJSON(): PushSubscriptionJSON;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscription/unsubscribe) */\n    unsubscribe(): Promise<boolean>;\n}\n\ndeclare var PushSubscription: {\n    prototype: PushSubscription;\n    new(): PushSubscription;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions)\n */\ninterface PushSubscriptionOptions {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/applicationServerKey) */\n    readonly applicationServerKey: ArrayBuffer | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/PushSubscriptionOptions/userVisibleOnly) */\n    readonly userVisibleOnly: boolean;\n}\n\ndeclare var PushSubscriptionOptions: {\n    prototype: PushSubscriptionOptions;\n    new(): PushSubscriptionOptions;\n};\n\ninterface RTCDataChannelEventMap {\n    "bufferedamountlow": Event;\n    "close": Event;\n    "closing": Event;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel) */\ninterface RTCDataChannel extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/binaryType) */\n    binaryType: BinaryType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmount) */\n    readonly bufferedAmount: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold) */\n    bufferedAmountLowThreshold: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/id) */\n    readonly id: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/label) */\n    readonly label: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxPacketLifeTime) */\n    readonly maxPacketLifeTime: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/maxRetransmits) */\n    readonly maxRetransmits: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/negotiated) */\n    readonly negotiated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/bufferedamountlow_event) */\n    onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close_event) */\n    onclose: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/closing_event) */\n    onclosing: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/error_event) */\n    onerror: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/message_event) */\n    onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/open_event) */\n    onopen: ((this: RTCDataChannel, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/ordered) */\n    readonly ordered: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/protocol) */\n    readonly protocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/readyState) */\n    readonly readyState: RTCDataChannelState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send) */\n    send(data: string): void;\n    send(data: Blob): void;\n    send(data: ArrayBuffer): void;\n    send(data: ArrayBufferView): void;\n    addEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDataChannel: {\n    prototype: RTCDataChannel;\n    new(): RTCDataChannel;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame) */\ninterface RTCEncodedAudioFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/data) */\n    data: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedAudioFrame/getMetadata) */\n    getMetadata(): RTCEncodedAudioFrameMetadata;\n}\n\ndeclare var RTCEncodedAudioFrame: {\n    prototype: RTCEncodedAudioFrame;\n    new(): RTCEncodedAudioFrame;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame) */\ninterface RTCEncodedVideoFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/data) */\n    data: ArrayBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/type) */\n    readonly type: RTCEncodedVideoFrameType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCEncodedVideoFrame/getMetadata) */\n    getMetadata(): RTCEncodedVideoFrameMetadata;\n}\n\ndeclare var RTCEncodedVideoFrame: {\n    prototype: RTCEncodedVideoFrame;\n    new(): RTCEncodedVideoFrame;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer) */\ninterface RTCRtpScriptTransformer extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/options) */\n    readonly options: any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/writable) */\n    readonly writable: WritableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/generateKeyFrame) */\n    generateKeyFrame(rid?: string): Promise<number>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCRtpScriptTransformer/sendKeyFrameRequest) */\n    sendKeyFrameRequest(): Promise<void>;\n}\n\ndeclare var RTCRtpScriptTransformer: {\n    prototype: RTCRtpScriptTransformer;\n    new(): RTCRtpScriptTransformer;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTransformEvent) */\ninterface RTCTransformEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/RTCTransformEvent/transformer) */\n    readonly transformer: RTCRtpScriptTransformer;\n}\n\ndeclare var RTCTransformEvent: {\n    prototype: RTCTransformEvent;\n    new(): RTCTransformEvent;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController) */\ninterface ReadableByteStreamController {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/byobRequest) */\n    readonly byobRequest: ReadableStreamBYOBRequest | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/enqueue) */\n    enqueue(chunk: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableByteStreamController/error) */\n    error(e?: any): void;\n}\n\ndeclare var ReadableByteStreamController: {\n    prototype: ReadableByteStreamController;\n    new(): ReadableByteStreamController;\n};\n\n/**\n * This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)\n */\ninterface ReadableStream<R = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked) */\n    readonly locked: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/cancel) */\n    cancel(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/getReader) */\n    getReader(options: { mode: "byob" }): ReadableStreamBYOBReader;\n    getReader(): ReadableStreamDefaultReader<R>;\n    getReader(options?: ReadableStreamGetReaderOptions): ReadableStreamReader<R>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeThrough) */\n    pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): ReadableStream<T>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/pipeTo) */\n    pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/tee) */\n    tee(): [ReadableStream<R>, ReadableStream<R>];\n}\n\ndeclare var ReadableStream: {\n    prototype: ReadableStream;\n    new(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number }): ReadableStream<Uint8Array>;\n    new<R = any>(underlyingSource: UnderlyingDefaultSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n    new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader) */\ninterface ReadableStreamBYOBReader extends ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/read) */\n    read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamReadResult<T>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/releaseLock) */\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamBYOBReader: {\n    prototype: ReadableStreamBYOBReader;\n    new(stream: ReadableStream<Uint8Array>): ReadableStreamBYOBReader;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest) */\ninterface ReadableStreamBYOBRequest {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/view) */\n    readonly view: ArrayBufferView | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respond) */\n    respond(bytesWritten: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView) */\n    respondWithNewView(view: ArrayBufferView): void;\n}\n\ndeclare var ReadableStreamBYOBRequest: {\n    prototype: ReadableStreamBYOBRequest;\n    new(): ReadableStreamBYOBRequest;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController) */\ninterface ReadableStreamDefaultController<R = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/enqueue) */\n    enqueue(chunk?: R): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultController/error) */\n    error(e?: any): void;\n}\n\ndeclare var ReadableStreamDefaultController: {\n    prototype: ReadableStreamDefaultController;\n    new(): ReadableStreamDefaultController;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader) */\ninterface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/read) */\n    read(): Promise<ReadableStreamReadResult<R>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamDefaultReader/releaseLock) */\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamDefaultReader: {\n    prototype: ReadableStreamDefaultReader;\n    new<R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;\n};\n\ninterface ReadableStreamGenericReader {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/closed) */\n    readonly closed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStreamBYOBReader/cancel) */\n    cancel(reason?: any): Promise<void>;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report) */\ninterface Report {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/body) */\n    readonly body: ReportBody | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/type) */\n    readonly type: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Report/url) */\n    readonly url: string;\n    toJSON(): any;\n}\n\ndeclare var Report: {\n    prototype: Report;\n    new(): Report;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody) */\ninterface ReportBody {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportBody/toJSON) */\n    toJSON(): any;\n}\n\ndeclare var ReportBody: {\n    prototype: ReportBody;\n    new(): ReportBody;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver) */\ninterface ReportingObserver {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/disconnect) */\n    disconnect(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/observe) */\n    observe(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ReportingObserver/takeRecords) */\n    takeRecords(): ReportList;\n}\n\ndeclare var ReportingObserver: {\n    prototype: ReportingObserver;\n    new(callback: ReportingObserverCallback, options?: ReportingObserverOptions): ReportingObserver;\n};\n\n/**\n * This Fetch API interface represents a resource request.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)\n */\ninterface Request extends Body {\n    /**\n     * Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser\'s cache when fetching.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)\n     */\n    readonly cache: RequestCache;\n    /**\n     * Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)\n     */\n    readonly credentials: RequestCredentials;\n    /**\n     * Returns the kind of resource requested by request, e.g., "document" or "script".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)\n     */\n    readonly destination: RequestDestination;\n    /**\n     * Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the "Host" header.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)\n     */\n    readonly headers: Headers;\n    /**\n     * Returns request\'s subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)\n     */\n    readonly integrity: string;\n    /**\n     * Returns a boolean indicating whether or not request can outlive the global in which it was created.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)\n     */\n    readonly keepalive: boolean;\n    /**\n     * Returns request\'s HTTP method, which is "GET" by default.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)\n     */\n    readonly method: string;\n    /**\n     * Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)\n     */\n    readonly mode: RequestMode;\n    /**\n     * Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)\n     */\n    readonly redirect: RequestRedirect;\n    /**\n     * Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and "about:client" when defaulting to the global\'s default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)\n     */\n    readonly referrer: string;\n    /**\n     * Returns the referrer policy associated with request. This is used during fetching to compute the value of the request\'s referrer.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)\n     */\n    readonly referrerPolicy: ReferrerPolicy;\n    /**\n     * Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Returns the URL of request as a string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)\n     */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/clone) */\n    clone(): Request;\n}\n\ndeclare var Request: {\n    prototype: Request;\n    new(input: RequestInfo | URL, init?: RequestInit): Request;\n};\n\n/**\n * This Fetch API interface represents the response to a request.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response)\n */\ninterface Response extends Body {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/headers) */\n    readonly headers: Headers;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/ok) */\n    readonly ok: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirected) */\n    readonly redirected: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/status) */\n    readonly status: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/statusText) */\n    readonly statusText: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/type) */\n    readonly type: ResponseType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/url) */\n    readonly url: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/clone) */\n    clone(): Response;\n}\n\ndeclare var Response: {\n    prototype: Response;\n    new(body?: BodyInit | null, init?: ResponseInit): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/error_static) */\n    error(): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/json_static) */\n    json(data: any, init?: ResponseInit): Response;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Response/redirect_static) */\n    redirect(url: string | URL, status?: number): Response;\n};\n\n/**\n * Inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent)\n */\ninterface SecurityPolicyViolationEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/blockedURI) */\n    readonly blockedURI: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/columnNumber) */\n    readonly columnNumber: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/disposition) */\n    readonly disposition: SecurityPolicyViolationEventDisposition;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/documentURI) */\n    readonly documentURI: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective) */\n    readonly effectiveDirective: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/lineNumber) */\n    readonly lineNumber: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy) */\n    readonly originalPolicy: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/referrer) */\n    readonly referrer: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sample) */\n    readonly sample: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/sourceFile) */\n    readonly sourceFile: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/statusCode) */\n    readonly statusCode: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective) */\n    readonly violatedDirective: string;\n}\n\ndeclare var SecurityPolicyViolationEvent: {\n    prototype: SecurityPolicyViolationEvent;\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\n};\n\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\n    "statechange": Event;\n}\n\n/**\n * This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker)\n */\ninterface ServiceWorker extends EventTarget, AbstractWorker {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/statechange_event) */\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/scriptURL) */\n    readonly scriptURL: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/state) */\n    readonly state: ServiceWorkerState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorker/postMessage) */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorker: {\n    prototype: ServiceWorker;\n    new(): ServiceWorker;\n};\n\ninterface ServiceWorkerContainerEventMap {\n    "controllerchange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * The\xa0ServiceWorkerContainer\xa0interface of the\xa0ServiceWorker API\xa0provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer)\n */\ninterface ServiceWorkerContainer extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controller) */\n    readonly controller: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/controllerchange_event) */\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/message_event) */\n    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/messageerror_event) */\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/ready) */\n    readonly ready: Promise<ServiceWorkerRegistration>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistration) */\n    getRegistration(clientURL?: string | URL): Promise<ServiceWorkerRegistration | undefined>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/getRegistrations) */\n    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/register) */\n    register(scriptURL: string | URL, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerContainer/startMessages) */\n    startMessages(): void;\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerContainer: {\n    prototype: ServiceWorkerContainer;\n    new(): ServiceWorkerContainer;\n};\n\ninterface ServiceWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    "activate": ExtendableEvent;\n    "fetch": FetchEvent;\n    "install": ExtendableEvent;\n    "message": ExtendableMessageEvent;\n    "messageerror": MessageEvent;\n    "notificationclick": NotificationEvent;\n    "notificationclose": NotificationEvent;\n    "push": PushEvent;\n    "pushsubscriptionchange": Event;\n}\n\n/**\n * This ServiceWorker API interface represents the global execution context of a service worker.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope)\n */\ninterface ServiceWorkerGlobalScope extends WorkerGlobalScope {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/clients) */\n    readonly clients: Clients;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/activate_event) */\n    onactivate: ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/fetch_event) */\n    onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/install_event) */\n    oninstall: ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/message_event) */\n    onmessage: ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/messageerror_event) */\n    onmessageerror: ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event) */\n    onnotificationclick: ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event) */\n    onnotificationclose: ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/push_event) */\n    onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event) */\n    onpushsubscriptionchange: ((this: ServiceWorkerGlobalScope, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/registration) */\n    readonly registration: ServiceWorkerRegistration;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/serviceWorker) */\n    readonly serviceWorker: ServiceWorker;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting) */\n    skipWaiting(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type: K, listener: (this: ServiceWorkerGlobalScope, ev: ServiceWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type: K, listener: (this: ServiceWorkerGlobalScope, ev: ServiceWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerGlobalScope: {\n    prototype: ServiceWorkerGlobalScope;\n    new(): ServiceWorkerGlobalScope;\n};\n\ninterface ServiceWorkerRegistrationEventMap {\n    "updatefound": Event;\n}\n\n/**\n * This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration)\n */\ninterface ServiceWorkerRegistration extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/active) */\n    readonly active: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/installing) */\n    readonly installing: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/navigationPreload) */\n    readonly navigationPreload: NavigationPreloadManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updatefound_event) */\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/pushManager) */\n    readonly pushManager: PushManager;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/scope) */\n    readonly scope: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/updateViaCache) */\n    readonly updateViaCache: ServiceWorkerUpdateViaCache;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/waiting) */\n    readonly waiting: ServiceWorker | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/getNotifications) */\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/showNotification) */\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/unregister) */\n    unregister(): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/update) */\n    update(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerRegistration: {\n    prototype: ServiceWorkerRegistration;\n    new(): ServiceWorkerRegistration;\n};\n\ninterface SharedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    "connect": MessageEvent;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope) */\ninterface SharedWorkerGlobalScope extends WorkerGlobalScope {\n    /**\n     * Returns sharedWorkerGlobal\'s name, i.e. the value given to the SharedWorker constructor. Multiple SharedWorker objects can correspond to the same shared worker (and SharedWorkerGlobalScope), by reusing the same name.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope/name)\n     */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope/connect_event) */\n    onconnect: ((this: SharedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    /**\n     * Aborts sharedWorkerGlobal.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SharedWorkerGlobalScope/close)\n     */\n    close(): void;\n    addEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type: K, listener: (this: SharedWorkerGlobalScope, ev: SharedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type: K, listener: (this: SharedWorkerGlobalScope, ev: SharedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SharedWorkerGlobalScope: {\n    prototype: SharedWorkerGlobalScope;\n    new(): SharedWorkerGlobalScope;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager)\n */\ninterface StorageManager {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/estimate) */\n    estimate(): Promise<StorageEstimate>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/getDirectory) */\n    getDirectory(): Promise<FileSystemDirectoryHandle>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StorageManager/persisted) */\n    persisted(): Promise<boolean>;\n}\n\ndeclare var StorageManager: {\n    prototype: StorageManager;\n    new(): StorageManager;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly) */\ninterface StylePropertyMapReadOnly {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/size) */\n    readonly size: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/get) */\n    get(property: string): undefined | CSSStyleValue;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/getAll) */\n    getAll(property: string): CSSStyleValue[];\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/StylePropertyMapReadOnly/has) */\n    has(property: string): boolean;\n    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) => void, thisArg?: any): void;\n}\n\ndeclare var StylePropertyMapReadOnly: {\n    prototype: StylePropertyMapReadOnly;\n    new(): StylePropertyMapReadOnly;\n};\n\n/**\n * This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto)\n */\ninterface SubtleCrypto {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/decrypt) */\n    decrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveBits) */\n    deriveBits(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, length?: number | null): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveKey) */\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/digest) */\n    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/encrypt) */\n    encrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/exportKey) */\n    exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;\n    exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;\n    exportKey(format: KeyFormat, key: CryptoKey): Promise<ArrayBuffer | JsonWebKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/generateKey) */\n    generateKey(algorithm: "Ed25519" | { name: "Ed25519" }, extractable: boolean, keyUsages: ReadonlyArray<"sign" | "verify">): Promise<CryptoKeyPair>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair | CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/sign) */\n    sign(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/unwrapKey) */\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/verify) */\n    verify(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, signature: BufferSource, data: BufferSource): Promise<boolean>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/wrapKey) */\n    wrapKey(format: KeyFormat, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams): Promise<ArrayBuffer>;\n}\n\ndeclare var SubtleCrypto: {\n    prototype: SubtleCrypto;\n    new(): SubtleCrypto;\n};\n\n/**\n * A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc.\xa0A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder)\n */\ninterface TextDecoder extends TextDecoderCommon {\n    /**\n     * Returns the result of running encoding\'s decoder. The method can be invoked zero or more times with options\'s stream set to true, and then once without options\'s stream (or set to false), to process a fragmented input. If the invocation without options\'s stream (or set to false) has no input, it\'s clearest to omit both arguments.\n     *\n     * ```\n     * var string = "", decoder = new TextDecoder(encoding), buffer;\n     * while(buffer = next_chunk()) {\n     *   string += decoder.decode(buffer, {stream:true});\n     * }\n     * string += decoder.decode(); // end-of-queue\n     * ```\n     *\n     * If the error mode is "fatal" and encoding\'s decoder returns error, throws a TypeError.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/decode)\n     */\n    decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;\n}\n\ndeclare var TextDecoder: {\n    prototype: TextDecoder;\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\n};\n\ninterface TextDecoderCommon {\n    /**\n     * Returns encoding\'s name, lowercased.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/encoding)\n     */\n    readonly encoding: string;\n    /**\n     * Returns true if error mode is "fatal", otherwise false.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/fatal)\n     */\n    readonly fatal: boolean;\n    /**\n     * Returns the value of ignore BOM.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoder/ignoreBOM)\n     */\n    readonly ignoreBOM: boolean;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextDecoderStream) */\ninterface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {\n    readonly readable: ReadableStream<string>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var TextDecoderStream: {\n    prototype: TextDecoderStream;\n    new(label?: string, options?: TextDecoderOptions): TextDecoderStream;\n};\n\n/**\n * TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder)\n */\ninterface TextEncoder extends TextEncoderCommon {\n    /**\n     * Returns the result of running UTF-8\'s encoder.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encode)\n     */\n    encode(input?: string): Uint8Array;\n    /**\n     * Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encodeInto)\n     */\n    encodeInto(source: string, destination: Uint8Array): TextEncoderEncodeIntoResult;\n}\n\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new(): TextEncoder;\n};\n\ninterface TextEncoderCommon {\n    /**\n     * Returns "utf-8".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoder/encoding)\n     */\n    readonly encoding: string;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextEncoderStream) */\ninterface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<string>;\n}\n\ndeclare var TextEncoderStream: {\n    prototype: TextEncoderStream;\n    new(): TextEncoderStream;\n};\n\n/**\n * The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics)\n */\ninterface TextMetrics {\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxAscent)\n     */\n    readonly actualBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxDescent)\n     */\n    readonly actualBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxLeft)\n     */\n    readonly actualBoundingBoxLeft: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/actualBoundingBoxRight)\n     */\n    readonly actualBoundingBoxRight: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/alphabeticBaseline)\n     */\n    readonly alphabeticBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightAscent)\n     */\n    readonly emHeightAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/emHeightDescent)\n     */\n    readonly emHeightDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxAscent)\n     */\n    readonly fontBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/fontBoundingBoxDescent)\n     */\n    readonly fontBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/hangingBaseline)\n     */\n    readonly hangingBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/ideographicBaseline)\n     */\n    readonly ideographicBaseline: number;\n    /**\n     * Returns the measurement described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/TextMetrics/width)\n     */\n    readonly width: number;\n}\n\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new(): TextMetrics;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream) */\ninterface TransformStream<I = any, O = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/readable) */\n    readonly readable: ReadableStream<O>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStream/writable) */\n    readonly writable: WritableStream<I>;\n}\n\ndeclare var TransformStream: {\n    prototype: TransformStream;\n    new<I = any, O = any>(transformer?: Transformer<I, O>, writableStrategy?: QueuingStrategy<I>, readableStrategy?: QueuingStrategy<O>): TransformStream<I, O>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController) */\ninterface TransformStreamDefaultController<O = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/enqueue) */\n    enqueue(chunk?: O): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/error) */\n    error(reason?: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/TransformStreamDefaultController/terminate) */\n    terminate(): void;\n}\n\ndeclare var TransformStreamDefaultController: {\n    prototype: TransformStreamDefaultController;\n    new(): TransformStreamDefaultController;\n};\n\n/**\n * The URL\xa0interface represents an object providing static methods used for creating object URLs.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL)\n */\ninterface URL {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hash) */\n    hash: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/host) */\n    host: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/hostname) */\n    hostname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/href) */\n    href: string;\n    toString(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/password) */\n    password: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/pathname) */\n    pathname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/port) */\n    port: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/protocol) */\n    protocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/search) */\n    search: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/searchParams) */\n    readonly searchParams: URLSearchParams;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/username) */\n    username: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/toJSON) */\n    toJSON(): string;\n}\n\ndeclare var URL: {\n    prototype: URL;\n    new(url: string | URL, base?: string | URL): URL;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/canParse_static) */\n    canParse(url: string | URL, base?: string | URL): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/createObjectURL_static) */\n    createObjectURL(obj: Blob): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/parse_static) */\n    parse(url: string | URL, base?: string | URL): URL | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URL/revokeObjectURL_static) */\n    revokeObjectURL(url: string): void;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams) */\ninterface URLSearchParams {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/size) */\n    readonly size: number;\n    /**\n     * Appends a specified key/value pair as a new search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/append)\n     */\n    append(name: string, value: string): void;\n    /**\n     * Deletes the given search parameter, and its associated value, from the list of all search parameters.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/delete)\n     */\n    delete(name: string, value?: string): void;\n    /**\n     * Returns the first value associated to the given search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/get)\n     */\n    get(name: string): string | null;\n    /**\n     * Returns all the values association with a given search parameter.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/getAll)\n     */\n    getAll(name: string): string[];\n    /**\n     * Returns a Boolean indicating if such a search parameter exists.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/has)\n     */\n    has(name: string, value?: string): boolean;\n    /**\n     * Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/set)\n     */\n    set(name: string, value: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/URLSearchParams/sort) */\n    sort(): void;\n    /** Returns a string containing a query string suitable for use in a URL. Does not include the question mark. */\n    toString(): string;\n    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;\n}\n\ndeclare var URLSearchParams: {\n    prototype: URLSearchParams;\n    new(init?: string[][] | Record<string, string> | string | URLSearchParams): URLSearchParams;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace) */\ninterface VideoColorSpace {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/fullRange) */\n    readonly fullRange: boolean | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/matrix) */\n    readonly matrix: VideoMatrixCoefficients | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/primaries) */\n    readonly primaries: VideoColorPrimaries | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/transfer) */\n    readonly transfer: VideoTransferCharacteristics | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoColorSpace/toJSON) */\n    toJSON(): VideoColorSpaceInit;\n}\n\ndeclare var VideoColorSpace: {\n    prototype: VideoColorSpace;\n    new(init?: VideoColorSpaceInit): VideoColorSpace;\n};\n\ninterface VideoDecoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder)\n */\ninterface VideoDecoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decodeQueueSize) */\n    readonly decodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/dequeue_event) */\n    ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/configure) */\n    configure(config: VideoDecoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/decode) */\n    decode(chunk: EncodedVideoChunk): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDecoder, ev: VideoDecoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VideoDecoder: {\n    prototype: VideoDecoder;\n    new(init: VideoDecoderInit): VideoDecoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoDecoder/isConfigSupported_static) */\n    isConfigSupported(config: VideoDecoderConfig): Promise<VideoDecoderSupport>;\n};\n\ninterface VideoEncoderEventMap {\n    "dequeue": Event;\n}\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder)\n */\ninterface VideoEncoder extends EventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encodeQueueSize) */\n    readonly encodeQueueSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/dequeue_event) */\n    ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/state) */\n    readonly state: CodecState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/configure) */\n    configure(config: VideoEncoderConfig): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/encode) */\n    encode(frame: VideoFrame, options?: VideoEncoderEncodeOptions): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/flush) */\n    flush(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/reset) */\n    reset(): void;\n    addEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEncoder, ev: VideoEncoderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VideoEncoder: {\n    prototype: VideoEncoder;\n    new(init: VideoEncoderInit): VideoEncoder;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoEncoder/isConfigSupported_static) */\n    isConfigSupported(config: VideoEncoderConfig): Promise<VideoEncoderSupport>;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame) */\ninterface VideoFrame {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedHeight) */\n    readonly codedHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedRect) */\n    readonly codedRect: DOMRectReadOnly | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/codedWidth) */\n    readonly codedWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/colorSpace) */\n    readonly colorSpace: VideoColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayHeight) */\n    readonly displayHeight: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/displayWidth) */\n    readonly displayWidth: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/duration) */\n    readonly duration: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/format) */\n    readonly format: VideoPixelFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/timestamp) */\n    readonly timestamp: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/visibleRect) */\n    readonly visibleRect: DOMRectReadOnly | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/allocationSize) */\n    allocationSize(options?: VideoFrameCopyToOptions): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/clone) */\n    clone(): VideoFrame;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/close) */\n    close(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/VideoFrame/copyTo) */\n    copyTo(destination: AllowSharedBufferSource, options?: VideoFrameCopyToOptions): Promise<PlaneLayout[]>;\n}\n\ndeclare var VideoFrame: {\n    prototype: VideoFrame;\n    new(image: CanvasImageSource, init?: VideoFrameInit): VideoFrame;\n    new(data: AllowSharedBufferSource, init: VideoFrameBufferInit): VideoFrame;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_color_buffer_float) */\ninterface WEBGL_color_buffer_float {\n    readonly RGBA32F_EXT: 0x8814;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;\n    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc) */\ninterface WEBGL_compressed_texture_astc {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles) */\n    getSupportedProfiles(): string[];\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0;\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1;\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2;\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3;\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4;\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5;\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6;\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7;\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8;\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9;\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA;\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB;\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC;\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_etc) */\ninterface WEBGL_compressed_texture_etc {\n    readonly COMPRESSED_R11_EAC: 0x9270;\n    readonly COMPRESSED_SIGNED_R11_EAC: 0x9271;\n    readonly COMPRESSED_RG11_EAC: 0x9272;\n    readonly COMPRESSED_SIGNED_RG11_EAC: 0x9273;\n    readonly COMPRESSED_RGB8_ETC2: 0x9274;\n    readonly COMPRESSED_SRGB8_ETC2: 0x9275;\n    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276;\n    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277;\n    readonly COMPRESSED_RGBA8_ETC2_EAC: 0x9278;\n    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_etc1) */\ninterface WEBGL_compressed_texture_etc1 {\n    readonly COMPRESSED_RGB_ETC1_WEBGL: 0x8D64;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_pvrtc) */\ninterface WEBGL_compressed_texture_pvrtc {\n    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00;\n    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01;\n    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02;\n    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03;\n}\n\n/**\n * The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_s3tc)\n */\ninterface WEBGL_compressed_texture_s3tc {\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0;\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1;\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2;\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_compressed_texture_s3tc_srgb) */\ninterface WEBGL_compressed_texture_s3tc_srgb {\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F;\n}\n\n/**\n * The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_renderer_info)\n */\ninterface WEBGL_debug_renderer_info {\n    readonly UNMASKED_VENDOR_WEBGL: 0x9245;\n    readonly UNMASKED_RENDERER_WEBGL: 0x9246;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_shaders) */\ninterface WEBGL_debug_shaders {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_debug_shaders/getTranslatedShaderSource) */\n    getTranslatedShaderSource(shader: WebGLShader): string;\n}\n\n/**\n * The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_depth_texture)\n */\ninterface WEBGL_depth_texture {\n    readonly UNSIGNED_INT_24_8_WEBGL: 0x84FA;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers) */\ninterface WEBGL_draw_buffers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */\n    drawBuffersWEBGL(buffers: GLenum[]): void;\n    readonly COLOR_ATTACHMENT0_WEBGL: 0x8CE0;\n    readonly COLOR_ATTACHMENT1_WEBGL: 0x8CE1;\n    readonly COLOR_ATTACHMENT2_WEBGL: 0x8CE2;\n    readonly COLOR_ATTACHMENT3_WEBGL: 0x8CE3;\n    readonly COLOR_ATTACHMENT4_WEBGL: 0x8CE4;\n    readonly COLOR_ATTACHMENT5_WEBGL: 0x8CE5;\n    readonly COLOR_ATTACHMENT6_WEBGL: 0x8CE6;\n    readonly COLOR_ATTACHMENT7_WEBGL: 0x8CE7;\n    readonly COLOR_ATTACHMENT8_WEBGL: 0x8CE8;\n    readonly COLOR_ATTACHMENT9_WEBGL: 0x8CE9;\n    readonly COLOR_ATTACHMENT10_WEBGL: 0x8CEA;\n    readonly COLOR_ATTACHMENT11_WEBGL: 0x8CEB;\n    readonly COLOR_ATTACHMENT12_WEBGL: 0x8CEC;\n    readonly COLOR_ATTACHMENT13_WEBGL: 0x8CED;\n    readonly COLOR_ATTACHMENT14_WEBGL: 0x8CEE;\n    readonly COLOR_ATTACHMENT15_WEBGL: 0x8CEF;\n    readonly DRAW_BUFFER0_WEBGL: 0x8825;\n    readonly DRAW_BUFFER1_WEBGL: 0x8826;\n    readonly DRAW_BUFFER2_WEBGL: 0x8827;\n    readonly DRAW_BUFFER3_WEBGL: 0x8828;\n    readonly DRAW_BUFFER4_WEBGL: 0x8829;\n    readonly DRAW_BUFFER5_WEBGL: 0x882A;\n    readonly DRAW_BUFFER6_WEBGL: 0x882B;\n    readonly DRAW_BUFFER7_WEBGL: 0x882C;\n    readonly DRAW_BUFFER8_WEBGL: 0x882D;\n    readonly DRAW_BUFFER9_WEBGL: 0x882E;\n    readonly DRAW_BUFFER10_WEBGL: 0x882F;\n    readonly DRAW_BUFFER11_WEBGL: 0x8830;\n    readonly DRAW_BUFFER12_WEBGL: 0x8831;\n    readonly DRAW_BUFFER13_WEBGL: 0x8832;\n    readonly DRAW_BUFFER14_WEBGL: 0x8833;\n    readonly DRAW_BUFFER15_WEBGL: 0x8834;\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: 0x8CDF;\n    readonly MAX_DRAW_BUFFERS_WEBGL: 0x8824;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context) */\ninterface WEBGL_lose_context {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/loseContext) */\n    loseContext(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_lose_context/restoreContext) */\n    restoreContext(): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw) */\ninterface WEBGL_multi_draw {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: number, countsList: Int32Array | GLsizei[], countsOffset: number, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: number, countsList: Int32Array | GLsizei[], countsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffset: number, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: number, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffset: number, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: number, drawcount: GLsizei): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext) */\ninterface WebGL2RenderingContext extends WebGL2RenderingContextBase, WebGL2RenderingContextOverloads, WebGLRenderingContextBase {\n}\n\ndeclare var WebGL2RenderingContext: {\n    prototype: WebGL2RenderingContext;\n    new(): WebGL2RenderingContext;\n    readonly READ_BUFFER: 0x0C02;\n    readonly UNPACK_ROW_LENGTH: 0x0CF2;\n    readonly UNPACK_SKIP_ROWS: 0x0CF3;\n    readonly UNPACK_SKIP_PIXELS: 0x0CF4;\n    readonly PACK_ROW_LENGTH: 0x0D02;\n    readonly PACK_SKIP_ROWS: 0x0D03;\n    readonly PACK_SKIP_PIXELS: 0x0D04;\n    readonly COLOR: 0x1800;\n    readonly DEPTH: 0x1801;\n    readonly STENCIL: 0x1802;\n    readonly RED: 0x1903;\n    readonly RGB8: 0x8051;\n    readonly RGB10_A2: 0x8059;\n    readonly TEXTURE_BINDING_3D: 0x806A;\n    readonly UNPACK_SKIP_IMAGES: 0x806D;\n    readonly UNPACK_IMAGE_HEIGHT: 0x806E;\n    readonly TEXTURE_3D: 0x806F;\n    readonly TEXTURE_WRAP_R: 0x8072;\n    readonly MAX_3D_TEXTURE_SIZE: 0x8073;\n    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;\n    readonly MAX_ELEMENTS_VERTICES: 0x80E8;\n    readonly MAX_ELEMENTS_INDICES: 0x80E9;\n    readonly TEXTURE_MIN_LOD: 0x813A;\n    readonly TEXTURE_MAX_LOD: 0x813B;\n    readonly TEXTURE_BASE_LEVEL: 0x813C;\n    readonly TEXTURE_MAX_LEVEL: 0x813D;\n    readonly MIN: 0x8007;\n    readonly MAX: 0x8008;\n    readonly DEPTH_COMPONENT24: 0x81A6;\n    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;\n    readonly TEXTURE_COMPARE_MODE: 0x884C;\n    readonly TEXTURE_COMPARE_FUNC: 0x884D;\n    readonly CURRENT_QUERY: 0x8865;\n    readonly QUERY_RESULT: 0x8866;\n    readonly QUERY_RESULT_AVAILABLE: 0x8867;\n    readonly STREAM_READ: 0x88E1;\n    readonly STREAM_COPY: 0x88E2;\n    readonly STATIC_READ: 0x88E5;\n    readonly STATIC_COPY: 0x88E6;\n    readonly DYNAMIC_READ: 0x88E9;\n    readonly DYNAMIC_COPY: 0x88EA;\n    readonly MAX_DRAW_BUFFERS: 0x8824;\n    readonly DRAW_BUFFER0: 0x8825;\n    readonly DRAW_BUFFER1: 0x8826;\n    readonly DRAW_BUFFER2: 0x8827;\n    readonly DRAW_BUFFER3: 0x8828;\n    readonly DRAW_BUFFER4: 0x8829;\n    readonly DRAW_BUFFER5: 0x882A;\n    readonly DRAW_BUFFER6: 0x882B;\n    readonly DRAW_BUFFER7: 0x882C;\n    readonly DRAW_BUFFER8: 0x882D;\n    readonly DRAW_BUFFER9: 0x882E;\n    readonly DRAW_BUFFER10: 0x882F;\n    readonly DRAW_BUFFER11: 0x8830;\n    readonly DRAW_BUFFER12: 0x8831;\n    readonly DRAW_BUFFER13: 0x8832;\n    readonly DRAW_BUFFER14: 0x8833;\n    readonly DRAW_BUFFER15: 0x8834;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;\n    readonly SAMPLER_3D: 0x8B5F;\n    readonly SAMPLER_2D_SHADOW: 0x8B62;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;\n    readonly PIXEL_PACK_BUFFER: 0x88EB;\n    readonly PIXEL_UNPACK_BUFFER: 0x88EC;\n    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;\n    readonly FLOAT_MAT2x3: 0x8B65;\n    readonly FLOAT_MAT2x4: 0x8B66;\n    readonly FLOAT_MAT3x2: 0x8B67;\n    readonly FLOAT_MAT3x4: 0x8B68;\n    readonly FLOAT_MAT4x2: 0x8B69;\n    readonly FLOAT_MAT4x3: 0x8B6A;\n    readonly SRGB: 0x8C40;\n    readonly SRGB8: 0x8C41;\n    readonly SRGB8_ALPHA8: 0x8C43;\n    readonly COMPARE_REF_TO_TEXTURE: 0x884E;\n    readonly RGBA32F: 0x8814;\n    readonly RGB32F: 0x8815;\n    readonly RGBA16F: 0x881A;\n    readonly RGB16F: 0x881B;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;\n    readonly MAX_VARYING_COMPONENTS: 0x8B4B;\n    readonly TEXTURE_2D_ARRAY: 0x8C1A;\n    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;\n    readonly R11F_G11F_B10F: 0x8C3A;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;\n    readonly RGB9_E5: 0x8C3D;\n    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;\n    readonly RASTERIZER_DISCARD: 0x8C89;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;\n    readonly INTERLEAVED_ATTRIBS: 0x8C8C;\n    readonly SEPARATE_ATTRIBS: 0x8C8D;\n    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;\n    readonly RGBA32UI: 0x8D70;\n    readonly RGB32UI: 0x8D71;\n    readonly RGBA16UI: 0x8D76;\n    readonly RGB16UI: 0x8D77;\n    readonly RGBA8UI: 0x8D7C;\n    readonly RGB8UI: 0x8D7D;\n    readonly RGBA32I: 0x8D82;\n    readonly RGB32I: 0x8D83;\n    readonly RGBA16I: 0x8D88;\n    readonly RGB16I: 0x8D89;\n    readonly RGBA8I: 0x8D8E;\n    readonly RGB8I: 0x8D8F;\n    readonly RED_INTEGER: 0x8D94;\n    readonly RGB_INTEGER: 0x8D98;\n    readonly RGBA_INTEGER: 0x8D99;\n    readonly SAMPLER_2D_ARRAY: 0x8DC1;\n    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;\n    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;\n    readonly UNSIGNED_INT_VEC2: 0x8DC6;\n    readonly UNSIGNED_INT_VEC3: 0x8DC7;\n    readonly UNSIGNED_INT_VEC4: 0x8DC8;\n    readonly INT_SAMPLER_2D: 0x8DCA;\n    readonly INT_SAMPLER_3D: 0x8DCB;\n    readonly INT_SAMPLER_CUBE: 0x8DCC;\n    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;\n    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;\n    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;\n    readonly DEPTH_COMPONENT32F: 0x8CAC;\n    readonly DEPTH32F_STENCIL8: 0x8CAD;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;\n    readonly FRAMEBUFFER_DEFAULT: 0x8218;\n    readonly UNSIGNED_INT_24_8: 0x84FA;\n    readonly DEPTH24_STENCIL8: 0x88F0;\n    readonly UNSIGNED_NORMALIZED: 0x8C17;\n    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly READ_FRAMEBUFFER: 0x8CA8;\n    readonly DRAW_FRAMEBUFFER: 0x8CA9;\n    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;\n    readonly RENDERBUFFER_SAMPLES: 0x8CAB;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;\n    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;\n    readonly COLOR_ATTACHMENT1: 0x8CE1;\n    readonly COLOR_ATTACHMENT2: 0x8CE2;\n    readonly COLOR_ATTACHMENT3: 0x8CE3;\n    readonly COLOR_ATTACHMENT4: 0x8CE4;\n    readonly COLOR_ATTACHMENT5: 0x8CE5;\n    readonly COLOR_ATTACHMENT6: 0x8CE6;\n    readonly COLOR_ATTACHMENT7: 0x8CE7;\n    readonly COLOR_ATTACHMENT8: 0x8CE8;\n    readonly COLOR_ATTACHMENT9: 0x8CE9;\n    readonly COLOR_ATTACHMENT10: 0x8CEA;\n    readonly COLOR_ATTACHMENT11: 0x8CEB;\n    readonly COLOR_ATTACHMENT12: 0x8CEC;\n    readonly COLOR_ATTACHMENT13: 0x8CED;\n    readonly COLOR_ATTACHMENT14: 0x8CEE;\n    readonly COLOR_ATTACHMENT15: 0x8CEF;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;\n    readonly MAX_SAMPLES: 0x8D57;\n    readonly HALF_FLOAT: 0x140B;\n    readonly RG: 0x8227;\n    readonly RG_INTEGER: 0x8228;\n    readonly R8: 0x8229;\n    readonly RG8: 0x822B;\n    readonly R16F: 0x822D;\n    readonly R32F: 0x822E;\n    readonly RG16F: 0x822F;\n    readonly RG32F: 0x8230;\n    readonly R8I: 0x8231;\n    readonly R8UI: 0x8232;\n    readonly R16I: 0x8233;\n    readonly R16UI: 0x8234;\n    readonly R32I: 0x8235;\n    readonly R32UI: 0x8236;\n    readonly RG8I: 0x8237;\n    readonly RG8UI: 0x8238;\n    readonly RG16I: 0x8239;\n    readonly RG16UI: 0x823A;\n    readonly RG32I: 0x823B;\n    readonly RG32UI: 0x823C;\n    readonly VERTEX_ARRAY_BINDING: 0x85B5;\n    readonly R8_SNORM: 0x8F94;\n    readonly RG8_SNORM: 0x8F95;\n    readonly RGB8_SNORM: 0x8F96;\n    readonly RGBA8_SNORM: 0x8F97;\n    readonly SIGNED_NORMALIZED: 0x8F9C;\n    readonly COPY_READ_BUFFER: 0x8F36;\n    readonly COPY_WRITE_BUFFER: 0x8F37;\n    readonly COPY_READ_BUFFER_BINDING: 0x8F36;\n    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;\n    readonly UNIFORM_BUFFER: 0x8A11;\n    readonly UNIFORM_BUFFER_BINDING: 0x8A28;\n    readonly UNIFORM_BUFFER_START: 0x8A29;\n    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;\n    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;\n    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;\n    readonly UNIFORM_TYPE: 0x8A37;\n    readonly UNIFORM_SIZE: 0x8A38;\n    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;\n    readonly UNIFORM_OFFSET: 0x8A3B;\n    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;\n    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;\n    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;\n    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;\n    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;\n    readonly INVALID_INDEX: 0xFFFFFFFF;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;\n    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;\n    readonly OBJECT_TYPE: 0x9112;\n    readonly SYNC_CONDITION: 0x9113;\n    readonly SYNC_STATUS: 0x9114;\n    readonly SYNC_FLAGS: 0x9115;\n    readonly SYNC_FENCE: 0x9116;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;\n    readonly UNSIGNALED: 0x9118;\n    readonly SIGNALED: 0x9119;\n    readonly ALREADY_SIGNALED: 0x911A;\n    readonly TIMEOUT_EXPIRED: 0x911B;\n    readonly CONDITION_SATISFIED: 0x911C;\n    readonly WAIT_FAILED: 0x911D;\n    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;\n    readonly ANY_SAMPLES_PASSED: 0x8C2F;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;\n    readonly SAMPLER_BINDING: 0x8919;\n    readonly RGB10_A2UI: 0x906F;\n    readonly INT_2_10_10_10_REV: 0x8D9F;\n    readonly TRANSFORM_FEEDBACK: 0x8E22;\n    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;\n    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;\n    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;\n    readonly MAX_ELEMENT_INDEX: 0x8D6B;\n    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;\n    readonly TIMEOUT_IGNORED: -1;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n};\n\ninterface WebGL2RenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginQuery) */\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/beginTransformFeedback) */\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferBase) */\n    bindBufferBase(target: GLenum, index: GLuint, buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindBufferRange) */\n    bindBufferRange(target: GLenum, index: GLuint, buffer: WebGLBuffer | null, offset: GLintptr, size: GLsizeiptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindSampler) */\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindTransformFeedback) */\n    bindTransformFeedback(target: GLenum, tf: WebGLTransformFeedback | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bindVertexArray) */\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/blitFramebuffer) */\n    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Float32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Int32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Uint32List, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clientWaitSync) */\n    clientWaitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLuint64): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexImage3D) */\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/compressedTexSubImage3D) */\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyBufferSubData) */\n    copyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/copyTexSubImage3D) */\n    copyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createQuery) */\n    createQuery(): WebGLQuery;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createSampler) */\n    createSampler(): WebGLSampler;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createTransformFeedback) */\n    createTransformFeedback(): WebGLTransformFeedback;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/createVertexArray) */\n    createVertexArray(): WebGLVertexArrayObject;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteQuery) */\n    deleteQuery(query: WebGLQuery | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSampler) */\n    deleteSampler(sampler: WebGLSampler | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteSync) */\n    deleteSync(sync: WebGLSync | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteTransformFeedback) */\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/deleteVertexArray) */\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawArraysInstanced) */\n    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */\n    drawBuffers(buffers: GLenum[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced) */\n    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawRangeElements) */\n    drawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endQuery) */\n    endQuery(target: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/endTransformFeedback) */\n    endTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/fenceSync) */\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/framebufferTextureLayer) */\n    framebufferTextureLayer(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, layer: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockName) */\n    getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: GLuint): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockParameter) */\n    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */\n    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getBufferSubData) */\n    getBufferSubData(target: GLenum, srcByteOffset: GLintptr, dstBuffer: ArrayBufferView, dstOffset?: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getFragDataLocation) */\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getIndexedParameter) */\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter) */\n    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQuery) */\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getQueryParameter) */\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSamplerParameter) */\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getSyncParameter) */\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying) */\n    getTransformFeedbackVarying(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex) */\n    getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): GLuint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */\n    getUniformIndices(program: WebGLProgram, uniformNames: string[]): GLuint[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */\n    invalidateSubFramebuffer(target: GLenum, attachments: GLenum[], x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isQuery) */\n    isQuery(query: WebGLQuery | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSampler) */\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isSync) */\n    isSync(sync: WebGLSync | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isTransformFeedback) */\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/isVertexArray) */\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/pauseTransformFeedback) */\n    pauseTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/readBuffer) */\n    readBuffer(src: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/renderbufferStorageMultisample) */\n    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/resumeTransformFeedback) */\n    resumeTransformFeedback(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter) */\n    samplerParameterf(sampler: WebGLSampler, pname: GLenum, param: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/samplerParameter) */\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texImage3D) */\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView | null): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage2D) */\n    texStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texStorage3D) */\n    texStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/texSubImage3D) */\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView | null, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */\n    transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding) */\n    uniformBlockBinding(program: WebGLProgram, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor) */\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribIPointer) */\n    vertexAttribIPointer(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/waitSync) */\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly READ_BUFFER: 0x0C02;\n    readonly UNPACK_ROW_LENGTH: 0x0CF2;\n    readonly UNPACK_SKIP_ROWS: 0x0CF3;\n    readonly UNPACK_SKIP_PIXELS: 0x0CF4;\n    readonly PACK_ROW_LENGTH: 0x0D02;\n    readonly PACK_SKIP_ROWS: 0x0D03;\n    readonly PACK_SKIP_PIXELS: 0x0D04;\n    readonly COLOR: 0x1800;\n    readonly DEPTH: 0x1801;\n    readonly STENCIL: 0x1802;\n    readonly RED: 0x1903;\n    readonly RGB8: 0x8051;\n    readonly RGB10_A2: 0x8059;\n    readonly TEXTURE_BINDING_3D: 0x806A;\n    readonly UNPACK_SKIP_IMAGES: 0x806D;\n    readonly UNPACK_IMAGE_HEIGHT: 0x806E;\n    readonly TEXTURE_3D: 0x806F;\n    readonly TEXTURE_WRAP_R: 0x8072;\n    readonly MAX_3D_TEXTURE_SIZE: 0x8073;\n    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;\n    readonly MAX_ELEMENTS_VERTICES: 0x80E8;\n    readonly MAX_ELEMENTS_INDICES: 0x80E9;\n    readonly TEXTURE_MIN_LOD: 0x813A;\n    readonly TEXTURE_MAX_LOD: 0x813B;\n    readonly TEXTURE_BASE_LEVEL: 0x813C;\n    readonly TEXTURE_MAX_LEVEL: 0x813D;\n    readonly MIN: 0x8007;\n    readonly MAX: 0x8008;\n    readonly DEPTH_COMPONENT24: 0x81A6;\n    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;\n    readonly TEXTURE_COMPARE_MODE: 0x884C;\n    readonly TEXTURE_COMPARE_FUNC: 0x884D;\n    readonly CURRENT_QUERY: 0x8865;\n    readonly QUERY_RESULT: 0x8866;\n    readonly QUERY_RESULT_AVAILABLE: 0x8867;\n    readonly STREAM_READ: 0x88E1;\n    readonly STREAM_COPY: 0x88E2;\n    readonly STATIC_READ: 0x88E5;\n    readonly STATIC_COPY: 0x88E6;\n    readonly DYNAMIC_READ: 0x88E9;\n    readonly DYNAMIC_COPY: 0x88EA;\n    readonly MAX_DRAW_BUFFERS: 0x8824;\n    readonly DRAW_BUFFER0: 0x8825;\n    readonly DRAW_BUFFER1: 0x8826;\n    readonly DRAW_BUFFER2: 0x8827;\n    readonly DRAW_BUFFER3: 0x8828;\n    readonly DRAW_BUFFER4: 0x8829;\n    readonly DRAW_BUFFER5: 0x882A;\n    readonly DRAW_BUFFER6: 0x882B;\n    readonly DRAW_BUFFER7: 0x882C;\n    readonly DRAW_BUFFER8: 0x882D;\n    readonly DRAW_BUFFER9: 0x882E;\n    readonly DRAW_BUFFER10: 0x882F;\n    readonly DRAW_BUFFER11: 0x8830;\n    readonly DRAW_BUFFER12: 0x8831;\n    readonly DRAW_BUFFER13: 0x8832;\n    readonly DRAW_BUFFER14: 0x8833;\n    readonly DRAW_BUFFER15: 0x8834;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;\n    readonly SAMPLER_3D: 0x8B5F;\n    readonly SAMPLER_2D_SHADOW: 0x8B62;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;\n    readonly PIXEL_PACK_BUFFER: 0x88EB;\n    readonly PIXEL_UNPACK_BUFFER: 0x88EC;\n    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;\n    readonly FLOAT_MAT2x3: 0x8B65;\n    readonly FLOAT_MAT2x4: 0x8B66;\n    readonly FLOAT_MAT3x2: 0x8B67;\n    readonly FLOAT_MAT3x4: 0x8B68;\n    readonly FLOAT_MAT4x2: 0x8B69;\n    readonly FLOAT_MAT4x3: 0x8B6A;\n    readonly SRGB: 0x8C40;\n    readonly SRGB8: 0x8C41;\n    readonly SRGB8_ALPHA8: 0x8C43;\n    readonly COMPARE_REF_TO_TEXTURE: 0x884E;\n    readonly RGBA32F: 0x8814;\n    readonly RGB32F: 0x8815;\n    readonly RGBA16F: 0x881A;\n    readonly RGB16F: 0x881B;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;\n    readonly MAX_VARYING_COMPONENTS: 0x8B4B;\n    readonly TEXTURE_2D_ARRAY: 0x8C1A;\n    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;\n    readonly R11F_G11F_B10F: 0x8C3A;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;\n    readonly RGB9_E5: 0x8C3D;\n    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;\n    readonly RASTERIZER_DISCARD: 0x8C89;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;\n    readonly INTERLEAVED_ATTRIBS: 0x8C8C;\n    readonly SEPARATE_ATTRIBS: 0x8C8D;\n    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;\n    readonly RGBA32UI: 0x8D70;\n    readonly RGB32UI: 0x8D71;\n    readonly RGBA16UI: 0x8D76;\n    readonly RGB16UI: 0x8D77;\n    readonly RGBA8UI: 0x8D7C;\n    readonly RGB8UI: 0x8D7D;\n    readonly RGBA32I: 0x8D82;\n    readonly RGB32I: 0x8D83;\n    readonly RGBA16I: 0x8D88;\n    readonly RGB16I: 0x8D89;\n    readonly RGBA8I: 0x8D8E;\n    readonly RGB8I: 0x8D8F;\n    readonly RED_INTEGER: 0x8D94;\n    readonly RGB_INTEGER: 0x8D98;\n    readonly RGBA_INTEGER: 0x8D99;\n    readonly SAMPLER_2D_ARRAY: 0x8DC1;\n    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;\n    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;\n    readonly UNSIGNED_INT_VEC2: 0x8DC6;\n    readonly UNSIGNED_INT_VEC3: 0x8DC7;\n    readonly UNSIGNED_INT_VEC4: 0x8DC8;\n    readonly INT_SAMPLER_2D: 0x8DCA;\n    readonly INT_SAMPLER_3D: 0x8DCB;\n    readonly INT_SAMPLER_CUBE: 0x8DCC;\n    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;\n    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;\n    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;\n    readonly DEPTH_COMPONENT32F: 0x8CAC;\n    readonly DEPTH32F_STENCIL8: 0x8CAD;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;\n    readonly FRAMEBUFFER_DEFAULT: 0x8218;\n    readonly UNSIGNED_INT_24_8: 0x84FA;\n    readonly DEPTH24_STENCIL8: 0x88F0;\n    readonly UNSIGNED_NORMALIZED: 0x8C17;\n    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly READ_FRAMEBUFFER: 0x8CA8;\n    readonly DRAW_FRAMEBUFFER: 0x8CA9;\n    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;\n    readonly RENDERBUFFER_SAMPLES: 0x8CAB;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;\n    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;\n    readonly COLOR_ATTACHMENT1: 0x8CE1;\n    readonly COLOR_ATTACHMENT2: 0x8CE2;\n    readonly COLOR_ATTACHMENT3: 0x8CE3;\n    readonly COLOR_ATTACHMENT4: 0x8CE4;\n    readonly COLOR_ATTACHMENT5: 0x8CE5;\n    readonly COLOR_ATTACHMENT6: 0x8CE6;\n    readonly COLOR_ATTACHMENT7: 0x8CE7;\n    readonly COLOR_ATTACHMENT8: 0x8CE8;\n    readonly COLOR_ATTACHMENT9: 0x8CE9;\n    readonly COLOR_ATTACHMENT10: 0x8CEA;\n    readonly COLOR_ATTACHMENT11: 0x8CEB;\n    readonly COLOR_ATTACHMENT12: 0x8CEC;\n    readonly COLOR_ATTACHMENT13: 0x8CED;\n    readonly COLOR_ATTACHMENT14: 0x8CEE;\n    readonly COLOR_ATTACHMENT15: 0x8CEF;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;\n    readonly MAX_SAMPLES: 0x8D57;\n    readonly HALF_FLOAT: 0x140B;\n    readonly RG: 0x8227;\n    readonly RG_INTEGER: 0x8228;\n    readonly R8: 0x8229;\n    readonly RG8: 0x822B;\n    readonly R16F: 0x822D;\n    readonly R32F: 0x822E;\n    readonly RG16F: 0x822F;\n    readonly RG32F: 0x8230;\n    readonly R8I: 0x8231;\n    readonly R8UI: 0x8232;\n    readonly R16I: 0x8233;\n    readonly R16UI: 0x8234;\n    readonly R32I: 0x8235;\n    readonly R32UI: 0x8236;\n    readonly RG8I: 0x8237;\n    readonly RG8UI: 0x8238;\n    readonly RG16I: 0x8239;\n    readonly RG16UI: 0x823A;\n    readonly RG32I: 0x823B;\n    readonly RG32UI: 0x823C;\n    readonly VERTEX_ARRAY_BINDING: 0x85B5;\n    readonly R8_SNORM: 0x8F94;\n    readonly RG8_SNORM: 0x8F95;\n    readonly RGB8_SNORM: 0x8F96;\n    readonly RGBA8_SNORM: 0x8F97;\n    readonly SIGNED_NORMALIZED: 0x8F9C;\n    readonly COPY_READ_BUFFER: 0x8F36;\n    readonly COPY_WRITE_BUFFER: 0x8F37;\n    readonly COPY_READ_BUFFER_BINDING: 0x8F36;\n    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;\n    readonly UNIFORM_BUFFER: 0x8A11;\n    readonly UNIFORM_BUFFER_BINDING: 0x8A28;\n    readonly UNIFORM_BUFFER_START: 0x8A29;\n    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;\n    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;\n    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;\n    readonly UNIFORM_TYPE: 0x8A37;\n    readonly UNIFORM_SIZE: 0x8A38;\n    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;\n    readonly UNIFORM_OFFSET: 0x8A3B;\n    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;\n    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;\n    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;\n    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;\n    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;\n    readonly INVALID_INDEX: 0xFFFFFFFF;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;\n    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;\n    readonly OBJECT_TYPE: 0x9112;\n    readonly SYNC_CONDITION: 0x9113;\n    readonly SYNC_STATUS: 0x9114;\n    readonly SYNC_FLAGS: 0x9115;\n    readonly SYNC_FENCE: 0x9116;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;\n    readonly UNSIGNALED: 0x9118;\n    readonly SIGNALED: 0x9119;\n    readonly ALREADY_SIGNALED: 0x911A;\n    readonly TIMEOUT_EXPIRED: 0x911B;\n    readonly CONDITION_SATISFIED: 0x911C;\n    readonly WAIT_FAILED: 0x911D;\n    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;\n    readonly ANY_SAMPLES_PASSED: 0x8C2F;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;\n    readonly SAMPLER_BINDING: 0x8919;\n    readonly RGB10_A2UI: 0x906F;\n    readonly INT_2_10_10_10_REV: 0x8D9F;\n    readonly TRANSFORM_FEEDBACK: 0x8E22;\n    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;\n    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;\n    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;\n    readonly MAX_ELEMENT_INDEX: 0x8D6B;\n    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;\n    readonly TIMEOUT_IGNORED: -1;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferData) */\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: AllowSharedBufferSource | null, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: ArrayBufferView, usage: GLenum, srcOffset: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/bufferSubData) */\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: AllowSharedBufferSource): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: ArrayBufferView, srcOffset: number, length?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D) */\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D) */\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: number, srcLengthOverride?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels) */\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView | null): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, offset: GLintptr): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView, dstOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D) */\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D) */\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: number, srcLength?: GLuint): void;\n}\n\n/**\n * Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo)\n */\ninterface WebGLActiveInfo {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/name) */\n    readonly name: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/size) */\n    readonly size: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLActiveInfo/type) */\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new(): WebGLActiveInfo;\n};\n\n/**\n * Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLBuffer)\n */\ninterface WebGLBuffer {\n}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new(): WebGLBuffer;\n};\n\n/**\n * The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLContextEvent)\n */\ninterface WebGLContextEvent extends Event {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLContextEvent/statusMessage) */\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new(type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/**\n * Part of the WebGL API and represents a collection of buffers that serve as a rendering destination.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLFramebuffer)\n */\ninterface WebGLFramebuffer {\n}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new(): WebGLFramebuffer;\n};\n\n/**\n * The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLProgram)\n */\ninterface WebGLProgram {\n}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new(): WebGLProgram;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLQuery) */\ninterface WebGLQuery {\n}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new(): WebGLQuery;\n};\n\n/**\n * Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderbuffer)\n */\ninterface WebGLRenderbuffer {\n}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new(): WebGLRenderbuffer;\n};\n\n/**\n * Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext)\n */\ninterface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverloads {\n}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new(): WebGLRenderingContext;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n};\n\ninterface WebGLRenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawingBufferColorSpace) */\n    drawingBufferColorSpace: PredefinedColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferHeight) */\n    readonly drawingBufferHeight: GLsizei;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawingBufferWidth) */\n    readonly drawingBufferWidth: GLsizei;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/unpackColorSpace) */\n    unpackColorSpace: PredefinedColorSpace;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/activeTexture) */\n    activeTexture(texture: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/attachShader) */\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindAttribLocation) */\n    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindBuffer) */\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindFramebuffer) */\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindRenderbuffer) */\n    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bindTexture) */\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendColor) */\n    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquation) */\n    blendEquation(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendEquationSeparate) */\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFunc) */\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/blendFuncSeparate) */\n    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus) */\n    checkFramebufferStatus(target: GLenum): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clear) */\n    clear(mask: GLbitfield): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearColor) */\n    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearDepth) */\n    clearDepth(depth: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/clearStencil) */\n    clearStencil(s: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/colorMask) */\n    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compileShader) */\n    compileShader(shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexImage2D) */\n    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D) */\n    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createBuffer) */\n    createBuffer(): WebGLBuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createFramebuffer) */\n    createFramebuffer(): WebGLFramebuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createProgram) */\n    createProgram(): WebGLProgram;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createRenderbuffer) */\n    createRenderbuffer(): WebGLRenderbuffer;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createShader) */\n    createShader(type: GLenum): WebGLShader | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/createTexture) */\n    createTexture(): WebGLTexture;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/cullFace) */\n    cullFace(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteBuffer) */\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteFramebuffer) */\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteProgram) */\n    deleteProgram(program: WebGLProgram | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer) */\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteShader) */\n    deleteShader(shader: WebGLShader | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/deleteTexture) */\n    deleteTexture(texture: WebGLTexture | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthFunc) */\n    depthFunc(func: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthMask) */\n    depthMask(flag: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/depthRange) */\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/detachShader) */\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disable) */\n    disable(cap: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray) */\n    disableVertexAttribArray(index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawArrays) */\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/drawElements) */\n    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enable) */\n    enable(cap: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray) */\n    enableVertexAttribArray(index: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/finish) */\n    finish(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/flush) */\n    flush(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer) */\n    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/framebufferTexture2D) */\n    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/frontFace) */\n    frontFace(mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/generateMipmap) */\n    generateMipmap(target: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveAttrib) */\n    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getActiveUniform) */\n    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttachedShaders) */\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getAttribLocation) */\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getBufferParameter) */\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getContextAttributes) */\n    getContextAttributes(): WebGLContextAttributes | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getError) */\n    getError(): GLenum;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getExtension) */\n    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;\n    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;\n    getExtension(extensionName: "EXT_color_buffer_float"): EXT_color_buffer_float | null;\n    getExtension(extensionName: "EXT_color_buffer_half_float"): EXT_color_buffer_half_float | null;\n    getExtension(extensionName: "EXT_float_blend"): EXT_float_blend | null;\n    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;\n    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;\n    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;\n    getExtension(extensionName: "EXT_texture_compression_bptc"): EXT_texture_compression_bptc | null;\n    getExtension(extensionName: "EXT_texture_compression_rgtc"): EXT_texture_compression_rgtc | null;\n    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: "KHR_parallel_shader_compile"): KHR_parallel_shader_compile | null;\n    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;\n    getExtension(extensionName: "OES_fbo_render_mipmap"): OES_fbo_render_mipmap | null;\n    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;\n    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;\n    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;\n    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;\n    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear | null;\n    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;\n    getExtension(extensionName: "OVR_multiview2"): OVR_multiview2 | null;\n    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc"): WEBGL_compressed_texture_etc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc1"): WEBGL_compressed_texture_etc1 | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_pvrtc"): WEBGL_compressed_texture_pvrtc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;\n    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;\n    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;\n    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;\n    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;\n    getExtension(extensionName: "WEBGL_multi_draw"): WEBGL_multi_draw | null;\n    getExtension(name: string): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter) */\n    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getParameter) */\n    getParameter(pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramInfoLog) */\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getProgramParameter) */\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter) */\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderInfoLog) */\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderParameter) */\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat) */\n    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getShaderSource) */\n    getShaderSource(shader: WebGLShader): string | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getSupportedExtensions) */\n    getSupportedExtensions(): string[] | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getTexParameter) */\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniform) */\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getUniformLocation) */\n    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttrib) */\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset) */\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/hint) */\n    hint(target: GLenum, mode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isBuffer) */\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isContextLost) */\n    isContextLost(): boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isEnabled) */\n    isEnabled(cap: GLenum): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isFramebuffer) */\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isProgram) */\n    isProgram(program: WebGLProgram | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isRenderbuffer) */\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isShader) */\n    isShader(shader: WebGLShader | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/isTexture) */\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/lineWidth) */\n    lineWidth(width: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/linkProgram) */\n    linkProgram(program: WebGLProgram): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/pixelStorei) */\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/polygonOffset) */\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/renderbufferStorage) */\n    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/sampleCoverage) */\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/scissor) */\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/shaderSource) */\n    shaderSource(shader: WebGLShader, source: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFunc) */\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate) */\n    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMask) */\n    stencilMask(mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate) */\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOp) */\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/stencilOpSeparate) */\n    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter) */\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texParameter) */\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/useProgram) */\n    useProgram(program: WebGLProgram | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/validateProgram) */\n    validateProgram(program: WebGLProgram): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) */\n    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/viewport) */\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly DEPTH_BUFFER_BIT: 0x00000100;\n    readonly STENCIL_BUFFER_BIT: 0x00000400;\n    readonly COLOR_BUFFER_BIT: 0x00004000;\n    readonly POINTS: 0x0000;\n    readonly LINES: 0x0001;\n    readonly LINE_LOOP: 0x0002;\n    readonly LINE_STRIP: 0x0003;\n    readonly TRIANGLES: 0x0004;\n    readonly TRIANGLE_STRIP: 0x0005;\n    readonly TRIANGLE_FAN: 0x0006;\n    readonly ZERO: 0;\n    readonly ONE: 1;\n    readonly SRC_COLOR: 0x0300;\n    readonly ONE_MINUS_SRC_COLOR: 0x0301;\n    readonly SRC_ALPHA: 0x0302;\n    readonly ONE_MINUS_SRC_ALPHA: 0x0303;\n    readonly DST_ALPHA: 0x0304;\n    readonly ONE_MINUS_DST_ALPHA: 0x0305;\n    readonly DST_COLOR: 0x0306;\n    readonly ONE_MINUS_DST_COLOR: 0x0307;\n    readonly SRC_ALPHA_SATURATE: 0x0308;\n    readonly FUNC_ADD: 0x8006;\n    readonly BLEND_EQUATION: 0x8009;\n    readonly BLEND_EQUATION_RGB: 0x8009;\n    readonly BLEND_EQUATION_ALPHA: 0x883D;\n    readonly FUNC_SUBTRACT: 0x800A;\n    readonly FUNC_REVERSE_SUBTRACT: 0x800B;\n    readonly BLEND_DST_RGB: 0x80C8;\n    readonly BLEND_SRC_RGB: 0x80C9;\n    readonly BLEND_DST_ALPHA: 0x80CA;\n    readonly BLEND_SRC_ALPHA: 0x80CB;\n    readonly CONSTANT_COLOR: 0x8001;\n    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;\n    readonly CONSTANT_ALPHA: 0x8003;\n    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;\n    readonly BLEND_COLOR: 0x8005;\n    readonly ARRAY_BUFFER: 0x8892;\n    readonly ELEMENT_ARRAY_BUFFER: 0x8893;\n    readonly ARRAY_BUFFER_BINDING: 0x8894;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;\n    readonly STREAM_DRAW: 0x88E0;\n    readonly STATIC_DRAW: 0x88E4;\n    readonly DYNAMIC_DRAW: 0x88E8;\n    readonly BUFFER_SIZE: 0x8764;\n    readonly BUFFER_USAGE: 0x8765;\n    readonly CURRENT_VERTEX_ATTRIB: 0x8626;\n    readonly FRONT: 0x0404;\n    readonly BACK: 0x0405;\n    readonly FRONT_AND_BACK: 0x0408;\n    readonly CULL_FACE: 0x0B44;\n    readonly BLEND: 0x0BE2;\n    readonly DITHER: 0x0BD0;\n    readonly STENCIL_TEST: 0x0B90;\n    readonly DEPTH_TEST: 0x0B71;\n    readonly SCISSOR_TEST: 0x0C11;\n    readonly POLYGON_OFFSET_FILL: 0x8037;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;\n    readonly SAMPLE_COVERAGE: 0x80A0;\n    readonly NO_ERROR: 0;\n    readonly INVALID_ENUM: 0x0500;\n    readonly INVALID_VALUE: 0x0501;\n    readonly INVALID_OPERATION: 0x0502;\n    readonly OUT_OF_MEMORY: 0x0505;\n    readonly CW: 0x0900;\n    readonly CCW: 0x0901;\n    readonly LINE_WIDTH: 0x0B21;\n    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;\n    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;\n    readonly CULL_FACE_MODE: 0x0B45;\n    readonly FRONT_FACE: 0x0B46;\n    readonly DEPTH_RANGE: 0x0B70;\n    readonly DEPTH_WRITEMASK: 0x0B72;\n    readonly DEPTH_CLEAR_VALUE: 0x0B73;\n    readonly DEPTH_FUNC: 0x0B74;\n    readonly STENCIL_CLEAR_VALUE: 0x0B91;\n    readonly STENCIL_FUNC: 0x0B92;\n    readonly STENCIL_FAIL: 0x0B94;\n    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;\n    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;\n    readonly STENCIL_REF: 0x0B97;\n    readonly STENCIL_VALUE_MASK: 0x0B93;\n    readonly STENCIL_WRITEMASK: 0x0B98;\n    readonly STENCIL_BACK_FUNC: 0x8800;\n    readonly STENCIL_BACK_FAIL: 0x8801;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;\n    readonly STENCIL_BACK_REF: 0x8CA3;\n    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;\n    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;\n    readonly VIEWPORT: 0x0BA2;\n    readonly SCISSOR_BOX: 0x0C10;\n    readonly COLOR_CLEAR_VALUE: 0x0C22;\n    readonly COLOR_WRITEMASK: 0x0C23;\n    readonly UNPACK_ALIGNMENT: 0x0CF5;\n    readonly PACK_ALIGNMENT: 0x0D05;\n    readonly MAX_TEXTURE_SIZE: 0x0D33;\n    readonly MAX_VIEWPORT_DIMS: 0x0D3A;\n    readonly SUBPIXEL_BITS: 0x0D50;\n    readonly RED_BITS: 0x0D52;\n    readonly GREEN_BITS: 0x0D53;\n    readonly BLUE_BITS: 0x0D54;\n    readonly ALPHA_BITS: 0x0D55;\n    readonly DEPTH_BITS: 0x0D56;\n    readonly STENCIL_BITS: 0x0D57;\n    readonly POLYGON_OFFSET_UNITS: 0x2A00;\n    readonly POLYGON_OFFSET_FACTOR: 0x8038;\n    readonly TEXTURE_BINDING_2D: 0x8069;\n    readonly SAMPLE_BUFFERS: 0x80A8;\n    readonly SAMPLES: 0x80A9;\n    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;\n    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;\n    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;\n    readonly DONT_CARE: 0x1100;\n    readonly FASTEST: 0x1101;\n    readonly NICEST: 0x1102;\n    readonly GENERATE_MIPMAP_HINT: 0x8192;\n    readonly BYTE: 0x1400;\n    readonly UNSIGNED_BYTE: 0x1401;\n    readonly SHORT: 0x1402;\n    readonly UNSIGNED_SHORT: 0x1403;\n    readonly INT: 0x1404;\n    readonly UNSIGNED_INT: 0x1405;\n    readonly FLOAT: 0x1406;\n    readonly DEPTH_COMPONENT: 0x1902;\n    readonly ALPHA: 0x1906;\n    readonly RGB: 0x1907;\n    readonly RGBA: 0x1908;\n    readonly LUMINANCE: 0x1909;\n    readonly LUMINANCE_ALPHA: 0x190A;\n    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;\n    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;\n    readonly UNSIGNED_SHORT_5_6_5: 0x8363;\n    readonly FRAGMENT_SHADER: 0x8B30;\n    readonly VERTEX_SHADER: 0x8B31;\n    readonly MAX_VERTEX_ATTRIBS: 0x8869;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;\n    readonly MAX_VARYING_VECTORS: 0x8DFC;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;\n    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;\n    readonly SHADER_TYPE: 0x8B4F;\n    readonly DELETE_STATUS: 0x8B80;\n    readonly LINK_STATUS: 0x8B82;\n    readonly VALIDATE_STATUS: 0x8B83;\n    readonly ATTACHED_SHADERS: 0x8B85;\n    readonly ACTIVE_UNIFORMS: 0x8B86;\n    readonly ACTIVE_ATTRIBUTES: 0x8B89;\n    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;\n    readonly CURRENT_PROGRAM: 0x8B8D;\n    readonly NEVER: 0x0200;\n    readonly LESS: 0x0201;\n    readonly EQUAL: 0x0202;\n    readonly LEQUAL: 0x0203;\n    readonly GREATER: 0x0204;\n    readonly NOTEQUAL: 0x0205;\n    readonly GEQUAL: 0x0206;\n    readonly ALWAYS: 0x0207;\n    readonly KEEP: 0x1E00;\n    readonly REPLACE: 0x1E01;\n    readonly INCR: 0x1E02;\n    readonly DECR: 0x1E03;\n    readonly INVERT: 0x150A;\n    readonly INCR_WRAP: 0x8507;\n    readonly DECR_WRAP: 0x8508;\n    readonly VENDOR: 0x1F00;\n    readonly RENDERER: 0x1F01;\n    readonly VERSION: 0x1F02;\n    readonly NEAREST: 0x2600;\n    readonly LINEAR: 0x2601;\n    readonly NEAREST_MIPMAP_NEAREST: 0x2700;\n    readonly LINEAR_MIPMAP_NEAREST: 0x2701;\n    readonly NEAREST_MIPMAP_LINEAR: 0x2702;\n    readonly LINEAR_MIPMAP_LINEAR: 0x2703;\n    readonly TEXTURE_MAG_FILTER: 0x2800;\n    readonly TEXTURE_MIN_FILTER: 0x2801;\n    readonly TEXTURE_WRAP_S: 0x2802;\n    readonly TEXTURE_WRAP_T: 0x2803;\n    readonly TEXTURE_2D: 0x0DE1;\n    readonly TEXTURE: 0x1702;\n    readonly TEXTURE_CUBE_MAP: 0x8513;\n    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;\n    readonly TEXTURE0: 0x84C0;\n    readonly TEXTURE1: 0x84C1;\n    readonly TEXTURE2: 0x84C2;\n    readonly TEXTURE3: 0x84C3;\n    readonly TEXTURE4: 0x84C4;\n    readonly TEXTURE5: 0x84C5;\n    readonly TEXTURE6: 0x84C6;\n    readonly TEXTURE7: 0x84C7;\n    readonly TEXTURE8: 0x84C8;\n    readonly TEXTURE9: 0x84C9;\n    readonly TEXTURE10: 0x84CA;\n    readonly TEXTURE11: 0x84CB;\n    readonly TEXTURE12: 0x84CC;\n    readonly TEXTURE13: 0x84CD;\n    readonly TEXTURE14: 0x84CE;\n    readonly TEXTURE15: 0x84CF;\n    readonly TEXTURE16: 0x84D0;\n    readonly TEXTURE17: 0x84D1;\n    readonly TEXTURE18: 0x84D2;\n    readonly TEXTURE19: 0x84D3;\n    readonly TEXTURE20: 0x84D4;\n    readonly TEXTURE21: 0x84D5;\n    readonly TEXTURE22: 0x84D6;\n    readonly TEXTURE23: 0x84D7;\n    readonly TEXTURE24: 0x84D8;\n    readonly TEXTURE25: 0x84D9;\n    readonly TEXTURE26: 0x84DA;\n    readonly TEXTURE27: 0x84DB;\n    readonly TEXTURE28: 0x84DC;\n    readonly TEXTURE29: 0x84DD;\n    readonly TEXTURE30: 0x84DE;\n    readonly TEXTURE31: 0x84DF;\n    readonly ACTIVE_TEXTURE: 0x84E0;\n    readonly REPEAT: 0x2901;\n    readonly CLAMP_TO_EDGE: 0x812F;\n    readonly MIRRORED_REPEAT: 0x8370;\n    readonly FLOAT_VEC2: 0x8B50;\n    readonly FLOAT_VEC3: 0x8B51;\n    readonly FLOAT_VEC4: 0x8B52;\n    readonly INT_VEC2: 0x8B53;\n    readonly INT_VEC3: 0x8B54;\n    readonly INT_VEC4: 0x8B55;\n    readonly BOOL: 0x8B56;\n    readonly BOOL_VEC2: 0x8B57;\n    readonly BOOL_VEC3: 0x8B58;\n    readonly BOOL_VEC4: 0x8B59;\n    readonly FLOAT_MAT2: 0x8B5A;\n    readonly FLOAT_MAT3: 0x8B5B;\n    readonly FLOAT_MAT4: 0x8B5C;\n    readonly SAMPLER_2D: 0x8B5E;\n    readonly SAMPLER_CUBE: 0x8B60;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;\n    readonly COMPILE_STATUS: 0x8B81;\n    readonly LOW_FLOAT: 0x8DF0;\n    readonly MEDIUM_FLOAT: 0x8DF1;\n    readonly HIGH_FLOAT: 0x8DF2;\n    readonly LOW_INT: 0x8DF3;\n    readonly MEDIUM_INT: 0x8DF4;\n    readonly HIGH_INT: 0x8DF5;\n    readonly FRAMEBUFFER: 0x8D40;\n    readonly RENDERBUFFER: 0x8D41;\n    readonly RGBA4: 0x8056;\n    readonly RGB5_A1: 0x8057;\n    readonly RGBA8: 0x8058;\n    readonly RGB565: 0x8D62;\n    readonly DEPTH_COMPONENT16: 0x81A5;\n    readonly STENCIL_INDEX8: 0x8D48;\n    readonly DEPTH_STENCIL: 0x84F9;\n    readonly RENDERBUFFER_WIDTH: 0x8D42;\n    readonly RENDERBUFFER_HEIGHT: 0x8D43;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;\n    readonly RENDERBUFFER_RED_SIZE: 0x8D50;\n    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;\n    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;\n    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;\n    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;\n    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;\n    readonly COLOR_ATTACHMENT0: 0x8CE0;\n    readonly DEPTH_ATTACHMENT: 0x8D00;\n    readonly STENCIL_ATTACHMENT: 0x8D20;\n    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;\n    readonly NONE: 0;\n    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;\n    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;\n    readonly FRAMEBUFFER_BINDING: 0x8CA6;\n    readonly RENDERBUFFER_BINDING: 0x8CA7;\n    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;\n    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;\n    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;\n    readonly CONTEXT_LOST_WEBGL: 0x9242;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;\n    readonly BROWSER_DEFAULT_WEBGL: 0x9244;\n}\n\ninterface WebGLRenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferData) */\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: AllowSharedBufferSource | null, usage: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/bufferSubData) */\n    bufferSubData(target: GLenum, offset: GLintptr, data: AllowSharedBufferSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexImage2D) */\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D) */\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/readPixels) */\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texImage2D) */\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/texSubImage2D) */\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSampler) */\ninterface WebGLSampler {\n}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new(): WebGLSampler;\n};\n\n/**\n * The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShader)\n */\ninterface WebGLShader {\n}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new(): WebGLShader;\n};\n\n/**\n * Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat)\n */\ninterface WebGLShaderPrecisionFormat {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/precision) */\n    readonly precision: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMax) */\n    readonly rangeMax: GLint;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLShaderPrecisionFormat/rangeMin) */\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new(): WebGLShaderPrecisionFormat;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLSync) */\ninterface WebGLSync {\n}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new(): WebGLSync;\n};\n\n/**\n * Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTexture)\n */\ninterface WebGLTexture {\n}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new(): WebGLTexture;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLTransformFeedback) */\ninterface WebGLTransformFeedback {\n}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new(): WebGLTransformFeedback;\n};\n\n/**\n * Part of the WebGL API and represents the location of a uniform variable in a shader program.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLUniformLocation)\n */\ninterface WebGLUniformLocation {\n}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new(): WebGLUniformLocation;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */\ninterface WebGLVertexArrayObject {\n}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new(): WebGLVertexArrayObject;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLVertexArrayObject) */\ninterface WebGLVertexArrayObjectOES {\n}\n\ninterface WebSocketEventMap {\n    "close": CloseEvent;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/**\n * Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket)\n */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is "blob".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/binaryType)\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute\'s value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/bufferedAmount)\n     */\n    readonly bufferedAmount: number;\n    /**\n     * Returns the extensions selected by the server, if any.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/extensions)\n     */\n    readonly extensions: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close_event) */\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/error_event) */\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/message_event) */\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/open_event) */\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /**\n     * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor\'s second argument to perform subprotocol negotiation.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/protocol)\n     */\n    readonly protocol: string;\n    /**\n     * Returns the state of the WebSocket object\'s connection. It can have the values described below.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL that was used to establish the WebSocket connection.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/url)\n     */\n    readonly url: string;\n    /**\n     * Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/close)\n     */\n    close(code?: number, reason?: string): void;\n    /**\n     * Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebSocket/send)\n     */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSING: 2;\n    readonly CLOSED: 3;\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new(url: string | URL, protocols?: string | string[]): WebSocket;\n    readonly CONNECTING: 0;\n    readonly OPEN: 1;\n    readonly CLOSING: 2;\n    readonly CLOSED: 3;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport)\n */\ninterface WebTransport {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/closed) */\n    readonly closed: Promise<WebTransportCloseInfo>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/datagrams) */\n    readonly datagrams: WebTransportDatagramDuplexStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingBidirectionalStreams) */\n    readonly incomingBidirectionalStreams: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/incomingUnidirectionalStreams) */\n    readonly incomingUnidirectionalStreams: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/close) */\n    close(closeInfo?: WebTransportCloseInfo): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createBidirectionalStream) */\n    createBidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WebTransportBidirectionalStream>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransport/createUnidirectionalStream) */\n    createUnidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WritableStream>;\n}\n\ndeclare var WebTransport: {\n    prototype: WebTransport;\n    new(url: string | URL, options?: WebTransportOptions): WebTransport;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream)\n */\ninterface WebTransportBidirectionalStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportBidirectionalStream/writable) */\n    readonly writable: WritableStream;\n}\n\ndeclare var WebTransportBidirectionalStream: {\n    prototype: WebTransportBidirectionalStream;\n    new(): WebTransportBidirectionalStream;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream)\n */\ninterface WebTransportDatagramDuplexStream {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingHighWaterMark) */\n    incomingHighWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/incomingMaxAge) */\n    incomingMaxAge: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/maxDatagramSize) */\n    readonly maxDatagramSize: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingHighWaterMark) */\n    outgoingHighWaterMark: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/outgoingMaxAge) */\n    outgoingMaxAge: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/readable) */\n    readonly readable: ReadableStream;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportDatagramDuplexStream/writable) */\n    readonly writable: WritableStream;\n}\n\ndeclare var WebTransportDatagramDuplexStream: {\n    prototype: WebTransportDatagramDuplexStream;\n    new(): WebTransportDatagramDuplexStream;\n};\n\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError)\n */\ninterface WebTransportError extends DOMException {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/source) */\n    readonly source: WebTransportErrorSource;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebTransportError/streamErrorCode) */\n    readonly streamErrorCode: number | null;\n}\n\ndeclare var WebTransportError: {\n    prototype: WebTransportError;\n    new(message?: string, options?: WebTransportErrorOptions): WebTransportError;\n};\n\n/**\n * This ServiceWorker API interface represents the scope of a service worker client that is a document in a browser context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WindowClient)\n */\ninterface WindowClient extends Client {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WindowClient/focused) */\n    readonly focused: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WindowClient/visibilityState) */\n    readonly visibilityState: DocumentVisibilityState;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WindowClient/focus) */\n    focus(): Promise<WindowClient>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WindowClient/navigate) */\n    navigate(url: string | URL): Promise<WindowClient | null>;\n}\n\ndeclare var WindowClient: {\n    prototype: WindowClient;\n    new(): WindowClient;\n};\n\ninterface WindowOrWorkerGlobalScope {\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)\n     */\n    readonly caches: CacheStorage;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */\n    readonly crossOriginIsolated: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */\n    readonly crypto: Crypto;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */\n    readonly indexedDB: IDBFactory;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */\n    readonly isSecureContext: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */\n    readonly performance: Performance;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */\n    atob(data: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */\n    btoa(data: string): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearInterval) */\n    clearInterval(id: number | undefined): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearTimeout) */\n    clearTimeout(id: number | undefined): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/createImageBitmap) */\n    createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch) */\n    fetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/queueMicrotask) */\n    queueMicrotask(callback: VoidFunction): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/reportError) */\n    reportError(e: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setInterval) */\n    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setTimeout) */\n    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/structuredClone) */\n    structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap, MessageEventTargetEventMap {\n}\n\n/**\n * This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker)\n */\ninterface Worker extends EventTarget, AbstractWorker, MessageEventTarget<Worker> {\n    /**\n     * Clones message and transmits it to worker\'s global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/postMessage)\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /**\n     * Aborts worker\'s associated global environment.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Worker/terminate)\n     */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new(scriptURL: string | URL, options?: WorkerOptions): Worker;\n};\n\ninterface WorkerGlobalScopeEventMap {\n    "error": ErrorEvent;\n    "languagechange": Event;\n    "offline": Event;\n    "online": Event;\n    "rejectionhandled": PromiseRejectionEvent;\n    "unhandledrejection": PromiseRejectionEvent;\n}\n\n/**\n * This Web Workers API interface is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope)\n */\ninterface WorkerGlobalScope extends EventTarget, FontFaceSource, WindowOrWorkerGlobalScope {\n    /**\n     * Returns workerGlobal\'s WorkerLocation object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/location)\n     */\n    readonly location: WorkerLocation;\n    /**\n     * Returns workerGlobal\'s WorkerNavigator object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/navigator)\n     */\n    readonly navigator: WorkerNavigator;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event) */\n    onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event) */\n    onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event) */\n    onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event) */\n    ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event) */\n    onrejectionhandled: ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event) */\n    onunhandledrejection: ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n    /**\n     * Returns workerGlobal.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/self)\n     */\n    readonly self: WorkerGlobalScope & typeof globalThis;\n    /**\n     * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/importScripts)\n     */\n    importScripts(...urls: (string | URL)[]): void;\n    addEventListener<K extends keyof WorkerGlobalScopeEventMap>(type: K, listener: (this: WorkerGlobalScope, ev: WorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(type: K, listener: (this: WorkerGlobalScope, ev: WorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WorkerGlobalScope: {\n    prototype: WorkerGlobalScope;\n    new(): WorkerGlobalScope;\n};\n\n/**\n * The absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.location property obtained by calling self.location.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation)\n */\ninterface WorkerLocation {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/hash) */\n    readonly hash: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/host) */\n    readonly host: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/hostname) */\n    readonly hostname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/href) */\n    readonly href: string;\n    toString(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/origin) */\n    readonly origin: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/pathname) */\n    readonly pathname: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/port) */\n    readonly port: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/protocol) */\n    readonly protocol: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerLocation/search) */\n    readonly search: string;\n}\n\ndeclare var WorkerLocation: {\n    prototype: WorkerLocation;\n    new(): WorkerLocation;\n};\n\n/**\n * A subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.navigator property obtained by calling window.self.navigator.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerNavigator)\n */\ninterface WorkerNavigator extends NavigatorBadge, NavigatorConcurrentHardware, NavigatorID, NavigatorLanguage, NavigatorLocks, NavigatorOnLine, NavigatorStorage {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerNavigator/mediaCapabilities) */\n    readonly mediaCapabilities: MediaCapabilities;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerNavigator/permissions) */\n    readonly permissions: Permissions;\n    /**\n     * Available only in secure contexts.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerNavigator/serviceWorker)\n     */\n    readonly serviceWorker: ServiceWorkerContainer;\n}\n\ndeclare var WorkerNavigator: {\n    prototype: WorkerNavigator;\n    new(): WorkerNavigator;\n};\n\n/**\n * This Streams API interface provides\xa0a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream)\n */\ninterface WritableStream<W = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/locked) */\n    readonly locked: boolean;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/abort) */\n    abort(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStream/getWriter) */\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>;\n};\n\n/**\n * This Streams API interface represents a controller allowing control of a\xa0WritableStream\'s state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController)\n */\ninterface WritableStreamDefaultController {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/signal) */\n    readonly signal: AbortSignal;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultController/error) */\n    error(e?: any): void;\n}\n\ndeclare var WritableStreamDefaultController: {\n    prototype: WritableStreamDefaultController;\n    new(): WritableStreamDefaultController;\n};\n\n/**\n * This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter)\n */\ninterface WritableStreamDefaultWriter<W = any> {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/closed) */\n    readonly closed: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/desiredSize) */\n    readonly desiredSize: number | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/ready) */\n    readonly ready: Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/abort) */\n    abort(reason?: any): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/close) */\n    close(): Promise<void>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/releaseLock) */\n    releaseLock(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WritableStreamDefaultWriter/write) */\n    write(chunk?: W): Promise<void>;\n}\n\ndeclare var WritableStreamDefaultWriter: {\n    prototype: WritableStreamDefaultWriter;\n    new<W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;\n};\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    "readystatechange": Event;\n}\n\n/**\n * Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest)\n */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readystatechange_event) */\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /**\n     * Returns client\'s state.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/readyState)\n     */\n    readonly readyState: number;\n    /**\n     * Returns the response body.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/response)\n     */\n    readonly response: any;\n    /**\n     * Returns response as text.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "text".\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseText)\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), "arraybuffer", "blob", "document", "json", and "text".\n     *\n     * When set: setting to "document" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseType)\n     */\n    responseType: XMLHttpRequestResponseType;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/responseURL) */\n    readonly responseURL: string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/status) */\n    readonly status: number;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/statusText) */\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this\'s synchronous flag is unset, a timeout event will then be dispatched, or a "TimeoutError" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/timeout)\n     */\n    timeout: number;\n    /**\n     * Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/upload)\n     */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is not unsent or opened, or if the send() flag is set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/withCredentials)\n     */\n    withCredentials: boolean;\n    /**\n     * Cancels any network activity.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/abort)\n     */\n    abort(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getAllResponseHeaders) */\n    getAllResponseHeaders(): string;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/getResponseHeader) */\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a "SyntaxError" DOMException if either method is not a valid method or url cannot be parsed.\n     *\n     * Throws a "SecurityError" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an "InvalidAccessError" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/open)\n     */\n    open(method: string, url: string | URL): void;\n    open(method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null): void;\n    /**\n     * Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n     *\n     * Throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/overrideMimeType)\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/send)\n     */\n    send(body?: XMLHttpRequestBodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a "SyntaxError" DOMException if name is not a header name or if value is not a header value.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/setRequestHeader)\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly UNSENT: 0;\n    readonly OPENED: 1;\n    readonly HEADERS_RECEIVED: 2;\n    readonly LOADING: 3;\n    readonly DONE: 4;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new(): XMLHttpRequest;\n    readonly UNSENT: 0;\n    readonly OPENED: 1;\n    readonly HEADERS_RECEIVED: 2;\n    readonly LOADING: 3;\n    readonly DONE: 4;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    "abort": ProgressEvent<XMLHttpRequestEventTarget>;\n    "error": ProgressEvent<XMLHttpRequestEventTarget>;\n    "load": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadend": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadstart": ProgressEvent<XMLHttpRequestEventTarget>;\n    "progress": ProgressEvent<XMLHttpRequestEventTarget>;\n    "timeout": ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestEventTarget) */\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new(): XMLHttpRequestEventTarget;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/XMLHttpRequestUpload) */\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new(): XMLHttpRequestUpload;\n};\n\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console) */\ninterface Console {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/assert_static) */\n    assert(condition?: boolean, ...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/clear_static) */\n    clear(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/count_static) */\n    count(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/countReset_static) */\n    countReset(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/debug_static) */\n    debug(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dir_static) */\n    dir(item?: any, options?: any): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/dirxml_static) */\n    dirxml(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/error_static) */\n    error(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/group_static) */\n    group(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupCollapsed_static) */\n    groupCollapsed(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/groupEnd_static) */\n    groupEnd(): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/info_static) */\n    info(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/log_static) */\n    log(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/table_static) */\n    table(tabularData?: any, properties?: string[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/time_static) */\n    time(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeEnd_static) */\n    timeEnd(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/timeLog_static) */\n    timeLog(label?: string, ...data: any[]): void;\n    timeStamp(label?: string): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/trace_static) */\n    trace(...data: any[]): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/console/warn_static) */\n    warn(...data: any[]): void;\n}\n\ndeclare var console: Console;\n\ndeclare namespace WebAssembly {\n    interface CompileError extends Error {\n    }\n\n    var CompileError: {\n        prototype: CompileError;\n        new(message?: string): CompileError;\n        (message?: string): CompileError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Global) */\n    interface Global<T extends ValueType = ValueType> {\n        value: ValueTypeMap[T];\n        valueOf(): ValueTypeMap[T];\n    }\n\n    var Global: {\n        prototype: Global;\n        new<T extends ValueType = ValueType>(descriptor: GlobalDescriptor<T>, v?: ValueTypeMap[T]): Global<T>;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance) */\n    interface Instance {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Instance/exports) */\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new(module: Module, importObject?: Imports): Instance;\n    };\n\n    interface LinkError extends Error {\n    }\n\n    var LinkError: {\n        prototype: LinkError;\n        new(message?: string): LinkError;\n        (message?: string): LinkError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory) */\n    interface Memory {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/buffer) */\n        readonly buffer: ArrayBuffer;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Memory/grow) */\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new(descriptor: MemoryDescriptor): Memory;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module) */\n    interface Module {\n    }\n\n    var Module: {\n        prototype: Module;\n        new(bytes: BufferSource): Module;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/customSections_static) */\n        customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/exports_static) */\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Module/imports_static) */\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface RuntimeError extends Error {\n    }\n\n    var RuntimeError: {\n        prototype: RuntimeError;\n        new(message?: string): RuntimeError;\n        (message?: string): RuntimeError;\n    };\n\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table) */\n    interface Table {\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/length) */\n        readonly length: number;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/get) */\n        get(index: number): any;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/grow) */\n        grow(delta: number, value?: any): number;\n        /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/Table/set) */\n        set(index: number, value?: any): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new(descriptor: TableDescriptor, value?: any): Table;\n    };\n\n    interface GlobalDescriptor<T extends ValueType = ValueType> {\n        mutable?: boolean;\n        value: T;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n        shared?: boolean;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface ValueTypeMap {\n        anyfunc: Function;\n        externref: any;\n        f32: number;\n        f64: number;\n        i32: number;\n        i64: bigint;\n        v128: never;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = "function" | "global" | "memory" | "table";\n    type TableKind = "anyfunc" | "externref";\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type Imports = Record<string, ModuleImports>;\n    type ModuleImports = Record<string, ImportValue>;\n    type ValueType = keyof ValueTypeMap;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/compile_static) */\n    function compile(bytes: BufferSource): Promise<Module>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/compileStreaming_static) */\n    function compileStreaming(source: Response | PromiseLike<Response>): Promise<Module>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/instantiate_static) */\n    function instantiate(bytes: BufferSource, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(moduleObject: Module, importObject?: Imports): Promise<Instance>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/instantiateStreaming_static) */\n    function instantiateStreaming(source: Response | PromiseLike<Response>, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/WebAssembly/JavaScript_interface/validate_static) */\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface AudioDataOutputCallback {\n    (output: AudioData): void;\n}\n\ninterface EncodedAudioChunkOutputCallback {\n    (output: EncodedAudioChunk, metadata?: EncodedAudioChunkMetadata): void;\n}\n\ninterface EncodedVideoChunkOutputCallback {\n    (chunk: EncodedVideoChunk, metadata?: EncodedVideoChunkMetadata): void;\n}\n\ninterface FrameRequestCallback {\n    (time: DOMHighResTimeStamp): void;\n}\n\ninterface LockGrantedCallback {\n    (lock: Lock | null): any;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n}\n\ninterface PerformanceObserverCallback {\n    (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;\n}\n\ninterface QueuingStrategySize<T = any> {\n    (chunk: T): number;\n}\n\ninterface ReportingObserverCallback {\n    (reports: Report[], observer: ReportingObserver): void;\n}\n\ninterface TransformerFlushCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformerStartCallback<O> {\n    (controller: TransformStreamDefaultController<O>): any;\n}\n\ninterface TransformerTransformCallback<I, O> {\n    (chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkAbortCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkStartCallback {\n    (controller: WritableStreamDefaultController): any;\n}\n\ninterface UnderlyingSinkWriteCallback<W> {\n    (chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceCancelCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourcePullCallback<R> {\n    (controller: ReadableStreamController<R>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceStartCallback<R> {\n    (controller: ReadableStreamController<R>): any;\n}\n\ninterface VideoFrameOutputCallback {\n    (output: VideoFrame): void;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\ninterface WebCodecsErrorCallback {\n    (error: DOMException): void;\n}\n\n/**\n * Returns dedicatedWorkerGlobal\'s name, i.e. the value given to the Worker constructor. Primarily useful for debugging.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/name)\n */\ndeclare var name: string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event) */\ndeclare var onrtctransform: ((this: DedicatedWorkerGlobalScope, ev: RTCTransformEvent) => any) | null;\n/**\n * Aborts dedicatedWorkerGlobal.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/close)\n */\ndeclare function close(): void;\n/**\n * Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/postMessage)\n */\ndeclare function postMessage(message: any, transfer: Transferable[]): void;\ndeclare function postMessage(message: any, options?: StructuredSerializeOptions): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)\n */\ndeclare function dispatchEvent(event: Event): boolean;\n/**\n * Returns workerGlobal\'s WorkerLocation object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/location)\n */\ndeclare var location: WorkerLocation;\n/**\n * Returns workerGlobal\'s WorkerNavigator object.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/navigator)\n */\ndeclare var navigator: WorkerNavigator;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/error_event) */\ndeclare var onerror: ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/languagechange_event) */\ndeclare var onlanguagechange: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/offline_event) */\ndeclare var onoffline: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/online_event) */\ndeclare var ononline: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/rejectionhandled_event) */\ndeclare var onrejectionhandled: ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/unhandledrejection_event) */\ndeclare var onunhandledrejection: ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n/**\n * Returns workerGlobal.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/self)\n */\ndeclare var self: WorkerGlobalScope & typeof globalThis;\n/**\n * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/WorkerGlobalScope/importScripts)\n */\ndeclare function importScripts(...urls: (string | URL)[]): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)\n */\ndeclare function dispatchEvent(event: Event): boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/fonts) */\ndeclare var fonts: FontFaceSet;\n/**\n * Available only in secure contexts.\n *\n * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/caches)\n */\ndeclare var caches: CacheStorage;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crossOriginIsolated) */\ndeclare var crossOriginIsolated: boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/crypto) */\ndeclare var crypto: Crypto;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/indexedDB) */\ndeclare var indexedDB: IDBFactory;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/isSecureContext) */\ndeclare var isSecureContext: boolean;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/origin) */\ndeclare var origin: string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/performance) */\ndeclare var performance: Performance;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/atob) */\ndeclare function atob(data: string): string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/btoa) */\ndeclare function btoa(data: string): string;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearInterval) */\ndeclare function clearInterval(id: number | undefined): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/clearTimeout) */\ndeclare function clearTimeout(id: number | undefined): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/createImageBitmap) */\ndeclare function createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch) */\ndeclare function fetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response>;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/queueMicrotask) */\ndeclare function queueMicrotask(callback: VoidFunction): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/reportError) */\ndeclare function reportError(e: any): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setInterval) */\ndeclare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/setTimeout) */\ndeclare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/structuredClone) */\ndeclare function structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame) */\ndeclare function cancelAnimationFrame(handle: number): void;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame) */\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/message_event) */\ndeclare var onmessage: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n/** [MDN Reference](https://developer.mozilla.org/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event) */\ndeclare var onmessageerror: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\ndeclare function addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\ndeclare function removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\ntype AlgorithmIdentifier = Algorithm | string;\ntype AllowSharedBufferSource = ArrayBuffer | ArrayBufferView;\ntype BigInteger = Uint8Array;\ntype BlobPart = BufferSource | Blob | string;\ntype BodyInit = ReadableStream | XMLHttpRequestBodyInit;\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype CSSKeywordish = string | CSSKeywordValue;\ntype CSSNumberish = number | CSSNumericValue;\ntype CSSPerspectiveValue = CSSNumericValue | CSSKeywordish;\ntype CSSUnparsedSegment = string | CSSVariableReferenceValue;\ntype CanvasImageSource = ImageBitmap | OffscreenCanvas | VideoFrame;\ntype DOMHighResTimeStamp = number;\ntype EpochTimeStamp = number;\ntype EventListenerOrEventListenerObject = EventListener | EventListenerObject;\ntype FileSystemWriteChunkType = BufferSource | Blob | string | WriteParams;\ntype Float32List = Float32Array | GLfloat[];\ntype FormDataEntryValue = File | string;\ntype GLbitfield = number;\ntype GLboolean = boolean;\ntype GLclampf = number;\ntype GLenum = number;\ntype GLfloat = number;\ntype GLint = number;\ntype GLint64 = number;\ntype GLintptr = number;\ntype GLsizei = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLuint64 = number;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype HeadersInit = [string, string][] | Record<string, string> | Headers;\ntype IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype ImageBufferSource = AllowSharedBufferSource | ReadableStream;\ntype Int32List = Int32Array | GLint[];\ntype MessageEventSource = MessagePort | ServiceWorker;\ntype NamedCurve = string;\ntype OffscreenRenderingContext = OffscreenCanvasRenderingContext2D | ImageBitmapRenderingContext | WebGLRenderingContext | WebGL2RenderingContext;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype PerformanceEntryList = PerformanceEntry[];\ntype PushMessageDataInit = BufferSource | string;\ntype ReadableStreamController<T> = ReadableStreamDefaultController<T> | ReadableByteStreamController;\ntype ReadableStreamReadResult<T> = ReadableStreamReadValueResult<T> | ReadableStreamReadDoneResult<T>;\ntype ReadableStreamReader<T> = ReadableStreamDefaultReader<T> | ReadableStreamBYOBReader;\ntype ReportList = Report[];\ntype RequestInfo = Request | string;\ntype TexImageSource = ImageBitmap | ImageData | OffscreenCanvas | VideoFrame;\ntype TimerHandler = string | Function;\ntype Transferable = OffscreenCanvas | ImageBitmap | MessagePort | MediaSourceHandle | ReadableStream | WritableStream | TransformStream | AudioData | VideoFrame | RTCDataChannel | ArrayBuffer;\ntype Uint32List = Uint32Array | GLuint[];\ntype XMLHttpRequestBodyInit = Blob | BufferSource | FormData | URLSearchParams | string;\ntype AlphaOption = "discard" | "keep";\ntype AudioSampleFormat = "f32" | "f32-planar" | "s16" | "s16-planar" | "s32" | "s32-planar" | "u8" | "u8-planar";\ntype AvcBitstreamFormat = "annexb" | "avc";\ntype BinaryType = "arraybuffer" | "blob";\ntype BitrateMode = "constant" | "variable";\ntype CSSMathOperator = "clamp" | "invert" | "max" | "min" | "negate" | "product" | "sum";\ntype CSSNumericBaseType = "angle" | "flex" | "frequency" | "length" | "percent" | "resolution" | "time";\ntype CanvasDirection = "inherit" | "ltr" | "rtl";\ntype CanvasFillRule = "evenodd" | "nonzero";\ntype CanvasFontKerning = "auto" | "none" | "normal";\ntype CanvasFontStretch = "condensed" | "expanded" | "extra-condensed" | "extra-expanded" | "normal" | "semi-condensed" | "semi-expanded" | "ultra-condensed" | "ultra-expanded";\ntype CanvasFontVariantCaps = "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";\ntype CanvasLineCap = "butt" | "round" | "square";\ntype CanvasLineJoin = "bevel" | "miter" | "round";\ntype CanvasTextAlign = "center" | "end" | "left" | "right" | "start";\ntype CanvasTextBaseline = "alphabetic" | "bottom" | "hanging" | "ideographic" | "middle" | "top";\ntype CanvasTextRendering = "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";\ntype ClientTypes = "all" | "sharedworker" | "window" | "worker";\ntype CodecState = "closed" | "configured" | "unconfigured";\ntype ColorGamut = "p3" | "rec2020" | "srgb";\ntype ColorSpaceConversion = "default" | "none";\ntype CompressionFormat = "deflate" | "deflate-raw" | "gzip";\ntype DocumentVisibilityState = "hidden" | "visible";\ntype EncodedAudioChunkType = "delta" | "key";\ntype EncodedVideoChunkType = "delta" | "key";\ntype EndingType = "native" | "transparent";\ntype FileSystemHandleKind = "directory" | "file";\ntype FontDisplay = "auto" | "block" | "fallback" | "optional" | "swap";\ntype FontFaceLoadStatus = "error" | "loaded" | "loading" | "unloaded";\ntype FontFaceSetLoadStatus = "loaded" | "loading";\ntype FrameType = "auxiliary" | "nested" | "none" | "top-level";\ntype GlobalCompositeOperation = "color" | "color-burn" | "color-dodge" | "copy" | "darken" | "destination-atop" | "destination-in" | "destination-out" | "destination-over" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "lighter" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "soft-light" | "source-atop" | "source-in" | "source-out" | "source-over" | "xor";\ntype HardwareAcceleration = "no-preference" | "prefer-hardware" | "prefer-software";\ntype HdrMetadataType = "smpteSt2086" | "smpteSt2094-10" | "smpteSt2094-40";\ntype IDBCursorDirection = "next" | "nextunique" | "prev" | "prevunique";\ntype IDBRequestReadyState = "done" | "pending";\ntype IDBTransactionDurability = "default" | "relaxed" | "strict";\ntype IDBTransactionMode = "readonly" | "readwrite" | "versionchange";\ntype ImageOrientation = "flipY" | "from-image" | "none";\ntype ImageSmoothingQuality = "high" | "low" | "medium";\ntype KeyFormat = "jwk" | "pkcs8" | "raw" | "spki";\ntype KeyType = "private" | "public" | "secret";\ntype KeyUsage = "decrypt" | "deriveBits" | "deriveKey" | "encrypt" | "sign" | "unwrapKey" | "verify" | "wrapKey";\ntype LatencyMode = "quality" | "realtime";\ntype LockMode = "exclusive" | "shared";\ntype MediaDecodingType = "file" | "media-source" | "webrtc";\ntype MediaEncodingType = "record" | "webrtc";\ntype NotificationDirection = "auto" | "ltr" | "rtl";\ntype NotificationPermission = "default" | "denied" | "granted";\ntype OffscreenRenderingContextId = "2d" | "bitmaprenderer" | "webgl" | "webgl2" | "webgpu";\ntype OpusBitstreamFormat = "ogg" | "opus";\ntype PermissionName = "camera" | "geolocation" | "microphone" | "midi" | "notifications" | "persistent-storage" | "push" | "screen-wake-lock" | "storage-access";\ntype PermissionState = "denied" | "granted" | "prompt";\ntype PredefinedColorSpace = "display-p3" | "srgb";\ntype PremultiplyAlpha = "default" | "none" | "premultiply";\ntype PushEncryptionKeyName = "auth" | "p256dh";\ntype RTCDataChannelState = "closed" | "closing" | "connecting" | "open";\ntype RTCEncodedVideoFrameType = "delta" | "empty" | "key";\ntype ReadableStreamReaderMode = "byob";\ntype ReadableStreamType = "bytes";\ntype ReferrerPolicy = "" | "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url";\ntype RequestCache = "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload";\ntype RequestCredentials = "include" | "omit" | "same-origin";\ntype RequestDestination = "" | "audio" | "audioworklet" | "document" | "embed" | "font" | "frame" | "iframe" | "image" | "manifest" | "object" | "paintworklet" | "report" | "script" | "sharedworker" | "style" | "track" | "video" | "worker" | "xslt";\ntype RequestMode = "cors" | "navigate" | "no-cors" | "same-origin";\ntype RequestPriority = "auto" | "high" | "low";\ntype RequestRedirect = "error" | "follow" | "manual";\ntype ResizeQuality = "high" | "low" | "medium" | "pixelated";\ntype ResponseType = "basic" | "cors" | "default" | "error" | "opaque" | "opaqueredirect";\ntype SecurityPolicyViolationEventDisposition = "enforce" | "report";\ntype ServiceWorkerState = "activated" | "activating" | "installed" | "installing" | "parsed" | "redundant";\ntype ServiceWorkerUpdateViaCache = "all" | "imports" | "none";\ntype TransferFunction = "hlg" | "pq" | "srgb";\ntype VideoColorPrimaries = "bt470bg" | "bt709" | "smpte170m";\ntype VideoEncoderBitrateMode = "constant" | "quantizer" | "variable";\ntype VideoMatrixCoefficients = "bt470bg" | "bt709" | "rgb" | "smpte170m";\ntype VideoPixelFormat = "BGRA" | "BGRX" | "I420" | "I420A" | "I422" | "I444" | "NV12" | "RGBA" | "RGBX";\ntype VideoTransferCharacteristics = "bt709" | "iec61966-2-1" | "smpte170m";\ntype WebGLPowerPreference = "default" | "high-performance" | "low-power";\ntype WebTransportCongestionControl = "default" | "low-latency" | "throughput";\ntype WebTransportErrorSource = "session" | "stream";\ntype WorkerType = "classic" | "module";\ntype WriteCommandType = "seek" | "truncate" | "write";\ntype XMLHttpRequestResponseType = "" | "arraybuffer" | "blob" | "document" | "json" | "text";\n'],["file:///node_modules/typescript/lib/lib.webworker.importscripts.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// WorkerGlobalScope APIs\n/////////////////////////////\n// These are only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n'],["file:///node_modules/typescript/lib/lib.webworker.iterable.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib="true"/>\n\n/////////////////////////////\n/// Worker Iterable APIs\n/////////////////////////////\n\ninterface CSSNumericArray {\n    [Symbol.iterator](): ArrayIterator<CSSNumericValue>;\n    entries(): ArrayIterator<[number, CSSNumericValue]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSNumericValue>;\n}\n\ninterface CSSTransformValue {\n    [Symbol.iterator](): ArrayIterator<CSSTransformComponent>;\n    entries(): ArrayIterator<[number, CSSTransformComponent]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSTransformComponent>;\n}\n\ninterface CSSUnparsedValue {\n    [Symbol.iterator](): ArrayIterator<CSSUnparsedSegment>;\n    entries(): ArrayIterator<[number, CSSUnparsedSegment]>;\n    keys(): ArrayIterator<number>;\n    values(): ArrayIterator<CSSUnparsedSegment>;\n}\n\ninterface Cache {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Cache/addAll) */\n    addAll(requests: Iterable<RequestInfo>): Promise<void>;\n}\n\ninterface CanvasPath {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/roundRect) */\n    roundRect(x: number, y: number, w: number, h: number, radii?: number | DOMPointInit | Iterable<number | DOMPointInit>): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/setLineDash) */\n    setLineDash(segments: Iterable<number>): void;\n}\n\ninterface DOMStringList {\n    [Symbol.iterator](): ArrayIterator<string>;\n}\n\ninterface FileList {\n    [Symbol.iterator](): ArrayIterator<File>;\n}\n\ninterface FontFaceSet extends Set<FontFace> {\n}\n\ninterface FormDataIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): FormDataIterator<T>;\n}\n\ninterface FormData {\n    [Symbol.iterator](): FormDataIterator<[string, FormDataEntryValue]>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): FormDataIterator<[string, FormDataEntryValue]>;\n    /** Returns a list of keys in the list. */\n    keys(): FormDataIterator<string>;\n    /** Returns a list of values in the list. */\n    values(): FormDataIterator<FormDataEntryValue>;\n}\n\ninterface HeadersIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): HeadersIterator<T>;\n}\n\ninterface Headers {\n    [Symbol.iterator](): HeadersIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all key/value pairs contained in this object. */\n    entries(): HeadersIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all keys of the key/value pairs contained in this object. */\n    keys(): HeadersIterator<string>;\n    /** Returns an iterator allowing to go through all values of the key/value pairs contained in this object. */\n    values(): HeadersIterator<string>;\n}\n\ninterface IDBDatabase {\n    /**\n     * Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBDatabase/transaction)\n     */\n    transaction(storeNames: string | Iterable<string>, mode?: IDBTransactionMode, options?: IDBTransactionOptions): IDBTransaction;\n}\n\ninterface IDBObjectStore {\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     *\n     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/IDBObjectStore/createIndex)\n     */\n    createIndex(name: string, keyPath: string | Iterable<string>, options?: IDBIndexParameters): IDBIndex;\n}\n\ninterface ImageTrackList {\n    [Symbol.iterator](): ArrayIterator<ImageTrack>;\n}\n\ninterface MessageEvent<T = any> {\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;\n}\n\ninterface StylePropertyMapReadOnlyIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): StylePropertyMapReadOnlyIterator<T>;\n}\n\ninterface StylePropertyMapReadOnly {\n    [Symbol.iterator](): StylePropertyMapReadOnlyIterator<[string, Iterable<CSSStyleValue>]>;\n    entries(): StylePropertyMapReadOnlyIterator<[string, Iterable<CSSStyleValue>]>;\n    keys(): StylePropertyMapReadOnlyIterator<string>;\n    values(): StylePropertyMapReadOnlyIterator<Iterable<CSSStyleValue>>;\n}\n\ninterface SubtleCrypto {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/deriveKey) */\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/generateKey) */\n    generateKey(algorithm: "Ed25519" | { name: "Ed25519" }, extractable: boolean, keyUsages: ReadonlyArray<"sign" | "verify">): Promise<CryptoKeyPair>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKeyPair | CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/importKey) */\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/SubtleCrypto/unwrapKey) */\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n}\n\ninterface URLSearchParamsIterator<T> extends IteratorObject<T, BuiltinIteratorReturn, unknown> {\n    [Symbol.iterator](): URLSearchParamsIterator<T>;\n}\n\ninterface URLSearchParams {\n    [Symbol.iterator](): URLSearchParamsIterator<[string, string]>;\n    /** Returns an array of key, value pairs for every entry in the search params. */\n    entries(): URLSearchParamsIterator<[string, string]>;\n    /** Returns a list of keys in the search params. */\n    keys(): URLSearchParamsIterator<string>;\n    /** Returns a list of values in the search params. */\n    values(): URLSearchParamsIterator<string>;\n}\n\ninterface WEBGL_draw_buffers {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL) */\n    drawBuffersWEBGL(buffers: Iterable<GLenum>): void;\n}\n\ninterface WEBGL_multi_draw {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL) */\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: number, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL) */\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: number, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL) */\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: number, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: number, drawcount: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL) */\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLsizei>, countsOffset: number, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: number, drawcount: GLsizei): void;\n}\n\ninterface WebGL2RenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLfloat>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLint>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/clearBuffer) */\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLuint>, srcOffset?: number): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/drawBuffers) */\n    drawBuffers(buffers: Iterable<GLenum>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getActiveUniforms) */\n    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/getUniformIndices) */\n    getUniformIndices(program: WebGLProgram, uniformNames: Iterable<string>): Iterable<GLuint> | null;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer) */\n    invalidateFramebuffer(target: GLenum, attachments: Iterable<GLenum>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer) */\n    invalidateSubFramebuffer(target: GLenum, attachments: Iterable<GLenum>, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings) */\n    transformFeedbackVaryings(program: WebGLProgram, varyings: Iterable<string>, bufferMode: GLenum): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform1uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform2uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform3uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniform) */\n    uniform4uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4iv(index: GLuint, values: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/vertexAttribI) */\n    vertexAttribI4uiv(index: GLuint, values: Iterable<GLuint>): void;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGL2RenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: number, srcLength?: GLuint): void;\n}\n\ninterface WebGLRenderingContextBase {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib1fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib2fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib3fv(index: GLuint, values: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/vertexAttrib) */\n    vertexAttrib4fv(index: GLuint, values: Iterable<GLfloat>): void;\n}\n\ninterface WebGLRenderingContextOverloads {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform1iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform2iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform3iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniform) */\n    uniform4iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/WebGLRenderingContext/uniformMatrix) */\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n}\n'],["file:///node_modules/typescript/lib/tsserverlibrary.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\nimport ts = require("./typescript.js");\nexport = ts;\n'],["file:///node_modules/typescript/lib/typescript.d.ts",'/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\ndeclare namespace ts {\n    namespace server {\n        namespace protocol {\n            export import ApplicableRefactorInfo = ts.ApplicableRefactorInfo;\n            export import ClassificationType = ts.ClassificationType;\n            export import CompletionsTriggerCharacter = ts.CompletionsTriggerCharacter;\n            export import CompletionTriggerKind = ts.CompletionTriggerKind;\n            export import InlayHintKind = ts.InlayHintKind;\n            export import OrganizeImportsMode = ts.OrganizeImportsMode;\n            export import RefactorActionInfo = ts.RefactorActionInfo;\n            export import RefactorTriggerReason = ts.RefactorTriggerReason;\n            export import RenameInfoFailure = ts.RenameInfoFailure;\n            export import SemicolonPreference = ts.SemicolonPreference;\n            export import SignatureHelpCharacterTypedReason = ts.SignatureHelpCharacterTypedReason;\n            export import SignatureHelpInvokedReason = ts.SignatureHelpInvokedReason;\n            export import SignatureHelpParameter = ts.SignatureHelpParameter;\n            export import SignatureHelpRetriggerCharacter = ts.SignatureHelpRetriggerCharacter;\n            export import SignatureHelpRetriggeredReason = ts.SignatureHelpRetriggeredReason;\n            export import SignatureHelpTriggerCharacter = ts.SignatureHelpTriggerCharacter;\n            export import SignatureHelpTriggerReason = ts.SignatureHelpTriggerReason;\n            export import SymbolDisplayPart = ts.SymbolDisplayPart;\n            export import UserPreferences = ts.UserPreferences;\n            type ChangePropertyTypes<\n                T,\n                Substitutions extends {\n                    [K in keyof T]?: any;\n                },\n            > = {\n                [K in keyof T]: K extends keyof Substitutions ? Substitutions[K] : T[K];\n            };\n            type ChangeStringIndexSignature<T, NewStringIndexSignatureType> = {\n                [K in keyof T]: string extends K ? NewStringIndexSignatureType : T[K];\n            };\n            export enum CommandTypes {\n                JsxClosingTag = "jsxClosingTag",\n                LinkedEditingRange = "linkedEditingRange",\n                Brace = "brace",\n                BraceCompletion = "braceCompletion",\n                GetSpanOfEnclosingComment = "getSpanOfEnclosingComment",\n                Change = "change",\n                Close = "close",\n                /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\n                Completions = "completions",\n                CompletionInfo = "completionInfo",\n                CompletionDetails = "completionEntryDetails",\n                CompileOnSaveAffectedFileList = "compileOnSaveAffectedFileList",\n                CompileOnSaveEmitFile = "compileOnSaveEmitFile",\n                Configure = "configure",\n                Definition = "definition",\n                DefinitionAndBoundSpan = "definitionAndBoundSpan",\n                Implementation = "implementation",\n                Exit = "exit",\n                FileReferences = "fileReferences",\n                Format = "format",\n                Formatonkey = "formatonkey",\n                Geterr = "geterr",\n                GeterrForProject = "geterrForProject",\n                SemanticDiagnosticsSync = "semanticDiagnosticsSync",\n                SyntacticDiagnosticsSync = "syntacticDiagnosticsSync",\n                SuggestionDiagnosticsSync = "suggestionDiagnosticsSync",\n                NavBar = "navbar",\n                Navto = "navto",\n                NavTree = "navtree",\n                NavTreeFull = "navtree-full",\n                DocumentHighlights = "documentHighlights",\n                Open = "open",\n                Quickinfo = "quickinfo",\n                References = "references",\n                Reload = "reload",\n                Rename = "rename",\n                Saveto = "saveto",\n                SignatureHelp = "signatureHelp",\n                FindSourceDefinition = "findSourceDefinition",\n                Status = "status",\n                TypeDefinition = "typeDefinition",\n                ProjectInfo = "projectInfo",\n                ReloadProjects = "reloadProjects",\n                Unknown = "unknown",\n                OpenExternalProject = "openExternalProject",\n                OpenExternalProjects = "openExternalProjects",\n                CloseExternalProject = "closeExternalProject",\n                UpdateOpen = "updateOpen",\n                GetOutliningSpans = "getOutliningSpans",\n                TodoComments = "todoComments",\n                Indentation = "indentation",\n                DocCommentTemplate = "docCommentTemplate",\n                CompilerOptionsForInferredProjects = "compilerOptionsForInferredProjects",\n                GetCodeFixes = "getCodeFixes",\n                GetCombinedCodeFix = "getCombinedCodeFix",\n                ApplyCodeActionCommand = "applyCodeActionCommand",\n                GetSupportedCodeFixes = "getSupportedCodeFixes",\n                GetApplicableRefactors = "getApplicableRefactors",\n                GetEditsForRefactor = "getEditsForRefactor",\n                GetMoveToRefactoringFileSuggestions = "getMoveToRefactoringFileSuggestions",\n                PreparePasteEdits = "preparePasteEdits",\n                GetPasteEdits = "getPasteEdits",\n                OrganizeImports = "organizeImports",\n                GetEditsForFileRename = "getEditsForFileRename",\n                ConfigurePlugin = "configurePlugin",\n                SelectionRange = "selectionRange",\n                ToggleLineComment = "toggleLineComment",\n                ToggleMultilineComment = "toggleMultilineComment",\n                CommentSelection = "commentSelection",\n                UncommentSelection = "uncommentSelection",\n                PrepareCallHierarchy = "prepareCallHierarchy",\n                ProvideCallHierarchyIncomingCalls = "provideCallHierarchyIncomingCalls",\n                ProvideCallHierarchyOutgoingCalls = "provideCallHierarchyOutgoingCalls",\n                ProvideInlayHints = "provideInlayHints",\n                WatchChange = "watchChange",\n                MapCode = "mapCode",\n            }\n            /**\n             * A TypeScript Server message\n             */\n            export interface Message {\n                /**\n                 * Sequence number of the message\n                 */\n                seq: number;\n                /**\n                 * One of "request", "response", or "event"\n                 */\n                type: "request" | "response" | "event";\n            }\n            /**\n             * Client-initiated request message\n             */\n            export interface Request extends Message {\n                type: "request";\n                /**\n                 * The command to execute\n                 */\n                command: string;\n                /**\n                 * Object containing arguments for the command\n                 */\n                arguments?: any;\n            }\n            /**\n             * Request to reload the project structure for all the opened files\n             */\n            export interface ReloadProjectsRequest extends Request {\n                command: CommandTypes.ReloadProjects;\n            }\n            /**\n             * Server-initiated event message\n             */\n            export interface Event extends Message {\n                type: "event";\n                /**\n                 * Name of event\n                 */\n                event: string;\n                /**\n                 * Event-specific information\n                 */\n                body?: any;\n            }\n            /**\n             * Response by server to client request message.\n             */\n            export interface Response extends Message {\n                type: "response";\n                /**\n                 * Sequence number of the request message.\n                 */\n                request_seq: number;\n                /**\n                 * Outcome of the request.\n                 */\n                success: boolean;\n                /**\n                 * The command requested.\n                 */\n                command: string;\n                /**\n                 * If success === false, this should always be provided.\n                 * Otherwise, may (or may not) contain a success message.\n                 */\n                message?: string;\n                /**\n                 * Contains message body if success === true.\n                 */\n                body?: any;\n                /**\n                 * Contains extra information that plugin can include to be passed on\n                 */\n                metadata?: unknown;\n                /**\n                 * Exposes information about the performance of this request-response pair.\n                 */\n                performanceData?: PerformanceData;\n            }\n            export interface PerformanceData {\n                /**\n                 * Time spent updating the program graph, in milliseconds.\n                 */\n                updateGraphDurationMs?: number;\n                /**\n                 * The time spent creating or updating the auto-import program, in milliseconds.\n                 */\n                createAutoImportProviderProgramDurationMs?: number;\n                /**\n                 * The time spent computing diagnostics, in milliseconds.\n                 */\n                diagnosticsDuration?: FileDiagnosticPerformanceData[];\n            }\n            /**\n             * Time spent computing each kind of diagnostics, in milliseconds.\n             */\n            export type DiagnosticPerformanceData = {\n                [Kind in DiagnosticEventKind]?: number;\n            };\n            export interface FileDiagnosticPerformanceData extends DiagnosticPerformanceData {\n                /**\n                 * The file for which the performance data is reported.\n                 */\n                file: string;\n            }\n            /**\n             * Arguments for FileRequest messages.\n             */\n            export interface FileRequestArgs {\n                /**\n                 * The file for the request (absolute pathname required).\n                 */\n                file: string;\n                projectFileName?: string;\n            }\n            export interface StatusRequest extends Request {\n                command: CommandTypes.Status;\n            }\n            export interface StatusResponseBody {\n                /**\n                 * The TypeScript version (`ts.version`).\n                 */\n                version: string;\n            }\n            /**\n             * Response to StatusRequest\n             */\n            export interface StatusResponse extends Response {\n                body: StatusResponseBody;\n            }\n            /**\n             * Requests a JS Doc comment template for a given position\n             */\n            export interface DocCommentTemplateRequest extends FileLocationRequest {\n                command: CommandTypes.DocCommentTemplate;\n            }\n            /**\n             * Response to DocCommentTemplateRequest\n             */\n            export interface DocCommandTemplateResponse extends Response {\n                body?: TextInsertion;\n            }\n            /**\n             * A request to get TODO comments from the file\n             */\n            export interface TodoCommentRequest extends FileRequest {\n                command: CommandTypes.TodoComments;\n                arguments: TodoCommentRequestArgs;\n            }\n            /**\n             * Arguments for TodoCommentRequest request.\n             */\n            export interface TodoCommentRequestArgs extends FileRequestArgs {\n                /**\n                 * Array of target TodoCommentDescriptors that describes TODO comments to be found\n                 */\n                descriptors: TodoCommentDescriptor[];\n            }\n            /**\n             * Response for TodoCommentRequest request.\n             */\n            export interface TodoCommentsResponse extends Response {\n                body?: TodoComment[];\n            }\n            /**\n             * A request to determine if the caret is inside a comment.\n             */\n            export interface SpanOfEnclosingCommentRequest extends FileLocationRequest {\n                command: CommandTypes.GetSpanOfEnclosingComment;\n                arguments: SpanOfEnclosingCommentRequestArgs;\n            }\n            export interface SpanOfEnclosingCommentRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Requires that the enclosing span be a multi-line comment, or else the request returns undefined.\n                 */\n                onlyMultiLine: boolean;\n            }\n            /**\n             * Request to obtain outlining spans in file.\n             */\n            export interface OutliningSpansRequest extends FileRequest {\n                command: CommandTypes.GetOutliningSpans;\n            }\n            export type OutliningSpan = ChangePropertyTypes<ts.OutliningSpan, {\n                textSpan: TextSpan;\n                hintSpan: TextSpan;\n            }>;\n            /**\n             * Response to OutliningSpansRequest request.\n             */\n            export interface OutliningSpansResponse extends Response {\n                body?: OutliningSpan[];\n            }\n            /**\n             * A request to get indentation for a location in file\n             */\n            export interface IndentationRequest extends FileLocationRequest {\n                command: CommandTypes.Indentation;\n                arguments: IndentationRequestArgs;\n            }\n            /**\n             * Response for IndentationRequest request.\n             */\n            export interface IndentationResponse extends Response {\n                body?: IndentationResult;\n            }\n            /**\n             * Indentation result representing where indentation should be placed\n             */\n            export interface IndentationResult {\n                /**\n                 * The base position in the document that the indent should be relative to\n                 */\n                position: number;\n                /**\n                 * The number of columns the indent should be at relative to the position\'s column.\n                 */\n                indentation: number;\n            }\n            /**\n             * Arguments for IndentationRequest request.\n             */\n            export interface IndentationRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * An optional set of settings to be used when computing indentation.\n                 * If argument is omitted - then it will use settings for file that were previously set via \'configure\' request or global settings.\n                 */\n                options?: EditorSettings;\n            }\n            /**\n             * Arguments for ProjectInfoRequest request.\n             */\n            export interface ProjectInfoRequestArgs extends FileRequestArgs {\n                /**\n                 * Indicate if the file name list of the project is needed\n                 */\n                needFileNameList: boolean;\n                /**\n                 * if true returns details about default configured project calculation\n                 */\n                needDefaultConfiguredProjectInfo?: boolean;\n            }\n            /**\n             * A request to get the project information of the current file.\n             */\n            export interface ProjectInfoRequest extends Request {\n                command: CommandTypes.ProjectInfo;\n                arguments: ProjectInfoRequestArgs;\n            }\n            /**\n             * A request to retrieve compiler options diagnostics for a project\n             */\n            export interface CompilerOptionsDiagnosticsRequest extends Request {\n                arguments: CompilerOptionsDiagnosticsRequestArgs;\n            }\n            /**\n             * Arguments for CompilerOptionsDiagnosticsRequest request.\n             */\n            export interface CompilerOptionsDiagnosticsRequestArgs {\n                /**\n                 * Name of the project to retrieve compiler options diagnostics.\n                 */\n                projectFileName: string;\n            }\n            /**\n             * Details about the default project for the file if tsconfig file is found\n             */\n            export interface DefaultConfiguredProjectInfo {\n                /** List of config files looked and did not match because file was not part of root file names */\n                notMatchedByConfig?: readonly string[];\n                /** List of projects which were loaded but file was not part of the project or is file from referenced project */\n                notInProject?: readonly string[];\n                /** Configured project used as default */\n                defaultProject?: string;\n            }\n            /**\n             * Response message body for "projectInfo" request\n             */\n            export interface ProjectInfo {\n                /**\n                 * For configured project, this is the normalized path of the \'tsconfig.json\' file\n                 * For inferred project, this is undefined\n                 */\n                configFileName: string;\n                /**\n                 * The list of normalized file name in the project, including \'lib.d.ts\'\n                 */\n                fileNames?: string[];\n                /**\n                 * Indicates if the project has a active language service instance\n                 */\n                languageServiceDisabled?: boolean;\n                /**\n                 * Information about default project\n                 */\n                configuredProjectInfo?: DefaultConfiguredProjectInfo;\n            }\n            /**\n             * Represents diagnostic info that includes location of diagnostic in two forms\n             * - start position and length of the error span\n             * - startLocation and endLocation - a pair of Location objects that store start/end line and offset of the error span.\n             */\n            export interface DiagnosticWithLinePosition {\n                message: string;\n                start: number;\n                length: number;\n                startLocation: Location;\n                endLocation: Location;\n                category: string;\n                code: number;\n                /** May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic. */\n                reportsUnnecessary?: {};\n                reportsDeprecated?: {};\n                relatedInformation?: DiagnosticRelatedInformation[];\n            }\n            /**\n             * Response message for "projectInfo" request\n             */\n            export interface ProjectInfoResponse extends Response {\n                body?: ProjectInfo;\n            }\n            /**\n             * Request whose sole parameter is a file name.\n             */\n            export interface FileRequest extends Request {\n                arguments: FileRequestArgs;\n            }\n            /**\n             * Instances of this interface specify a location in a source file:\n             * (file, line, character offset), where line and character offset are 1-based.\n             */\n            export interface FileLocationRequestArgs extends FileRequestArgs {\n                /**\n                 * The line number for the request (1-based).\n                 */\n                line: number;\n                /**\n                 * The character offset (on the line) for the request (1-based).\n                 */\n                offset: number;\n            }\n            export type FileLocationOrRangeRequestArgs = FileLocationRequestArgs | FileRangeRequestArgs;\n            /**\n             * Request refactorings at a given position or selection area.\n             */\n            export interface GetApplicableRefactorsRequest extends Request {\n                command: CommandTypes.GetApplicableRefactors;\n                arguments: GetApplicableRefactorsRequestArgs;\n            }\n            export type GetApplicableRefactorsRequestArgs = FileLocationOrRangeRequestArgs & {\n                triggerReason?: RefactorTriggerReason;\n                kind?: string;\n                /**\n                 * Include refactor actions that require additional arguments to be passed when\n                 * calling \'GetEditsForRefactor\'. When true, clients should inspect the\n                 * `isInteractive` property of each returned `RefactorActionInfo`\n                 * and ensure they are able to collect the appropriate arguments for any\n                 * interactive refactor before offering it.\n                 */\n                includeInteractiveActions?: boolean;\n            };\n            /**\n             * Response is a list of available refactorings.\n             * Each refactoring exposes one or more "Actions"; a user selects one action to invoke a refactoring\n             */\n            export interface GetApplicableRefactorsResponse extends Response {\n                body?: ApplicableRefactorInfo[];\n            }\n            /**\n             * Request refactorings at a given position or selection area to move to an existing file.\n             */\n            export interface GetMoveToRefactoringFileSuggestionsRequest extends Request {\n                command: CommandTypes.GetMoveToRefactoringFileSuggestions;\n                arguments: GetMoveToRefactoringFileSuggestionsRequestArgs;\n            }\n            export type GetMoveToRefactoringFileSuggestionsRequestArgs = FileLocationOrRangeRequestArgs & {\n                kind?: string;\n            };\n            /**\n             * Response is a list of available files.\n             * Each refactoring exposes one or more "Actions"; a user selects one action to invoke a refactoring\n             */\n            export interface GetMoveToRefactoringFileSuggestions extends Response {\n                body: {\n                    newFileName: string;\n                    files: string[];\n                };\n            }\n            /**\n             * Request to check if `pasteEdits` should be provided for a given location post copying text from that location.\n             */\n            export interface PreparePasteEditsRequest extends FileRequest {\n                command: CommandTypes.PreparePasteEdits;\n                arguments: PreparePasteEditsRequestArgs;\n            }\n            export interface PreparePasteEditsRequestArgs extends FileRequestArgs {\n                copiedTextSpan: TextSpan[];\n            }\n            export interface PreparePasteEditsResponse extends Response {\n                body: boolean;\n            }\n            /**\n             * Request refactorings at a given position post pasting text from some other location.\n             */\n            export interface GetPasteEditsRequest extends Request {\n                command: CommandTypes.GetPasteEdits;\n                arguments: GetPasteEditsRequestArgs;\n            }\n            export interface GetPasteEditsRequestArgs extends FileRequestArgs {\n                /** The text that gets pasted in a file.  */\n                pastedText: string[];\n                /** Locations of where the `pastedText` gets added in a file. If the length of the `pastedText` and `pastedLocations` are not the same,\n                 *  then the `pastedText` is combined into one and added at all the `pastedLocations`.\n                 */\n                pasteLocations: TextSpan[];\n                /** The source location of each `pastedText`. If present, the length of `spans` must be equal to the length of `pastedText`. */\n                copiedFrom?: {\n                    file: string;\n                    spans: TextSpan[];\n                };\n            }\n            export interface GetPasteEditsResponse extends Response {\n                body: PasteEditsAction;\n            }\n            export interface PasteEditsAction {\n                edits: FileCodeEdits[];\n                fixId?: {};\n            }\n            export interface GetEditsForRefactorRequest extends Request {\n                command: CommandTypes.GetEditsForRefactor;\n                arguments: GetEditsForRefactorRequestArgs;\n            }\n            /**\n             * Request the edits that a particular refactoring action produces.\n             * Callers must specify the name of the refactor and the name of the action.\n             */\n            export type GetEditsForRefactorRequestArgs = FileLocationOrRangeRequestArgs & {\n                refactor: string;\n                action: string;\n                interactiveRefactorArguments?: InteractiveRefactorArguments;\n            };\n            export interface GetEditsForRefactorResponse extends Response {\n                body?: RefactorEditInfo;\n            }\n            export interface RefactorEditInfo {\n                edits: FileCodeEdits[];\n                /**\n                 * An optional location where the editor should start a rename operation once\n                 * the refactoring edits have been applied\n                 */\n                renameLocation?: Location;\n                renameFilename?: string;\n                notApplicableReason?: string;\n            }\n            /**\n             * Organize imports by:\n             *   1) Removing unused imports\n             *   2) Coalescing imports from the same module\n             *   3) Sorting imports\n             */\n            export interface OrganizeImportsRequest extends Request {\n                command: CommandTypes.OrganizeImports;\n                arguments: OrganizeImportsRequestArgs;\n            }\n            export type OrganizeImportsScope = GetCombinedCodeFixScope;\n            export interface OrganizeImportsRequestArgs {\n                scope: OrganizeImportsScope;\n                /** @deprecated Use `mode` instead */\n                skipDestructiveCodeActions?: boolean;\n                mode?: OrganizeImportsMode;\n            }\n            export interface OrganizeImportsResponse extends Response {\n                body: readonly FileCodeEdits[];\n            }\n            export interface GetEditsForFileRenameRequest extends Request {\n                command: CommandTypes.GetEditsForFileRename;\n                arguments: GetEditsForFileRenameRequestArgs;\n            }\n            /** Note: Paths may also be directories. */\n            export interface GetEditsForFileRenameRequestArgs {\n                readonly oldFilePath: string;\n                readonly newFilePath: string;\n            }\n            export interface GetEditsForFileRenameResponse extends Response {\n                body: readonly FileCodeEdits[];\n            }\n            /**\n             * Request for the available codefixes at a specific position.\n             */\n            export interface CodeFixRequest extends Request {\n                command: CommandTypes.GetCodeFixes;\n                arguments: CodeFixRequestArgs;\n            }\n            export interface GetCombinedCodeFixRequest extends Request {\n                command: CommandTypes.GetCombinedCodeFix;\n                arguments: GetCombinedCodeFixRequestArgs;\n            }\n            export interface GetCombinedCodeFixResponse extends Response {\n                body: CombinedCodeActions;\n            }\n            export interface ApplyCodeActionCommandRequest extends Request {\n                command: CommandTypes.ApplyCodeActionCommand;\n                arguments: ApplyCodeActionCommandRequestArgs;\n            }\n            export interface ApplyCodeActionCommandResponse extends Response {\n            }\n            export interface FileRangeRequestArgs extends FileRequestArgs, FileRange {\n            }\n            /**\n             * Instances of this interface specify errorcodes on a specific location in a sourcefile.\n             */\n            export interface CodeFixRequestArgs extends FileRangeRequestArgs {\n                /**\n                 * Errorcodes we want to get the fixes for.\n                 */\n                errorCodes: readonly number[];\n            }\n            export interface GetCombinedCodeFixRequestArgs {\n                scope: GetCombinedCodeFixScope;\n                fixId: {};\n            }\n            export interface GetCombinedCodeFixScope {\n                type: "file";\n                args: FileRequestArgs;\n            }\n            export interface ApplyCodeActionCommandRequestArgs {\n                /** May also be an array of commands. */\n                command: {};\n            }\n            /**\n             * Response for GetCodeFixes request.\n             */\n            export interface GetCodeFixesResponse extends Response {\n                body?: CodeAction[];\n            }\n            /**\n             * A request whose arguments specify a file location (file, line, col).\n             */\n            export interface FileLocationRequest extends FileRequest {\n                arguments: FileLocationRequestArgs;\n            }\n            /**\n             * A request to get codes of supported code fixes.\n             */\n            export interface GetSupportedCodeFixesRequest extends Request {\n                command: CommandTypes.GetSupportedCodeFixes;\n                arguments?: Partial<FileRequestArgs>;\n            }\n            /**\n             * A response for GetSupportedCodeFixesRequest request.\n             */\n            export interface GetSupportedCodeFixesResponse extends Response {\n                /**\n                 * List of error codes supported by the server.\n                 */\n                body?: string[];\n            }\n            /**\n             * A request to get encoded semantic classifications for a span in the file\n             */\n            export interface EncodedSemanticClassificationsRequest extends FileRequest {\n                arguments: EncodedSemanticClassificationsRequestArgs;\n            }\n            /**\n             * Arguments for EncodedSemanticClassificationsRequest request.\n             */\n            export interface EncodedSemanticClassificationsRequestArgs extends FileRequestArgs {\n                /**\n                 * Start position of the span.\n                 */\n                start: number;\n                /**\n                 * Length of the span.\n                 */\n                length: number;\n                /**\n                 * Optional parameter for the semantic highlighting response, if absent it\n                 * defaults to "original".\n                 */\n                format?: "original" | "2020";\n            }\n            /** The response for a EncodedSemanticClassificationsRequest */\n            export interface EncodedSemanticClassificationsResponse extends Response {\n                body?: EncodedSemanticClassificationsResponseBody;\n            }\n            /**\n             * Implementation response message. Gives series of text spans depending on the format ar.\n             */\n            export interface EncodedSemanticClassificationsResponseBody {\n                endOfLineState: EndOfLineState;\n                spans: number[];\n            }\n            /**\n             * Arguments in document highlight request; include: filesToSearch, file,\n             * line, offset.\n             */\n            export interface DocumentHighlightsRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * List of files to search for document highlights.\n                 */\n                filesToSearch: string[];\n            }\n            /**\n             * Go to definition request; value of command field is\n             * "definition". Return response giving the file locations that\n             * define the symbol found in file at location line, col.\n             */\n            export interface DefinitionRequest extends FileLocationRequest {\n                command: CommandTypes.Definition;\n            }\n            export interface DefinitionAndBoundSpanRequest extends FileLocationRequest {\n                readonly command: CommandTypes.DefinitionAndBoundSpan;\n            }\n            export interface FindSourceDefinitionRequest extends FileLocationRequest {\n                readonly command: CommandTypes.FindSourceDefinition;\n            }\n            export interface DefinitionAndBoundSpanResponse extends Response {\n                readonly body: DefinitionInfoAndBoundSpan;\n            }\n            /**\n             * Go to type request; value of command field is\n             * "typeDefinition". Return response giving the file locations that\n             * define the type for the symbol found in file at location line, col.\n             */\n            export interface TypeDefinitionRequest extends FileLocationRequest {\n                command: CommandTypes.TypeDefinition;\n            }\n            /**\n             * Go to implementation request; value of command field is\n             * "implementation". Return response giving the file locations that\n             * implement the symbol found in file at location line, col.\n             */\n            export interface ImplementationRequest extends FileLocationRequest {\n                command: CommandTypes.Implementation;\n            }\n            /**\n             * Location in source code expressed as (one-based) line and (one-based) column offset.\n             */\n            export interface Location {\n                line: number;\n                offset: number;\n            }\n            /**\n             * Object found in response messages defining a span of text in source code.\n             */\n            export interface TextSpan {\n                /**\n                 * First character of the definition.\n                 */\n                start: Location;\n                /**\n                 * One character past last character of the definition.\n                 */\n                end: Location;\n            }\n            /**\n             * Object found in response messages defining a span of text in a specific source file.\n             */\n            export interface FileSpan extends TextSpan {\n                /**\n                 * File containing text span.\n                 */\n                file: string;\n            }\n            export interface JSDocTagInfo {\n                /** Name of the JSDoc tag */\n                name: string;\n                /**\n                 * Comment text after the JSDoc tag -- the text after the tag name until the next tag or end of comment\n                 * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.\n                 */\n                text?: string | SymbolDisplayPart[];\n            }\n            export interface TextSpanWithContext extends TextSpan {\n                contextStart?: Location;\n                contextEnd?: Location;\n            }\n            export interface FileSpanWithContext extends FileSpan, TextSpanWithContext {\n            }\n            export interface DefinitionInfo extends FileSpanWithContext {\n                /**\n                 * When true, the file may or may not exist.\n                 */\n                unverified?: boolean;\n            }\n            export interface DefinitionInfoAndBoundSpan {\n                definitions: readonly DefinitionInfo[];\n                textSpan: TextSpan;\n            }\n            /**\n             * Definition response message.  Gives text range for definition.\n             */\n            export interface DefinitionResponse extends Response {\n                body?: DefinitionInfo[];\n            }\n            export interface DefinitionInfoAndBoundSpanResponse extends Response {\n                body?: DefinitionInfoAndBoundSpan;\n            }\n            /** @deprecated Use `DefinitionInfoAndBoundSpanResponse` instead. */\n            export type DefinitionInfoAndBoundSpanReponse = DefinitionInfoAndBoundSpanResponse;\n            /**\n             * Definition response message.  Gives text range for definition.\n             */\n            export interface TypeDefinitionResponse extends Response {\n                body?: FileSpanWithContext[];\n            }\n            /**\n             * Implementation response message.  Gives text range for implementations.\n             */\n            export interface ImplementationResponse extends Response {\n                body?: FileSpanWithContext[];\n            }\n            /**\n             * Request to get brace completion for a location in the file.\n             */\n            export interface BraceCompletionRequest extends FileLocationRequest {\n                command: CommandTypes.BraceCompletion;\n                arguments: BraceCompletionRequestArgs;\n            }\n            /**\n             * Argument for BraceCompletionRequest request.\n             */\n            export interface BraceCompletionRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Kind of opening brace\n                 */\n                openingBrace: string;\n            }\n            export interface JsxClosingTagRequest extends FileLocationRequest {\n                readonly command: CommandTypes.JsxClosingTag;\n                readonly arguments: JsxClosingTagRequestArgs;\n            }\n            export interface JsxClosingTagRequestArgs extends FileLocationRequestArgs {\n            }\n            export interface JsxClosingTagResponse extends Response {\n                readonly body: TextInsertion;\n            }\n            export interface LinkedEditingRangeRequest extends FileLocationRequest {\n                readonly command: CommandTypes.LinkedEditingRange;\n            }\n            export interface LinkedEditingRangesBody {\n                ranges: TextSpan[];\n                wordPattern?: string;\n            }\n            export interface LinkedEditingRangeResponse extends Response {\n                readonly body: LinkedEditingRangesBody;\n            }\n            /**\n             * Get document highlights request; value of command field is\n             * "documentHighlights". Return response giving spans that are relevant\n             * in the file at a given line and column.\n             */\n            export interface DocumentHighlightsRequest extends FileLocationRequest {\n                command: CommandTypes.DocumentHighlights;\n                arguments: DocumentHighlightsRequestArgs;\n            }\n            /**\n             * Span augmented with extra information that denotes the kind of the highlighting to be used for span.\n             */\n            export interface HighlightSpan extends TextSpanWithContext {\n                kind: HighlightSpanKind;\n            }\n            /**\n             * Represents a set of highligh spans for a give name\n             */\n            export interface DocumentHighlightsItem {\n                /**\n                 * File containing highlight spans.\n                 */\n                file: string;\n                /**\n                 * Spans to highlight in file.\n                 */\n                highlightSpans: HighlightSpan[];\n            }\n            /**\n             * Response for a DocumentHighlightsRequest request.\n             */\n            export interface DocumentHighlightsResponse extends Response {\n                body?: DocumentHighlightsItem[];\n            }\n            /**\n             * Find references request; value of command field is\n             * "references". Return response giving the file locations that\n             * reference the symbol found in file at location line, col.\n             */\n            export interface ReferencesRequest extends FileLocationRequest {\n                command: CommandTypes.References;\n            }\n            export interface ReferencesResponseItem extends FileSpanWithContext {\n                /**\n                 * Text of line containing the reference. Including this\n                 * with the response avoids latency of editor loading files\n                 * to show text of reference line (the server already has loaded the referencing files).\n                 *\n                 * If {@link UserPreferences.disableLineTextInReferences} is enabled, the property won\'t be filled\n                 */\n                lineText?: string;\n                /**\n                 * True if reference is a write location, false otherwise.\n                 */\n                isWriteAccess: boolean;\n                /**\n                 * Present only if the search was triggered from a declaration.\n                 * True indicates that the references refers to the same symbol\n                 * (i.e. has the same meaning) as the declaration that began the\n                 * search.\n                 */\n                isDefinition?: boolean;\n            }\n            /**\n             * The body of a "references" response message.\n             */\n            export interface ReferencesResponseBody {\n                /**\n                 * The file locations referencing the symbol.\n                 */\n                refs: readonly ReferencesResponseItem[];\n                /**\n                 * The name of the symbol.\n                 */\n                symbolName: string;\n                /**\n                 * The start character offset of the symbol (on the line provided by the references request).\n                 */\n                symbolStartOffset: number;\n                /**\n                 * The full display name of the symbol.\n                 */\n                symbolDisplayString: string;\n            }\n            /**\n             * Response to "references" request.\n             */\n            export interface ReferencesResponse extends Response {\n                body?: ReferencesResponseBody;\n            }\n            export interface FileReferencesRequest extends FileRequest {\n                command: CommandTypes.FileReferences;\n            }\n            export interface FileReferencesResponseBody {\n                /**\n                 * The file locations referencing the symbol.\n                 */\n                refs: readonly ReferencesResponseItem[];\n                /**\n                 * The name of the symbol.\n                 */\n                symbolName: string;\n            }\n            export interface FileReferencesResponse extends Response {\n                body?: FileReferencesResponseBody;\n            }\n            /**\n             * Argument for RenameRequest request.\n             */\n            export interface RenameRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Should text at specified location be found/changed in comments?\n                 */\n                findInComments?: boolean;\n                /**\n                 * Should text at specified location be found/changed in strings?\n                 */\n                findInStrings?: boolean;\n            }\n            /**\n             * Rename request; value of command field is "rename". Return\n             * response giving the file locations that reference the symbol\n             * found in file at location line, col. Also return full display\n             * name of the symbol so that client can print it unambiguously.\n             */\n            export interface RenameRequest extends FileLocationRequest {\n                command: CommandTypes.Rename;\n                arguments: RenameRequestArgs;\n            }\n            /**\n             * Information about the item to be renamed.\n             */\n            export type RenameInfo = RenameInfoSuccess | RenameInfoFailure;\n            export type RenameInfoSuccess = ChangePropertyTypes<ts.RenameInfoSuccess, {\n                triggerSpan: TextSpan;\n            }>;\n            /**\n             *  A group of text spans, all in \'file\'.\n             */\n            export interface SpanGroup {\n                /** The file to which the spans apply */\n                file: string;\n                /** The text spans in this group */\n                locs: RenameTextSpan[];\n            }\n            export interface RenameTextSpan extends TextSpanWithContext {\n                readonly prefixText?: string;\n                readonly suffixText?: string;\n            }\n            export interface RenameResponseBody {\n                /**\n                 * Information about the item to be renamed.\n                 */\n                info: RenameInfo;\n                /**\n                 * An array of span groups (one per file) that refer to the item to be renamed.\n                 */\n                locs: readonly SpanGroup[];\n            }\n            /**\n             * Rename response message.\n             */\n            export interface RenameResponse extends Response {\n                body?: RenameResponseBody;\n            }\n            /**\n             * Represents a file in external project.\n             * External project is project whose set of files, compilation options and open\\close state\n             * is maintained by the client (i.e. if all this data come from .csproj file in Visual Studio).\n             * External project will exist even if all files in it are closed and should be closed explicitly.\n             * If external project includes one or more tsconfig.json/jsconfig.json files then tsserver will\n             * create configured project for every config file but will maintain a link that these projects were created\n             * as a result of opening external project so they should be removed once external project is closed.\n             */\n            export interface ExternalFile {\n                /**\n                 * Name of file file\n                 */\n                fileName: string;\n                /**\n                 * Script kind of the file\n                 */\n                scriptKind?: ScriptKindName | ScriptKind;\n                /**\n                 * Whether file has mixed content (i.e. .cshtml file that combines html markup with C#/JavaScript)\n                 */\n                hasMixedContent?: boolean;\n                /**\n                 * Content of the file\n                 */\n                content?: string;\n            }\n            /**\n             * Represent an external project\n             */\n            export interface ExternalProject {\n                /**\n                 * Project name\n                 */\n                projectFileName: string;\n                /**\n                 * List of root files in project\n                 */\n                rootFiles: ExternalFile[];\n                /**\n                 * Compiler options for the project\n                 */\n                options: ExternalProjectCompilerOptions;\n                /**\n                 * Explicitly specified type acquisition for the project\n                 */\n                typeAcquisition?: TypeAcquisition;\n            }\n            export interface CompileOnSaveMixin {\n                /**\n                 * If compile on save is enabled for the project\n                 */\n                compileOnSave?: boolean;\n            }\n            /**\n             * For external projects, some of the project settings are sent together with\n             * compiler settings.\n             */\n            export type ExternalProjectCompilerOptions = CompilerOptions & CompileOnSaveMixin & WatchOptions;\n            export interface FileWithProjectReferenceRedirectInfo {\n                /**\n                 * Name of file\n                 */\n                fileName: string;\n                /**\n                 * True if the file is primarily included in a referenced project\n                 */\n                isSourceOfProjectReferenceRedirect: boolean;\n            }\n            /**\n             * Represents a set of changes that happen in project\n             */\n            export interface ProjectChanges {\n                /**\n                 * List of added files\n                 */\n                added: string[] | FileWithProjectReferenceRedirectInfo[];\n                /**\n                 * List of removed files\n                 */\n                removed: string[] | FileWithProjectReferenceRedirectInfo[];\n                /**\n                 * List of updated files\n                 */\n                updated: string[] | FileWithProjectReferenceRedirectInfo[];\n                /**\n                 * List of files that have had their project reference redirect status updated\n                 * Only provided when the synchronizeProjectList request has includeProjectReferenceRedirectInfo set to true\n                 */\n                updatedRedirects?: FileWithProjectReferenceRedirectInfo[];\n            }\n            /**\n             * Information found in a configure request.\n             */\n            export interface ConfigureRequestArguments {\n                /**\n                 * Information about the host, for example \'Emacs 24.4\' or\n                 * \'Sublime Text version 3075\'\n                 */\n                hostInfo?: string;\n                /**\n                 * If present, tab settings apply only to this file.\n                 */\n                file?: string;\n                /**\n                 * The format options to use during formatting and other code editing features.\n                 */\n                formatOptions?: FormatCodeSettings;\n                preferences?: UserPreferences;\n                /**\n                 * The host\'s additional supported .js file extensions\n                 */\n                extraFileExtensions?: FileExtensionInfo[];\n                watchOptions?: WatchOptions;\n            }\n            export enum WatchFileKind {\n                FixedPollingInterval = "FixedPollingInterval",\n                PriorityPollingInterval = "PriorityPollingInterval",\n                DynamicPriorityPolling = "DynamicPriorityPolling",\n                FixedChunkSizePolling = "FixedChunkSizePolling",\n                UseFsEvents = "UseFsEvents",\n                UseFsEventsOnParentDirectory = "UseFsEventsOnParentDirectory",\n            }\n            export enum WatchDirectoryKind {\n                UseFsEvents = "UseFsEvents",\n                FixedPollingInterval = "FixedPollingInterval",\n                DynamicPriorityPolling = "DynamicPriorityPolling",\n                FixedChunkSizePolling = "FixedChunkSizePolling",\n            }\n            export enum PollingWatchKind {\n                FixedInterval = "FixedInterval",\n                PriorityInterval = "PriorityInterval",\n                DynamicPriority = "DynamicPriority",\n                FixedChunkSize = "FixedChunkSize",\n            }\n            export interface WatchOptions {\n                watchFile?: WatchFileKind | ts.WatchFileKind;\n                watchDirectory?: WatchDirectoryKind | ts.WatchDirectoryKind;\n                fallbackPolling?: PollingWatchKind | ts.PollingWatchKind;\n                synchronousWatchDirectory?: boolean;\n                excludeDirectories?: string[];\n                excludeFiles?: string[];\n                [option: string]: CompilerOptionsValue | undefined;\n            }\n            /**\n             *  Configure request; value of command field is "configure".  Specifies\n             *  host information, such as host type, tab size, and indent size.\n             */\n            export interface ConfigureRequest extends Request {\n                command: CommandTypes.Configure;\n                arguments: ConfigureRequestArguments;\n            }\n            /**\n             * Response to "configure" request.  This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface ConfigureResponse extends Response {\n            }\n            export interface ConfigurePluginRequestArguments {\n                pluginName: string;\n                configuration: any;\n            }\n            export interface ConfigurePluginRequest extends Request {\n                command: CommandTypes.ConfigurePlugin;\n                arguments: ConfigurePluginRequestArguments;\n            }\n            export interface ConfigurePluginResponse extends Response {\n            }\n            export interface SelectionRangeRequest extends FileRequest {\n                command: CommandTypes.SelectionRange;\n                arguments: SelectionRangeRequestArgs;\n            }\n            export interface SelectionRangeRequestArgs extends FileRequestArgs {\n                locations: Location[];\n            }\n            export interface SelectionRangeResponse extends Response {\n                body?: SelectionRange[];\n            }\n            export interface SelectionRange {\n                textSpan: TextSpan;\n                parent?: SelectionRange;\n            }\n            export interface ToggleLineCommentRequest extends FileRequest {\n                command: CommandTypes.ToggleLineComment;\n                arguments: FileRangeRequestArgs;\n            }\n            export interface ToggleMultilineCommentRequest extends FileRequest {\n                command: CommandTypes.ToggleMultilineComment;\n                arguments: FileRangeRequestArgs;\n            }\n            export interface CommentSelectionRequest extends FileRequest {\n                command: CommandTypes.CommentSelection;\n                arguments: FileRangeRequestArgs;\n            }\n            export interface UncommentSelectionRequest extends FileRequest {\n                command: CommandTypes.UncommentSelection;\n                arguments: FileRangeRequestArgs;\n            }\n            /**\n             *  Information found in an "open" request.\n             */\n            export interface OpenRequestArgs extends FileRequestArgs {\n                /**\n                 * Used when a version of the file content is known to be more up to date than the one on disk.\n                 * Then the known content will be used upon opening instead of the disk copy\n                 */\n                fileContent?: string;\n                /**\n                 * Used to specify the script kind of the file explicitly. It could be one of the following:\n                 *      "TS", "JS", "TSX", "JSX"\n                 */\n                scriptKindName?: ScriptKindName;\n                /**\n                 * Used to limit the searching for project config file. If given the searching will stop at this\n                 * root path; otherwise it will go all the way up to the dist root path.\n                 */\n                projectRootPath?: string;\n            }\n            export type ScriptKindName = "TS" | "JS" | "TSX" | "JSX";\n            /**\n             * Open request; value of command field is "open". Notify the\n             * server that the client has file open.  The server will not\n             * monitor the filesystem for changes in this file and will assume\n             * that the client is updating the server (using the change and/or\n             * reload messages) when the file changes. Server does not currently\n             * send a response to an open request.\n             */\n            export interface OpenRequest extends Request {\n                command: CommandTypes.Open;\n                arguments: OpenRequestArgs;\n            }\n            /**\n             * Request to open or update external project\n             */\n            export interface OpenExternalProjectRequest extends Request {\n                command: CommandTypes.OpenExternalProject;\n                arguments: OpenExternalProjectArgs;\n            }\n            /**\n             * Arguments to OpenExternalProjectRequest request\n             */\n            export type OpenExternalProjectArgs = ExternalProject;\n            /**\n             * Request to open multiple external projects\n             */\n            export interface OpenExternalProjectsRequest extends Request {\n                command: CommandTypes.OpenExternalProjects;\n                arguments: OpenExternalProjectsArgs;\n            }\n            /**\n             * Arguments to OpenExternalProjectsRequest\n             */\n            export interface OpenExternalProjectsArgs {\n                /**\n                 * List of external projects to open or update\n                 */\n                projects: ExternalProject[];\n            }\n            /**\n             * Response to OpenExternalProjectRequest request. This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface OpenExternalProjectResponse extends Response {\n            }\n            /**\n             * Response to OpenExternalProjectsRequest request. This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface OpenExternalProjectsResponse extends Response {\n            }\n            /**\n             * Request to close external project.\n             */\n            export interface CloseExternalProjectRequest extends Request {\n                command: CommandTypes.CloseExternalProject;\n                arguments: CloseExternalProjectRequestArgs;\n            }\n            /**\n             * Arguments to CloseExternalProjectRequest request\n             */\n            export interface CloseExternalProjectRequestArgs {\n                /**\n                 * Name of the project to close\n                 */\n                projectFileName: string;\n            }\n            /**\n             * Response to CloseExternalProjectRequest request. This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface CloseExternalProjectResponse extends Response {\n            }\n            /**\n             * Request to synchronize list of open files with the client\n             */\n            export interface UpdateOpenRequest extends Request {\n                command: CommandTypes.UpdateOpen;\n                arguments: UpdateOpenRequestArgs;\n            }\n            /**\n             * Arguments to UpdateOpenRequest\n             */\n            export interface UpdateOpenRequestArgs {\n                /**\n                 * List of newly open files\n                 */\n                openFiles?: OpenRequestArgs[];\n                /**\n                 * List of open files files that were changes\n                 */\n                changedFiles?: FileCodeEdits[];\n                /**\n                 * List of files that were closed\n                 */\n                closedFiles?: string[];\n            }\n            /**\n             * External projects have a typeAcquisition option so they need to be added separately to compiler options for inferred projects.\n             */\n            export type InferredProjectCompilerOptions = ExternalProjectCompilerOptions & TypeAcquisition;\n            /**\n             * Request to set compiler options for inferred projects.\n             * External projects are opened / closed explicitly.\n             * Configured projects are opened when user opens loose file that has \'tsconfig.json\' or \'jsconfig.json\' anywhere in one of containing folders.\n             * This configuration file will be used to obtain a list of files and configuration settings for the project.\n             * Inferred projects are created when user opens a loose file that is not the part of external project\n             * or configured project and will contain only open file and transitive closure of referenced files if \'useOneInferredProject\' is false,\n             * or all open loose files and its transitive closure of referenced files if \'useOneInferredProject\' is true.\n             */\n            export interface SetCompilerOptionsForInferredProjectsRequest extends Request {\n                command: CommandTypes.CompilerOptionsForInferredProjects;\n                arguments: SetCompilerOptionsForInferredProjectsArgs;\n            }\n            /**\n             * Argument for SetCompilerOptionsForInferredProjectsRequest request.\n             */\n            export interface SetCompilerOptionsForInferredProjectsArgs {\n                /**\n                 * Compiler options to be used with inferred projects.\n                 */\n                options: InferredProjectCompilerOptions;\n                /**\n                 * Specifies the project root path used to scope compiler options.\n                 * It is an error to provide this property if the server has not been started with\n                 * `useInferredProjectPerProjectRoot` enabled.\n                 */\n                projectRootPath?: string;\n            }\n            /**\n             * Response to SetCompilerOptionsForInferredProjectsResponse request. This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface SetCompilerOptionsForInferredProjectsResponse extends Response {\n            }\n            /**\n             *  Exit request; value of command field is "exit".  Ask the server process\n             *  to exit.\n             */\n            export interface ExitRequest extends Request {\n                command: CommandTypes.Exit;\n            }\n            /**\n             * Close request; value of command field is "close". Notify the\n             * server that the client has closed a previously open file.  If\n             * file is still referenced by open files, the server will resume\n             * monitoring the filesystem for changes to file.  Server does not\n             * currently send a response to a close request.\n             */\n            export interface CloseRequest extends FileRequest {\n                command: CommandTypes.Close;\n            }\n            export interface WatchChangeRequest extends Request {\n                command: CommandTypes.WatchChange;\n                arguments: WatchChangeRequestArgs | readonly WatchChangeRequestArgs[];\n            }\n            export interface WatchChangeRequestArgs {\n                id: number;\n                created?: string[];\n                deleted?: string[];\n                updated?: string[];\n            }\n            /**\n             * Request to obtain the list of files that should be regenerated if target file is recompiled.\n             * NOTE: this us query-only operation and does not generate any output on disk.\n             */\n            export interface CompileOnSaveAffectedFileListRequest extends FileRequest {\n                command: CommandTypes.CompileOnSaveAffectedFileList;\n            }\n            /**\n             * Contains a list of files that should be regenerated in a project\n             */\n            export interface CompileOnSaveAffectedFileListSingleProject {\n                /**\n                 * Project name\n                 */\n                projectFileName: string;\n                /**\n                 * List of files names that should be recompiled\n                 */\n                fileNames: string[];\n                /**\n                 * true if project uses outFile or out compiler option\n                 */\n                projectUsesOutFile: boolean;\n            }\n            /**\n             * Response for CompileOnSaveAffectedFileListRequest request;\n             */\n            export interface CompileOnSaveAffectedFileListResponse extends Response {\n                body: CompileOnSaveAffectedFileListSingleProject[];\n            }\n            /**\n             * Request to recompile the file. All generated outputs (.js, .d.ts or .js.map files) is written on disk.\n             */\n            export interface CompileOnSaveEmitFileRequest extends FileRequest {\n                command: CommandTypes.CompileOnSaveEmitFile;\n                arguments: CompileOnSaveEmitFileRequestArgs;\n            }\n            /**\n             * Arguments for CompileOnSaveEmitFileRequest\n             */\n            export interface CompileOnSaveEmitFileRequestArgs extends FileRequestArgs {\n                /**\n                 * if true - then file should be recompiled even if it does not have any changes.\n                 */\n                forced?: boolean;\n                includeLinePosition?: boolean;\n                /** if true - return response as object with emitSkipped and diagnostics */\n                richResponse?: boolean;\n            }\n            export interface CompileOnSaveEmitFileResponse extends Response {\n                body: boolean | EmitResult;\n            }\n            export interface EmitResult {\n                emitSkipped: boolean;\n                diagnostics: Diagnostic[] | DiagnosticWithLinePosition[];\n            }\n            /**\n             * Quickinfo request; value of command field is\n             * "quickinfo". Return response giving a quick type and\n             * documentation string for the symbol found in file at location\n             * line, col.\n             */\n            export interface QuickInfoRequest extends FileLocationRequest {\n                command: CommandTypes.Quickinfo;\n                arguments: FileLocationRequestArgs;\n            }\n            /**\n             * Body of QuickInfoResponse.\n             */\n            export interface QuickInfoResponseBody {\n                /**\n                 * The symbol\'s kind (such as \'className\' or \'parameterName\' or plain \'text\').\n                 */\n                kind: ScriptElementKind;\n                /**\n                 * Optional modifiers for the kind (such as \'public\').\n                 */\n                kindModifiers: string;\n                /**\n                 * Starting file location of symbol.\n                 */\n                start: Location;\n                /**\n                 * One past last character of symbol.\n                 */\n                end: Location;\n                /**\n                 * Type and kind of symbol.\n                 */\n                displayString: string;\n                /**\n                 * Documentation associated with symbol.\n                 * Display parts when UserPreferences.displayPartsForJSDoc is true, flattened to string otherwise.\n                 */\n                documentation: string | SymbolDisplayPart[];\n                /**\n                 * JSDoc tags associated with symbol.\n                 */\n                tags: JSDocTagInfo[];\n            }\n            /**\n             * Quickinfo response message.\n             */\n            export interface QuickInfoResponse extends Response {\n                body?: QuickInfoResponseBody;\n            }\n            /**\n             * Arguments for format messages.\n             */\n            export interface FormatRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Last line of range for which to format text in file.\n                 */\n                endLine: number;\n                /**\n                 * Character offset on last line of range for which to format text in file.\n                 */\n                endOffset: number;\n                /**\n                 * Format options to be used.\n                 */\n                options?: FormatCodeSettings;\n            }\n            /**\n             * Format request; value of command field is "format".  Return\n             * response giving zero or more edit instructions.  The edit\n             * instructions will be sorted in file order.  Applying the edit\n             * instructions in reverse to file will result in correctly\n             * reformatted text.\n             */\n            export interface FormatRequest extends FileLocationRequest {\n                command: CommandTypes.Format;\n                arguments: FormatRequestArgs;\n            }\n            /**\n             * Object found in response messages defining an editing\n             * instruction for a span of text in source code.  The effect of\n             * this instruction is to replace the text starting at start and\n             * ending one character before end with newText. For an insertion,\n             * the text span is empty.  For a deletion, newText is empty.\n             */\n            export interface CodeEdit {\n                /**\n                 * First character of the text span to edit.\n                 */\n                start: Location;\n                /**\n                 * One character past last character of the text span to edit.\n                 */\n                end: Location;\n                /**\n                 * Replace the span defined above with this string (may be\n                 * the empty string).\n                 */\n                newText: string;\n            }\n            export interface FileCodeEdits {\n                fileName: string;\n                textChanges: CodeEdit[];\n            }\n            export interface CodeFixResponse extends Response {\n                /** The code actions that are available */\n                body?: CodeFixAction[];\n            }\n            export interface CodeAction {\n                /** Description of the code action to display in the UI of the editor */\n                description: string;\n                /** Text changes to apply to each file as part of the code action */\n                changes: FileCodeEdits[];\n                /** A command is an opaque object that should be passed to `ApplyCodeActionCommandRequestArgs` without modification.  */\n                commands?: {}[];\n            }\n            export interface CombinedCodeActions {\n                changes: readonly FileCodeEdits[];\n                commands?: readonly {}[];\n            }\n            export interface CodeFixAction extends CodeAction {\n                /** Short name to identify the fix, for use by telemetry. */\n                fixName: string;\n                /**\n                 * If present, one may call \'getCombinedCodeFix\' with this fixId.\n                 * This may be omitted to indicate that the code fix can\'t be applied in a group.\n                 */\n                fixId?: {};\n                /** Should be present if and only if \'fixId\' is. */\n                fixAllDescription?: string;\n            }\n            /**\n             * Format and format on key response message.\n             */\n            export interface FormatResponse extends Response {\n                body?: CodeEdit[];\n            }\n            /**\n             * Arguments for format on key messages.\n             */\n            export interface FormatOnKeyRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Key pressed (\';\', \'\\n\', or \'}\').\n                 */\n                key: string;\n                options?: FormatCodeSettings;\n            }\n            /**\n             * Format on key request; value of command field is\n             * "formatonkey". Given file location and key typed (as string),\n             * return response giving zero or more edit instructions.  The\n             * edit instructions will be sorted in file order.  Applying the\n             * edit instructions in reverse to file will result in correctly\n             * reformatted text.\n             */\n            export interface FormatOnKeyRequest extends FileLocationRequest {\n                command: CommandTypes.Formatonkey;\n                arguments: FormatOnKeyRequestArgs;\n            }\n            /**\n             * Arguments for completions messages.\n             */\n            export interface CompletionsRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Optional prefix to apply to possible completions.\n                 */\n                prefix?: string;\n                /**\n                 * Character that was responsible for triggering completion.\n                 * Should be `undefined` if a user manually requested completion.\n                 */\n                triggerCharacter?: CompletionsTriggerCharacter;\n                triggerKind?: CompletionTriggerKind;\n                /**\n                 * @deprecated Use UserPreferences.includeCompletionsForModuleExports\n                 */\n                includeExternalModuleExports?: boolean;\n                /**\n                 * @deprecated Use UserPreferences.includeCompletionsWithInsertText\n                 */\n                includeInsertTextCompletions?: boolean;\n            }\n            /**\n             * Completions request; value of command field is "completions".\n             * Given a file location (file, line, col) and a prefix (which may\n             * be the empty string), return the possible completions that\n             * begin with prefix.\n             */\n            export interface CompletionsRequest extends FileLocationRequest {\n                command: CommandTypes.Completions | CommandTypes.CompletionInfo;\n                arguments: CompletionsRequestArgs;\n            }\n            /**\n             * Arguments for completion details request.\n             */\n            export interface CompletionDetailsRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Names of one or more entries for which to obtain details.\n                 */\n                entryNames: (string | CompletionEntryIdentifier)[];\n            }\n            export interface CompletionEntryIdentifier {\n                name: string;\n                source?: string;\n                data?: unknown;\n            }\n            /**\n             * Completion entry details request; value of command field is\n             * "completionEntryDetails".  Given a file location (file, line,\n             * col) and an array of completion entry names return more\n             * detailed information for each completion entry.\n             */\n            export interface CompletionDetailsRequest extends FileLocationRequest {\n                command: CommandTypes.CompletionDetails;\n                arguments: CompletionDetailsRequestArgs;\n            }\n            /** A part of a symbol description that links from a jsdoc @link tag to a declaration */\n            export interface JSDocLinkDisplayPart extends SymbolDisplayPart {\n                /** The location of the declaration that the @link tag links to. */\n                target: FileSpan;\n            }\n            export type CompletionEntry = ChangePropertyTypes<Omit<ts.CompletionEntry, "symbol">, {\n                replacementSpan: TextSpan;\n                data: unknown;\n            }>;\n            /**\n             * Additional completion entry details, available on demand\n             */\n            export type CompletionEntryDetails = ChangePropertyTypes<ts.CompletionEntryDetails, {\n                tags: JSDocTagInfo[];\n                codeActions: CodeAction[];\n            }>;\n            /** @deprecated Prefer CompletionInfoResponse, which supports several top-level fields in addition to the array of entries. */\n            export interface CompletionsResponse extends Response {\n                body?: CompletionEntry[];\n            }\n            export interface CompletionInfoResponse extends Response {\n                body?: CompletionInfo;\n            }\n            export type CompletionInfo = ChangePropertyTypes<ts.CompletionInfo, {\n                entries: readonly CompletionEntry[];\n                optionalReplacementSpan: TextSpan;\n            }>;\n            export interface CompletionDetailsResponse extends Response {\n                body?: CompletionEntryDetails[];\n            }\n            /**\n             * Represents a single signature to show in signature help.\n             */\n            export type SignatureHelpItem = ChangePropertyTypes<ts.SignatureHelpItem, {\n                tags: JSDocTagInfo[];\n            }>;\n            /**\n             * Signature help items found in the response of a signature help request.\n             */\n            export interface SignatureHelpItems {\n                /**\n                 * The signature help items.\n                 */\n                items: SignatureHelpItem[];\n                /**\n                 * The span for which signature help should appear on a signature\n                 */\n                applicableSpan: TextSpan;\n                /**\n                 * The item selected in the set of available help items.\n                 */\n                selectedItemIndex: number;\n                /**\n                 * The argument selected in the set of parameters.\n                 */\n                argumentIndex: number;\n                /**\n                 * The argument count\n                 */\n                argumentCount: number;\n            }\n            /**\n             * Arguments of a signature help request.\n             */\n            export interface SignatureHelpRequestArgs extends FileLocationRequestArgs {\n                /**\n                 * Reason why signature help was invoked.\n                 * See each individual possible\n                 */\n                triggerReason?: SignatureHelpTriggerReason;\n            }\n            /**\n             * Signature help request; value of command field is "signatureHelp".\n             * Given a file location (file, line, col), return the signature\n             * help.\n             */\n            export interface SignatureHelpRequest extends FileLocationRequest {\n                command: CommandTypes.SignatureHelp;\n                arguments: SignatureHelpRequestArgs;\n            }\n            /**\n             * Response object for a SignatureHelpRequest.\n             */\n            export interface SignatureHelpResponse extends Response {\n                body?: SignatureHelpItems;\n            }\n            export interface InlayHintsRequestArgs extends FileRequestArgs {\n                /**\n                 * Start position of the span.\n                 */\n                start: number;\n                /**\n                 * Length of the span.\n                 */\n                length: number;\n            }\n            export interface InlayHintsRequest extends Request {\n                command: CommandTypes.ProvideInlayHints;\n                arguments: InlayHintsRequestArgs;\n            }\n            export type InlayHintItem = ChangePropertyTypes<ts.InlayHint, {\n                position: Location;\n                displayParts: InlayHintItemDisplayPart[];\n            }>;\n            export interface InlayHintItemDisplayPart {\n                text: string;\n                span?: FileSpan;\n            }\n            export interface InlayHintsResponse extends Response {\n                body?: InlayHintItem[];\n            }\n            export interface MapCodeRequestArgs extends FileRequestArgs {\n                /**\n                 * The files and changes to try and apply/map.\n                 */\n                mapping: MapCodeRequestDocumentMapping;\n            }\n            export interface MapCodeRequestDocumentMapping {\n                /**\n                 * The specific code to map/insert/replace in the file.\n                 */\n                contents: string[];\n                /**\n                 * Areas of "focus" to inform the code mapper with. For example, cursor\n                 * location, current selection, viewport, etc. Nested arrays denote\n                 * priority: toplevel arrays are more important than inner arrays, and\n                 * inner array priorities are based on items within that array. Items\n                 * earlier in the arrays have higher priority.\n                 */\n                focusLocations?: TextSpan[][];\n            }\n            export interface MapCodeRequest extends FileRequest {\n                command: CommandTypes.MapCode;\n                arguments: MapCodeRequestArgs;\n            }\n            export interface MapCodeResponse extends Response {\n                body: readonly FileCodeEdits[];\n            }\n            /**\n             * Synchronous request for semantic diagnostics of one file.\n             */\n            export interface SemanticDiagnosticsSyncRequest extends FileRequest {\n                command: CommandTypes.SemanticDiagnosticsSync;\n                arguments: SemanticDiagnosticsSyncRequestArgs;\n            }\n            export interface SemanticDiagnosticsSyncRequestArgs extends FileRequestArgs {\n                includeLinePosition?: boolean;\n            }\n            /**\n             * Response object for synchronous sematic diagnostics request.\n             */\n            export interface SemanticDiagnosticsSyncResponse extends Response {\n                body?: Diagnostic[] | DiagnosticWithLinePosition[];\n            }\n            export interface SuggestionDiagnosticsSyncRequest extends FileRequest {\n                command: CommandTypes.SuggestionDiagnosticsSync;\n                arguments: SuggestionDiagnosticsSyncRequestArgs;\n            }\n            export type SuggestionDiagnosticsSyncRequestArgs = SemanticDiagnosticsSyncRequestArgs;\n            export type SuggestionDiagnosticsSyncResponse = SemanticDiagnosticsSyncResponse;\n            /**\n             * Synchronous request for syntactic diagnostics of one file.\n             */\n            export interface SyntacticDiagnosticsSyncRequest extends FileRequest {\n                command: CommandTypes.SyntacticDiagnosticsSync;\n                arguments: SyntacticDiagnosticsSyncRequestArgs;\n            }\n            export interface SyntacticDiagnosticsSyncRequestArgs extends FileRequestArgs {\n                includeLinePosition?: boolean;\n            }\n            /**\n             * Response object for synchronous syntactic diagnostics request.\n             */\n            export interface SyntacticDiagnosticsSyncResponse extends Response {\n                body?: Diagnostic[] | DiagnosticWithLinePosition[];\n            }\n            /**\n             * Arguments for GeterrForProject request.\n             */\n            export interface GeterrForProjectRequestArgs {\n                /**\n                 * the file requesting project error list\n                 */\n                file: string;\n                /**\n                 * Delay in milliseconds to wait before starting to compute\n                 * errors for the files in the file list\n                 */\n                delay: number;\n            }\n            /**\n             * GeterrForProjectRequest request; value of command field is\n             * "geterrForProject". It works similarly with \'Geterr\', only\n             * it request for every file in this project.\n             */\n            export interface GeterrForProjectRequest extends Request {\n                command: CommandTypes.GeterrForProject;\n                arguments: GeterrForProjectRequestArgs;\n            }\n            /**\n             * Arguments for geterr messages.\n             */\n            export interface GeterrRequestArgs {\n                /**\n                 * List of file names for which to compute compiler errors.\n                 * The files will be checked in list order.\n                 */\n                files: (string | FileRangesRequestArgs)[];\n                /**\n                 * Delay in milliseconds to wait before starting to compute\n                 * errors for the files in the file list\n                 */\n                delay: number;\n            }\n            /**\n             * Geterr request; value of command field is "geterr". Wait for\n             * delay milliseconds and then, if during the wait no change or\n             * reload messages have arrived for the first file in the files\n             * list, get the syntactic errors for the file, field requests,\n             * and then get the semantic errors for the file.  Repeat with a\n             * smaller delay for each subsequent file on the files list.  Best\n             * practice for an editor is to send a file list containing each\n             * file that is currently visible, in most-recently-used order.\n             */\n            export interface GeterrRequest extends Request {\n                command: CommandTypes.Geterr;\n                arguments: GeterrRequestArgs;\n            }\n            export interface FileRange {\n                /**\n                 * The line number for the request (1-based).\n                 */\n                startLine: number;\n                /**\n                 * The character offset (on the line) for the request (1-based).\n                 */\n                startOffset: number;\n                /**\n                 * The line number for the request (1-based).\n                 */\n                endLine: number;\n                /**\n                 * The character offset (on the line) for the request (1-based).\n                 */\n                endOffset: number;\n            }\n            export interface FileRangesRequestArgs extends Pick<FileRequestArgs, "file"> {\n                ranges: FileRange[];\n            }\n            export type RequestCompletedEventName = "requestCompleted";\n            /**\n             * Event that is sent when server have finished processing request with specified id.\n             */\n            export interface RequestCompletedEvent extends Event {\n                event: RequestCompletedEventName;\n                body: RequestCompletedEventBody;\n            }\n            export interface RequestCompletedEventBody {\n                request_seq: number;\n                performanceData?: PerformanceData;\n            }\n            /**\n             * Item of diagnostic information found in a DiagnosticEvent message.\n             */\n            export interface Diagnostic {\n                /**\n                 * Starting file location at which text applies.\n                 */\n                start: Location;\n                /**\n                 * The last file location at which the text applies.\n                 */\n                end: Location;\n                /**\n                 * Text of diagnostic message.\n                 */\n                text: string;\n                /**\n                 * The category of the diagnostic message, e.g. "error", "warning", or "suggestion".\n                 */\n                category: string;\n                reportsUnnecessary?: {};\n                reportsDeprecated?: {};\n                /**\n                 * Any related spans the diagnostic may have, such as other locations relevant to an error, such as declarartion sites\n                 */\n                relatedInformation?: DiagnosticRelatedInformation[];\n                /**\n                 * The error code of the diagnostic message.\n                 */\n                code?: number;\n                /**\n                 * The name of the plugin reporting the message.\n                 */\n                source?: string;\n            }\n            export interface DiagnosticWithFileName extends Diagnostic {\n                /**\n                 * Name of the file the diagnostic is in\n                 */\n                fileName: string;\n            }\n            /**\n             * Represents additional spans returned with a diagnostic which are relevant to it\n             */\n            export interface DiagnosticRelatedInformation {\n                /**\n                 * The category of the related information message, e.g. "error", "warning", or "suggestion".\n                 */\n                category: string;\n                /**\n                 * The code used ot identify the related information\n                 */\n                code: number;\n                /**\n                 * Text of related or additional information.\n                 */\n                message: string;\n                /**\n                 * Associated location\n                 */\n                span?: FileSpan;\n            }\n            export interface DiagnosticEventBody {\n                /**\n                 * The file for which diagnostic information is reported.\n                 */\n                file: string;\n                /**\n                 * An array of diagnostic information items.\n                 */\n                diagnostics: Diagnostic[];\n                /**\n                 * Spans where the region diagnostic was requested, if this is a region semantic diagnostic event.\n                 */\n                spans?: TextSpan[];\n            }\n            export type DiagnosticEventKind = "semanticDiag" | "syntaxDiag" | "suggestionDiag" | "regionSemanticDiag";\n            /**\n             * Event message for DiagnosticEventKind event types.\n             * These events provide syntactic and semantic errors for a file.\n             */\n            export interface DiagnosticEvent extends Event {\n                body?: DiagnosticEventBody;\n                event: DiagnosticEventKind;\n            }\n            export interface ConfigFileDiagnosticEventBody {\n                /**\n                 * The file which trigged the searching and error-checking of the config file\n                 */\n                triggerFile: string;\n                /**\n                 * The name of the found config file.\n                 */\n                configFile: string;\n                /**\n                 * An arry of diagnostic information items for the found config file.\n                 */\n                diagnostics: DiagnosticWithFileName[];\n            }\n            /**\n             * Event message for "configFileDiag" event type.\n             * This event provides errors for a found config file.\n             */\n            export interface ConfigFileDiagnosticEvent extends Event {\n                body?: ConfigFileDiagnosticEventBody;\n                event: "configFileDiag";\n            }\n            export type ProjectLanguageServiceStateEventName = "projectLanguageServiceState";\n            export interface ProjectLanguageServiceStateEvent extends Event {\n                event: ProjectLanguageServiceStateEventName;\n                body?: ProjectLanguageServiceStateEventBody;\n            }\n            export interface ProjectLanguageServiceStateEventBody {\n                /**\n                 * Project name that has changes in the state of language service.\n                 * For configured projects this will be the config file path.\n                 * For external projects this will be the name of the projects specified when project was open.\n                 * For inferred projects this event is not raised.\n                 */\n                projectName: string;\n                /**\n                 * True if language service state switched from disabled to enabled\n                 * and false otherwise.\n                 */\n                languageServiceEnabled: boolean;\n            }\n            export type ProjectsUpdatedInBackgroundEventName = "projectsUpdatedInBackground";\n            export interface ProjectsUpdatedInBackgroundEvent extends Event {\n                event: ProjectsUpdatedInBackgroundEventName;\n                body: ProjectsUpdatedInBackgroundEventBody;\n            }\n            export interface ProjectsUpdatedInBackgroundEventBody {\n                /**\n                 * Current set of open files\n                 */\n                openFiles: string[];\n            }\n            export type ProjectLoadingStartEventName = "projectLoadingStart";\n            export interface ProjectLoadingStartEvent extends Event {\n                event: ProjectLoadingStartEventName;\n                body: ProjectLoadingStartEventBody;\n            }\n            export interface ProjectLoadingStartEventBody {\n                /** name of the project */\n                projectName: string;\n                /** reason for loading */\n                reason: string;\n            }\n            export type ProjectLoadingFinishEventName = "projectLoadingFinish";\n            export interface ProjectLoadingFinishEvent extends Event {\n                event: ProjectLoadingFinishEventName;\n                body: ProjectLoadingFinishEventBody;\n            }\n            export interface ProjectLoadingFinishEventBody {\n                /** name of the project */\n                projectName: string;\n            }\n            export type SurveyReadyEventName = "surveyReady";\n            export interface SurveyReadyEvent extends Event {\n                event: SurveyReadyEventName;\n                body: SurveyReadyEventBody;\n            }\n            export interface SurveyReadyEventBody {\n                /** Name of the survey. This is an internal machine- and programmer-friendly name */\n                surveyId: string;\n            }\n            export type LargeFileReferencedEventName = "largeFileReferenced";\n            export interface LargeFileReferencedEvent extends Event {\n                event: LargeFileReferencedEventName;\n                body: LargeFileReferencedEventBody;\n            }\n            export interface LargeFileReferencedEventBody {\n                /**\n                 * name of the large file being loaded\n                 */\n                file: string;\n                /**\n                 * size of the file\n                 */\n                fileSize: number;\n                /**\n                 * max file size allowed on the server\n                 */\n                maxFileSize: number;\n            }\n            export type CreateFileWatcherEventName = "createFileWatcher";\n            export interface CreateFileWatcherEvent extends Event {\n                readonly event: CreateFileWatcherEventName;\n                readonly body: CreateFileWatcherEventBody;\n            }\n            export interface CreateFileWatcherEventBody {\n                readonly id: number;\n                readonly path: string;\n            }\n            export type CreateDirectoryWatcherEventName = "createDirectoryWatcher";\n            export interface CreateDirectoryWatcherEvent extends Event {\n                readonly event: CreateDirectoryWatcherEventName;\n                readonly body: CreateDirectoryWatcherEventBody;\n            }\n            export interface CreateDirectoryWatcherEventBody {\n                readonly id: number;\n                readonly path: string;\n                readonly recursive: boolean;\n                readonly ignoreUpdate?: boolean;\n            }\n            export type CloseFileWatcherEventName = "closeFileWatcher";\n            export interface CloseFileWatcherEvent extends Event {\n                readonly event: CloseFileWatcherEventName;\n                readonly body: CloseFileWatcherEventBody;\n            }\n            export interface CloseFileWatcherEventBody {\n                readonly id: number;\n            }\n            /**\n             * Arguments for reload request.\n             */\n            export interface ReloadRequestArgs extends FileRequestArgs {\n                /**\n                 * Name of temporary file from which to reload file\n                 * contents. May be same as file.\n                 */\n                tmpfile: string;\n            }\n            /**\n             * Reload request message; value of command field is "reload".\n             * Reload contents of file with name given by the \'file\' argument\n             * from temporary file with name given by the \'tmpfile\' argument.\n             * The two names can be identical.\n             */\n            export interface ReloadRequest extends FileRequest {\n                command: CommandTypes.Reload;\n                arguments: ReloadRequestArgs;\n            }\n            /**\n             * Response to "reload" request. This is just an acknowledgement, so\n             * no body field is required.\n             */\n            export interface ReloadResponse extends Response {\n            }\n            /**\n             * Arguments for saveto request.\n             */\n            export interface SavetoRequestArgs extends FileRequestArgs {\n                /**\n                 * Name of temporary file into which to save server\'s view of\n                 * file contents.\n                 */\n                tmpfile: string;\n            }\n            /**\n             * Saveto request message; value of command field is "saveto".\n             * For debugging purposes, save to a temporaryfile (named by\n             * argument \'tmpfile\') the contents of file named by argument\n             * \'file\'.  The server does not currently send a response to a\n             * "saveto" request.\n             */\n            export interface SavetoRequest extends FileRequest {\n                command: CommandTypes.Saveto;\n                arguments: SavetoRequestArgs;\n            }\n            /**\n             * Arguments for navto request message.\n             */\n            export interface NavtoRequestArgs {\n                /**\n                 * Search term to navigate to from current location; term can\n                 * be \'.*\' or an identifier prefix.\n                 */\n                searchValue: string;\n                /**\n                 *  Optional limit on the number of items to return.\n                 */\n                maxResultCount?: number;\n                /**\n                 * The file for the request (absolute pathname required).\n                 */\n                file?: string;\n                /**\n                 * Optional flag to indicate we want results for just the current file\n                 * or the entire project.\n                 */\n                currentFileOnly?: boolean;\n                projectFileName?: string;\n            }\n            /**\n             * Navto request message; value of command field is "navto".\n             * Return list of objects giving file locations and symbols that\n             * match the search term given in argument \'searchTerm\'.  The\n             * context for the search is given by the named file.\n             */\n            export interface NavtoRequest extends Request {\n                command: CommandTypes.Navto;\n                arguments: NavtoRequestArgs;\n            }\n            /**\n             * An item found in a navto response.\n             */\n            export interface NavtoItem extends FileSpan {\n                /**\n                 * The symbol\'s name.\n                 */\n                name: string;\n                /**\n                 * The symbol\'s kind (such as \'className\' or \'parameterName\').\n                 */\n                kind: ScriptElementKind;\n                /**\n                 * exact, substring, or prefix.\n                 */\n                matchKind: string;\n                /**\n                 * If this was a case sensitive or insensitive match.\n                 */\n                isCaseSensitive: boolean;\n                /**\n                 * Optional modifiers for the kind (such as \'public\').\n                 */\n                kindModifiers?: string;\n                /**\n                 * Name of symbol\'s container symbol (if any); for example,\n                 * the class name if symbol is a class member.\n                 */\n                containerName?: string;\n                /**\n                 * Kind of symbol\'s container symbol (if any).\n                 */\n                containerKind?: ScriptElementKind;\n            }\n            /**\n             * Navto response message. Body is an array of navto items.  Each\n             * item gives a symbol that matched the search term.\n             */\n            export interface NavtoResponse extends Response {\n                body?: NavtoItem[];\n            }\n            /**\n             * Arguments for change request message.\n             */\n            export interface ChangeRequestArgs extends FormatRequestArgs {\n                /**\n                 * Optional string to insert at location (file, line, offset).\n                 */\n                insertString?: string;\n            }\n            /**\n             * Change request message; value of command field is "change".\n             * Update the server\'s view of the file named by argument \'file\'.\n             * Server does not currently send a response to a change request.\n             */\n            export interface ChangeRequest extends FileLocationRequest {\n                command: CommandTypes.Change;\n                arguments: ChangeRequestArgs;\n            }\n            /**\n             * Response to "brace" request.\n             */\n            export interface BraceResponse extends Response {\n                body?: TextSpan[];\n            }\n            /**\n             * Brace matching request; value of command field is "brace".\n             * Return response giving the file locations of matching braces\n             * found in file at location line, offset.\n             */\n            export interface BraceRequest extends FileLocationRequest {\n                command: CommandTypes.Brace;\n            }\n            /**\n             * NavBar items request; value of command field is "navbar".\n             * Return response giving the list of navigation bar entries\n             * extracted from the requested file.\n             */\n            export interface NavBarRequest extends FileRequest {\n                command: CommandTypes.NavBar;\n            }\n            /**\n             * NavTree request; value of command field is "navtree".\n             * Return response giving the navigation tree of the requested file.\n             */\n            export interface NavTreeRequest extends FileRequest {\n                command: CommandTypes.NavTree;\n            }\n            export interface NavigationBarItem {\n                /**\n                 * The item\'s display text.\n                 */\n                text: string;\n                /**\n                 * The symbol\'s kind (such as \'className\' or \'parameterName\').\n                 */\n                kind: ScriptElementKind;\n                /**\n                 * Optional modifiers for the kind (such as \'public\').\n                 */\n                kindModifiers?: string;\n                /**\n                 * The definition locations of the item.\n                 */\n                spans: TextSpan[];\n                /**\n                 * Optional children.\n                 */\n                childItems?: NavigationBarItem[];\n                /**\n                 * Number of levels deep this item should appear.\n                 */\n                indent: number;\n            }\n            /** protocol.NavigationTree is identical to ts.NavigationTree, except using protocol.TextSpan instead of ts.TextSpan */\n            export interface NavigationTree {\n                text: string;\n                kind: ScriptElementKind;\n                kindModifiers: string;\n                spans: TextSpan[];\n                nameSpan: TextSpan | undefined;\n                childItems?: NavigationTree[];\n            }\n            export type TelemetryEventName = "telemetry";\n            export interface TelemetryEvent extends Event {\n                event: TelemetryEventName;\n                body: TelemetryEventBody;\n            }\n            export interface TelemetryEventBody {\n                telemetryEventName: string;\n                payload: any;\n            }\n            export type TypesInstallerInitializationFailedEventName = "typesInstallerInitializationFailed";\n            export interface TypesInstallerInitializationFailedEvent extends Event {\n                event: TypesInstallerInitializationFailedEventName;\n                body: TypesInstallerInitializationFailedEventBody;\n            }\n            export interface TypesInstallerInitializationFailedEventBody {\n                message: string;\n            }\n            export type TypingsInstalledTelemetryEventName = "typingsInstalled";\n            export interface TypingsInstalledTelemetryEventBody extends TelemetryEventBody {\n                telemetryEventName: TypingsInstalledTelemetryEventName;\n                payload: TypingsInstalledTelemetryEventPayload;\n            }\n            export interface TypingsInstalledTelemetryEventPayload {\n                /**\n                 * Comma separated list of installed typing packages\n                 */\n                installedPackages: string;\n                /**\n                 * true if install request succeeded, otherwise - false\n                 */\n                installSuccess: boolean;\n                /**\n                 * version of typings installer\n                 */\n                typingsInstallerVersion: string;\n            }\n            export type BeginInstallTypesEventName = "beginInstallTypes";\n            export type EndInstallTypesEventName = "endInstallTypes";\n            export interface BeginInstallTypesEvent extends Event {\n                event: BeginInstallTypesEventName;\n                body: BeginInstallTypesEventBody;\n            }\n            export interface EndInstallTypesEvent extends Event {\n                event: EndInstallTypesEventName;\n                body: EndInstallTypesEventBody;\n            }\n            export interface InstallTypesEventBody {\n                /**\n                 * correlation id to match begin and end events\n                 */\n                eventId: number;\n                /**\n                 * list of packages to install\n                 */\n                packages: readonly string[];\n            }\n            export interface BeginInstallTypesEventBody extends InstallTypesEventBody {\n            }\n            export interface EndInstallTypesEventBody extends InstallTypesEventBody {\n                /**\n                 * true if installation succeeded, otherwise false\n                 */\n                success: boolean;\n            }\n            export interface NavBarResponse extends Response {\n                body?: NavigationBarItem[];\n            }\n            export interface NavTreeResponse extends Response {\n                body?: NavigationTree;\n            }\n            export type CallHierarchyItem = ChangePropertyTypes<ts.CallHierarchyItem, {\n                span: TextSpan;\n                selectionSpan: TextSpan;\n            }>;\n            export interface CallHierarchyIncomingCall {\n                from: CallHierarchyItem;\n                fromSpans: TextSpan[];\n            }\n            export interface CallHierarchyOutgoingCall {\n                to: CallHierarchyItem;\n                fromSpans: TextSpan[];\n            }\n            export interface PrepareCallHierarchyRequest extends FileLocationRequest {\n                command: CommandTypes.PrepareCallHierarchy;\n            }\n            export interface PrepareCallHierarchyResponse extends Response {\n                readonly body: CallHierarchyItem | CallHierarchyItem[];\n            }\n            export interface ProvideCallHierarchyIncomingCallsRequest extends FileLocationRequest {\n                command: CommandTypes.ProvideCallHierarchyIncomingCalls;\n            }\n            export interface ProvideCallHierarchyIncomingCallsResponse extends Response {\n                readonly body: CallHierarchyIncomingCall[];\n            }\n            export interface ProvideCallHierarchyOutgoingCallsRequest extends FileLocationRequest {\n                command: CommandTypes.ProvideCallHierarchyOutgoingCalls;\n            }\n            export interface ProvideCallHierarchyOutgoingCallsResponse extends Response {\n                readonly body: CallHierarchyOutgoingCall[];\n            }\n            export enum IndentStyle {\n                None = "None",\n                Block = "Block",\n                Smart = "Smart",\n            }\n            export type EditorSettings = ChangePropertyTypes<ts.EditorSettings, {\n                indentStyle: IndentStyle | ts.IndentStyle;\n            }>;\n            export type FormatCodeSettings = ChangePropertyTypes<ts.FormatCodeSettings, {\n                indentStyle: IndentStyle | ts.IndentStyle;\n            }>;\n            export type CompilerOptions = ChangePropertyTypes<ChangeStringIndexSignature<ts.CompilerOptions, CompilerOptionsValue>, {\n                jsx: JsxEmit | ts.JsxEmit;\n                module: ModuleKind | ts.ModuleKind;\n                moduleResolution: ModuleResolutionKind | ts.ModuleResolutionKind;\n                newLine: NewLineKind | ts.NewLineKind;\n                target: ScriptTarget | ts.ScriptTarget;\n            }>;\n            export enum JsxEmit {\n                None = "none",\n                Preserve = "preserve",\n                ReactNative = "react-native",\n                React = "react",\n                ReactJSX = "react-jsx",\n                ReactJSXDev = "react-jsxdev",\n            }\n            export enum ModuleKind {\n                None = "none",\n                CommonJS = "commonjs",\n                AMD = "amd",\n                UMD = "umd",\n                System = "system",\n                ES6 = "es6",\n                ES2015 = "es2015",\n                ES2020 = "es2020",\n                ES2022 = "es2022",\n                ESNext = "esnext",\n                Node16 = "node16",\n                Node18 = "node18",\n                NodeNext = "nodenext",\n                Preserve = "preserve",\n            }\n            export enum ModuleResolutionKind {\n                Classic = "classic",\n                /** @deprecated Renamed to `Node10` */\n                Node = "node",\n                /** @deprecated Renamed to `Node10` */\n                NodeJs = "node",\n                Node10 = "node10",\n                Node16 = "node16",\n                NodeNext = "nodenext",\n                Bundler = "bundler",\n            }\n            export enum NewLineKind {\n                Crlf = "Crlf",\n                Lf = "Lf",\n            }\n            export enum ScriptTarget {\n                /** @deprecated */\n                ES3 = "es3",\n                ES5 = "es5",\n                ES6 = "es6",\n                ES2015 = "es2015",\n                ES2016 = "es2016",\n                ES2017 = "es2017",\n                ES2018 = "es2018",\n                ES2019 = "es2019",\n                ES2020 = "es2020",\n                ES2021 = "es2021",\n                ES2022 = "es2022",\n                ES2023 = "es2023",\n                ES2024 = "es2024",\n                ESNext = "esnext",\n                JSON = "json",\n                Latest = "esnext",\n            }\n        }\n        namespace typingsInstaller {\n            interface Log {\n                isEnabled(): boolean;\n                writeLine(text: string): void;\n            }\n            type RequestCompletedAction = (success: boolean) => void;\n            interface PendingRequest {\n                requestId: number;\n                packageNames: string[];\n                cwd: string;\n                onRequestCompleted: RequestCompletedAction;\n            }\n            abstract class TypingsInstaller {\n                protected readonly installTypingHost: InstallTypingHost;\n                private readonly globalCachePath;\n                private readonly safeListPath;\n                private readonly typesMapLocation;\n                private readonly throttleLimit;\n                protected readonly log: Log;\n                private readonly packageNameToTypingLocation;\n                private readonly missingTypingsSet;\n                private readonly knownCachesSet;\n                private readonly projectWatchers;\n                private safeList;\n                private pendingRunRequests;\n                private installRunCount;\n                private inFlightRequestCount;\n                abstract readonly typesRegistry: Map<string, MapLike<string>>;\n                constructor(installTypingHost: InstallTypingHost, globalCachePath: string, safeListPath: Path, typesMapLocation: Path, throttleLimit: number, log?: Log);\n                closeProject(req: CloseProject): void;\n                private closeWatchers;\n                install(req: DiscoverTypings): void;\n                private initializeSafeList;\n                private processCacheLocation;\n                private filterTypings;\n                protected ensurePackageDirectoryExists(directory: string): void;\n                private installTypings;\n                private ensureDirectoryExists;\n                private watchFiles;\n                private createSetTypings;\n                private installTypingsAsync;\n                private executeWithThrottling;\n                protected abstract installWorker(requestId: number, packageNames: string[], cwd: string, onRequestCompleted: RequestCompletedAction): void;\n                protected abstract sendResponse(response: SetTypings | InvalidateCachedTypings | BeginInstallTypes | EndInstallTypes | WatchTypingLocations): void;\n                protected readonly latestDistTag = "latest";\n            }\n        }\n        type ActionSet = "action::set";\n        type ActionInvalidate = "action::invalidate";\n        type ActionPackageInstalled = "action::packageInstalled";\n        type EventTypesRegistry = "event::typesRegistry";\n        type EventBeginInstallTypes = "event::beginInstallTypes";\n        type EventEndInstallTypes = "event::endInstallTypes";\n        type EventInitializationFailed = "event::initializationFailed";\n        type ActionWatchTypingLocations = "action::watchTypingLocations";\n        interface TypingInstallerResponse {\n            readonly kind: ActionSet | ActionInvalidate | EventTypesRegistry | ActionPackageInstalled | EventBeginInstallTypes | EventEndInstallTypes | EventInitializationFailed | ActionWatchTypingLocations;\n        }\n        interface TypingInstallerRequestWithProjectName {\n            readonly projectName: string;\n        }\n        interface DiscoverTypings extends TypingInstallerRequestWithProjectName {\n            readonly fileNames: string[];\n            readonly projectRootPath: Path;\n            readonly compilerOptions: CompilerOptions;\n            readonly typeAcquisition: TypeAcquisition;\n            readonly unresolvedImports: SortedReadonlyArray<string>;\n            readonly cachePath?: string;\n            readonly kind: "discover";\n        }\n        interface CloseProject extends TypingInstallerRequestWithProjectName {\n            readonly kind: "closeProject";\n        }\n        interface TypesRegistryRequest {\n            readonly kind: "typesRegistry";\n        }\n        interface InstallPackageRequest extends TypingInstallerRequestWithProjectName {\n            readonly kind: "installPackage";\n            readonly fileName: Path;\n            readonly packageName: string;\n            readonly projectRootPath: Path;\n            readonly id: number;\n        }\n        interface PackageInstalledResponse extends ProjectResponse {\n            readonly kind: ActionPackageInstalled;\n            readonly id: number;\n            readonly success: boolean;\n            readonly message: string;\n        }\n        interface InitializationFailedResponse extends TypingInstallerResponse {\n            readonly kind: EventInitializationFailed;\n            readonly message: string;\n            readonly stack?: string;\n        }\n        interface ProjectResponse extends TypingInstallerResponse {\n            readonly projectName: string;\n        }\n        interface InvalidateCachedTypings extends ProjectResponse {\n            readonly kind: ActionInvalidate;\n        }\n        interface InstallTypes extends ProjectResponse {\n            readonly kind: EventBeginInstallTypes | EventEndInstallTypes;\n            readonly eventId: number;\n            readonly typingsInstallerVersion: string;\n            readonly packagesToInstall: readonly string[];\n        }\n        interface BeginInstallTypes extends InstallTypes {\n            readonly kind: EventBeginInstallTypes;\n        }\n        interface EndInstallTypes extends InstallTypes {\n            readonly kind: EventEndInstallTypes;\n            readonly installSuccess: boolean;\n        }\n        interface InstallTypingHost extends JsTyping.TypingResolutionHost {\n            useCaseSensitiveFileNames: boolean;\n            writeFile(path: string, content: string): void;\n            createDirectory(path: string): void;\n            getCurrentDirectory?(): string;\n        }\n        interface SetTypings extends ProjectResponse {\n            readonly typeAcquisition: TypeAcquisition;\n            readonly compilerOptions: CompilerOptions;\n            readonly typings: string[];\n            readonly unresolvedImports: SortedReadonlyArray<string>;\n            readonly kind: ActionSet;\n        }\n        interface WatchTypingLocations extends ProjectResponse {\n            /** if files is undefined, retain same set of watchers */\n            readonly files: readonly string[] | undefined;\n            readonly kind: ActionWatchTypingLocations;\n        }\n        interface CompressedData {\n            length: number;\n            compressionKind: string;\n            data: any;\n        }\n        type ModuleImportResult = {\n            module: {};\n            error: undefined;\n        } | {\n            module: undefined;\n            error: {\n                stack?: string;\n                message?: string;\n            };\n        };\n        /** @deprecated Use {@link ModuleImportResult} instead. */\n        type RequireResult = ModuleImportResult;\n        interface ServerHost extends System {\n            watchFile(path: string, callback: FileWatcherCallback, pollingInterval?: number, options?: WatchOptions): FileWatcher;\n            watchDirectory(path: string, callback: DirectoryWatcherCallback, recursive?: boolean, options?: WatchOptions): FileWatcher;\n            preferNonRecursiveWatch?: boolean;\n            setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;\n            clearTimeout(timeoutId: any): void;\n            setImmediate(callback: (...args: any[]) => void, ...args: any[]): any;\n            clearImmediate(timeoutId: any): void;\n            gc?(): void;\n            trace?(s: string): void;\n            require?(initialPath: string, moduleName: string): ModuleImportResult;\n        }\n        interface InstallPackageOptionsWithProject extends InstallPackageOptions {\n            projectName: string;\n            projectRootPath: Path;\n        }\n        interface ITypingsInstaller {\n            isKnownTypesPackageName(name: string): boolean;\n            installPackage(options: InstallPackageOptionsWithProject): Promise<ApplyCodeActionCommandResult>;\n            enqueueInstallTypingsRequest(p: Project, typeAcquisition: TypeAcquisition, unresolvedImports: SortedReadonlyArray<string> | undefined): void;\n            attach(projectService: ProjectService): void;\n            onProjectClosed(p: Project): void;\n            readonly globalTypingsCacheLocation: string | undefined;\n        }\n        function createInstallTypingsRequest(project: Project, typeAcquisition: TypeAcquisition, unresolvedImports: SortedReadonlyArray<string>, cachePath?: string): DiscoverTypings;\n        function toNormalizedPath(fileName: string): NormalizedPath;\n        function normalizedPathToPath(normalizedPath: NormalizedPath, currentDirectory: string, getCanonicalFileName: (f: string) => string): Path;\n        function asNormalizedPath(fileName: string): NormalizedPath;\n        function createNormalizedPathMap<T>(): NormalizedPathMap<T>;\n        function isInferredProjectName(name: string): boolean;\n        function makeInferredProjectName(counter: number): string;\n        function createSortedArray<T>(): SortedArray<T>;\n        enum LogLevel {\n            terse = 0,\n            normal = 1,\n            requestTime = 2,\n            verbose = 3,\n        }\n        const emptyArray: SortedReadonlyArray<never>;\n        interface Logger {\n            close(): void;\n            hasLevel(level: LogLevel): boolean;\n            loggingEnabled(): boolean;\n            perftrc(s: string): void;\n            info(s: string): void;\n            startGroup(): void;\n            endGroup(): void;\n            msg(s: string, type?: Msg): void;\n            getLogFileName(): string | undefined;\n        }\n        enum Msg {\n            Err = "Err",\n            Info = "Info",\n            Perf = "Perf",\n        }\n        namespace Errors {\n            function ThrowNoProject(): never;\n            function ThrowProjectLanguageServiceDisabled(): never;\n            function ThrowProjectDoesNotContainDocument(fileName: string, project: Project): never;\n        }\n        type NormalizedPath = string & {\n            __normalizedPathTag: any;\n        };\n        interface NormalizedPathMap<T> {\n            get(path: NormalizedPath): T | undefined;\n            set(path: NormalizedPath, value: T): void;\n            contains(path: NormalizedPath): boolean;\n            remove(path: NormalizedPath): void;\n        }\n        function isDynamicFileName(fileName: NormalizedPath): boolean;\n        class ScriptInfo {\n            private readonly host;\n            readonly fileName: NormalizedPath;\n            readonly scriptKind: ScriptKind;\n            readonly hasMixedContent: boolean;\n            readonly path: Path;\n            /**\n             * All projects that include this file\n             */\n            readonly containingProjects: Project[];\n            private formatSettings;\n            private preferences;\n            private realpath;\n            constructor(host: ServerHost, fileName: NormalizedPath, scriptKind: ScriptKind, hasMixedContent: boolean, path: Path, initialVersion?: number);\n            isScriptOpen(): boolean;\n            open(newText: string | undefined): void;\n            close(fileExists?: boolean): void;\n            getSnapshot(): IScriptSnapshot;\n            private ensureRealPath;\n            getFormatCodeSettings(): FormatCodeSettings | undefined;\n            getPreferences(): protocol.UserPreferences | undefined;\n            attachToProject(project: Project): boolean;\n            isAttached(project: Project): boolean;\n            detachFromProject(project: Project): void;\n            detachAllProjects(): void;\n            getDefaultProject(): Project;\n            registerFileUpdate(): void;\n            setOptions(formatSettings: FormatCodeSettings, preferences: protocol.UserPreferences | undefined): void;\n            getLatestVersion(): string;\n            saveTo(fileName: string): void;\n            reloadFromFile(tempFileName?: NormalizedPath): boolean;\n            editContent(start: number, end: number, newText: string): void;\n            markContainingProjectsAsDirty(): void;\n            isOrphan(): boolean;\n            /**\n             *  @param line 1 based index\n             */\n            lineToTextSpan(line: number): TextSpan;\n            /**\n             * @param line 1 based index\n             * @param offset 1 based index\n             */\n            lineOffsetToPosition(line: number, offset: number): number;\n            positionToLineOffset(position: number): protocol.Location;\n            isJavaScript(): boolean;\n        }\n        function allRootFilesAreJsOrDts(project: Project): boolean;\n        function allFilesAreJsOrDts(project: Project): boolean;\n        enum ProjectKind {\n            Inferred = 0,\n            Configured = 1,\n            External = 2,\n            AutoImportProvider = 3,\n            Auxiliary = 4,\n        }\n        interface PluginCreateInfo {\n            project: Project;\n            languageService: LanguageService;\n            languageServiceHost: LanguageServiceHost;\n            serverHost: ServerHost;\n            session?: Session<unknown>;\n            config: any;\n        }\n        interface PluginModule {\n            create(createInfo: PluginCreateInfo): LanguageService;\n            getExternalFiles?(proj: Project, updateLevel: ProgramUpdateLevel): string[];\n            onConfigurationChanged?(config: any): void;\n        }\n        interface PluginModuleWithName {\n            name: string;\n            module: PluginModule;\n        }\n        type PluginModuleFactory = (mod: {\n            typescript: typeof ts;\n        }) => PluginModule;\n        abstract class Project implements LanguageServiceHost, ModuleResolutionHost {\n            readonly projectKind: ProjectKind;\n            readonly projectService: ProjectService;\n            private compilerOptions;\n            compileOnSaveEnabled: boolean;\n            protected watchOptions: WatchOptions | undefined;\n            private rootFilesMap;\n            private program;\n            private externalFiles;\n            private missingFilesMap;\n            private generatedFilesMap;\n            private hasAddedorRemovedFiles;\n            private hasAddedOrRemovedSymlinks;\n            protected languageService: LanguageService;\n            languageServiceEnabled: boolean;\n            readonly trace?: (s: string) => void;\n            readonly realpath?: (path: string) => string;\n            private builderState;\n            private updatedFileNames;\n            private lastReportedFileNames;\n            private lastReportedVersion;\n            protected projectErrors: Diagnostic[] | undefined;\n            private typingsCache;\n            private typingWatchers;\n            private readonly cancellationToken;\n            isNonTsProject(): boolean;\n            isJsOnlyProject(): boolean;\n            static resolveModule(moduleName: string, initialDir: string, host: ServerHost, log: (message: string) => void): {} | undefined;\n            private exportMapCache;\n            private changedFilesForExportMapCache;\n            private moduleSpecifierCache;\n            private symlinks;\n            readonly jsDocParsingMode: JSDocParsingMode | undefined;\n            isKnownTypesPackageName(name: string): boolean;\n            installPackage(options: InstallPackageOptions): Promise<ApplyCodeActionCommandResult>;\n            getCompilationSettings(): CompilerOptions;\n            getCompilerOptions(): CompilerOptions;\n            getNewLine(): string;\n            getProjectVersion(): string;\n            getProjectReferences(): readonly ProjectReference[] | undefined;\n            getScriptFileNames(): string[];\n            private getOrCreateScriptInfoAndAttachToProject;\n            getScriptKind(fileName: string): ScriptKind;\n            getScriptVersion(filename: string): string;\n            getScriptSnapshot(filename: string): IScriptSnapshot | undefined;\n            getCancellationToken(): HostCancellationToken;\n            getCurrentDirectory(): string;\n            getDefaultLibFileName(): string;\n            useCaseSensitiveFileNames(): boolean;\n            readDirectory(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];\n            readFile(fileName: string): string | undefined;\n            writeFile(fileName: string, content: string): void;\n            fileExists(file: string): boolean;\n            directoryExists(path: string): boolean;\n            getDirectories(path: string): string[];\n            log(s: string): void;\n            error(s: string): void;\n            private setInternalCompilerOptionsForEmittingJsFiles;\n            /**\n             * Get the errors that dont have any file name associated\n             */\n            getGlobalProjectErrors(): readonly Diagnostic[];\n            /**\n             * Get all the project errors\n             */\n            getAllProjectErrors(): readonly Diagnostic[];\n            setProjectErrors(projectErrors: Diagnostic[] | undefined): void;\n            getLanguageService(ensureSynchronized?: boolean): LanguageService;\n            getCompileOnSaveAffectedFileList(scriptInfo: ScriptInfo): string[];\n            /**\n             * Returns true if emit was conducted\n             */\n            emitFile(scriptInfo: ScriptInfo, writeFile: (path: string, data: string, writeByteOrderMark?: boolean) => void): EmitResult;\n            enableLanguageService(): void;\n            disableLanguageService(lastFileExceededProgramSize?: string): void;\n            getProjectName(): string;\n            protected removeLocalTypingsFromTypeAcquisition(newTypeAcquisition: TypeAcquisition): TypeAcquisition;\n            getExternalFiles(updateLevel?: ProgramUpdateLevel): SortedReadonlyArray<string>;\n            getSourceFile(path: Path): SourceFile | undefined;\n            close(): void;\n            private detachScriptInfoIfNotRoot;\n            isClosed(): boolean;\n            hasRoots(): boolean;\n            getRootFiles(): NormalizedPath[];\n            getRootScriptInfos(): ScriptInfo[];\n            getScriptInfos(): ScriptInfo[];\n            getExcludedFiles(): readonly NormalizedPath[];\n            getFileNames(excludeFilesFromExternalLibraries?: boolean, excludeConfigFiles?: boolean): NormalizedPath[];\n            hasConfigFile(configFilePath: NormalizedPath): boolean;\n            containsScriptInfo(info: ScriptInfo): boolean;\n            containsFile(filename: NormalizedPath, requireOpen?: boolean): boolean;\n            isRoot(info: ScriptInfo): boolean;\n            addRoot(info: ScriptInfo, fileName?: NormalizedPath): void;\n            addMissingFileRoot(fileName: NormalizedPath): void;\n            removeFile(info: ScriptInfo, fileExists: boolean, detachFromProject: boolean): void;\n            registerFileUpdate(fileName: string): void;\n            /**\n             * Updates set of files that contribute to this project\n             * @returns: true if set of files in the project stays the same and false - otherwise.\n             */\n            updateGraph(): boolean;\n            private closeWatchingTypingLocations;\n            private onTypingInstallerWatchInvoke;\n            protected removeExistingTypings(include: string[]): string[];\n            private updateGraphWorker;\n            private detachScriptInfoFromProject;\n            private addMissingFileWatcher;\n            private isWatchedMissingFile;\n            private createGeneratedFileWatcher;\n            private isValidGeneratedFileWatcher;\n            private clearGeneratedFileWatch;\n            getScriptInfoForNormalizedPath(fileName: NormalizedPath): ScriptInfo | undefined;\n            getScriptInfo(uncheckedFileName: string): ScriptInfo | undefined;\n            filesToString(writeProjectFileNames: boolean): string;\n            private filesToStringWorker;\n            setCompilerOptions(compilerOptions: CompilerOptions): void;\n            setTypeAcquisition(newTypeAcquisition: TypeAcquisition | undefined): void;\n            getTypeAcquisition(): TypeAcquisition;\n            protected removeRoot(info: ScriptInfo): void;\n            protected enableGlobalPlugins(options: CompilerOptions): void;\n            protected enablePlugin(pluginConfigEntry: PluginImport, searchPaths: string[]): void;\n            /** Starts a new check for diagnostics. Call this if some file has updated that would cause diagnostics to be changed. */\n            refreshDiagnostics(): void;\n            private isDefaultProjectForOpenFiles;\n        }\n        /**\n         * If a file is opened and no tsconfig (or jsconfig) is found,\n         * the file and its imports/references are put into an InferredProject.\n         */\n        class InferredProject extends Project {\n            private _isJsInferredProject;\n            toggleJsInferredProject(isJsInferredProject: boolean): void;\n            setCompilerOptions(options?: CompilerOptions): void;\n            /** this is canonical project root path */\n            readonly projectRootPath: string | undefined;\n            addRoot(info: ScriptInfo): void;\n            removeRoot(info: ScriptInfo): void;\n            isProjectWithSingleRoot(): boolean;\n            close(): void;\n            getTypeAcquisition(): TypeAcquisition;\n        }\n        class AutoImportProviderProject extends Project {\n            private hostProject;\n            private static readonly maxDependencies;\n            private rootFileNames;\n            updateGraph(): boolean;\n            hasRoots(): boolean;\n            getScriptFileNames(): string[];\n            getLanguageService(): never;\n            getHostForAutoImportProvider(): never;\n            getProjectReferences(): readonly ProjectReference[] | undefined;\n        }\n        /**\n         * If a file is opened, the server will look for a tsconfig (or jsconfig)\n         * and if successful create a ConfiguredProject for it.\n         * Otherwise it will create an InferredProject.\n         */\n        class ConfiguredProject extends Project {\n            readonly canonicalConfigFilePath: NormalizedPath;\n            private projectReferences;\n            private compilerHost?;\n            private releaseParsedConfig;\n            /**\n             * If the project has reload from disk pending, it reloads (and then updates graph as part of that) instead of just updating the graph\n             * @returns: true if set of files in the project stays the same and false - otherwise.\n             */\n            updateGraph(): boolean;\n            getConfigFilePath(): NormalizedPath;\n            getProjectReferences(): readonly ProjectReference[] | undefined;\n            updateReferences(refs: readonly ProjectReference[] | undefined): void;\n            /**\n             * Get the errors that dont have any file name associated\n             */\n            getGlobalProjectErrors(): readonly Diagnostic[];\n            /**\n             * Get all the project errors\n             */\n            getAllProjectErrors(): readonly Diagnostic[];\n            setProjectErrors(projectErrors: Diagnostic[]): void;\n            close(): void;\n            getEffectiveTypeRoots(): string[];\n        }\n        /**\n         * Project whose configuration is handled externally, such as in a \'.csproj\'.\n         * These are created only if a host explicitly calls `openExternalProject`.\n         */\n        class ExternalProject extends Project {\n            externalProjectName: string;\n            compileOnSaveEnabled: boolean;\n            excludedFiles: readonly NormalizedPath[];\n            updateGraph(): boolean;\n            getExcludedFiles(): readonly NormalizedPath[];\n        }\n        function convertFormatOptions(protocolOptions: protocol.FormatCodeSettings): FormatCodeSettings;\n        function convertCompilerOptions(protocolOptions: protocol.ExternalProjectCompilerOptions): CompilerOptions & protocol.CompileOnSaveMixin;\n        function convertWatchOptions(protocolOptions: protocol.ExternalProjectCompilerOptions, currentDirectory?: string): WatchOptionsAndErrors | undefined;\n        function convertTypeAcquisition(protocolOptions: protocol.InferredProjectCompilerOptions): TypeAcquisition | undefined;\n        function tryConvertScriptKindName(scriptKindName: protocol.ScriptKindName | ScriptKind): ScriptKind;\n        function convertScriptKindName(scriptKindName: protocol.ScriptKindName): ScriptKind;\n        const maxProgramSizeForNonTsFiles: number;\n        const ProjectsUpdatedInBackgroundEvent = "projectsUpdatedInBackground";\n        interface ProjectsUpdatedInBackgroundEvent {\n            eventName: typeof ProjectsUpdatedInBackgroundEvent;\n            data: {\n                openFiles: string[];\n            };\n        }\n        const ProjectLoadingStartEvent = "projectLoadingStart";\n        interface ProjectLoadingStartEvent {\n            eventName: typeof ProjectLoadingStartEvent;\n            data: {\n                project: Project;\n                reason: string;\n            };\n        }\n        const ProjectLoadingFinishEvent = "projectLoadingFinish";\n        interface ProjectLoadingFinishEvent {\n            eventName: typeof ProjectLoadingFinishEvent;\n            data: {\n                project: Project;\n            };\n        }\n        const LargeFileReferencedEvent = "largeFileReferenced";\n        interface LargeFileReferencedEvent {\n            eventName: typeof LargeFileReferencedEvent;\n            data: {\n                file: string;\n                fileSize: number;\n                maxFileSize: number;\n            };\n        }\n        const ConfigFileDiagEvent = "configFileDiag";\n        interface ConfigFileDiagEvent {\n            eventName: typeof ConfigFileDiagEvent;\n            data: {\n                triggerFile: string;\n                configFileName: string;\n                diagnostics: readonly Diagnostic[];\n            };\n        }\n        const ProjectLanguageServiceStateEvent = "projectLanguageServiceState";\n        interface ProjectLanguageServiceStateEvent {\n            eventName: typeof ProjectLanguageServiceStateEvent;\n            data: {\n                project: Project;\n                languageServiceEnabled: boolean;\n            };\n        }\n        const ProjectInfoTelemetryEvent = "projectInfo";\n        /** This will be converted to the payload of a protocol.TelemetryEvent in session.defaultEventHandler. */\n        interface ProjectInfoTelemetryEvent {\n            readonly eventName: typeof ProjectInfoTelemetryEvent;\n            readonly data: ProjectInfoTelemetryEventData;\n        }\n        const OpenFileInfoTelemetryEvent = "openFileInfo";\n        /**\n         * Info that we may send about a file that was just opened.\n         * Info about a file will only be sent once per session, even if the file changes in ways that might affect the info.\n         * Currently this is only sent for \'.js\' files.\n         */\n        interface OpenFileInfoTelemetryEvent {\n            readonly eventName: typeof OpenFileInfoTelemetryEvent;\n            readonly data: OpenFileInfoTelemetryEventData;\n        }\n        const CreateFileWatcherEvent: protocol.CreateFileWatcherEventName;\n        interface CreateFileWatcherEvent {\n            readonly eventName: protocol.CreateFileWatcherEventName;\n            readonly data: protocol.CreateFileWatcherEventBody;\n        }\n        const CreateDirectoryWatcherEvent: protocol.CreateDirectoryWatcherEventName;\n        interface CreateDirectoryWatcherEvent {\n            readonly eventName: protocol.CreateDirectoryWatcherEventName;\n            readonly data: protocol.CreateDirectoryWatcherEventBody;\n        }\n        const CloseFileWatcherEvent: protocol.CloseFileWatcherEventName;\n        interface CloseFileWatcherEvent {\n            readonly eventName: protocol.CloseFileWatcherEventName;\n            readonly data: protocol.CloseFileWatcherEventBody;\n        }\n        interface ProjectInfoTelemetryEventData {\n            /** Cryptographically secure hash of project file location. */\n            readonly projectId: string;\n            /** Count of file extensions seen in the project. */\n            readonly fileStats: FileStats;\n            /**\n             * Any compiler options that might contain paths will be taken out.\n             * Enum compiler options will be converted to strings.\n             */\n            readonly compilerOptions: CompilerOptions;\n            readonly extends: boolean | undefined;\n            readonly files: boolean | undefined;\n            readonly include: boolean | undefined;\n            readonly exclude: boolean | undefined;\n            readonly compileOnSave: boolean;\n            readonly typeAcquisition: ProjectInfoTypeAcquisitionData;\n            readonly configFileName: "tsconfig.json" | "jsconfig.json" | "other";\n            readonly projectType: "external" | "configured";\n            readonly languageServiceEnabled: boolean;\n            /** TypeScript version used by the server. */\n            readonly version: string;\n        }\n        interface OpenFileInfoTelemetryEventData {\n            readonly info: OpenFileInfo;\n        }\n        interface ProjectInfoTypeAcquisitionData {\n            readonly enable: boolean | undefined;\n            readonly include: boolean;\n            readonly exclude: boolean;\n        }\n        interface FileStats {\n            readonly js: number;\n            readonly jsSize?: number;\n            readonly jsx: number;\n            readonly jsxSize?: number;\n            readonly ts: number;\n            readonly tsSize?: number;\n            readonly tsx: number;\n            readonly tsxSize?: number;\n            readonly dts: number;\n            readonly dtsSize?: number;\n            readonly deferred: number;\n            readonly deferredSize?: number;\n        }\n        interface OpenFileInfo {\n            readonly checkJs: boolean;\n        }\n        type ProjectServiceEvent = LargeFileReferencedEvent | ProjectsUpdatedInBackgroundEvent | ProjectLoadingStartEvent | ProjectLoadingFinishEvent | ConfigFileDiagEvent | ProjectLanguageServiceStateEvent | ProjectInfoTelemetryEvent | OpenFileInfoTelemetryEvent | CreateFileWatcherEvent | CreateDirectoryWatcherEvent | CloseFileWatcherEvent;\n        type ProjectServiceEventHandler = (event: ProjectServiceEvent) => void;\n        interface SafeList {\n            [name: string]: {\n                match: RegExp;\n                exclude?: (string | number)[][];\n                types?: string[];\n            };\n        }\n        interface TypesMapFile {\n            typesMap: SafeList;\n            simpleMap: {\n                [libName: string]: string;\n            };\n        }\n        interface HostConfiguration {\n            formatCodeOptions: FormatCodeSettings;\n            preferences: protocol.UserPreferences;\n            hostInfo: string;\n            extraFileExtensions?: FileExtensionInfo[];\n            watchOptions?: WatchOptions;\n        }\n        interface OpenConfiguredProjectResult {\n            configFileName?: NormalizedPath;\n            configFileErrors?: readonly Diagnostic[];\n        }\n        const nullTypingsInstaller: ITypingsInstaller;\n        interface ProjectServiceOptions {\n            host: ServerHost;\n            logger: Logger;\n            cancellationToken: HostCancellationToken;\n            useSingleInferredProject: boolean;\n            useInferredProjectPerProjectRoot: boolean;\n            typingsInstaller?: ITypingsInstaller;\n            eventHandler?: ProjectServiceEventHandler;\n            canUseWatchEvents?: boolean;\n            suppressDiagnosticEvents?: boolean;\n            throttleWaitMilliseconds?: number;\n            globalPlugins?: readonly string[];\n            pluginProbeLocations?: readonly string[];\n            allowLocalPluginLoads?: boolean;\n            typesMapLocation?: string;\n            serverMode?: LanguageServiceMode;\n            session: Session<unknown> | undefined;\n            jsDocParsingMode?: JSDocParsingMode;\n        }\n        interface WatchOptionsAndErrors {\n            watchOptions: WatchOptions;\n            errors: Diagnostic[] | undefined;\n        }\n        class ProjectService {\n            private readonly nodeModulesWatchers;\n            private readonly filenameToScriptInfoVersion;\n            private readonly allJsFilesForOpenFileTelemetry;\n            private readonly externalProjectToConfiguredProjectMap;\n            /**\n             * external projects (configuration and list of root files is not controlled by tsserver)\n             */\n            readonly externalProjects: ExternalProject[];\n            /**\n             * projects built from openFileRoots\n             */\n            readonly inferredProjects: InferredProject[];\n            /**\n             * projects specified by a tsconfig.json file\n             */\n            readonly configuredProjects: Map<string, ConfiguredProject>;\n            /**\n             * Open files: with value being project root path, and key being Path of the file that is open\n             */\n            readonly openFiles: Map<Path, NormalizedPath | undefined>;\n            private readonly configFileForOpenFiles;\n            private rootOfInferredProjects;\n            private readonly openFilesWithNonRootedDiskPath;\n            private compilerOptionsForInferredProjects;\n            private compilerOptionsForInferredProjectsPerProjectRoot;\n            private watchOptionsForInferredProjects;\n            private watchOptionsForInferredProjectsPerProjectRoot;\n            private typeAcquisitionForInferredProjects;\n            private typeAcquisitionForInferredProjectsPerProjectRoot;\n            private readonly projectToSizeMap;\n            private readonly hostConfiguration;\n            private safelist;\n            private readonly legacySafelist;\n            private pendingProjectUpdates;\n            private pendingOpenFileProjectUpdates?;\n            readonly currentDirectory: NormalizedPath;\n            readonly toCanonicalFileName: (f: string) => string;\n            readonly host: ServerHost;\n            readonly logger: Logger;\n            readonly cancellationToken: HostCancellationToken;\n            readonly useSingleInferredProject: boolean;\n            readonly useInferredProjectPerProjectRoot: boolean;\n            readonly typingsInstaller: ITypingsInstaller;\n            private readonly globalCacheLocationDirectoryPath;\n            readonly throttleWaitMilliseconds?: number;\n            private readonly suppressDiagnosticEvents?;\n            readonly globalPlugins: readonly string[];\n            readonly pluginProbeLocations: readonly string[];\n            readonly allowLocalPluginLoads: boolean;\n            readonly typesMapLocation: string | undefined;\n            readonly serverMode: LanguageServiceMode;\n            private readonly seenProjects;\n            private readonly sharedExtendedConfigFileWatchers;\n            private readonly extendedConfigCache;\n            private packageJsonFilesMap;\n            private incompleteCompletionsCache;\n            private performanceEventHandler?;\n            private pendingPluginEnablements?;\n            private currentPluginEnablementPromise?;\n            readonly jsDocParsingMode: JSDocParsingMode | undefined;\n            constructor(opts: ProjectServiceOptions);\n            toPath(fileName: string): Path;\n            private loadTypesMap;\n            updateTypingsForProject(response: SetTypings | InvalidateCachedTypings | PackageInstalledResponse): void;\n            private delayUpdateProjectGraph;\n            private delayUpdateProjectGraphs;\n            setCompilerOptionsForInferredProjects(projectCompilerOptions: protocol.InferredProjectCompilerOptions, projectRootPath?: string): void;\n            findProject(projectName: string): Project | undefined;\n            getDefaultProjectForFile(fileName: NormalizedPath, ensureProject: boolean): Project | undefined;\n            private tryGetDefaultProjectForEnsuringConfiguredProjectForFile;\n            private doEnsureDefaultProjectForFile;\n            getScriptInfoEnsuringProjectsUptoDate(uncheckedFileName: string): ScriptInfo | undefined;\n            private ensureProjectStructuresUptoDate;\n            getFormatCodeOptions(file: NormalizedPath): FormatCodeSettings;\n            getPreferences(file: NormalizedPath): protocol.UserPreferences;\n            getHostFormatCodeOptions(): FormatCodeSettings;\n            getHostPreferences(): protocol.UserPreferences;\n            private onSourceFileChanged;\n            private handleSourceMapProjects;\n            private delayUpdateSourceInfoProjects;\n            private delayUpdateProjectsOfScriptInfoPath;\n            private handleDeletedFile;\n            private watchWildcardDirectory;\n            private onWildCardDirectoryWatcherInvoke;\n            private delayUpdateProjectsFromParsedConfigOnConfigFileChange;\n            private onConfigFileChanged;\n            private removeProject;\n            private assignOrphanScriptInfosToInferredProject;\n            private closeOpenFile;\n            private deleteScriptInfo;\n            private configFileExists;\n            private createConfigFileWatcherForParsedConfig;\n            private ensureConfigFileWatcherForProject;\n            private forEachConfigFileLocation;\n            private getConfigFileNameForFileFromCache;\n            private setConfigFileNameForFileInCache;\n            private printProjects;\n            private getConfiguredProjectByCanonicalConfigFilePath;\n            private findExternalProjectByProjectName;\n            private getFilenameForExceededTotalSizeLimitForNonTsFiles;\n            private createExternalProject;\n            private addFilesToNonInferredProject;\n            private loadConfiguredProject;\n            private updateNonInferredProjectFiles;\n            private updateRootAndOptionsOfNonInferredProject;\n            private reloadFileNamesOfParsedConfig;\n            private setProjectForReload;\n            private clearSemanticCache;\n            private getOrCreateInferredProjectForProjectRootPathIfEnabled;\n            private getOrCreateSingleInferredProjectIfEnabled;\n            private getOrCreateSingleInferredWithoutProjectRoot;\n            private createInferredProject;\n            getScriptInfo(uncheckedFileName: string): ScriptInfo | undefined;\n            private watchClosedScriptInfo;\n            private createNodeModulesWatcher;\n            private watchClosedScriptInfoInNodeModules;\n            private getModifiedTime;\n            private refreshScriptInfo;\n            private refreshScriptInfosInDirectory;\n            private stopWatchingScriptInfo;\n            private getOrCreateScriptInfoNotOpenedByClientForNormalizedPath;\n            getOrCreateScriptInfoForNormalizedPath(fileName: NormalizedPath, openedByClient: boolean, fileContent?: string, scriptKind?: ScriptKind, hasMixedContent?: boolean, hostToQueryFileExistsOn?: {\n                fileExists(path: string): boolean;\n            }): ScriptInfo | undefined;\n            private getOrCreateScriptInfoWorker;\n            /**\n             * This gets the script info for the normalized path. If the path is not rooted disk path then the open script info with project root context is preferred\n             */\n            getScriptInfoForNormalizedPath(fileName: NormalizedPath): ScriptInfo | undefined;\n            getScriptInfoForPath(fileName: Path): ScriptInfo | undefined;\n            private addSourceInfoToSourceMap;\n            private addMissingSourceMapFile;\n            setHostConfiguration(args: protocol.ConfigureRequestArguments): void;\n            private getWatchOptionsFromProjectWatchOptions;\n            closeLog(): void;\n            private sendSourceFileChange;\n            /**\n             * This function rebuilds the project for every file opened by the client\n             * This does not reload contents of open files from disk. But we could do that if needed\n             */\n            reloadProjects(): void;\n            private removeRootOfInferredProjectIfNowPartOfOtherProject;\n            private ensureProjectForOpenFiles;\n            /**\n             * Open file whose contents is managed by the client\n             * @param filename is absolute pathname\n             * @param fileContent is a known version of the file content that is more up to date than the one on disk\n             */\n            openClientFile(fileName: string, fileContent?: string, scriptKind?: ScriptKind, projectRootPath?: string): OpenConfiguredProjectResult;\n            private findExternalProjectContainingOpenScriptInfo;\n            private getOrCreateOpenScriptInfo;\n            private assignProjectToOpenedScriptInfo;\n            private tryFindDefaultConfiguredProjectForOpenScriptInfo;\n            private isMatchedByConfig;\n            private tryFindDefaultConfiguredProjectForOpenScriptInfoOrClosedFileInfo;\n            private tryFindDefaultConfiguredProjectAndLoadAncestorsForOpenScriptInfo;\n            private ensureProjectChildren;\n            private cleanupConfiguredProjects;\n            private cleanupProjectsAndScriptInfos;\n            private tryInvokeWildCardDirectories;\n            openClientFileWithNormalizedPath(fileName: NormalizedPath, fileContent?: string, scriptKind?: ScriptKind, hasMixedContent?: boolean, projectRootPath?: NormalizedPath): OpenConfiguredProjectResult;\n            private removeOrphanScriptInfos;\n            private telemetryOnOpenFile;\n            /**\n             * Close file whose contents is managed by the client\n             * @param filename is absolute pathname\n             */\n            closeClientFile(uncheckedFileName: string): void;\n            private collectChanges;\n            closeExternalProject(uncheckedFileName: string): void;\n            openExternalProjects(projects: protocol.ExternalProject[]): void;\n            private static readonly filenameEscapeRegexp;\n            private static escapeFilenameForRegex;\n            resetSafeList(): void;\n            applySafeList(proj: protocol.ExternalProject): NormalizedPath[];\n            private applySafeListWorker;\n            openExternalProject(proj: protocol.ExternalProject): void;\n            hasDeferredExtension(): boolean;\n            private endEnablePlugin;\n            private enableRequestedPluginsAsync;\n            private enableRequestedPluginsWorker;\n            configurePlugin(args: protocol.ConfigurePluginRequestArguments): void;\n            private watchPackageJsonFile;\n            private onPackageJsonChange;\n        }\n        function formatMessage<T extends protocol.Message>(msg: T, logger: Logger, byteLength: (s: string, encoding: BufferEncoding) => number, newLine: string): string;\n        interface ServerCancellationToken extends HostCancellationToken {\n            setRequest(requestId: number): void;\n            resetRequest(requestId: number): void;\n        }\n        const nullCancellationToken: ServerCancellationToken;\n        /** @deprecated use ts.server.protocol.CommandTypes */\n        type CommandNames = protocol.CommandTypes;\n        /** @deprecated use ts.server.protocol.CommandTypes */\n        const CommandNames: any;\n        type Event = <T extends object>(body: T, eventName: string) => void;\n        interface EventSender {\n            event: Event;\n        }\n        interface SessionOptions {\n            host: ServerHost;\n            cancellationToken: ServerCancellationToken;\n            useSingleInferredProject: boolean;\n            useInferredProjectPerProjectRoot: boolean;\n            typingsInstaller?: ITypingsInstaller;\n            byteLength: (buf: string, encoding?: BufferEncoding) => number;\n            hrtime: (start?: [\n                number,\n                number,\n            ]) => [\n                number,\n                number,\n            ];\n            logger: Logger;\n            /**\n             * If falsy, all events are suppressed.\n             */\n            canUseEvents: boolean;\n            canUseWatchEvents?: boolean;\n            eventHandler?: ProjectServiceEventHandler;\n            /** Has no effect if eventHandler is also specified. */\n            suppressDiagnosticEvents?: boolean;\n            serverMode?: LanguageServiceMode;\n            throttleWaitMilliseconds?: number;\n            noGetErrOnBackgroundUpdate?: boolean;\n            globalPlugins?: readonly string[];\n            pluginProbeLocations?: readonly string[];\n            allowLocalPluginLoads?: boolean;\n            typesMapLocation?: string;\n        }\n        class Session<TMessage = string> implements EventSender {\n            private readonly gcTimer;\n            protected projectService: ProjectService;\n            private changeSeq;\n            private performanceData;\n            private currentRequestId;\n            private errorCheck;\n            protected host: ServerHost;\n            private readonly cancellationToken;\n            protected readonly typingsInstaller: ITypingsInstaller;\n            protected byteLength: (buf: string, encoding?: BufferEncoding) => number;\n            private hrtime;\n            protected logger: Logger;\n            protected canUseEvents: boolean;\n            private suppressDiagnosticEvents?;\n            private eventHandler;\n            private readonly noGetErrOnBackgroundUpdate?;\n            constructor(opts: SessionOptions);\n            private sendRequestCompletedEvent;\n            private addPerformanceData;\n            private addDiagnosticsPerformanceData;\n            private performanceEventHandler;\n            private defaultEventHandler;\n            private projectsUpdatedInBackgroundEvent;\n            logError(err: Error, cmd: string): void;\n            private logErrorWorker;\n            send(msg: protocol.Message): void;\n            protected writeMessage(msg: protocol.Message): void;\n            event<T extends object>(body: T, eventName: string): void;\n            private semanticCheck;\n            private syntacticCheck;\n            private suggestionCheck;\n            private regionSemanticCheck;\n            private sendDiagnosticsEvent;\n            private updateErrorCheck;\n            private cleanProjects;\n            private cleanup;\n            private getEncodedSyntacticClassifications;\n            private getEncodedSemanticClassifications;\n            private getProject;\n            private getConfigFileAndProject;\n            private getConfigFileDiagnostics;\n            private convertToDiagnosticsWithLinePositionFromDiagnosticFile;\n            private getCompilerOptionsDiagnostics;\n            private convertToDiagnosticsWithLinePosition;\n            private getDiagnosticsWorker;\n            private getDefinition;\n            private mapDefinitionInfoLocations;\n            private getDefinitionAndBoundSpan;\n            private findSourceDefinition;\n            private getEmitOutput;\n            private mapJSDocTagInfo;\n            private mapDisplayParts;\n            private mapSignatureHelpItems;\n            private mapDefinitionInfo;\n            private static mapToOriginalLocation;\n            private toFileSpan;\n            private toFileSpanWithContext;\n            private getTypeDefinition;\n            private mapImplementationLocations;\n            private getImplementation;\n            private getSyntacticDiagnosticsSync;\n            private getSemanticDiagnosticsSync;\n            private getSuggestionDiagnosticsSync;\n            private getJsxClosingTag;\n            private getLinkedEditingRange;\n            private getDocumentHighlights;\n            private provideInlayHints;\n            private mapCode;\n            private getCopilotRelatedInfo;\n            private setCompilerOptionsForInferredProjects;\n            private getProjectInfo;\n            private getProjectInfoWorker;\n            private getDefaultConfiguredProjectInfo;\n            private getRenameInfo;\n            private getProjects;\n            private getDefaultProject;\n            private getRenameLocations;\n            private mapRenameInfo;\n            private toSpanGroups;\n            private getReferences;\n            private getFileReferences;\n            private openClientFile;\n            private getPosition;\n            private getPositionInFile;\n            private getFileAndProject;\n            private getFileAndLanguageServiceForSyntacticOperation;\n            private getFileAndProjectWorker;\n            private getOutliningSpans;\n            private getTodoComments;\n            private getDocCommentTemplate;\n            private getSpanOfEnclosingComment;\n            private getIndentation;\n            private getBreakpointStatement;\n            private getNameOrDottedNameSpan;\n            private isValidBraceCompletion;\n            private getQuickInfoWorker;\n            private getFormattingEditsForRange;\n            private getFormattingEditsForRangeFull;\n            private getFormattingEditsForDocumentFull;\n            private getFormattingEditsAfterKeystrokeFull;\n            private getFormattingEditsAfterKeystroke;\n            private getCompletions;\n            private getCompletionEntryDetails;\n            private getCompileOnSaveAffectedFileList;\n            private emitFile;\n            private getSignatureHelpItems;\n            private toPendingErrorCheck;\n            private getDiagnostics;\n            private change;\n            private reload;\n            private saveToTmp;\n            private closeClientFile;\n            private mapLocationNavigationBarItems;\n            private getNavigationBarItems;\n            private toLocationNavigationTree;\n            private getNavigationTree;\n            private getNavigateToItems;\n            private getFullNavigateToItems;\n            private getSupportedCodeFixes;\n            private isLocation;\n            private extractPositionOrRange;\n            private getRange;\n            private getApplicableRefactors;\n            private getEditsForRefactor;\n            private getMoveToRefactoringFileSuggestions;\n            private preparePasteEdits;\n            private getPasteEdits;\n            private organizeImports;\n            private getEditsForFileRename;\n            private getCodeFixes;\n            private getCombinedCodeFix;\n            private applyCodeActionCommand;\n            private getStartAndEndPosition;\n            private mapCodeAction;\n            private mapCodeFixAction;\n            private mapPasteEditsAction;\n            private mapTextChangesToCodeEdits;\n            private mapTextChangeToCodeEdit;\n            private convertTextChangeToCodeEdit;\n            private getBraceMatching;\n            private getDiagnosticsForProject;\n            private configurePlugin;\n            private getSmartSelectionRange;\n            private toggleLineComment;\n            private toggleMultilineComment;\n            private commentSelection;\n            private uncommentSelection;\n            private mapSelectionRange;\n            private getScriptInfoFromProjectService;\n            private toProtocolCallHierarchyItem;\n            private toProtocolCallHierarchyIncomingCall;\n            private toProtocolCallHierarchyOutgoingCall;\n            private prepareCallHierarchy;\n            private provideCallHierarchyIncomingCalls;\n            private provideCallHierarchyOutgoingCalls;\n            getCanonicalFileName(fileName: string): string;\n            exit(): void;\n            private notRequired;\n            private requiredResponse;\n            private handlers;\n            addProtocolHandler(command: string, handler: (request: protocol.Request) => HandlerResponse): void;\n            private setCurrentRequest;\n            private resetCurrentRequest;\n            executeWithRequestId<T>(requestId: number, f: () => T): T;\n            executeCommand(request: protocol.Request): HandlerResponse;\n            onMessage(message: TMessage): void;\n            protected parseMessage(message: TMessage): protocol.Request;\n            protected toStringMessage(message: TMessage): string;\n            private getFormatOptions;\n            private getPreferences;\n            private getHostFormatOptions;\n            private getHostPreferences;\n        }\n        interface HandlerResponse {\n            response?: {};\n            responseRequired?: boolean;\n        }\n    }\n    namespace JsTyping {\n        interface TypingResolutionHost {\n            directoryExists(path: string): boolean;\n            fileExists(fileName: string): boolean;\n            readFile(path: string, encoding?: string): string | undefined;\n            readDirectory(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[] | undefined, depth?: number): string[];\n        }\n    }\n    const versionMajorMinor = "5.8";\n    /** The version of the TypeScript compiler release */\n    const version: string;\n    /**\n     * Type of objects whose values are all of the same type.\n     * The `in` and `for-in` operators can *not* be safely used,\n     * since `Object.prototype` may be modified by outside code.\n     */\n    interface MapLike<T> {\n        [index: string]: T;\n    }\n    interface SortedReadonlyArray<T> extends ReadonlyArray<T> {\n        " __sortedArrayBrand": any;\n    }\n    interface SortedArray<T> extends Array<T> {\n        " __sortedArrayBrand": any;\n    }\n    type Path = string & {\n        __pathBrand: any;\n    };\n    interface TextRange {\n        pos: number;\n        end: number;\n    }\n    interface ReadonlyTextRange {\n        readonly pos: number;\n        readonly end: number;\n    }\n    enum SyntaxKind {\n        Unknown = 0,\n        EndOfFileToken = 1,\n        SingleLineCommentTrivia = 2,\n        MultiLineCommentTrivia = 3,\n        NewLineTrivia = 4,\n        WhitespaceTrivia = 5,\n        ShebangTrivia = 6,\n        ConflictMarkerTrivia = 7,\n        NonTextFileMarkerTrivia = 8,\n        NumericLiteral = 9,\n        BigIntLiteral = 10,\n        StringLiteral = 11,\n        JsxText = 12,\n        JsxTextAllWhiteSpaces = 13,\n        RegularExpressionLiteral = 14,\n        NoSubstitutionTemplateLiteral = 15,\n        TemplateHead = 16,\n        TemplateMiddle = 17,\n        TemplateTail = 18,\n        OpenBraceToken = 19,\n        CloseBraceToken = 20,\n        OpenParenToken = 21,\n        CloseParenToken = 22,\n        OpenBracketToken = 23,\n        CloseBracketToken = 24,\n        DotToken = 25,\n        DotDotDotToken = 26,\n        SemicolonToken = 27,\n        CommaToken = 28,\n        QuestionDotToken = 29,\n        LessThanToken = 30,\n        LessThanSlashToken = 31,\n        GreaterThanToken = 32,\n        LessThanEqualsToken = 33,\n        GreaterThanEqualsToken = 34,\n        EqualsEqualsToken = 35,\n        ExclamationEqualsToken = 36,\n        EqualsEqualsEqualsToken = 37,\n        ExclamationEqualsEqualsToken = 38,\n        EqualsGreaterThanToken = 39,\n        PlusToken = 40,\n        MinusToken = 41,\n        AsteriskToken = 42,\n        AsteriskAsteriskToken = 43,\n        SlashToken = 44,\n        PercentToken = 45,\n        PlusPlusToken = 46,\n        MinusMinusToken = 47,\n        LessThanLessThanToken = 48,\n        GreaterThanGreaterThanToken = 49,\n        GreaterThanGreaterThanGreaterThanToken = 50,\n        AmpersandToken = 51,\n        BarToken = 52,\n        CaretToken = 53,\n        ExclamationToken = 54,\n        TildeToken = 55,\n        AmpersandAmpersandToken = 56,\n        BarBarToken = 57,\n        QuestionToken = 58,\n        ColonToken = 59,\n        AtToken = 60,\n        QuestionQuestionToken = 61,\n        /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */\n        BacktickToken = 62,\n        /** Only the JSDoc scanner produces HashToken. The normal scanner produces PrivateIdentifier. */\n        HashToken = 63,\n        EqualsToken = 64,\n        PlusEqualsToken = 65,\n        MinusEqualsToken = 66,\n        AsteriskEqualsToken = 67,\n        AsteriskAsteriskEqualsToken = 68,\n        SlashEqualsToken = 69,\n        PercentEqualsToken = 70,\n        LessThanLessThanEqualsToken = 71,\n        GreaterThanGreaterThanEqualsToken = 72,\n        GreaterThanGreaterThanGreaterThanEqualsToken = 73,\n        AmpersandEqualsToken = 74,\n        BarEqualsToken = 75,\n        BarBarEqualsToken = 76,\n        AmpersandAmpersandEqualsToken = 77,\n        QuestionQuestionEqualsToken = 78,\n        CaretEqualsToken = 79,\n        Identifier = 80,\n        PrivateIdentifier = 81,\n        BreakKeyword = 83,\n        CaseKeyword = 84,\n        CatchKeyword = 85,\n        ClassKeyword = 86,\n        ConstKeyword = 87,\n        ContinueKeyword = 88,\n        DebuggerKeyword = 89,\n        DefaultKeyword = 90,\n        DeleteKeyword = 91,\n        DoKeyword = 92,\n        ElseKeyword = 93,\n        EnumKeyword = 94,\n        ExportKeyword = 95,\n        ExtendsKeyword = 96,\n        FalseKeyword = 97,\n        FinallyKeyword = 98,\n        ForKeyword = 99,\n        FunctionKeyword = 100,\n        IfKeyword = 101,\n        ImportKeyword = 102,\n        InKeyword = 103,\n        InstanceOfKeyword = 104,\n        NewKeyword = 105,\n        NullKeyword = 106,\n        ReturnKeyword = 107,\n        SuperKeyword = 108,\n        SwitchKeyword = 109,\n        ThisKeyword = 110,\n        ThrowKeyword = 111,\n        TrueKeyword = 112,\n        TryKeyword = 113,\n        TypeOfKeyword = 114,\n        VarKeyword = 115,\n        VoidKeyword = 116,\n        WhileKeyword = 117,\n        WithKeyword = 118,\n        ImplementsKeyword = 119,\n        InterfaceKeyword = 120,\n        LetKeyword = 121,\n        PackageKeyword = 122,\n        PrivateKeyword = 123,\n        ProtectedKeyword = 124,\n        PublicKeyword = 125,\n        StaticKeyword = 126,\n        YieldKeyword = 127,\n        AbstractKeyword = 128,\n        AccessorKeyword = 129,\n        AsKeyword = 130,\n        AssertsKeyword = 131,\n        AssertKeyword = 132,\n        AnyKeyword = 133,\n        AsyncKeyword = 134,\n        AwaitKeyword = 135,\n        BooleanKeyword = 136,\n        ConstructorKeyword = 137,\n        DeclareKeyword = 138,\n        GetKeyword = 139,\n        InferKeyword = 140,\n        IntrinsicKeyword = 141,\n        IsKeyword = 142,\n        KeyOfKeyword = 143,\n        ModuleKeyword = 144,\n        NamespaceKeyword = 145,\n        NeverKeyword = 146,\n        OutKeyword = 147,\n        ReadonlyKeyword = 148,\n        RequireKeyword = 149,\n        NumberKeyword = 150,\n        ObjectKeyword = 151,\n        SatisfiesKeyword = 152,\n        SetKeyword = 153,\n        StringKeyword = 154,\n        SymbolKeyword = 155,\n        TypeKeyword = 156,\n        UndefinedKeyword = 157,\n        UniqueKeyword = 158,\n        UnknownKeyword = 159,\n        UsingKeyword = 160,\n        FromKeyword = 161,\n        GlobalKeyword = 162,\n        BigIntKeyword = 163,\n        OverrideKeyword = 164,\n        OfKeyword = 165,\n        QualifiedName = 166,\n        ComputedPropertyName = 167,\n        TypeParameter = 168,\n        Parameter = 169,\n        Decorator = 170,\n        PropertySignature = 171,\n        PropertyDeclaration = 172,\n        MethodSignature = 173,\n        MethodDeclaration = 174,\n        ClassStaticBlockDeclaration = 175,\n        Constructor = 176,\n        GetAccessor = 177,\n        SetAccessor = 178,\n        CallSignature = 179,\n        ConstructSignature = 180,\n        IndexSignature = 181,\n        TypePredicate = 182,\n        TypeReference = 183,\n        FunctionType = 184,\n        ConstructorType = 185,\n        TypeQuery = 186,\n        TypeLiteral = 187,\n        ArrayType = 188,\n        TupleType = 189,\n        OptionalType = 190,\n        RestType = 191,\n        UnionType = 192,\n        IntersectionType = 193,\n        ConditionalType = 194,\n        InferType = 195,\n        ParenthesizedType = 196,\n        ThisType = 197,\n        TypeOperator = 198,\n        IndexedAccessType = 199,\n        MappedType = 200,\n        LiteralType = 201,\n        NamedTupleMember = 202,\n        TemplateLiteralType = 203,\n        TemplateLiteralTypeSpan = 204,\n        ImportType = 205,\n        ObjectBindingPattern = 206,\n        ArrayBindingPattern = 207,\n        BindingElement = 208,\n        ArrayLiteralExpression = 209,\n        ObjectLiteralExpression = 210,\n        PropertyAccessExpression = 211,\n        ElementAccessExpression = 212,\n        CallExpression = 213,\n        NewExpression = 214,\n        TaggedTemplateExpression = 215,\n        TypeAssertionExpression = 216,\n        ParenthesizedExpression = 217,\n        FunctionExpression = 218,\n        ArrowFunction = 219,\n        DeleteExpression = 220,\n        TypeOfExpression = 221,\n        VoidExpression = 222,\n        AwaitExpression = 223,\n        PrefixUnaryExpression = 224,\n        PostfixUnaryExpression = 225,\n        BinaryExpression = 226,\n        ConditionalExpression = 227,\n        TemplateExpression = 228,\n        YieldExpression = 229,\n        SpreadElement = 230,\n        ClassExpression = 231,\n        OmittedExpression = 232,\n        ExpressionWithTypeArguments = 233,\n        AsExpression = 234,\n        NonNullExpression = 235,\n        MetaProperty = 236,\n        SyntheticExpression = 237,\n        SatisfiesExpression = 238,\n        TemplateSpan = 239,\n        SemicolonClassElement = 240,\n        Block = 241,\n        EmptyStatement = 242,\n        VariableStatement = 243,\n        ExpressionStatement = 244,\n        IfStatement = 245,\n        DoStatement = 246,\n        WhileStatement = 247,\n        ForStatement = 248,\n        ForInStatement = 249,\n        ForOfStatement = 250,\n        ContinueStatement = 251,\n        BreakStatement = 252,\n        ReturnStatement = 253,\n        WithStatement = 254,\n        SwitchStatement = 255,\n        LabeledStatement = 256,\n        ThrowStatement = 257,\n        TryStatement = 258,\n        DebuggerStatement = 259,\n        VariableDeclaration = 260,\n        VariableDeclarationList = 261,\n        FunctionDeclaration = 262,\n        ClassDeclaration = 263,\n        InterfaceDeclaration = 264,\n        TypeAliasDeclaration = 265,\n        EnumDeclaration = 266,\n        ModuleDeclaration = 267,\n        ModuleBlock = 268,\n        CaseBlock = 269,\n        NamespaceExportDeclaration = 270,\n        ImportEqualsDeclaration = 271,\n        ImportDeclaration = 272,\n        ImportClause = 273,\n        NamespaceImport = 274,\n        NamedImports = 275,\n        ImportSpecifier = 276,\n        ExportAssignment = 277,\n        ExportDeclaration = 278,\n        NamedExports = 279,\n        NamespaceExport = 280,\n        ExportSpecifier = 281,\n        MissingDeclaration = 282,\n        ExternalModuleReference = 283,\n        JsxElement = 284,\n        JsxSelfClosingElement = 285,\n        JsxOpeningElement = 286,\n        JsxClosingElement = 287,\n        JsxFragment = 288,\n        JsxOpeningFragment = 289,\n        JsxClosingFragment = 290,\n        JsxAttribute = 291,\n        JsxAttributes = 292,\n        JsxSpreadAttribute = 293,\n        JsxExpression = 294,\n        JsxNamespacedName = 295,\n        CaseClause = 296,\n        DefaultClause = 297,\n        HeritageClause = 298,\n        CatchClause = 299,\n        ImportAttributes = 300,\n        ImportAttribute = 301,\n        /** @deprecated */ AssertClause = 300,\n        /** @deprecated */ AssertEntry = 301,\n        /** @deprecated */ ImportTypeAssertionContainer = 302,\n        PropertyAssignment = 303,\n        ShorthandPropertyAssignment = 304,\n        SpreadAssignment = 305,\n        EnumMember = 306,\n        SourceFile = 307,\n        Bundle = 308,\n        JSDocTypeExpression = 309,\n        JSDocNameReference = 310,\n        JSDocMemberName = 311,\n        JSDocAllType = 312,\n        JSDocUnknownType = 313,\n        JSDocNullableType = 314,\n        JSDocNonNullableType = 315,\n        JSDocOptionalType = 316,\n        JSDocFunctionType = 317,\n        JSDocVariadicType = 318,\n        JSDocNamepathType = 319,\n        JSDoc = 320,\n        /** @deprecated Use SyntaxKind.JSDoc */\n        JSDocComment = 320,\n        JSDocText = 321,\n        JSDocTypeLiteral = 322,\n        JSDocSignature = 323,\n        JSDocLink = 324,\n        JSDocLinkCode = 325,\n        JSDocLinkPlain = 326,\n        JSDocTag = 327,\n        JSDocAugmentsTag = 328,\n        JSDocImplementsTag = 329,\n        JSDocAuthorTag = 330,\n        JSDocDeprecatedTag = 331,\n        JSDocClassTag = 332,\n        JSDocPublicTag = 333,\n        JSDocPrivateTag = 334,\n        JSDocProtectedTag = 335,\n        JSDocReadonlyTag = 336,\n        JSDocOverrideTag = 337,\n        JSDocCallbackTag = 338,\n        JSDocOverloadTag = 339,\n        JSDocEnumTag = 340,\n        JSDocParameterTag = 341,\n        JSDocReturnTag = 342,\n        JSDocThisTag = 343,\n        JSDocTypeTag = 344,\n        JSDocTemplateTag = 345,\n        JSDocTypedefTag = 346,\n        JSDocSeeTag = 347,\n        JSDocPropertyTag = 348,\n        JSDocThrowsTag = 349,\n        JSDocSatisfiesTag = 350,\n        JSDocImportTag = 351,\n        SyntaxList = 352,\n        NotEmittedStatement = 353,\n        NotEmittedTypeElement = 354,\n        PartiallyEmittedExpression = 355,\n        CommaListExpression = 356,\n        SyntheticReferenceExpression = 357,\n        Count = 358,\n        FirstAssignment = 64,\n        LastAssignment = 79,\n        FirstCompoundAssignment = 65,\n        LastCompoundAssignment = 79,\n        FirstReservedWord = 83,\n        LastReservedWord = 118,\n        FirstKeyword = 83,\n        LastKeyword = 165,\n        FirstFutureReservedWord = 119,\n        LastFutureReservedWord = 127,\n        FirstTypeNode = 182,\n        LastTypeNode = 205,\n        FirstPunctuation = 19,\n        LastPunctuation = 79,\n        FirstToken = 0,\n        LastToken = 165,\n        FirstTriviaToken = 2,\n        LastTriviaToken = 7,\n        FirstLiteralToken = 9,\n        LastLiteralToken = 15,\n        FirstTemplateToken = 15,\n        LastTemplateToken = 18,\n        FirstBinaryOperator = 30,\n        LastBinaryOperator = 79,\n        FirstStatement = 243,\n        LastStatement = 259,\n        FirstNode = 166,\n        FirstJSDocNode = 309,\n        LastJSDocNode = 351,\n        FirstJSDocTagNode = 327,\n        LastJSDocTagNode = 351,\n    }\n    type TriviaSyntaxKind = SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia | SyntaxKind.NewLineTrivia | SyntaxKind.WhitespaceTrivia | SyntaxKind.ShebangTrivia | SyntaxKind.ConflictMarkerTrivia;\n    type LiteralSyntaxKind = SyntaxKind.NumericLiteral | SyntaxKind.BigIntLiteral | SyntaxKind.StringLiteral | SyntaxKind.JsxText | SyntaxKind.JsxTextAllWhiteSpaces | SyntaxKind.RegularExpressionLiteral | SyntaxKind.NoSubstitutionTemplateLiteral;\n    type PseudoLiteralSyntaxKind = SyntaxKind.TemplateHead | SyntaxKind.TemplateMiddle | SyntaxKind.TemplateTail;\n    type PunctuationSyntaxKind =\n        | SyntaxKind.OpenBraceToken\n        | SyntaxKind.CloseBraceToken\n        | SyntaxKind.OpenParenToken\n        | SyntaxKind.CloseParenToken\n        | SyntaxKind.OpenBracketToken\n        | SyntaxKind.CloseBracketToken\n        | SyntaxKind.DotToken\n        | SyntaxKind.DotDotDotToken\n        | SyntaxKind.SemicolonToken\n        | SyntaxKind.CommaToken\n        | SyntaxKind.QuestionDotToken\n        | SyntaxKind.LessThanToken\n        | SyntaxKind.LessThanSlashToken\n        | SyntaxKind.GreaterThanToken\n        | SyntaxKind.LessThanEqualsToken\n        | SyntaxKind.GreaterThanEqualsToken\n        | SyntaxKind.EqualsEqualsToken\n        | SyntaxKind.ExclamationEqualsToken\n        | SyntaxKind.EqualsEqualsEqualsToken\n        | SyntaxKind.ExclamationEqualsEqualsToken\n        | SyntaxKind.EqualsGreaterThanToken\n        | SyntaxKind.PlusToken\n        | SyntaxKind.MinusToken\n        | SyntaxKind.AsteriskToken\n        | SyntaxKind.AsteriskAsteriskToken\n        | SyntaxKind.SlashToken\n        | SyntaxKind.PercentToken\n        | SyntaxKind.PlusPlusToken\n        | SyntaxKind.MinusMinusToken\n        | SyntaxKind.LessThanLessThanToken\n        | SyntaxKind.GreaterThanGreaterThanToken\n        | SyntaxKind.GreaterThanGreaterThanGreaterThanToken\n        | SyntaxKind.AmpersandToken\n        | SyntaxKind.BarToken\n        | SyntaxKind.CaretToken\n        | SyntaxKind.ExclamationToken\n        | SyntaxKind.TildeToken\n        | SyntaxKind.AmpersandAmpersandToken\n        | SyntaxKind.AmpersandAmpersandEqualsToken\n        | SyntaxKind.BarBarToken\n        | SyntaxKind.BarBarEqualsToken\n        | SyntaxKind.QuestionQuestionToken\n        | SyntaxKind.QuestionQuestionEqualsToken\n        | SyntaxKind.QuestionToken\n        | SyntaxKind.ColonToken\n        | SyntaxKind.AtToken\n        | SyntaxKind.BacktickToken\n        | SyntaxKind.HashToken\n        | SyntaxKind.EqualsToken\n        | SyntaxKind.PlusEqualsToken\n        | SyntaxKind.MinusEqualsToken\n        | SyntaxKind.AsteriskEqualsToken\n        | SyntaxKind.AsteriskAsteriskEqualsToken\n        | SyntaxKind.SlashEqualsToken\n        | SyntaxKind.PercentEqualsToken\n        | SyntaxKind.LessThanLessThanEqualsToken\n        | SyntaxKind.GreaterThanGreaterThanEqualsToken\n        | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken\n        | SyntaxKind.AmpersandEqualsToken\n        | SyntaxKind.BarEqualsToken\n        | SyntaxKind.CaretEqualsToken;\n    type KeywordSyntaxKind =\n        | SyntaxKind.AbstractKeyword\n        | SyntaxKind.AccessorKeyword\n        | SyntaxKind.AnyKeyword\n        | SyntaxKind.AsKeyword\n        | SyntaxKind.AssertsKeyword\n        | SyntaxKind.AssertKeyword\n        | SyntaxKind.AsyncKeyword\n        | SyntaxKind.AwaitKeyword\n        | SyntaxKind.BigIntKeyword\n        | SyntaxKind.BooleanKeyword\n        | SyntaxKind.BreakKeyword\n        | SyntaxKind.CaseKeyword\n        | SyntaxKind.CatchKeyword\n        | SyntaxKind.ClassKeyword\n        | SyntaxKind.ConstKeyword\n        | SyntaxKind.ConstructorKeyword\n        | SyntaxKind.ContinueKeyword\n        | SyntaxKind.DebuggerKeyword\n        | SyntaxKind.DeclareKeyword\n        | SyntaxKind.DefaultKeyword\n        | SyntaxKind.DeleteKeyword\n        | SyntaxKind.DoKeyword\n        | SyntaxKind.ElseKeyword\n        | SyntaxKind.EnumKeyword\n        | SyntaxKind.ExportKeyword\n        | SyntaxKind.ExtendsKeyword\n        | SyntaxKind.FalseKeyword\n        | SyntaxKind.FinallyKeyword\n        | SyntaxKind.ForKeyword\n        | SyntaxKind.FromKeyword\n        | SyntaxKind.FunctionKeyword\n        | SyntaxKind.GetKeyword\n        | SyntaxKind.GlobalKeyword\n        | SyntaxKind.IfKeyword\n        | SyntaxKind.ImplementsKeyword\n        | SyntaxKind.ImportKeyword\n        | SyntaxKind.InferKeyword\n        | SyntaxKind.InKeyword\n        | SyntaxKind.InstanceOfKeyword\n        | SyntaxKind.InterfaceKeyword\n        | SyntaxKind.IntrinsicKeyword\n        | SyntaxKind.IsKeyword\n        | SyntaxKind.KeyOfKeyword\n        | SyntaxKind.LetKeyword\n        | SyntaxKind.ModuleKeyword\n        | SyntaxKind.NamespaceKeyword\n        | SyntaxKind.NeverKeyword\n        | SyntaxKind.NewKeyword\n        | SyntaxKind.NullKeyword\n        | SyntaxKind.NumberKeyword\n        | SyntaxKind.ObjectKeyword\n        | SyntaxKind.OfKeyword\n        | SyntaxKind.PackageKeyword\n        | SyntaxKind.PrivateKeyword\n        | SyntaxKind.ProtectedKeyword\n        | SyntaxKind.PublicKeyword\n        | SyntaxKind.ReadonlyKeyword\n        | SyntaxKind.OutKeyword\n        | SyntaxKind.OverrideKeyword\n        | SyntaxKind.RequireKeyword\n        | SyntaxKind.ReturnKeyword\n        | SyntaxKind.SatisfiesKeyword\n        | SyntaxKind.SetKeyword\n        | SyntaxKind.StaticKeyword\n        | SyntaxKind.StringKeyword\n        | SyntaxKind.SuperKeyword\n        | SyntaxKind.SwitchKeyword\n        | SyntaxKind.SymbolKeyword\n        | SyntaxKind.ThisKeyword\n        | SyntaxKind.ThrowKeyword\n        | SyntaxKind.TrueKeyword\n        | SyntaxKind.TryKeyword\n        | SyntaxKind.TypeKeyword\n        | SyntaxKind.TypeOfKeyword\n        | SyntaxKind.UndefinedKeyword\n        | SyntaxKind.UniqueKeyword\n        | SyntaxKind.UnknownKeyword\n        | SyntaxKind.UsingKeyword\n        | SyntaxKind.VarKeyword\n        | SyntaxKind.VoidKeyword\n        | SyntaxKind.WhileKeyword\n        | SyntaxKind.WithKeyword\n        | SyntaxKind.YieldKeyword;\n    type ModifierSyntaxKind = SyntaxKind.AbstractKeyword | SyntaxKind.AccessorKeyword | SyntaxKind.AsyncKeyword | SyntaxKind.ConstKeyword | SyntaxKind.DeclareKeyword | SyntaxKind.DefaultKeyword | SyntaxKind.ExportKeyword | SyntaxKind.InKeyword | SyntaxKind.PrivateKeyword | SyntaxKind.ProtectedKeyword | SyntaxKind.PublicKeyword | SyntaxKind.ReadonlyKeyword | SyntaxKind.OutKeyword | SyntaxKind.OverrideKeyword | SyntaxKind.StaticKeyword;\n    type KeywordTypeSyntaxKind = SyntaxKind.AnyKeyword | SyntaxKind.BigIntKeyword | SyntaxKind.BooleanKeyword | SyntaxKind.IntrinsicKeyword | SyntaxKind.NeverKeyword | SyntaxKind.NumberKeyword | SyntaxKind.ObjectKeyword | SyntaxKind.StringKeyword | SyntaxKind.SymbolKeyword | SyntaxKind.UndefinedKeyword | SyntaxKind.UnknownKeyword | SyntaxKind.VoidKeyword;\n    type TokenSyntaxKind = SyntaxKind.Unknown | SyntaxKind.EndOfFileToken | TriviaSyntaxKind | LiteralSyntaxKind | PseudoLiteralSyntaxKind | PunctuationSyntaxKind | SyntaxKind.Identifier | KeywordSyntaxKind;\n    type JsxTokenSyntaxKind = SyntaxKind.LessThanSlashToken | SyntaxKind.EndOfFileToken | SyntaxKind.ConflictMarkerTrivia | SyntaxKind.JsxText | SyntaxKind.JsxTextAllWhiteSpaces | SyntaxKind.OpenBraceToken | SyntaxKind.LessThanToken;\n    type JSDocSyntaxKind = SyntaxKind.EndOfFileToken | SyntaxKind.WhitespaceTrivia | SyntaxKind.AtToken | SyntaxKind.NewLineTrivia | SyntaxKind.AsteriskToken | SyntaxKind.OpenBraceToken | SyntaxKind.CloseBraceToken | SyntaxKind.LessThanToken | SyntaxKind.GreaterThanToken | SyntaxKind.OpenBracketToken | SyntaxKind.CloseBracketToken | SyntaxKind.OpenParenToken | SyntaxKind.CloseParenToken | SyntaxKind.EqualsToken | SyntaxKind.CommaToken | SyntaxKind.DotToken | SyntaxKind.Identifier | SyntaxKind.BacktickToken | SyntaxKind.HashToken | SyntaxKind.Unknown | KeywordSyntaxKind;\n    enum NodeFlags {\n        None = 0,\n        Let = 1,\n        Const = 2,\n        Using = 4,\n        AwaitUsing = 6,\n        NestedNamespace = 8,\n        Synthesized = 16,\n        Namespace = 32,\n        OptionalChain = 64,\n        ExportContext = 128,\n        ContainsThis = 256,\n        HasImplicitReturn = 512,\n        HasExplicitReturn = 1024,\n        GlobalAugmentation = 2048,\n        HasAsyncFunctions = 4096,\n        DisallowInContext = 8192,\n        YieldContext = 16384,\n        DecoratorContext = 32768,\n        AwaitContext = 65536,\n        DisallowConditionalTypesContext = 131072,\n        ThisNodeHasError = 262144,\n        JavaScriptFile = 524288,\n        ThisNodeOrAnySubNodesHasError = 1048576,\n        HasAggregatedChildData = 2097152,\n        JSDoc = 16777216,\n        JsonFile = 134217728,\n        BlockScoped = 7,\n        Constant = 6,\n        ReachabilityCheckFlags = 1536,\n        ReachabilityAndEmitFlags = 5632,\n        ContextFlags = 101441536,\n        TypeExcludesFlags = 81920,\n    }\n    enum ModifierFlags {\n        None = 0,\n        Public = 1,\n        Private = 2,\n        Protected = 4,\n        Readonly = 8,\n        Override = 16,\n        Export = 32,\n        Abstract = 64,\n        Ambient = 128,\n        Static = 256,\n        Accessor = 512,\n        Async = 1024,\n        Default = 2048,\n        Const = 4096,\n        In = 8192,\n        Out = 16384,\n        Decorator = 32768,\n        Deprecated = 65536,\n        HasComputedJSDocModifiers = 268435456,\n        HasComputedFlags = 536870912,\n        AccessibilityModifier = 7,\n        ParameterPropertyModifier = 31,\n        NonPublicAccessibilityModifier = 6,\n        TypeScriptModifier = 28895,\n        ExportDefault = 2080,\n        All = 131071,\n        Modifier = 98303,\n    }\n    enum JsxFlags {\n        None = 0,\n        /** An element from a named property of the JSX.IntrinsicElements interface */\n        IntrinsicNamedElement = 1,\n        /** An element inferred from the string index signature of the JSX.IntrinsicElements interface */\n        IntrinsicIndexedElement = 2,\n        IntrinsicElement = 3,\n    }\n    interface Node extends ReadonlyTextRange {\n        readonly kind: SyntaxKind;\n        readonly flags: NodeFlags;\n        readonly parent: Node;\n    }\n    interface Node {\n        getSourceFile(): SourceFile;\n        getChildCount(sourceFile?: SourceFile): number;\n        getChildAt(index: number, sourceFile?: SourceFile): Node;\n        getChildren(sourceFile?: SourceFile): readonly Node[];\n        getStart(sourceFile?: SourceFile, includeJsDocComment?: boolean): number;\n        getFullStart(): number;\n        getEnd(): number;\n        getWidth(sourceFile?: SourceFileLike): number;\n        getFullWidth(): number;\n        getLeadingTriviaWidth(sourceFile?: SourceFile): number;\n        getFullText(sourceFile?: SourceFile): string;\n        getText(sourceFile?: SourceFile): string;\n        getFirstToken(sourceFile?: SourceFile): Node | undefined;\n        getLastToken(sourceFile?: SourceFile): Node | undefined;\n        forEachChild<T>(cbNode: (node: Node) => T | undefined, cbNodeArray?: (nodes: NodeArray<Node>) => T | undefined): T | undefined;\n    }\n    interface JSDocContainer extends Node {\n        _jsdocContainerBrand: any;\n    }\n    interface LocalsContainer extends Node {\n        _localsContainerBrand: any;\n    }\n    interface FlowContainer extends Node {\n        _flowContainerBrand: any;\n    }\n    type HasJSDoc =\n        | AccessorDeclaration\n        | ArrowFunction\n        | BinaryExpression\n        | Block\n        | BreakStatement\n        | CallSignatureDeclaration\n        | CaseClause\n        | ClassLikeDeclaration\n        | ClassStaticBlockDeclaration\n        | ConstructorDeclaration\n        | ConstructorTypeNode\n        | ConstructSignatureDeclaration\n        | ContinueStatement\n        | DebuggerStatement\n        | DoStatement\n        | ElementAccessExpression\n        | EmptyStatement\n        | EndOfFileToken\n        | EnumDeclaration\n        | EnumMember\n        | ExportAssignment\n        | ExportDeclaration\n        | ExportSpecifier\n        | ExpressionStatement\n        | ForInStatement\n        | ForOfStatement\n        | ForStatement\n        | FunctionDeclaration\n        | FunctionExpression\n        | FunctionTypeNode\n        | Identifier\n        | IfStatement\n        | ImportDeclaration\n        | ImportEqualsDeclaration\n        | IndexSignatureDeclaration\n        | InterfaceDeclaration\n        | JSDocFunctionType\n        | JSDocSignature\n        | LabeledStatement\n        | MethodDeclaration\n        | MethodSignature\n        | ModuleDeclaration\n        | NamedTupleMember\n        | NamespaceExportDeclaration\n        | ObjectLiteralExpression\n        | ParameterDeclaration\n        | ParenthesizedExpression\n        | PropertyAccessExpression\n        | PropertyAssignment\n        | PropertyDeclaration\n        | PropertySignature\n        | ReturnStatement\n        | SemicolonClassElement\n        | ShorthandPropertyAssignment\n        | SpreadAssignment\n        | SwitchStatement\n        | ThrowStatement\n        | TryStatement\n        | TypeAliasDeclaration\n        | TypeParameterDeclaration\n        | VariableDeclaration\n        | VariableStatement\n        | WhileStatement\n        | WithStatement;\n    type HasType = SignatureDeclaration | VariableDeclaration | ParameterDeclaration | PropertySignature | PropertyDeclaration | TypePredicateNode | ParenthesizedTypeNode | TypeOperatorNode | MappedTypeNode | AssertionExpression | TypeAliasDeclaration | JSDocTypeExpression | JSDocNonNullableType | JSDocNullableType | JSDocOptionalType | JSDocVariadicType;\n    type HasTypeArguments = CallExpression | NewExpression | TaggedTemplateExpression | JsxOpeningElement | JsxSelfClosingElement;\n    type HasInitializer = HasExpressionInitializer | ForStatement | ForInStatement | ForOfStatement | JsxAttribute;\n    type HasExpressionInitializer = VariableDeclaration | ParameterDeclaration | BindingElement | PropertyDeclaration | PropertyAssignment | EnumMember;\n    type HasDecorators = ParameterDeclaration | PropertyDeclaration | MethodDeclaration | GetAccessorDeclaration | SetAccessorDeclaration | ClassExpression | ClassDeclaration;\n    type HasModifiers = TypeParameterDeclaration | ParameterDeclaration | ConstructorTypeNode | PropertySignature | PropertyDeclaration | MethodSignature | MethodDeclaration | ConstructorDeclaration | GetAccessorDeclaration | SetAccessorDeclaration | IndexSignatureDeclaration | FunctionExpression | ArrowFunction | ClassExpression | VariableStatement | FunctionDeclaration | ClassDeclaration | InterfaceDeclaration | TypeAliasDeclaration | EnumDeclaration | ModuleDeclaration | ImportEqualsDeclaration | ImportDeclaration | ExportAssignment | ExportDeclaration;\n    interface NodeArray<T extends Node> extends ReadonlyArray<T>, ReadonlyTextRange {\n        readonly hasTrailingComma: boolean;\n    }\n    interface Token<TKind extends SyntaxKind> extends Node {\n        readonly kind: TKind;\n    }\n    type EndOfFileToken = Token<SyntaxKind.EndOfFileToken> & JSDocContainer;\n    interface PunctuationToken<TKind extends PunctuationSyntaxKind> extends Token<TKind> {\n    }\n    type DotToken = PunctuationToken<SyntaxKind.DotToken>;\n    type DotDotDotToken = PunctuationToken<SyntaxKind.DotDotDotToken>;\n    type QuestionToken = PunctuationToken<SyntaxKind.QuestionToken>;\n    type ExclamationToken = PunctuationToken<SyntaxKind.ExclamationToken>;\n    type ColonToken = PunctuationToken<SyntaxKind.ColonToken>;\n    type EqualsToken = PunctuationToken<SyntaxKind.EqualsToken>;\n    type AmpersandAmpersandEqualsToken = PunctuationToken<SyntaxKind.AmpersandAmpersandEqualsToken>;\n    type BarBarEqualsToken = PunctuationToken<SyntaxKind.BarBarEqualsToken>;\n    type QuestionQuestionEqualsToken = PunctuationToken<SyntaxKind.QuestionQuestionEqualsToken>;\n    type AsteriskToken = PunctuationToken<SyntaxKind.AsteriskToken>;\n    type EqualsGreaterThanToken = PunctuationToken<SyntaxKind.EqualsGreaterThanToken>;\n    type PlusToken = PunctuationToken<SyntaxKind.PlusToken>;\n    type MinusToken = PunctuationToken<SyntaxKind.MinusToken>;\n    type QuestionDotToken = PunctuationToken<SyntaxKind.QuestionDotToken>;\n    interface KeywordToken<TKind extends KeywordSyntaxKind> extends Token<TKind> {\n    }\n    type AssertsKeyword = KeywordToken<SyntaxKind.AssertsKeyword>;\n    type AssertKeyword = KeywordToken<SyntaxKind.AssertKeyword>;\n    type AwaitKeyword = KeywordToken<SyntaxKind.AwaitKeyword>;\n    type CaseKeyword = KeywordToken<SyntaxKind.CaseKeyword>;\n    interface ModifierToken<TKind extends ModifierSyntaxKind> extends KeywordToken<TKind> {\n    }\n    type AbstractKeyword = ModifierToken<SyntaxKind.AbstractKeyword>;\n    type AccessorKeyword = ModifierToken<SyntaxKind.AccessorKeyword>;\n    type AsyncKeyword = ModifierToken<SyntaxKind.AsyncKeyword>;\n    type ConstKeyword = ModifierToken<SyntaxKind.ConstKeyword>;\n    type DeclareKeyword = ModifierToken<SyntaxKind.DeclareKeyword>;\n    type DefaultKeyword = ModifierToken<SyntaxKind.DefaultKeyword>;\n    type ExportKeyword = ModifierToken<SyntaxKind.ExportKeyword>;\n    type InKeyword = ModifierToken<SyntaxKind.InKeyword>;\n    type PrivateKeyword = ModifierToken<SyntaxKind.PrivateKeyword>;\n    type ProtectedKeyword = ModifierToken<SyntaxKind.ProtectedKeyword>;\n    type PublicKeyword = ModifierToken<SyntaxKind.PublicKeyword>;\n    type ReadonlyKeyword = ModifierToken<SyntaxKind.ReadonlyKeyword>;\n    type OutKeyword = ModifierToken<SyntaxKind.OutKeyword>;\n    type OverrideKeyword = ModifierToken<SyntaxKind.OverrideKeyword>;\n    type StaticKeyword = ModifierToken<SyntaxKind.StaticKeyword>;\n    type Modifier = AbstractKeyword | AccessorKeyword | AsyncKeyword | ConstKeyword | DeclareKeyword | DefaultKeyword | ExportKeyword | InKeyword | PrivateKeyword | ProtectedKeyword | PublicKeyword | OutKeyword | OverrideKeyword | ReadonlyKeyword | StaticKeyword;\n    type ModifierLike = Modifier | Decorator;\n    type AccessibilityModifier = PublicKeyword | PrivateKeyword | ProtectedKeyword;\n    type ParameterPropertyModifier = AccessibilityModifier | ReadonlyKeyword;\n    type ClassMemberModifier = AccessibilityModifier | ReadonlyKeyword | StaticKeyword | AccessorKeyword;\n    type ModifiersArray = NodeArray<Modifier>;\n    enum GeneratedIdentifierFlags {\n        None = 0,\n        ReservedInNestedScopes = 8,\n        Optimistic = 16,\n        FileLevel = 32,\n        AllowNameSubstitution = 64,\n    }\n    interface Identifier extends PrimaryExpression, Declaration, JSDocContainer, FlowContainer {\n        readonly kind: SyntaxKind.Identifier;\n        /**\n         * Prefer to use `id.unescapedText`. (Note: This is available only in services, not internally to the TypeScript compiler.)\n         * Text of identifier, but if the identifier begins with two underscores, this will begin with three.\n         */\n        readonly escapedText: __String;\n    }\n    interface Identifier {\n        readonly text: string;\n    }\n    interface TransientIdentifier extends Identifier {\n        resolvedSymbol: Symbol;\n    }\n    interface QualifiedName extends Node, FlowContainer {\n        readonly kind: SyntaxKind.QualifiedName;\n        readonly left: EntityName;\n        readonly right: Identifier;\n    }\n    type EntityName = Identifier | QualifiedName;\n    type PropertyName = Identifier | StringLiteral | NoSubstitutionTemplateLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier | BigIntLiteral;\n    type MemberName = Identifier | PrivateIdentifier;\n    type DeclarationName = PropertyName | JsxAttributeName | StringLiteralLike | ElementAccessExpression | BindingPattern | EntityNameExpression;\n    interface Declaration extends Node {\n        _declarationBrand: any;\n    }\n    interface NamedDeclaration extends Declaration {\n        readonly name?: DeclarationName;\n    }\n    interface DeclarationStatement extends NamedDeclaration, Statement {\n        readonly name?: Identifier | StringLiteral | NumericLiteral;\n    }\n    interface ComputedPropertyName extends Node {\n        readonly kind: SyntaxKind.ComputedPropertyName;\n        readonly parent: Declaration;\n        readonly expression: Expression;\n    }\n    interface PrivateIdentifier extends PrimaryExpression {\n        readonly kind: SyntaxKind.PrivateIdentifier;\n        readonly escapedText: __String;\n    }\n    interface PrivateIdentifier {\n        readonly text: string;\n    }\n    interface Decorator extends Node {\n        readonly kind: SyntaxKind.Decorator;\n        readonly parent: NamedDeclaration;\n        readonly expression: LeftHandSideExpression;\n    }\n    interface TypeParameterDeclaration extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.TypeParameter;\n        readonly parent: DeclarationWithTypeParameterChildren | InferTypeNode;\n        readonly modifiers?: NodeArray<Modifier>;\n        readonly name: Identifier;\n        /** Note: Consider calling `getEffectiveConstraintOfTypeParameter` */\n        readonly constraint?: TypeNode;\n        readonly default?: TypeNode;\n        expression?: Expression;\n    }\n    interface SignatureDeclarationBase extends NamedDeclaration, JSDocContainer {\n        readonly kind: SignatureDeclaration["kind"];\n        readonly name?: PropertyName;\n        readonly typeParameters?: NodeArray<TypeParameterDeclaration> | undefined;\n        readonly parameters: NodeArray<ParameterDeclaration>;\n        readonly type?: TypeNode | undefined;\n    }\n    type SignatureDeclaration = CallSignatureDeclaration | ConstructSignatureDeclaration | MethodSignature | IndexSignatureDeclaration | FunctionTypeNode | ConstructorTypeNode | JSDocFunctionType | FunctionDeclaration | MethodDeclaration | ConstructorDeclaration | AccessorDeclaration | FunctionExpression | ArrowFunction;\n    interface CallSignatureDeclaration extends SignatureDeclarationBase, TypeElement, LocalsContainer {\n        readonly kind: SyntaxKind.CallSignature;\n    }\n    interface ConstructSignatureDeclaration extends SignatureDeclarationBase, TypeElement, LocalsContainer {\n        readonly kind: SyntaxKind.ConstructSignature;\n    }\n    type BindingName = Identifier | BindingPattern;\n    interface VariableDeclaration extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.VariableDeclaration;\n        readonly parent: VariableDeclarationList | CatchClause;\n        readonly name: BindingName;\n        readonly exclamationToken?: ExclamationToken;\n        readonly type?: TypeNode;\n        readonly initializer?: Expression;\n    }\n    interface VariableDeclarationList extends Node {\n        readonly kind: SyntaxKind.VariableDeclarationList;\n        readonly parent: VariableStatement | ForStatement | ForOfStatement | ForInStatement;\n        readonly declarations: NodeArray<VariableDeclaration>;\n    }\n    interface ParameterDeclaration extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.Parameter;\n        readonly parent: SignatureDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly dotDotDotToken?: DotDotDotToken;\n        readonly name: BindingName;\n        readonly questionToken?: QuestionToken;\n        readonly type?: TypeNode;\n        readonly initializer?: Expression;\n    }\n    interface BindingElement extends NamedDeclaration, FlowContainer {\n        readonly kind: SyntaxKind.BindingElement;\n        readonly parent: BindingPattern;\n        readonly propertyName?: PropertyName;\n        readonly dotDotDotToken?: DotDotDotToken;\n        readonly name: BindingName;\n        readonly initializer?: Expression;\n    }\n    interface PropertySignature extends TypeElement, JSDocContainer {\n        readonly kind: SyntaxKind.PropertySignature;\n        readonly parent: TypeLiteralNode | InterfaceDeclaration;\n        readonly modifiers?: NodeArray<Modifier>;\n        readonly name: PropertyName;\n        readonly questionToken?: QuestionToken;\n        readonly type?: TypeNode;\n    }\n    interface PropertyDeclaration extends ClassElement, JSDocContainer {\n        readonly kind: SyntaxKind.PropertyDeclaration;\n        readonly parent: ClassLikeDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: PropertyName;\n        readonly questionToken?: QuestionToken;\n        readonly exclamationToken?: ExclamationToken;\n        readonly type?: TypeNode;\n        readonly initializer?: Expression;\n    }\n    interface AutoAccessorPropertyDeclaration extends PropertyDeclaration {\n        _autoAccessorBrand: any;\n    }\n    interface ObjectLiteralElement extends NamedDeclaration {\n        _objectLiteralBrand: any;\n        readonly name?: PropertyName;\n    }\n    /** Unlike ObjectLiteralElement, excludes JSXAttribute and JSXSpreadAttribute. */\n    type ObjectLiteralElementLike = PropertyAssignment | ShorthandPropertyAssignment | SpreadAssignment | MethodDeclaration | AccessorDeclaration;\n    interface PropertyAssignment extends ObjectLiteralElement, JSDocContainer {\n        readonly kind: SyntaxKind.PropertyAssignment;\n        readonly parent: ObjectLiteralExpression;\n        readonly name: PropertyName;\n        readonly initializer: Expression;\n    }\n    interface ShorthandPropertyAssignment extends ObjectLiteralElement, JSDocContainer {\n        readonly kind: SyntaxKind.ShorthandPropertyAssignment;\n        readonly parent: ObjectLiteralExpression;\n        readonly name: Identifier;\n        readonly equalsToken?: EqualsToken;\n        readonly objectAssignmentInitializer?: Expression;\n    }\n    interface SpreadAssignment extends ObjectLiteralElement, JSDocContainer {\n        readonly kind: SyntaxKind.SpreadAssignment;\n        readonly parent: ObjectLiteralExpression;\n        readonly expression: Expression;\n    }\n    type VariableLikeDeclaration = VariableDeclaration | ParameterDeclaration | BindingElement | PropertyDeclaration | PropertyAssignment | PropertySignature | JsxAttribute | ShorthandPropertyAssignment | EnumMember | JSDocPropertyTag | JSDocParameterTag;\n    interface ObjectBindingPattern extends Node {\n        readonly kind: SyntaxKind.ObjectBindingPattern;\n        readonly parent: VariableDeclaration | ParameterDeclaration | BindingElement;\n        readonly elements: NodeArray<BindingElement>;\n    }\n    interface ArrayBindingPattern extends Node {\n        readonly kind: SyntaxKind.ArrayBindingPattern;\n        readonly parent: VariableDeclaration | ParameterDeclaration | BindingElement;\n        readonly elements: NodeArray<ArrayBindingElement>;\n    }\n    type BindingPattern = ObjectBindingPattern | ArrayBindingPattern;\n    type ArrayBindingElement = BindingElement | OmittedExpression;\n    /**\n     * Several node kinds share function-like features such as a signature,\n     * a name, and a body. These nodes should extend FunctionLikeDeclarationBase.\n     * Examples:\n     * - FunctionDeclaration\n     * - MethodDeclaration\n     * - AccessorDeclaration\n     */\n    interface FunctionLikeDeclarationBase extends SignatureDeclarationBase {\n        _functionLikeDeclarationBrand: any;\n        readonly asteriskToken?: AsteriskToken | undefined;\n        readonly questionToken?: QuestionToken | undefined;\n        readonly exclamationToken?: ExclamationToken | undefined;\n        readonly body?: Block | Expression | undefined;\n    }\n    type FunctionLikeDeclaration = FunctionDeclaration | MethodDeclaration | GetAccessorDeclaration | SetAccessorDeclaration | ConstructorDeclaration | FunctionExpression | ArrowFunction;\n    /** @deprecated Use SignatureDeclaration */\n    type FunctionLike = SignatureDeclaration;\n    interface FunctionDeclaration extends FunctionLikeDeclarationBase, DeclarationStatement, LocalsContainer {\n        readonly kind: SyntaxKind.FunctionDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name?: Identifier;\n        readonly body?: FunctionBody;\n    }\n    interface MethodSignature extends SignatureDeclarationBase, TypeElement, LocalsContainer {\n        readonly kind: SyntaxKind.MethodSignature;\n        readonly parent: TypeLiteralNode | InterfaceDeclaration;\n        readonly modifiers?: NodeArray<Modifier>;\n        readonly name: PropertyName;\n    }\n    interface MethodDeclaration extends FunctionLikeDeclarationBase, ClassElement, ObjectLiteralElement, JSDocContainer, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.MethodDeclaration;\n        readonly parent: ClassLikeDeclaration | ObjectLiteralExpression;\n        readonly modifiers?: NodeArray<ModifierLike> | undefined;\n        readonly name: PropertyName;\n        readonly body?: FunctionBody | undefined;\n    }\n    interface ConstructorDeclaration extends FunctionLikeDeclarationBase, ClassElement, JSDocContainer, LocalsContainer {\n        readonly kind: SyntaxKind.Constructor;\n        readonly parent: ClassLikeDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike> | undefined;\n        readonly body?: FunctionBody | undefined;\n    }\n    /** For when we encounter a semicolon in a class declaration. ES6 allows these as class elements. */\n    interface SemicolonClassElement extends ClassElement, JSDocContainer {\n        readonly kind: SyntaxKind.SemicolonClassElement;\n        readonly parent: ClassLikeDeclaration;\n    }\n    interface GetAccessorDeclaration extends FunctionLikeDeclarationBase, ClassElement, TypeElement, ObjectLiteralElement, JSDocContainer, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.GetAccessor;\n        readonly parent: ClassLikeDeclaration | ObjectLiteralExpression | TypeLiteralNode | InterfaceDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: PropertyName;\n        readonly body?: FunctionBody;\n    }\n    interface SetAccessorDeclaration extends FunctionLikeDeclarationBase, ClassElement, TypeElement, ObjectLiteralElement, JSDocContainer, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.SetAccessor;\n        readonly parent: ClassLikeDeclaration | ObjectLiteralExpression | TypeLiteralNode | InterfaceDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: PropertyName;\n        readonly body?: FunctionBody;\n    }\n    type AccessorDeclaration = GetAccessorDeclaration | SetAccessorDeclaration;\n    interface IndexSignatureDeclaration extends SignatureDeclarationBase, ClassElement, TypeElement, LocalsContainer {\n        readonly kind: SyntaxKind.IndexSignature;\n        readonly parent: ObjectTypeDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly type: TypeNode;\n    }\n    interface ClassStaticBlockDeclaration extends ClassElement, JSDocContainer, LocalsContainer {\n        readonly kind: SyntaxKind.ClassStaticBlockDeclaration;\n        readonly parent: ClassDeclaration | ClassExpression;\n        readonly body: Block;\n    }\n    interface TypeNode extends Node {\n        _typeNodeBrand: any;\n    }\n    interface KeywordTypeNode<TKind extends KeywordTypeSyntaxKind = KeywordTypeSyntaxKind> extends KeywordToken<TKind>, TypeNode {\n        readonly kind: TKind;\n    }\n    /** @deprecated */\n    interface ImportTypeAssertionContainer extends Node {\n        readonly kind: SyntaxKind.ImportTypeAssertionContainer;\n        readonly parent: ImportTypeNode;\n        /** @deprecated */ readonly assertClause: AssertClause;\n        readonly multiLine?: boolean;\n    }\n    interface ImportTypeNode extends NodeWithTypeArguments {\n        readonly kind: SyntaxKind.ImportType;\n        readonly isTypeOf: boolean;\n        readonly argument: TypeNode;\n        /** @deprecated */ readonly assertions?: ImportTypeAssertionContainer;\n        readonly attributes?: ImportAttributes;\n        readonly qualifier?: EntityName;\n    }\n    interface ThisTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.ThisType;\n    }\n    type FunctionOrConstructorTypeNode = FunctionTypeNode | ConstructorTypeNode;\n    interface FunctionOrConstructorTypeNodeBase extends TypeNode, SignatureDeclarationBase {\n        readonly kind: SyntaxKind.FunctionType | SyntaxKind.ConstructorType;\n        readonly type: TypeNode;\n    }\n    interface FunctionTypeNode extends FunctionOrConstructorTypeNodeBase, LocalsContainer {\n        readonly kind: SyntaxKind.FunctionType;\n    }\n    interface ConstructorTypeNode extends FunctionOrConstructorTypeNodeBase, LocalsContainer {\n        readonly kind: SyntaxKind.ConstructorType;\n        readonly modifiers?: NodeArray<Modifier>;\n    }\n    interface NodeWithTypeArguments extends TypeNode {\n        readonly typeArguments?: NodeArray<TypeNode>;\n    }\n    type TypeReferenceType = TypeReferenceNode | ExpressionWithTypeArguments;\n    interface TypeReferenceNode extends NodeWithTypeArguments {\n        readonly kind: SyntaxKind.TypeReference;\n        readonly typeName: EntityName;\n    }\n    interface TypePredicateNode extends TypeNode {\n        readonly kind: SyntaxKind.TypePredicate;\n        readonly parent: SignatureDeclaration | JSDocTypeExpression;\n        readonly assertsModifier?: AssertsKeyword;\n        readonly parameterName: Identifier | ThisTypeNode;\n        readonly type?: TypeNode;\n    }\n    interface TypeQueryNode extends NodeWithTypeArguments {\n        readonly kind: SyntaxKind.TypeQuery;\n        readonly exprName: EntityName;\n    }\n    interface TypeLiteralNode extends TypeNode, Declaration {\n        readonly kind: SyntaxKind.TypeLiteral;\n        readonly members: NodeArray<TypeElement>;\n    }\n    interface ArrayTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.ArrayType;\n        readonly elementType: TypeNode;\n    }\n    interface TupleTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.TupleType;\n        readonly elements: NodeArray<TypeNode | NamedTupleMember>;\n    }\n    interface NamedTupleMember extends TypeNode, Declaration, JSDocContainer {\n        readonly kind: SyntaxKind.NamedTupleMember;\n        readonly dotDotDotToken?: Token<SyntaxKind.DotDotDotToken>;\n        readonly name: Identifier;\n        readonly questionToken?: Token<SyntaxKind.QuestionToken>;\n        readonly type: TypeNode;\n    }\n    interface OptionalTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.OptionalType;\n        readonly type: TypeNode;\n    }\n    interface RestTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.RestType;\n        readonly type: TypeNode;\n    }\n    type UnionOrIntersectionTypeNode = UnionTypeNode | IntersectionTypeNode;\n    interface UnionTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.UnionType;\n        readonly types: NodeArray<TypeNode>;\n    }\n    interface IntersectionTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.IntersectionType;\n        readonly types: NodeArray<TypeNode>;\n    }\n    interface ConditionalTypeNode extends TypeNode, LocalsContainer {\n        readonly kind: SyntaxKind.ConditionalType;\n        readonly checkType: TypeNode;\n        readonly extendsType: TypeNode;\n        readonly trueType: TypeNode;\n        readonly falseType: TypeNode;\n    }\n    interface InferTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.InferType;\n        readonly typeParameter: TypeParameterDeclaration;\n    }\n    interface ParenthesizedTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.ParenthesizedType;\n        readonly type: TypeNode;\n    }\n    interface TypeOperatorNode extends TypeNode {\n        readonly kind: SyntaxKind.TypeOperator;\n        readonly operator: SyntaxKind.KeyOfKeyword | SyntaxKind.UniqueKeyword | SyntaxKind.ReadonlyKeyword;\n        readonly type: TypeNode;\n    }\n    interface IndexedAccessTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.IndexedAccessType;\n        readonly objectType: TypeNode;\n        readonly indexType: TypeNode;\n    }\n    interface MappedTypeNode extends TypeNode, Declaration, LocalsContainer {\n        readonly kind: SyntaxKind.MappedType;\n        readonly readonlyToken?: ReadonlyKeyword | PlusToken | MinusToken;\n        readonly typeParameter: TypeParameterDeclaration;\n        readonly nameType?: TypeNode;\n        readonly questionToken?: QuestionToken | PlusToken | MinusToken;\n        readonly type?: TypeNode;\n        /** Used only to produce grammar errors */\n        readonly members?: NodeArray<TypeElement>;\n    }\n    interface LiteralTypeNode extends TypeNode {\n        readonly kind: SyntaxKind.LiteralType;\n        readonly literal: NullLiteral | BooleanLiteral | LiteralExpression | PrefixUnaryExpression;\n    }\n    interface StringLiteral extends LiteralExpression, Declaration {\n        readonly kind: SyntaxKind.StringLiteral;\n    }\n    type StringLiteralLike = StringLiteral | NoSubstitutionTemplateLiteral;\n    type PropertyNameLiteral = Identifier | StringLiteralLike | NumericLiteral | JsxNamespacedName | BigIntLiteral;\n    interface TemplateLiteralTypeNode extends TypeNode {\n        kind: SyntaxKind.TemplateLiteralType;\n        readonly head: TemplateHead;\n        readonly templateSpans: NodeArray<TemplateLiteralTypeSpan>;\n    }\n    interface TemplateLiteralTypeSpan extends TypeNode {\n        readonly kind: SyntaxKind.TemplateLiteralTypeSpan;\n        readonly parent: TemplateLiteralTypeNode;\n        readonly type: TypeNode;\n        readonly literal: TemplateMiddle | TemplateTail;\n    }\n    interface Expression extends Node {\n        _expressionBrand: any;\n    }\n    interface OmittedExpression extends Expression {\n        readonly kind: SyntaxKind.OmittedExpression;\n    }\n    interface PartiallyEmittedExpression extends LeftHandSideExpression {\n        readonly kind: SyntaxKind.PartiallyEmittedExpression;\n        readonly expression: Expression;\n    }\n    interface UnaryExpression extends Expression {\n        _unaryExpressionBrand: any;\n    }\n    /** Deprecated, please use UpdateExpression */\n    type IncrementExpression = UpdateExpression;\n    interface UpdateExpression extends UnaryExpression {\n        _updateExpressionBrand: any;\n    }\n    type PrefixUnaryOperator = SyntaxKind.PlusPlusToken | SyntaxKind.MinusMinusToken | SyntaxKind.PlusToken | SyntaxKind.MinusToken | SyntaxKind.TildeToken | SyntaxKind.ExclamationToken;\n    interface PrefixUnaryExpression extends UpdateExpression {\n        readonly kind: SyntaxKind.PrefixUnaryExpression;\n        readonly operator: PrefixUnaryOperator;\n        readonly operand: UnaryExpression;\n    }\n    type PostfixUnaryOperator = SyntaxKind.PlusPlusToken | SyntaxKind.MinusMinusToken;\n    interface PostfixUnaryExpression extends UpdateExpression {\n        readonly kind: SyntaxKind.PostfixUnaryExpression;\n        readonly operand: LeftHandSideExpression;\n        readonly operator: PostfixUnaryOperator;\n    }\n    interface LeftHandSideExpression extends UpdateExpression {\n        _leftHandSideExpressionBrand: any;\n    }\n    interface MemberExpression extends LeftHandSideExpression {\n        _memberExpressionBrand: any;\n    }\n    interface PrimaryExpression extends MemberExpression {\n        _primaryExpressionBrand: any;\n    }\n    interface NullLiteral extends PrimaryExpression {\n        readonly kind: SyntaxKind.NullKeyword;\n    }\n    interface TrueLiteral extends PrimaryExpression {\n        readonly kind: SyntaxKind.TrueKeyword;\n    }\n    interface FalseLiteral extends PrimaryExpression {\n        readonly kind: SyntaxKind.FalseKeyword;\n    }\n    type BooleanLiteral = TrueLiteral | FalseLiteral;\n    interface ThisExpression extends PrimaryExpression, FlowContainer {\n        readonly kind: SyntaxKind.ThisKeyword;\n    }\n    interface SuperExpression extends PrimaryExpression, FlowContainer {\n        readonly kind: SyntaxKind.SuperKeyword;\n    }\n    interface ImportExpression extends PrimaryExpression {\n        readonly kind: SyntaxKind.ImportKeyword;\n    }\n    interface DeleteExpression extends UnaryExpression {\n        readonly kind: SyntaxKind.DeleteExpression;\n        readonly expression: UnaryExpression;\n    }\n    interface TypeOfExpression extends UnaryExpression {\n        readonly kind: SyntaxKind.TypeOfExpression;\n        readonly expression: UnaryExpression;\n    }\n    interface VoidExpression extends UnaryExpression {\n        readonly kind: SyntaxKind.VoidExpression;\n        readonly expression: UnaryExpression;\n    }\n    interface AwaitExpression extends UnaryExpression {\n        readonly kind: SyntaxKind.AwaitExpression;\n        readonly expression: UnaryExpression;\n    }\n    interface YieldExpression extends Expression {\n        readonly kind: SyntaxKind.YieldExpression;\n        readonly asteriskToken?: AsteriskToken;\n        readonly expression?: Expression;\n    }\n    interface SyntheticExpression extends Expression {\n        readonly kind: SyntaxKind.SyntheticExpression;\n        readonly isSpread: boolean;\n        readonly type: Type;\n        readonly tupleNameSource?: ParameterDeclaration | NamedTupleMember;\n    }\n    type ExponentiationOperator = SyntaxKind.AsteriskAsteriskToken;\n    type MultiplicativeOperator = SyntaxKind.AsteriskToken | SyntaxKind.SlashToken | SyntaxKind.PercentToken;\n    type MultiplicativeOperatorOrHigher = ExponentiationOperator | MultiplicativeOperator;\n    type AdditiveOperator = SyntaxKind.PlusToken | SyntaxKind.MinusToken;\n    type AdditiveOperatorOrHigher = MultiplicativeOperatorOrHigher | AdditiveOperator;\n    type ShiftOperator = SyntaxKind.LessThanLessThanToken | SyntaxKind.GreaterThanGreaterThanToken | SyntaxKind.GreaterThanGreaterThanGreaterThanToken;\n    type ShiftOperatorOrHigher = AdditiveOperatorOrHigher | ShiftOperator;\n    type RelationalOperator = SyntaxKind.LessThanToken | SyntaxKind.LessThanEqualsToken | SyntaxKind.GreaterThanToken | SyntaxKind.GreaterThanEqualsToken | SyntaxKind.InstanceOfKeyword | SyntaxKind.InKeyword;\n    type RelationalOperatorOrHigher = ShiftOperatorOrHigher | RelationalOperator;\n    type EqualityOperator = SyntaxKind.EqualsEqualsToken | SyntaxKind.EqualsEqualsEqualsToken | SyntaxKind.ExclamationEqualsEqualsToken | SyntaxKind.ExclamationEqualsToken;\n    type EqualityOperatorOrHigher = RelationalOperatorOrHigher | EqualityOperator;\n    type BitwiseOperator = SyntaxKind.AmpersandToken | SyntaxKind.BarToken | SyntaxKind.CaretToken;\n    type BitwiseOperatorOrHigher = EqualityOperatorOrHigher | BitwiseOperator;\n    type LogicalOperator = SyntaxKind.AmpersandAmpersandToken | SyntaxKind.BarBarToken;\n    type LogicalOperatorOrHigher = BitwiseOperatorOrHigher | LogicalOperator;\n    type CompoundAssignmentOperator = SyntaxKind.PlusEqualsToken | SyntaxKind.MinusEqualsToken | SyntaxKind.AsteriskAsteriskEqualsToken | SyntaxKind.AsteriskEqualsToken | SyntaxKind.SlashEqualsToken | SyntaxKind.PercentEqualsToken | SyntaxKind.AmpersandEqualsToken | SyntaxKind.BarEqualsToken | SyntaxKind.CaretEqualsToken | SyntaxKind.LessThanLessThanEqualsToken | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken | SyntaxKind.GreaterThanGreaterThanEqualsToken | SyntaxKind.BarBarEqualsToken | SyntaxKind.AmpersandAmpersandEqualsToken | SyntaxKind.QuestionQuestionEqualsToken;\n    type AssignmentOperator = SyntaxKind.EqualsToken | CompoundAssignmentOperator;\n    type AssignmentOperatorOrHigher = SyntaxKind.QuestionQuestionToken | LogicalOperatorOrHigher | AssignmentOperator;\n    type BinaryOperator = AssignmentOperatorOrHigher | SyntaxKind.CommaToken;\n    type LogicalOrCoalescingAssignmentOperator = SyntaxKind.AmpersandAmpersandEqualsToken | SyntaxKind.BarBarEqualsToken | SyntaxKind.QuestionQuestionEqualsToken;\n    type BinaryOperatorToken = Token<BinaryOperator>;\n    interface BinaryExpression extends Expression, Declaration, JSDocContainer {\n        readonly kind: SyntaxKind.BinaryExpression;\n        readonly left: Expression;\n        readonly operatorToken: BinaryOperatorToken;\n        readonly right: Expression;\n    }\n    type AssignmentOperatorToken = Token<AssignmentOperator>;\n    interface AssignmentExpression<TOperator extends AssignmentOperatorToken> extends BinaryExpression {\n        readonly left: LeftHandSideExpression;\n        readonly operatorToken: TOperator;\n    }\n    interface ObjectDestructuringAssignment extends AssignmentExpression<EqualsToken> {\n        readonly left: ObjectLiteralExpression;\n    }\n    interface ArrayDestructuringAssignment extends AssignmentExpression<EqualsToken> {\n        readonly left: ArrayLiteralExpression;\n    }\n    type DestructuringAssignment = ObjectDestructuringAssignment | ArrayDestructuringAssignment;\n    type BindingOrAssignmentElement = VariableDeclaration | ParameterDeclaration | ObjectBindingOrAssignmentElement | ArrayBindingOrAssignmentElement;\n    type ObjectBindingOrAssignmentElement = BindingElement | PropertyAssignment | ShorthandPropertyAssignment | SpreadAssignment;\n    type ArrayBindingOrAssignmentElement = BindingElement | OmittedExpression | SpreadElement | ArrayLiteralExpression | ObjectLiteralExpression | AssignmentExpression<EqualsToken> | Identifier | PropertyAccessExpression | ElementAccessExpression;\n    type BindingOrAssignmentElementRestIndicator = DotDotDotToken | SpreadElement | SpreadAssignment;\n    type BindingOrAssignmentElementTarget = BindingOrAssignmentPattern | Identifier | PropertyAccessExpression | ElementAccessExpression | OmittedExpression;\n    type ObjectBindingOrAssignmentPattern = ObjectBindingPattern | ObjectLiteralExpression;\n    type ArrayBindingOrAssignmentPattern = ArrayBindingPattern | ArrayLiteralExpression;\n    type AssignmentPattern = ObjectLiteralExpression | ArrayLiteralExpression;\n    type BindingOrAssignmentPattern = ObjectBindingOrAssignmentPattern | ArrayBindingOrAssignmentPattern;\n    interface ConditionalExpression extends Expression {\n        readonly kind: SyntaxKind.ConditionalExpression;\n        readonly condition: Expression;\n        readonly questionToken: QuestionToken;\n        readonly whenTrue: Expression;\n        readonly colonToken: ColonToken;\n        readonly whenFalse: Expression;\n    }\n    type FunctionBody = Block;\n    type ConciseBody = FunctionBody | Expression;\n    interface FunctionExpression extends PrimaryExpression, FunctionLikeDeclarationBase, JSDocContainer, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.FunctionExpression;\n        readonly modifiers?: NodeArray<Modifier>;\n        readonly name?: Identifier;\n        readonly body: FunctionBody;\n    }\n    interface ArrowFunction extends Expression, FunctionLikeDeclarationBase, JSDocContainer, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.ArrowFunction;\n        readonly modifiers?: NodeArray<Modifier>;\n        readonly equalsGreaterThanToken: EqualsGreaterThanToken;\n        readonly body: ConciseBody;\n        readonly name: never;\n    }\n    interface LiteralLikeNode extends Node {\n        text: string;\n        isUnterminated?: boolean;\n        hasExtendedUnicodeEscape?: boolean;\n    }\n    interface TemplateLiteralLikeNode extends LiteralLikeNode {\n        rawText?: string;\n    }\n    interface LiteralExpression extends LiteralLikeNode, PrimaryExpression {\n        _literalExpressionBrand: any;\n    }\n    interface RegularExpressionLiteral extends LiteralExpression {\n        readonly kind: SyntaxKind.RegularExpressionLiteral;\n    }\n    interface NoSubstitutionTemplateLiteral extends LiteralExpression, TemplateLiteralLikeNode, Declaration {\n        readonly kind: SyntaxKind.NoSubstitutionTemplateLiteral;\n    }\n    enum TokenFlags {\n        None = 0,\n        Scientific = 16,\n        Octal = 32,\n        HexSpecifier = 64,\n        BinarySpecifier = 128,\n        OctalSpecifier = 256,\n    }\n    interface NumericLiteral extends LiteralExpression, Declaration {\n        readonly kind: SyntaxKind.NumericLiteral;\n    }\n    interface BigIntLiteral extends LiteralExpression {\n        readonly kind: SyntaxKind.BigIntLiteral;\n    }\n    type LiteralToken = NumericLiteral | BigIntLiteral | StringLiteral | JsxText | RegularExpressionLiteral | NoSubstitutionTemplateLiteral;\n    interface TemplateHead extends TemplateLiteralLikeNode {\n        readonly kind: SyntaxKind.TemplateHead;\n        readonly parent: TemplateExpression | TemplateLiteralTypeNode;\n    }\n    interface TemplateMiddle extends TemplateLiteralLikeNode {\n        readonly kind: SyntaxKind.TemplateMiddle;\n        readonly parent: TemplateSpan | TemplateLiteralTypeSpan;\n    }\n    interface TemplateTail extends TemplateLiteralLikeNode {\n        readonly kind: SyntaxKind.TemplateTail;\n        readonly parent: TemplateSpan | TemplateLiteralTypeSpan;\n    }\n    type PseudoLiteralToken = TemplateHead | TemplateMiddle | TemplateTail;\n    type TemplateLiteralToken = NoSubstitutionTemplateLiteral | PseudoLiteralToken;\n    interface TemplateExpression extends PrimaryExpression {\n        readonly kind: SyntaxKind.TemplateExpression;\n        readonly head: TemplateHead;\n        readonly templateSpans: NodeArray<TemplateSpan>;\n    }\n    type TemplateLiteral = TemplateExpression | NoSubstitutionTemplateLiteral;\n    interface TemplateSpan extends Node {\n        readonly kind: SyntaxKind.TemplateSpan;\n        readonly parent: TemplateExpression;\n        readonly expression: Expression;\n        readonly literal: TemplateMiddle | TemplateTail;\n    }\n    interface ParenthesizedExpression extends PrimaryExpression, JSDocContainer {\n        readonly kind: SyntaxKind.ParenthesizedExpression;\n        readonly expression: Expression;\n    }\n    interface ArrayLiteralExpression extends PrimaryExpression {\n        readonly kind: SyntaxKind.ArrayLiteralExpression;\n        readonly elements: NodeArray<Expression>;\n    }\n    interface SpreadElement extends Expression {\n        readonly kind: SyntaxKind.SpreadElement;\n        readonly parent: ArrayLiteralExpression | CallExpression | NewExpression;\n        readonly expression: Expression;\n    }\n    /**\n     * This interface is a base interface for ObjectLiteralExpression and JSXAttributes to extend from. JSXAttributes is similar to\n     * ObjectLiteralExpression in that it contains array of properties; however, JSXAttributes\' properties can only be\n     * JSXAttribute or JSXSpreadAttribute. ObjectLiteralExpression, on the other hand, can only have properties of type\n     * ObjectLiteralElement (e.g. PropertyAssignment, ShorthandPropertyAssignment etc.)\n     */\n    interface ObjectLiteralExpressionBase<T extends ObjectLiteralElement> extends PrimaryExpression, Declaration {\n        readonly properties: NodeArray<T>;\n    }\n    interface ObjectLiteralExpression extends ObjectLiteralExpressionBase<ObjectLiteralElementLike>, JSDocContainer {\n        readonly kind: SyntaxKind.ObjectLiteralExpression;\n    }\n    type EntityNameExpression = Identifier | PropertyAccessEntityNameExpression;\n    type EntityNameOrEntityNameExpression = EntityName | EntityNameExpression;\n    type AccessExpression = PropertyAccessExpression | ElementAccessExpression;\n    interface PropertyAccessExpression extends MemberExpression, NamedDeclaration, JSDocContainer, FlowContainer {\n        readonly kind: SyntaxKind.PropertyAccessExpression;\n        readonly expression: LeftHandSideExpression;\n        readonly questionDotToken?: QuestionDotToken;\n        readonly name: MemberName;\n    }\n    interface PropertyAccessChain extends PropertyAccessExpression {\n        _optionalChainBrand: any;\n        readonly name: MemberName;\n    }\n    interface SuperPropertyAccessExpression extends PropertyAccessExpression {\n        readonly expression: SuperExpression;\n    }\n    /** Brand for a PropertyAccessExpression which, like a QualifiedName, consists of a sequence of identifiers separated by dots. */\n    interface PropertyAccessEntityNameExpression extends PropertyAccessExpression {\n        _propertyAccessExpressionLikeQualifiedNameBrand?: any;\n        readonly expression: EntityNameExpression;\n        readonly name: Identifier;\n    }\n    interface ElementAccessExpression extends MemberExpression, Declaration, JSDocContainer, FlowContainer {\n        readonly kind: SyntaxKind.ElementAccessExpression;\n        readonly expression: LeftHandSideExpression;\n        readonly questionDotToken?: QuestionDotToken;\n        readonly argumentExpression: Expression;\n    }\n    interface ElementAccessChain extends ElementAccessExpression {\n        _optionalChainBrand: any;\n    }\n    interface SuperElementAccessExpression extends ElementAccessExpression {\n        readonly expression: SuperExpression;\n    }\n    type SuperProperty = SuperPropertyAccessExpression | SuperElementAccessExpression;\n    interface CallExpression extends LeftHandSideExpression, Declaration {\n        readonly kind: SyntaxKind.CallExpression;\n        readonly expression: LeftHandSideExpression;\n        readonly questionDotToken?: QuestionDotToken;\n        readonly typeArguments?: NodeArray<TypeNode>;\n        readonly arguments: NodeArray<Expression>;\n    }\n    interface CallChain extends CallExpression {\n        _optionalChainBrand: any;\n    }\n    type OptionalChain = PropertyAccessChain | ElementAccessChain | CallChain | NonNullChain;\n    interface SuperCall extends CallExpression {\n        readonly expression: SuperExpression;\n    }\n    interface ImportCall extends CallExpression {\n        readonly expression: ImportExpression;\n    }\n    interface ExpressionWithTypeArguments extends MemberExpression, NodeWithTypeArguments {\n        readonly kind: SyntaxKind.ExpressionWithTypeArguments;\n        readonly expression: LeftHandSideExpression;\n    }\n    interface NewExpression extends PrimaryExpression, Declaration {\n        readonly kind: SyntaxKind.NewExpression;\n        readonly expression: LeftHandSideExpression;\n        readonly typeArguments?: NodeArray<TypeNode>;\n        readonly arguments?: NodeArray<Expression>;\n    }\n    interface TaggedTemplateExpression extends MemberExpression {\n        readonly kind: SyntaxKind.TaggedTemplateExpression;\n        readonly tag: LeftHandSideExpression;\n        readonly typeArguments?: NodeArray<TypeNode>;\n        readonly template: TemplateLiteral;\n    }\n    interface InstanceofExpression extends BinaryExpression {\n        readonly operatorToken: Token<SyntaxKind.InstanceOfKeyword>;\n    }\n    type CallLikeExpression = CallExpression | NewExpression | TaggedTemplateExpression | Decorator | JsxCallLike | InstanceofExpression;\n    interface AsExpression extends Expression {\n        readonly kind: SyntaxKind.AsExpression;\n        readonly expression: Expression;\n        readonly type: TypeNode;\n    }\n    interface TypeAssertion extends UnaryExpression {\n        readonly kind: SyntaxKind.TypeAssertionExpression;\n        readonly type: TypeNode;\n        readonly expression: UnaryExpression;\n    }\n    interface SatisfiesExpression extends Expression {\n        readonly kind: SyntaxKind.SatisfiesExpression;\n        readonly expression: Expression;\n        readonly type: TypeNode;\n    }\n    type AssertionExpression = TypeAssertion | AsExpression;\n    interface NonNullExpression extends LeftHandSideExpression {\n        readonly kind: SyntaxKind.NonNullExpression;\n        readonly expression: Expression;\n    }\n    interface NonNullChain extends NonNullExpression {\n        _optionalChainBrand: any;\n    }\n    interface MetaProperty extends PrimaryExpression, FlowContainer {\n        readonly kind: SyntaxKind.MetaProperty;\n        readonly keywordToken: SyntaxKind.NewKeyword | SyntaxKind.ImportKeyword;\n        readonly name: Identifier;\n    }\n    interface JsxElement extends PrimaryExpression {\n        readonly kind: SyntaxKind.JsxElement;\n        readonly openingElement: JsxOpeningElement;\n        readonly children: NodeArray<JsxChild>;\n        readonly closingElement: JsxClosingElement;\n    }\n    type JsxOpeningLikeElement = JsxSelfClosingElement | JsxOpeningElement;\n    type JsxCallLike = JsxOpeningLikeElement | JsxOpeningFragment;\n    type JsxAttributeLike = JsxAttribute | JsxSpreadAttribute;\n    type JsxAttributeName = Identifier | JsxNamespacedName;\n    type JsxTagNameExpression = Identifier | ThisExpression | JsxTagNamePropertyAccess | JsxNamespacedName;\n    interface JsxTagNamePropertyAccess extends PropertyAccessExpression {\n        readonly expression: Identifier | ThisExpression | JsxTagNamePropertyAccess;\n    }\n    interface JsxAttributes extends PrimaryExpression, Declaration {\n        readonly properties: NodeArray<JsxAttributeLike>;\n        readonly kind: SyntaxKind.JsxAttributes;\n        readonly parent: JsxOpeningLikeElement;\n    }\n    interface JsxNamespacedName extends Node {\n        readonly kind: SyntaxKind.JsxNamespacedName;\n        readonly name: Identifier;\n        readonly namespace: Identifier;\n    }\n    interface JsxOpeningElement extends Expression {\n        readonly kind: SyntaxKind.JsxOpeningElement;\n        readonly parent: JsxElement;\n        readonly tagName: JsxTagNameExpression;\n        readonly typeArguments?: NodeArray<TypeNode>;\n        readonly attributes: JsxAttributes;\n    }\n    interface JsxSelfClosingElement extends PrimaryExpression {\n        readonly kind: SyntaxKind.JsxSelfClosingElement;\n        readonly tagName: JsxTagNameExpression;\n        readonly typeArguments?: NodeArray<TypeNode>;\n        readonly attributes: JsxAttributes;\n    }\n    interface JsxFragment extends PrimaryExpression {\n        readonly kind: SyntaxKind.JsxFragment;\n        readonly openingFragment: JsxOpeningFragment;\n        readonly children: NodeArray<JsxChild>;\n        readonly closingFragment: JsxClosingFragment;\n    }\n    interface JsxOpeningFragment extends Expression {\n        readonly kind: SyntaxKind.JsxOpeningFragment;\n        readonly parent: JsxFragment;\n    }\n    interface JsxClosingFragment extends Expression {\n        readonly kind: SyntaxKind.JsxClosingFragment;\n        readonly parent: JsxFragment;\n    }\n    interface JsxAttribute extends Declaration {\n        readonly kind: SyntaxKind.JsxAttribute;\n        readonly parent: JsxAttributes;\n        readonly name: JsxAttributeName;\n        readonly initializer?: JsxAttributeValue;\n    }\n    type JsxAttributeValue = StringLiteral | JsxExpression | JsxElement | JsxSelfClosingElement | JsxFragment;\n    interface JsxSpreadAttribute extends ObjectLiteralElement {\n        readonly kind: SyntaxKind.JsxSpreadAttribute;\n        readonly parent: JsxAttributes;\n        readonly expression: Expression;\n    }\n    interface JsxClosingElement extends Node {\n        readonly kind: SyntaxKind.JsxClosingElement;\n        readonly parent: JsxElement;\n        readonly tagName: JsxTagNameExpression;\n    }\n    interface JsxExpression extends Expression {\n        readonly kind: SyntaxKind.JsxExpression;\n        readonly parent: JsxElement | JsxFragment | JsxAttributeLike;\n        readonly dotDotDotToken?: Token<SyntaxKind.DotDotDotToken>;\n        readonly expression?: Expression;\n    }\n    interface JsxText extends LiteralLikeNode {\n        readonly kind: SyntaxKind.JsxText;\n        readonly parent: JsxElement | JsxFragment;\n        readonly containsOnlyTriviaWhiteSpaces: boolean;\n    }\n    type JsxChild = JsxText | JsxExpression | JsxElement | JsxSelfClosingElement | JsxFragment;\n    interface Statement extends Node, JSDocContainer {\n        _statementBrand: any;\n    }\n    interface NotEmittedStatement extends Statement {\n        readonly kind: SyntaxKind.NotEmittedStatement;\n    }\n    interface NotEmittedTypeElement extends TypeElement {\n        readonly kind: SyntaxKind.NotEmittedTypeElement;\n    }\n    /**\n     * A list of comma-separated expressions. This node is only created by transformations.\n     */\n    interface CommaListExpression extends Expression {\n        readonly kind: SyntaxKind.CommaListExpression;\n        readonly elements: NodeArray<Expression>;\n    }\n    interface EmptyStatement extends Statement {\n        readonly kind: SyntaxKind.EmptyStatement;\n    }\n    interface DebuggerStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.DebuggerStatement;\n    }\n    interface MissingDeclaration extends DeclarationStatement, PrimaryExpression {\n        readonly kind: SyntaxKind.MissingDeclaration;\n        readonly name?: Identifier;\n    }\n    type BlockLike = SourceFile | Block | ModuleBlock | CaseOrDefaultClause;\n    interface Block extends Statement, LocalsContainer {\n        readonly kind: SyntaxKind.Block;\n        readonly statements: NodeArray<Statement>;\n    }\n    interface VariableStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.VariableStatement;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly declarationList: VariableDeclarationList;\n    }\n    interface ExpressionStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.ExpressionStatement;\n        readonly expression: Expression;\n    }\n    interface IfStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.IfStatement;\n        readonly expression: Expression;\n        readonly thenStatement: Statement;\n        readonly elseStatement?: Statement;\n    }\n    interface IterationStatement extends Statement {\n        readonly statement: Statement;\n    }\n    interface DoStatement extends IterationStatement, FlowContainer {\n        readonly kind: SyntaxKind.DoStatement;\n        readonly expression: Expression;\n    }\n    interface WhileStatement extends IterationStatement, FlowContainer {\n        readonly kind: SyntaxKind.WhileStatement;\n        readonly expression: Expression;\n    }\n    type ForInitializer = VariableDeclarationList | Expression;\n    interface ForStatement extends IterationStatement, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.ForStatement;\n        readonly initializer?: ForInitializer;\n        readonly condition?: Expression;\n        readonly incrementor?: Expression;\n    }\n    type ForInOrOfStatement = ForInStatement | ForOfStatement;\n    interface ForInStatement extends IterationStatement, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.ForInStatement;\n        readonly initializer: ForInitializer;\n        readonly expression: Expression;\n    }\n    interface ForOfStatement extends IterationStatement, LocalsContainer, FlowContainer {\n        readonly kind: SyntaxKind.ForOfStatement;\n        readonly awaitModifier?: AwaitKeyword;\n        readonly initializer: ForInitializer;\n        readonly expression: Expression;\n    }\n    interface BreakStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.BreakStatement;\n        readonly label?: Identifier;\n    }\n    interface ContinueStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.ContinueStatement;\n        readonly label?: Identifier;\n    }\n    type BreakOrContinueStatement = BreakStatement | ContinueStatement;\n    interface ReturnStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.ReturnStatement;\n        readonly expression?: Expression;\n    }\n    interface WithStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.WithStatement;\n        readonly expression: Expression;\n        readonly statement: Statement;\n    }\n    interface SwitchStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.SwitchStatement;\n        readonly expression: Expression;\n        readonly caseBlock: CaseBlock;\n        possiblyExhaustive?: boolean;\n    }\n    interface CaseBlock extends Node, LocalsContainer {\n        readonly kind: SyntaxKind.CaseBlock;\n        readonly parent: SwitchStatement;\n        readonly clauses: NodeArray<CaseOrDefaultClause>;\n    }\n    interface CaseClause extends Node, JSDocContainer {\n        readonly kind: SyntaxKind.CaseClause;\n        readonly parent: CaseBlock;\n        readonly expression: Expression;\n        readonly statements: NodeArray<Statement>;\n    }\n    interface DefaultClause extends Node {\n        readonly kind: SyntaxKind.DefaultClause;\n        readonly parent: CaseBlock;\n        readonly statements: NodeArray<Statement>;\n    }\n    type CaseOrDefaultClause = CaseClause | DefaultClause;\n    interface LabeledStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.LabeledStatement;\n        readonly label: Identifier;\n        readonly statement: Statement;\n    }\n    interface ThrowStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.ThrowStatement;\n        readonly expression: Expression;\n    }\n    interface TryStatement extends Statement, FlowContainer {\n        readonly kind: SyntaxKind.TryStatement;\n        readonly tryBlock: Block;\n        readonly catchClause?: CatchClause;\n        readonly finallyBlock?: Block;\n    }\n    interface CatchClause extends Node, LocalsContainer {\n        readonly kind: SyntaxKind.CatchClause;\n        readonly parent: TryStatement;\n        readonly variableDeclaration?: VariableDeclaration;\n        readonly block: Block;\n    }\n    type ObjectTypeDeclaration = ClassLikeDeclaration | InterfaceDeclaration | TypeLiteralNode;\n    type DeclarationWithTypeParameters = DeclarationWithTypeParameterChildren | JSDocTypedefTag | JSDocCallbackTag | JSDocSignature;\n    type DeclarationWithTypeParameterChildren = SignatureDeclaration | ClassLikeDeclaration | InterfaceDeclaration | TypeAliasDeclaration | JSDocTemplateTag;\n    interface ClassLikeDeclarationBase extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.ClassDeclaration | SyntaxKind.ClassExpression;\n        readonly name?: Identifier;\n        readonly typeParameters?: NodeArray<TypeParameterDeclaration>;\n        readonly heritageClauses?: NodeArray<HeritageClause>;\n        readonly members: NodeArray<ClassElement>;\n    }\n    interface ClassDeclaration extends ClassLikeDeclarationBase, DeclarationStatement {\n        readonly kind: SyntaxKind.ClassDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        /** May be undefined in `export default class { ... }`. */\n        readonly name?: Identifier;\n    }\n    interface ClassExpression extends ClassLikeDeclarationBase, PrimaryExpression {\n        readonly kind: SyntaxKind.ClassExpression;\n        readonly modifiers?: NodeArray<ModifierLike>;\n    }\n    type ClassLikeDeclaration = ClassDeclaration | ClassExpression;\n    interface ClassElement extends NamedDeclaration {\n        _classElementBrand: any;\n        readonly name?: PropertyName;\n    }\n    interface TypeElement extends NamedDeclaration {\n        _typeElementBrand: any;\n        readonly name?: PropertyName;\n        readonly questionToken?: QuestionToken | undefined;\n    }\n    interface InterfaceDeclaration extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.InterfaceDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: Identifier;\n        readonly typeParameters?: NodeArray<TypeParameterDeclaration>;\n        readonly heritageClauses?: NodeArray<HeritageClause>;\n        readonly members: NodeArray<TypeElement>;\n    }\n    interface HeritageClause extends Node {\n        readonly kind: SyntaxKind.HeritageClause;\n        readonly parent: InterfaceDeclaration | ClassLikeDeclaration;\n        readonly token: SyntaxKind.ExtendsKeyword | SyntaxKind.ImplementsKeyword;\n        readonly types: NodeArray<ExpressionWithTypeArguments>;\n    }\n    interface TypeAliasDeclaration extends DeclarationStatement, JSDocContainer, LocalsContainer {\n        readonly kind: SyntaxKind.TypeAliasDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: Identifier;\n        readonly typeParameters?: NodeArray<TypeParameterDeclaration>;\n        readonly type: TypeNode;\n    }\n    interface EnumMember extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.EnumMember;\n        readonly parent: EnumDeclaration;\n        readonly name: PropertyName;\n        readonly initializer?: Expression;\n    }\n    interface EnumDeclaration extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.EnumDeclaration;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: Identifier;\n        readonly members: NodeArray<EnumMember>;\n    }\n    type ModuleName = Identifier | StringLiteral;\n    type ModuleBody = NamespaceBody | JSDocNamespaceBody;\n    interface ModuleDeclaration extends DeclarationStatement, JSDocContainer, LocalsContainer {\n        readonly kind: SyntaxKind.ModuleDeclaration;\n        readonly parent: ModuleBody | SourceFile;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: ModuleName;\n        readonly body?: ModuleBody | JSDocNamespaceDeclaration;\n    }\n    type NamespaceBody = ModuleBlock | NamespaceDeclaration;\n    interface NamespaceDeclaration extends ModuleDeclaration {\n        readonly name: Identifier;\n        readonly body: NamespaceBody;\n    }\n    type JSDocNamespaceBody = Identifier | JSDocNamespaceDeclaration;\n    interface JSDocNamespaceDeclaration extends ModuleDeclaration {\n        readonly name: Identifier;\n        readonly body?: JSDocNamespaceBody;\n    }\n    interface ModuleBlock extends Node, Statement {\n        readonly kind: SyntaxKind.ModuleBlock;\n        readonly parent: ModuleDeclaration;\n        readonly statements: NodeArray<Statement>;\n    }\n    type ModuleReference = EntityName | ExternalModuleReference;\n    /**\n     * One of:\n     * - import x = require("mod");\n     * - import x = M.x;\n     */\n    interface ImportEqualsDeclaration extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.ImportEqualsDeclaration;\n        readonly parent: SourceFile | ModuleBlock;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly name: Identifier;\n        readonly isTypeOnly: boolean;\n        readonly moduleReference: ModuleReference;\n    }\n    interface ExternalModuleReference extends Node {\n        readonly kind: SyntaxKind.ExternalModuleReference;\n        readonly parent: ImportEqualsDeclaration;\n        readonly expression: Expression;\n    }\n    interface ImportDeclaration extends Statement {\n        readonly kind: SyntaxKind.ImportDeclaration;\n        readonly parent: SourceFile | ModuleBlock;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly importClause?: ImportClause;\n        /** If this is not a StringLiteral it will be a grammar error. */\n        readonly moduleSpecifier: Expression;\n        /** @deprecated */ readonly assertClause?: AssertClause;\n        readonly attributes?: ImportAttributes;\n    }\n    type NamedImportBindings = NamespaceImport | NamedImports;\n    type NamedExportBindings = NamespaceExport | NamedExports;\n    interface ImportClause extends NamedDeclaration {\n        readonly kind: SyntaxKind.ImportClause;\n        readonly parent: ImportDeclaration | JSDocImportTag;\n        readonly isTypeOnly: boolean;\n        readonly name?: Identifier;\n        readonly namedBindings?: NamedImportBindings;\n    }\n    /** @deprecated */\n    type AssertionKey = ImportAttributeName;\n    /** @deprecated */\n    interface AssertEntry extends ImportAttribute {\n    }\n    /** @deprecated */\n    interface AssertClause extends ImportAttributes {\n    }\n    type ImportAttributeName = Identifier | StringLiteral;\n    interface ImportAttribute extends Node {\n        readonly kind: SyntaxKind.ImportAttribute;\n        readonly parent: ImportAttributes;\n        readonly name: ImportAttributeName;\n        readonly value: Expression;\n    }\n    interface ImportAttributes extends Node {\n        readonly token: SyntaxKind.WithKeyword | SyntaxKind.AssertKeyword;\n        readonly kind: SyntaxKind.ImportAttributes;\n        readonly parent: ImportDeclaration | ExportDeclaration;\n        readonly elements: NodeArray<ImportAttribute>;\n        readonly multiLine?: boolean;\n    }\n    interface NamespaceImport extends NamedDeclaration {\n        readonly kind: SyntaxKind.NamespaceImport;\n        readonly parent: ImportClause;\n        readonly name: Identifier;\n    }\n    interface NamespaceExport extends NamedDeclaration {\n        readonly kind: SyntaxKind.NamespaceExport;\n        readonly parent: ExportDeclaration;\n        readonly name: ModuleExportName;\n    }\n    interface NamespaceExportDeclaration extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.NamespaceExportDeclaration;\n        readonly name: Identifier;\n    }\n    interface ExportDeclaration extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.ExportDeclaration;\n        readonly parent: SourceFile | ModuleBlock;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly isTypeOnly: boolean;\n        /** Will not be assigned in the case of `export * from "foo";` */\n        readonly exportClause?: NamedExportBindings;\n        /** If this is not a StringLiteral it will be a grammar error. */\n        readonly moduleSpecifier?: Expression;\n        /** @deprecated */ readonly assertClause?: AssertClause;\n        readonly attributes?: ImportAttributes;\n    }\n    interface NamedImports extends Node {\n        readonly kind: SyntaxKind.NamedImports;\n        readonly parent: ImportClause;\n        readonly elements: NodeArray<ImportSpecifier>;\n    }\n    interface NamedExports extends Node {\n        readonly kind: SyntaxKind.NamedExports;\n        readonly parent: ExportDeclaration;\n        readonly elements: NodeArray<ExportSpecifier>;\n    }\n    type NamedImportsOrExports = NamedImports | NamedExports;\n    interface ImportSpecifier extends NamedDeclaration {\n        readonly kind: SyntaxKind.ImportSpecifier;\n        readonly parent: NamedImports;\n        readonly propertyName?: ModuleExportName;\n        readonly name: Identifier;\n        readonly isTypeOnly: boolean;\n    }\n    interface ExportSpecifier extends NamedDeclaration, JSDocContainer {\n        readonly kind: SyntaxKind.ExportSpecifier;\n        readonly parent: NamedExports;\n        readonly isTypeOnly: boolean;\n        readonly propertyName?: ModuleExportName;\n        readonly name: ModuleExportName;\n    }\n    type ModuleExportName = Identifier | StringLiteral;\n    type ImportOrExportSpecifier = ImportSpecifier | ExportSpecifier;\n    type TypeOnlyCompatibleAliasDeclaration = ImportClause | ImportEqualsDeclaration | NamespaceImport | ImportOrExportSpecifier | ExportDeclaration | NamespaceExport;\n    type TypeOnlyImportDeclaration =\n        | ImportClause & {\n            readonly isTypeOnly: true;\n            readonly name: Identifier;\n        }\n        | ImportEqualsDeclaration & {\n            readonly isTypeOnly: true;\n        }\n        | NamespaceImport & {\n            readonly parent: ImportClause & {\n                readonly isTypeOnly: true;\n            };\n        }\n        | ImportSpecifier\n            & ({\n                readonly isTypeOnly: true;\n            } | {\n                readonly parent: NamedImports & {\n                    readonly parent: ImportClause & {\n                        readonly isTypeOnly: true;\n                    };\n                };\n            });\n    type TypeOnlyExportDeclaration =\n        | ExportSpecifier\n            & ({\n                readonly isTypeOnly: true;\n            } | {\n                readonly parent: NamedExports & {\n                    readonly parent: ExportDeclaration & {\n                        readonly isTypeOnly: true;\n                    };\n                };\n            })\n        | ExportDeclaration & {\n            readonly isTypeOnly: true;\n            readonly moduleSpecifier: Expression;\n        }\n        | NamespaceExport & {\n            readonly parent: ExportDeclaration & {\n                readonly isTypeOnly: true;\n                readonly moduleSpecifier: Expression;\n            };\n        };\n    type TypeOnlyAliasDeclaration = TypeOnlyImportDeclaration | TypeOnlyExportDeclaration;\n    /**\n     * This is either an `export =` or an `export default` declaration.\n     * Unless `isExportEquals` is set, this node was parsed as an `export default`.\n     */\n    interface ExportAssignment extends DeclarationStatement, JSDocContainer {\n        readonly kind: SyntaxKind.ExportAssignment;\n        readonly parent: SourceFile;\n        readonly modifiers?: NodeArray<ModifierLike>;\n        readonly isExportEquals?: boolean;\n        readonly expression: Expression;\n    }\n    interface FileReference extends TextRange {\n        fileName: string;\n        resolutionMode?: ResolutionMode;\n        preserve?: boolean;\n    }\n    interface CheckJsDirective extends TextRange {\n        enabled: boolean;\n    }\n    type CommentKind = SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia;\n    interface CommentRange extends TextRange {\n        hasTrailingNewLine?: boolean;\n        kind: CommentKind;\n    }\n    interface SynthesizedComment extends CommentRange {\n        text: string;\n        pos: -1;\n        end: -1;\n        hasLeadingNewline?: boolean;\n    }\n    interface JSDocTypeExpression extends TypeNode {\n        readonly kind: SyntaxKind.JSDocTypeExpression;\n        readonly type: TypeNode;\n    }\n    interface JSDocNameReference extends Node {\n        readonly kind: SyntaxKind.JSDocNameReference;\n        readonly name: EntityName | JSDocMemberName;\n    }\n    /** Class#method reference in JSDoc */\n    interface JSDocMemberName extends Node {\n        readonly kind: SyntaxKind.JSDocMemberName;\n        readonly left: EntityName | JSDocMemberName;\n        readonly right: Identifier;\n    }\n    interface JSDocType extends TypeNode {\n        _jsDocTypeBrand: any;\n    }\n    interface JSDocAllType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocAllType;\n    }\n    interface JSDocUnknownType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocUnknownType;\n    }\n    interface JSDocNonNullableType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocNonNullableType;\n        readonly type: TypeNode;\n        readonly postfix: boolean;\n    }\n    interface JSDocNullableType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocNullableType;\n        readonly type: TypeNode;\n        readonly postfix: boolean;\n    }\n    interface JSDocOptionalType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocOptionalType;\n        readonly type: TypeNode;\n    }\n    interface JSDocFunctionType extends JSDocType, SignatureDeclarationBase, LocalsContainer {\n        readonly kind: SyntaxKind.JSDocFunctionType;\n    }\n    interface JSDocVariadicType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocVariadicType;\n        readonly type: TypeNode;\n    }\n    interface JSDocNamepathType extends JSDocType {\n        readonly kind: SyntaxKind.JSDocNamepathType;\n        readonly type: TypeNode;\n    }\n    type JSDocTypeReferencingNode = JSDocVariadicType | JSDocOptionalType | JSDocNullableType | JSDocNonNullableType;\n    interface JSDoc extends Node {\n        readonly kind: SyntaxKind.JSDoc;\n        readonly parent: HasJSDoc;\n        readonly tags?: NodeArray<JSDocTag>;\n        readonly comment?: string | NodeArray<JSDocComment>;\n    }\n    interface JSDocTag extends Node {\n        readonly parent: JSDoc | JSDocTypeLiteral;\n        readonly tagName: Identifier;\n        readonly comment?: string | NodeArray<JSDocComment>;\n    }\n    interface JSDocLink extends Node {\n        readonly kind: SyntaxKind.JSDocLink;\n        readonly name?: EntityName | JSDocMemberName;\n        text: string;\n    }\n    interface JSDocLinkCode extends Node {\n        readonly kind: SyntaxKind.JSDocLinkCode;\n        readonly name?: EntityName | JSDocMemberName;\n        text: string;\n    }\n    interface JSDocLinkPlain extends Node {\n        readonly kind: SyntaxKind.JSDocLinkPlain;\n        readonly name?: EntityName | JSDocMemberName;\n        text: string;\n    }\n    type JSDocComment = JSDocText | JSDocLink | JSDocLinkCode | JSDocLinkPlain;\n    interface JSDocText extends Node {\n        readonly kind: SyntaxKind.JSDocText;\n        text: string;\n    }\n    interface JSDocUnknownTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocTag;\n    }\n    /**\n     * Note that `@extends` is a synonym of `@augments`.\n     * Both tags are represented by this interface.\n     */\n    interface JSDocAugmentsTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocAugmentsTag;\n        readonly class: ExpressionWithTypeArguments & {\n            readonly expression: Identifier | PropertyAccessEntityNameExpression;\n        };\n    }\n    interface JSDocImplementsTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocImplementsTag;\n        readonly class: ExpressionWithTypeArguments & {\n            readonly expression: Identifier | PropertyAccessEntityNameExpression;\n        };\n    }\n    interface JSDocAuthorTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocAuthorTag;\n    }\n    interface JSDocDeprecatedTag extends JSDocTag {\n        kind: SyntaxKind.JSDocDeprecatedTag;\n    }\n    interface JSDocClassTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocClassTag;\n    }\n    interface JSDocPublicTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocPublicTag;\n    }\n    interface JSDocPrivateTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocPrivateTag;\n    }\n    interface JSDocProtectedTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocProtectedTag;\n    }\n    interface JSDocReadonlyTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocReadonlyTag;\n    }\n    interface JSDocOverrideTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocOverrideTag;\n    }\n    interface JSDocEnumTag extends JSDocTag, Declaration, LocalsContainer {\n        readonly kind: SyntaxKind.JSDocEnumTag;\n        readonly parent: JSDoc;\n        readonly typeExpression: JSDocTypeExpression;\n    }\n    interface JSDocThisTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocThisTag;\n        readonly typeExpression: JSDocTypeExpression;\n    }\n    interface JSDocTemplateTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocTemplateTag;\n        readonly constraint: JSDocTypeExpression | undefined;\n        readonly typeParameters: NodeArray<TypeParameterDeclaration>;\n    }\n    interface JSDocSeeTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocSeeTag;\n        readonly name?: JSDocNameReference;\n    }\n    interface JSDocReturnTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocReturnTag;\n        readonly typeExpression?: JSDocTypeExpression;\n    }\n    interface JSDocTypeTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocTypeTag;\n        readonly typeExpression: JSDocTypeExpression;\n    }\n    interface JSDocTypedefTag extends JSDocTag, NamedDeclaration, LocalsContainer {\n        readonly kind: SyntaxKind.JSDocTypedefTag;\n        readonly parent: JSDoc;\n        readonly fullName?: JSDocNamespaceDeclaration | Identifier;\n        readonly name?: Identifier;\n        readonly typeExpression?: JSDocTypeExpression | JSDocTypeLiteral;\n    }\n    interface JSDocCallbackTag extends JSDocTag, NamedDeclaration, LocalsContainer {\n        readonly kind: SyntaxKind.JSDocCallbackTag;\n        readonly parent: JSDoc;\n        readonly fullName?: JSDocNamespaceDeclaration | Identifier;\n        readonly name?: Identifier;\n        readonly typeExpression: JSDocSignature;\n    }\n    interface JSDocOverloadTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocOverloadTag;\n        readonly parent: JSDoc;\n        readonly typeExpression: JSDocSignature;\n    }\n    interface JSDocThrowsTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocThrowsTag;\n        readonly typeExpression?: JSDocTypeExpression;\n    }\n    interface JSDocSignature extends JSDocType, Declaration, JSDocContainer, LocalsContainer {\n        readonly kind: SyntaxKind.JSDocSignature;\n        readonly typeParameters?: readonly JSDocTemplateTag[];\n        readonly parameters: readonly JSDocParameterTag[];\n        readonly type: JSDocReturnTag | undefined;\n    }\n    interface JSDocPropertyLikeTag extends JSDocTag, Declaration {\n        readonly parent: JSDoc;\n        readonly name: EntityName;\n        readonly typeExpression?: JSDocTypeExpression;\n        /** Whether the property name came before the type -- non-standard for JSDoc, but Typescript-like */\n        readonly isNameFirst: boolean;\n        readonly isBracketed: boolean;\n    }\n    interface JSDocPropertyTag extends JSDocPropertyLikeTag {\n        readonly kind: SyntaxKind.JSDocPropertyTag;\n    }\n    interface JSDocParameterTag extends JSDocPropertyLikeTag {\n        readonly kind: SyntaxKind.JSDocParameterTag;\n    }\n    interface JSDocTypeLiteral extends JSDocType, Declaration {\n        readonly kind: SyntaxKind.JSDocTypeLiteral;\n        readonly jsDocPropertyTags?: readonly JSDocPropertyLikeTag[];\n        /** If true, then this type literal represents an *array* of its type. */\n        readonly isArrayType: boolean;\n    }\n    interface JSDocSatisfiesTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocSatisfiesTag;\n        readonly typeExpression: JSDocTypeExpression;\n    }\n    interface JSDocImportTag extends JSDocTag {\n        readonly kind: SyntaxKind.JSDocImportTag;\n        readonly parent: JSDoc;\n        readonly importClause?: ImportClause;\n        readonly moduleSpecifier: Expression;\n        readonly attributes?: ImportAttributes;\n    }\n    type FlowType = Type | IncompleteType;\n    interface IncompleteType {\n        flags: TypeFlags | 0;\n        type: Type;\n    }\n    interface AmdDependency {\n        path: string;\n        name?: string;\n    }\n    /**\n     * Subset of properties from SourceFile that are used in multiple utility functions\n     */\n    interface SourceFileLike {\n        readonly text: string;\n    }\n    interface SourceFileLike {\n        getLineAndCharacterOfPosition(pos: number): LineAndCharacter;\n    }\n    type ResolutionMode = ModuleKind.ESNext | ModuleKind.CommonJS | undefined;\n    interface SourceFile extends Declaration, LocalsContainer {\n        readonly kind: SyntaxKind.SourceFile;\n        readonly statements: NodeArray<Statement>;\n        readonly endOfFileToken: Token<SyntaxKind.EndOfFileToken>;\n        fileName: string;\n        text: string;\n        amdDependencies: readonly AmdDependency[];\n        moduleName?: string;\n        referencedFiles: readonly FileReference[];\n        typeReferenceDirectives: readonly FileReference[];\n        libReferenceDirectives: readonly FileReference[];\n        languageVariant: LanguageVariant;\n        isDeclarationFile: boolean;\n        /**\n         * lib.d.ts should have a reference comment like\n         *\n         *  /// <reference no-default-lib="true"/>\n         *\n         * If any other file has this comment, it signals not to include lib.d.ts\n         * because this containing file is intended to act as a default library.\n         */\n        hasNoDefaultLib: boolean;\n        languageVersion: ScriptTarget;\n        /**\n         * When `module` is `Node16` or `NodeNext`, this field controls whether the\n         * source file in question is an ESNext-output-format file, or a CommonJS-output-format\n         * module. This is derived by the module resolver as it looks up the file, since\n         * it is derived from either the file extension of the module, or the containing\n         * `package.json` context, and affects both checking and emit.\n         *\n         * It is _public_ so that (pre)transformers can set this field,\n         * since it switches the builtin `node` module transform. Generally speaking, if unset,\n         * the field is treated as though it is `ModuleKind.CommonJS`.\n         *\n         * Note that this field is only set by the module resolution process when\n         * `moduleResolution` is `Node16` or `NodeNext`, which is implied by the `module` setting\n         * of `Node16` or `NodeNext`, respectively, but may be overriden (eg, by a `moduleResolution`\n         * of `node`). If so, this field will be unset and source files will be considered to be\n         * CommonJS-output-format by the node module transformer and type checker, regardless of extension or context.\n         */\n        impliedNodeFormat?: ResolutionMode;\n    }\n    interface SourceFile {\n        getLineAndCharacterOfPosition(pos: number): LineAndCharacter;\n        getLineEndOfPosition(pos: number): number;\n        getLineStarts(): readonly number[];\n        getPositionOfLineAndCharacter(line: number, character: number): number;\n        update(newText: string, textChangeRange: TextChangeRange): SourceFile;\n    }\n    interface Bundle extends Node {\n        readonly kind: SyntaxKind.Bundle;\n        readonly sourceFiles: readonly SourceFile[];\n    }\n    interface JsonSourceFile extends SourceFile {\n        readonly statements: NodeArray<JsonObjectExpressionStatement>;\n    }\n    interface TsConfigSourceFile extends JsonSourceFile {\n        extendedSourceFiles?: string[];\n    }\n    interface JsonMinusNumericLiteral extends PrefixUnaryExpression {\n        readonly kind: SyntaxKind.PrefixUnaryExpression;\n        readonly operator: SyntaxKind.MinusToken;\n        readonly operand: NumericLiteral;\n    }\n    type JsonObjectExpression = ObjectLiteralExpression | ArrayLiteralExpression | JsonMinusNumericLiteral | NumericLiteral | StringLiteral | BooleanLiteral | NullLiteral;\n    interface JsonObjectExpressionStatement extends ExpressionStatement {\n        readonly expression: JsonObjectExpression;\n    }\n    interface ScriptReferenceHost {\n        getCompilerOptions(): CompilerOptions;\n        getSourceFile(fileName: string): SourceFile | undefined;\n        getSourceFileByPath(path: Path): SourceFile | undefined;\n        getCurrentDirectory(): string;\n    }\n    interface ParseConfigHost extends ModuleResolutionHost {\n        useCaseSensitiveFileNames: boolean;\n        readDirectory(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[], depth?: number): readonly string[];\n        /**\n         * Gets a value indicating whether the specified path exists and is a file.\n         * @param path The path to test.\n         */\n        fileExists(path: string): boolean;\n        readFile(path: string): string | undefined;\n        trace?(s: string): void;\n    }\n    /**\n     * Branded string for keeping track of when we\'ve turned an ambiguous path\n     * specified like "./blah" to an absolute path to an actual\n     * tsconfig file, e.g. "/root/blah/tsconfig.json"\n     */\n    type ResolvedConfigFileName = string & {\n        _isResolvedConfigFileName: never;\n    };\n    interface WriteFileCallbackData {\n    }\n    type WriteFileCallback = (fileName: string, text: string, writeByteOrderMark: boolean, onError?: (message: string) => void, sourceFiles?: readonly SourceFile[], data?: WriteFileCallbackData) => void;\n    class OperationCanceledException {\n    }\n    interface CancellationToken {\n        isCancellationRequested(): boolean;\n        /** @throws OperationCanceledException if isCancellationRequested is true */\n        throwIfCancellationRequested(): void;\n    }\n    interface Program extends ScriptReferenceHost {\n        getCurrentDirectory(): string;\n        /**\n         * Get a list of root file names that were passed to a \'createProgram\'\n         */\n        getRootFileNames(): readonly string[];\n        /**\n         * Get a list of files in the program\n         */\n        getSourceFiles(): readonly SourceFile[];\n        /**\n         * Emits the JavaScript and declaration files.  If targetSourceFile is not specified, then\n         * the JavaScript and declaration files will be produced for all the files in this program.\n         * If targetSourceFile is specified, then only the JavaScript and declaration for that\n         * specific file will be generated.\n         *\n         * If writeFile is not specified then the writeFile callback from the compiler host will be\n         * used for writing the JavaScript and declaration files.  Otherwise, the writeFile parameter\n         * will be invoked when writing the JavaScript and declaration files.\n         */\n        emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n        getOptionsDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getGlobalDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getSyntacticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly DiagnosticWithLocation[];\n        /** The first time this is called, it will return global diagnostics (no location). */\n        getSemanticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getDeclarationDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly DiagnosticWithLocation[];\n        getConfigFileParsingDiagnostics(): readonly Diagnostic[];\n        /**\n         * Gets a type checker that can be used to semantically analyze source files in the program.\n         */\n        getTypeChecker(): TypeChecker;\n        getNodeCount(): number;\n        getIdentifierCount(): number;\n        getSymbolCount(): number;\n        getTypeCount(): number;\n        getInstantiationCount(): number;\n        getRelationCacheSizes(): {\n            assignable: number;\n            identity: number;\n            subtype: number;\n            strictSubtype: number;\n        };\n        isSourceFileFromExternalLibrary(file: SourceFile): boolean;\n        isSourceFileDefaultLibrary(file: SourceFile): boolean;\n        /**\n         * Calculates the final resolution mode for a given module reference node. This function only returns a result when module resolution\n         * settings allow differing resolution between ESM imports and CJS requires, or when a mode is explicitly provided via import attributes,\n         * which cause an `import` or `require` condition to be used during resolution regardless of module resolution settings. In absence of\n         * overriding attributes, and in modes that support differing resolution, the result indicates the syntax the usage would emit to JavaScript.\n         * Some examples:\n         *\n         * ```ts\n         * // tsc foo.mts --module nodenext\n         * import {} from "mod";\n         * // Result: ESNext - the import emits as ESM due to `impliedNodeFormat` set by .mts file extension\n         *\n         * // tsc foo.cts --module nodenext\n         * import {} from "mod";\n         * // Result: CommonJS - the import emits as CJS due to `impliedNodeFormat` set by .cts file extension\n         *\n         * // tsc foo.ts --module preserve --moduleResolution bundler\n         * import {} from "mod";\n         * // Result: ESNext - the import emits as ESM due to `--module preserve` and `--moduleResolution bundler`\n         * // supports conditional imports/exports\n         *\n         * // tsc foo.ts --module preserve --moduleResolution node10\n         * import {} from "mod";\n         * // Result: undefined - the import emits as ESM due to `--module preserve`, but `--moduleResolution node10`\n         * // does not support conditional imports/exports\n         *\n         * // tsc foo.ts --module commonjs --moduleResolution node10\n         * import type {} from "mod" with { "resolution-mode": "import" };\n         * // Result: ESNext - conditional imports/exports always supported with "resolution-mode" attribute\n         * ```\n         */\n        getModeForUsageLocation(file: SourceFile, usage: StringLiteralLike): ResolutionMode;\n        /**\n         * Calculates the final resolution mode for an import at some index within a file\'s `imports` list. This function only returns a result\n         * when module resolution settings allow differing resolution between ESM imports and CJS requires, or when a mode is explicitly provided\n         * via import attributes, which cause an `import` or `require` condition to be used during resolution regardless of module resolution\n         * settings. In absence of overriding attributes, and in modes that support differing resolution, the result indicates the syntax the\n         * usage would emit to JavaScript. Some examples:\n         *\n         * ```ts\n         * // tsc foo.mts --module nodenext\n         * import {} from "mod";\n         * // Result: ESNext - the import emits as ESM due to `impliedNodeFormat` set by .mts file extension\n         *\n         * // tsc foo.cts --module nodenext\n         * import {} from "mod";\n         * // Result: CommonJS - the import emits as CJS due to `impliedNodeFormat` set by .cts file extension\n         *\n         * // tsc foo.ts --module preserve --moduleResolution bundler\n         * import {} from "mod";\n         * // Result: ESNext - the import emits as ESM due to `--module preserve` and `--moduleResolution bundler`\n         * // supports conditional imports/exports\n         *\n         * // tsc foo.ts --module preserve --moduleResolution node10\n         * import {} from "mod";\n         * // Result: undefined - the import emits as ESM due to `--module preserve`, but `--moduleResolution node10`\n         * // does not support conditional imports/exports\n         *\n         * // tsc foo.ts --module commonjs --moduleResolution node10\n         * import type {} from "mod" with { "resolution-mode": "import" };\n         * // Result: ESNext - conditional imports/exports always supported with "resolution-mode" attribute\n         * ```\n         */\n        getModeForResolutionAtIndex(file: SourceFile, index: number): ResolutionMode;\n        getProjectReferences(): readonly ProjectReference[] | undefined;\n        getResolvedProjectReferences(): readonly (ResolvedProjectReference | undefined)[] | undefined;\n    }\n    interface ResolvedProjectReference {\n        commandLine: ParsedCommandLine;\n        sourceFile: SourceFile;\n        references?: readonly (ResolvedProjectReference | undefined)[];\n    }\n    type CustomTransformerFactory = (context: TransformationContext) => CustomTransformer;\n    interface CustomTransformer {\n        transformSourceFile(node: SourceFile): SourceFile;\n        transformBundle(node: Bundle): Bundle;\n    }\n    interface CustomTransformers {\n        /** Custom transformers to evaluate before built-in .js transformations. */\n        before?: (TransformerFactory<SourceFile> | CustomTransformerFactory)[];\n        /** Custom transformers to evaluate after built-in .js transformations. */\n        after?: (TransformerFactory<SourceFile> | CustomTransformerFactory)[];\n        /** Custom transformers to evaluate after built-in .d.ts transformations. */\n        afterDeclarations?: (TransformerFactory<Bundle | SourceFile> | CustomTransformerFactory)[];\n    }\n    interface SourceMapSpan {\n        /** Line number in the .js file. */\n        emittedLine: number;\n        /** Column number in the .js file. */\n        emittedColumn: number;\n        /** Line number in the .ts file. */\n        sourceLine: number;\n        /** Column number in the .ts file. */\n        sourceColumn: number;\n        /** Optional name (index into names array) associated with this span. */\n        nameIndex?: number;\n        /** .ts file (index into sources array) associated with this span */\n        sourceIndex: number;\n    }\n    /** Return code used by getEmitOutput function to indicate status of the function */\n    enum ExitStatus {\n        Success = 0,\n        DiagnosticsPresent_OutputsSkipped = 1,\n        DiagnosticsPresent_OutputsGenerated = 2,\n        InvalidProject_OutputsSkipped = 3,\n        ProjectReferenceCycle_OutputsSkipped = 4,\n    }\n    interface EmitResult {\n        emitSkipped: boolean;\n        /** Contains declaration emit diagnostics */\n        diagnostics: readonly Diagnostic[];\n        emittedFiles?: string[];\n    }\n    interface TypeChecker {\n        getTypeOfSymbolAtLocation(symbol: Symbol, node: Node): Type;\n        getTypeOfSymbol(symbol: Symbol): Type;\n        getDeclaredTypeOfSymbol(symbol: Symbol): Type;\n        getPropertiesOfType(type: Type): Symbol[];\n        getPropertyOfType(type: Type, propertyName: string): Symbol | undefined;\n        getPrivateIdentifierPropertyOfType(leftType: Type, name: string, location: Node): Symbol | undefined;\n        getIndexInfoOfType(type: Type, kind: IndexKind): IndexInfo | undefined;\n        getIndexInfosOfType(type: Type): readonly IndexInfo[];\n        getIndexInfosOfIndexSymbol: (indexSymbol: Symbol, siblingSymbols?: Symbol[] | undefined) => IndexInfo[];\n        getSignaturesOfType(type: Type, kind: SignatureKind): readonly Signature[];\n        getIndexTypeOfType(type: Type, kind: IndexKind): Type | undefined;\n        getBaseTypes(type: InterfaceType): BaseType[];\n        getBaseTypeOfLiteralType(type: Type): Type;\n        getWidenedType(type: Type): Type;\n        /**\n         * Gets the "awaited type" of a type.\n         *\n         * If an expression has a Promise-like type, the "awaited type" of the expression is\n         * derived from the type of the first argument of the fulfillment callback for that\n         * Promise\'s `then` method. If the "awaited type" is itself a Promise-like, it is\n         * recursively unwrapped in the same manner until a non-promise type is found.\n         *\n         * If an expression does not have a Promise-like type, its "awaited type" is the type\n         * of the expression.\n         *\n         * If the resulting "awaited type" is a generic object type, then it is wrapped in\n         * an `Awaited<T>`.\n         *\n         * In the event the "awaited type" circularly references itself, or is a non-Promise\n         * object-type with a callable `then()` method, an "awaited type" cannot be determined\n         * and the value `undefined` will be returned.\n         *\n         * This is used to reflect the runtime behavior of the `await` keyword.\n         */\n        getAwaitedType(type: Type): Type | undefined;\n        getReturnTypeOfSignature(signature: Signature): Type;\n        getNullableType(type: Type, flags: TypeFlags): Type;\n        getNonNullableType(type: Type): Type;\n        getTypeArguments(type: TypeReference): readonly Type[];\n        /** Note that the resulting nodes cannot be checked. */\n        typeToTypeNode(type: Type, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): TypeNode | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        signatureToSignatureDeclaration(signature: Signature, kind: SyntaxKind, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined):\n            | SignatureDeclaration & {\n                typeArguments?: NodeArray<TypeNode>;\n            }\n            | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        indexInfoToIndexSignatureDeclaration(indexInfo: IndexInfo, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): IndexSignatureDeclaration | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        symbolToEntityName(symbol: Symbol, meaning: SymbolFlags, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): EntityName | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        symbolToExpression(symbol: Symbol, meaning: SymbolFlags, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): Expression | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        symbolToTypeParameterDeclarations(symbol: Symbol, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): NodeArray<TypeParameterDeclaration> | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        symbolToParameterDeclaration(symbol: Symbol, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): ParameterDeclaration | undefined;\n        /** Note that the resulting nodes cannot be checked. */\n        typeParameterToDeclaration(parameter: TypeParameter, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags | undefined): TypeParameterDeclaration | undefined;\n        getSymbolsInScope(location: Node, meaning: SymbolFlags): Symbol[];\n        getSymbolAtLocation(node: Node): Symbol | undefined;\n        getSymbolsOfParameterPropertyDeclaration(parameter: ParameterDeclaration, parameterName: string): Symbol[];\n        /**\n         * The function returns the value (local variable) symbol of an identifier in the short-hand property assignment.\n         * This is necessary as an identifier in short-hand property assignment can contains two meaning: property name and property value.\n         */\n        getShorthandAssignmentValueSymbol(location: Node | undefined): Symbol | undefined;\n        getExportSpecifierLocalTargetSymbol(location: ExportSpecifier | Identifier): Symbol | undefined;\n        /**\n         * If a symbol is a local symbol with an associated exported symbol, returns the exported symbol.\n         * Otherwise returns its input.\n         * For example, at `export type T = number;`:\n         *     - `getSymbolAtLocation` at the location `T` will return the exported symbol for `T`.\n         *     - But the result of `getSymbolsInScope` will contain the *local* symbol for `T`, not the exported symbol.\n         *     - Calling `getExportSymbolOfSymbol` on that local symbol will return the exported symbol.\n         */\n        getExportSymbolOfSymbol(symbol: Symbol): Symbol;\n        getPropertySymbolOfDestructuringAssignment(location: Identifier): Symbol | undefined;\n        getTypeOfAssignmentPattern(pattern: AssignmentPattern): Type;\n        getTypeAtLocation(node: Node): Type;\n        getTypeFromTypeNode(node: TypeNode): Type;\n        signatureToString(signature: Signature, enclosingDeclaration?: Node, flags?: TypeFormatFlags, kind?: SignatureKind): string;\n        typeToString(type: Type, enclosingDeclaration?: Node, flags?: TypeFormatFlags): string;\n        symbolToString(symbol: Symbol, enclosingDeclaration?: Node, meaning?: SymbolFlags, flags?: SymbolFormatFlags): string;\n        typePredicateToString(predicate: TypePredicate, enclosingDeclaration?: Node, flags?: TypeFormatFlags): string;\n        getFullyQualifiedName(symbol: Symbol): string;\n        getAugmentedPropertiesOfType(type: Type): Symbol[];\n        getRootSymbols(symbol: Symbol): readonly Symbol[];\n        getSymbolOfExpando(node: Node, allowDeclaration: boolean): Symbol | undefined;\n        getContextualType(node: Expression): Type | undefined;\n        /**\n         * returns unknownSignature in the case of an error.\n         * returns undefined if the node is not valid.\n         * @param argumentCount Apparent number of arguments, passed in case of a possibly incomplete call. This should come from an ArgumentListInfo. See `signatureHelp.ts`.\n         */\n        getResolvedSignature(node: CallLikeExpression, candidatesOutArray?: Signature[], argumentCount?: number): Signature | undefined;\n        getSignatureFromDeclaration(declaration: SignatureDeclaration): Signature | undefined;\n        isImplementationOfOverload(node: SignatureDeclaration): boolean | undefined;\n        isUndefinedSymbol(symbol: Symbol): boolean;\n        isArgumentsSymbol(symbol: Symbol): boolean;\n        isUnknownSymbol(symbol: Symbol): boolean;\n        getMergedSymbol(symbol: Symbol): Symbol;\n        getConstantValue(node: EnumMember | PropertyAccessExpression | ElementAccessExpression): string | number | undefined;\n        isValidPropertyAccess(node: PropertyAccessExpression | QualifiedName | ImportTypeNode, propertyName: string): boolean;\n        /** Follow all aliases to get the original symbol. */\n        getAliasedSymbol(symbol: Symbol): Symbol;\n        /** Follow a *single* alias to get the immediately aliased symbol. */\n        getImmediateAliasedSymbol(symbol: Symbol): Symbol | undefined;\n        getExportsOfModule(moduleSymbol: Symbol): Symbol[];\n        getJsxIntrinsicTagNamesAt(location: Node): Symbol[];\n        isOptionalParameter(node: ParameterDeclaration): boolean;\n        getAmbientModules(): Symbol[];\n        tryGetMemberInModuleExports(memberName: string, moduleSymbol: Symbol): Symbol | undefined;\n        getApparentType(type: Type): Type;\n        getBaseConstraintOfType(type: Type): Type | undefined;\n        getDefaultFromTypeParameter(type: Type): Type | undefined;\n        /**\n         * Gets the intrinsic `any` type. There are multiple types that act as `any` used internally in the compiler,\n         * so the type returned by this function should not be used in equality checks to determine if another type\n         * is `any`. Instead, use `type.flags & TypeFlags.Any`.\n         */\n        getAnyType(): Type;\n        getStringType(): Type;\n        getStringLiteralType(value: string): StringLiteralType;\n        getNumberType(): Type;\n        getNumberLiteralType(value: number): NumberLiteralType;\n        getBigIntType(): Type;\n        getBigIntLiteralType(value: PseudoBigInt): BigIntLiteralType;\n        getBooleanType(): Type;\n        getUnknownType(): Type;\n        getFalseType(): Type;\n        getTrueType(): Type;\n        getVoidType(): Type;\n        /**\n         * Gets the intrinsic `undefined` type. There are multiple types that act as `undefined` used internally in the compiler\n         * depending on compiler options, so the type returned by this function should not be used in equality checks to determine\n         * if another type is `undefined`. Instead, use `type.flags & TypeFlags.Undefined`.\n         */\n        getUndefinedType(): Type;\n        /**\n         * Gets the intrinsic `null` type. There are multiple types that act as `null` used internally in the compiler,\n         * so the type returned by this function should not be used in equality checks to determine if another type\n         * is `null`. Instead, use `type.flags & TypeFlags.Null`.\n         */\n        getNullType(): Type;\n        getESSymbolType(): Type;\n        /**\n         * Gets the intrinsic `never` type. There are multiple types that act as `never` used internally in the compiler,\n         * so the type returned by this function should not be used in equality checks to determine if another type\n         * is `never`. Instead, use `type.flags & TypeFlags.Never`.\n         */\n        getNeverType(): Type;\n        /**\n         * Returns true if the "source" type is assignable to the "target" type.\n         *\n         * ```ts\n         * declare const abcLiteral: ts.Type; // Type of "abc"\n         * declare const stringType: ts.Type; // Type of string\n         *\n         * isTypeAssignableTo(abcLiteral, abcLiteral); // true; "abc" is assignable to "abc"\n         * isTypeAssignableTo(abcLiteral, stringType); // true; "abc" is assignable to string\n         * isTypeAssignableTo(stringType, abcLiteral); // false; string is not assignable to "abc"\n         * isTypeAssignableTo(stringType, stringType); // true; string is assignable to string\n         * ```\n         */\n        isTypeAssignableTo(source: Type, target: Type): boolean;\n        /**\n         * True if this type is the `Array` or `ReadonlyArray` type from lib.d.ts.\n         * This function will _not_ return true if passed a type which\n         * extends `Array` (for example, the TypeScript AST\'s `NodeArray` type).\n         */\n        isArrayType(type: Type): boolean;\n        /**\n         * True if this type is a tuple type. This function will _not_ return true if\n         * passed a type which extends from a tuple.\n         */\n        isTupleType(type: Type): boolean;\n        /**\n         * True if this type is assignable to `ReadonlyArray<any>`.\n         */\n        isArrayLikeType(type: Type): boolean;\n        resolveName(name: string, location: Node | undefined, meaning: SymbolFlags, excludeGlobals: boolean): Symbol | undefined;\n        getTypePredicateOfSignature(signature: Signature): TypePredicate | undefined;\n        /**\n         * Depending on the operation performed, it may be appropriate to throw away the checker\n         * if the cancellation token is triggered. Typically, if it is used for error checking\n         * and the operation is cancelled, then it should be discarded, otherwise it is safe to keep.\n         */\n        runWithCancellationToken<T>(token: CancellationToken, cb: (checker: TypeChecker) => T): T;\n        getTypeArgumentsForResolvedSignature(signature: Signature): readonly Type[] | undefined;\n    }\n    enum NodeBuilderFlags {\n        None = 0,\n        NoTruncation = 1,\n        WriteArrayAsGenericType = 2,\n        GenerateNamesForShadowedTypeParams = 4,\n        UseStructuralFallback = 8,\n        ForbidIndexedAccessSymbolReferences = 16,\n        WriteTypeArgumentsOfSignature = 32,\n        UseFullyQualifiedType = 64,\n        UseOnlyExternalAliasing = 128,\n        SuppressAnyReturnType = 256,\n        WriteTypeParametersInQualifiedName = 512,\n        MultilineObjectLiterals = 1024,\n        WriteClassExpressionAsTypeLiteral = 2048,\n        UseTypeOfFunction = 4096,\n        OmitParameterModifiers = 8192,\n        UseAliasDefinedOutsideCurrentScope = 16384,\n        UseSingleQuotesForStringLiteralType = 268435456,\n        NoTypeReduction = 536870912,\n        OmitThisParameter = 33554432,\n        AllowThisInObjectLiteral = 32768,\n        AllowQualifiedNameInPlaceOfIdentifier = 65536,\n        AllowAnonymousIdentifier = 131072,\n        AllowEmptyUnionOrIntersection = 262144,\n        AllowEmptyTuple = 524288,\n        AllowUniqueESSymbolType = 1048576,\n        AllowEmptyIndexInfoType = 2097152,\n        AllowNodeModulesRelativePaths = 67108864,\n        IgnoreErrors = 70221824,\n        InObjectTypeLiteral = 4194304,\n        InTypeAlias = 8388608,\n        InInitialEntityName = 16777216,\n    }\n    enum TypeFormatFlags {\n        None = 0,\n        NoTruncation = 1,\n        WriteArrayAsGenericType = 2,\n        GenerateNamesForShadowedTypeParams = 4,\n        UseStructuralFallback = 8,\n        WriteTypeArgumentsOfSignature = 32,\n        UseFullyQualifiedType = 64,\n        SuppressAnyReturnType = 256,\n        MultilineObjectLiterals = 1024,\n        WriteClassExpressionAsTypeLiteral = 2048,\n        UseTypeOfFunction = 4096,\n        OmitParameterModifiers = 8192,\n        UseAliasDefinedOutsideCurrentScope = 16384,\n        UseSingleQuotesForStringLiteralType = 268435456,\n        NoTypeReduction = 536870912,\n        OmitThisParameter = 33554432,\n        AllowUniqueESSymbolType = 1048576,\n        AddUndefined = 131072,\n        WriteArrowStyleSignature = 262144,\n        InArrayType = 524288,\n        InElementType = 2097152,\n        InFirstTypeArgument = 4194304,\n        InTypeAlias = 8388608,\n        NodeBuilderFlagsMask = 848330095,\n    }\n    enum SymbolFormatFlags {\n        None = 0,\n        WriteTypeParametersOrArguments = 1,\n        UseOnlyExternalAliasing = 2,\n        AllowAnyNodeKind = 4,\n        UseAliasDefinedOutsideCurrentScope = 8,\n    }\n    enum TypePredicateKind {\n        This = 0,\n        Identifier = 1,\n        AssertsThis = 2,\n        AssertsIdentifier = 3,\n    }\n    interface TypePredicateBase {\n        kind: TypePredicateKind;\n        type: Type | undefined;\n    }\n    interface ThisTypePredicate extends TypePredicateBase {\n        kind: TypePredicateKind.This;\n        parameterName: undefined;\n        parameterIndex: undefined;\n        type: Type;\n    }\n    interface IdentifierTypePredicate extends TypePredicateBase {\n        kind: TypePredicateKind.Identifier;\n        parameterName: string;\n        parameterIndex: number;\n        type: Type;\n    }\n    interface AssertsThisTypePredicate extends TypePredicateBase {\n        kind: TypePredicateKind.AssertsThis;\n        parameterName: undefined;\n        parameterIndex: undefined;\n        type: Type | undefined;\n    }\n    interface AssertsIdentifierTypePredicate extends TypePredicateBase {\n        kind: TypePredicateKind.AssertsIdentifier;\n        parameterName: string;\n        parameterIndex: number;\n        type: Type | undefined;\n    }\n    type TypePredicate = ThisTypePredicate | IdentifierTypePredicate | AssertsThisTypePredicate | AssertsIdentifierTypePredicate;\n    enum SymbolFlags {\n        None = 0,\n        FunctionScopedVariable = 1,\n        BlockScopedVariable = 2,\n        Property = 4,\n        EnumMember = 8,\n        Function = 16,\n        Class = 32,\n        Interface = 64,\n        ConstEnum = 128,\n        RegularEnum = 256,\n        ValueModule = 512,\n        NamespaceModule = 1024,\n        TypeLiteral = 2048,\n        ObjectLiteral = 4096,\n        Method = 8192,\n        Constructor = 16384,\n        GetAccessor = 32768,\n        SetAccessor = 65536,\n        Signature = 131072,\n        TypeParameter = 262144,\n        TypeAlias = 524288,\n        ExportValue = 1048576,\n        Alias = 2097152,\n        Prototype = 4194304,\n        ExportStar = 8388608,\n        Optional = 16777216,\n        Transient = 33554432,\n        Assignment = 67108864,\n        ModuleExports = 134217728,\n        All = -1,\n        Enum = 384,\n        Variable = 3,\n        Value = 111551,\n        Type = 788968,\n        Namespace = 1920,\n        Module = 1536,\n        Accessor = 98304,\n        FunctionScopedVariableExcludes = 111550,\n        BlockScopedVariableExcludes = 111551,\n        ParameterExcludes = 111551,\n        PropertyExcludes = 0,\n        EnumMemberExcludes = 900095,\n        FunctionExcludes = 110991,\n        ClassExcludes = 899503,\n        InterfaceExcludes = 788872,\n        RegularEnumExcludes = 899327,\n        ConstEnumExcludes = 899967,\n        ValueModuleExcludes = 110735,\n        NamespaceModuleExcludes = 0,\n        MethodExcludes = 103359,\n        GetAccessorExcludes = 46015,\n        SetAccessorExcludes = 78783,\n        AccessorExcludes = 13247,\n        TypeParameterExcludes = 526824,\n        TypeAliasExcludes = 788968,\n        AliasExcludes = 2097152,\n        ModuleMember = 2623475,\n        ExportHasLocal = 944,\n        BlockScoped = 418,\n        PropertyOrAccessor = 98308,\n        ClassMember = 106500,\n    }\n    interface Symbol {\n        flags: SymbolFlags;\n        escapedName: __String;\n        declarations?: Declaration[];\n        valueDeclaration?: Declaration;\n        members?: SymbolTable;\n        exports?: SymbolTable;\n        globalExports?: SymbolTable;\n    }\n    interface Symbol {\n        readonly name: string;\n        getFlags(): SymbolFlags;\n        getEscapedName(): __String;\n        getName(): string;\n        getDeclarations(): Declaration[] | undefined;\n        getDocumentationComment(typeChecker: TypeChecker | undefined): SymbolDisplayPart[];\n        getJsDocTags(checker?: TypeChecker): JSDocTagInfo[];\n    }\n    enum InternalSymbolName {\n        Call = "__call",\n        Constructor = "__constructor",\n        New = "__new",\n        Index = "__index",\n        ExportStar = "__export",\n        Global = "__global",\n        Missing = "__missing",\n        Type = "__type",\n        Object = "__object",\n        JSXAttributes = "__jsxAttributes",\n        Class = "__class",\n        Function = "__function",\n        Computed = "__computed",\n        Resolving = "__resolving__",\n        ExportEquals = "export=",\n        Default = "default",\n        This = "this",\n        InstantiationExpression = "__instantiationExpression",\n        ImportAttributes = "__importAttributes",\n    }\n    /**\n     * This represents a string whose leading underscore have been escaped by adding extra leading underscores.\n     * The shape of this brand is rather unique compared to others we\'ve used.\n     * Instead of just an intersection of a string and an object, it is that union-ed\n     * with an intersection of void and an object. This makes it wholly incompatible\n     * with a normal string (which is good, it cannot be misused on assignment or on usage),\n     * while still being comparable with a normal string via === (also good) and castable from a string.\n     */\n    type __String =\n        | (string & {\n            __escapedIdentifier: void;\n        })\n        | (void & {\n            __escapedIdentifier: void;\n        })\n        | InternalSymbolName;\n    /** @deprecated Use ReadonlyMap<__String, T> instead. */\n    type ReadonlyUnderscoreEscapedMap<T> = ReadonlyMap<__String, T>;\n    /** @deprecated Use Map<__String, T> instead. */\n    type UnderscoreEscapedMap<T> = Map<__String, T>;\n    /** SymbolTable based on ES6 Map interface. */\n    type SymbolTable = Map<__String, Symbol>;\n    enum TypeFlags {\n        Any = 1,\n        Unknown = 2,\n        String = 4,\n        Number = 8,\n        Boolean = 16,\n        Enum = 32,\n        BigInt = 64,\n        StringLiteral = 128,\n        NumberLiteral = 256,\n        BooleanLiteral = 512,\n        EnumLiteral = 1024,\n        BigIntLiteral = 2048,\n        ESSymbol = 4096,\n        UniqueESSymbol = 8192,\n        Void = 16384,\n        Undefined = 32768,\n        Null = 65536,\n        Never = 131072,\n        TypeParameter = 262144,\n        Object = 524288,\n        Union = 1048576,\n        Intersection = 2097152,\n        Index = 4194304,\n        IndexedAccess = 8388608,\n        Conditional = 16777216,\n        Substitution = 33554432,\n        NonPrimitive = 67108864,\n        TemplateLiteral = 134217728,\n        StringMapping = 268435456,\n        Literal = 2944,\n        Unit = 109472,\n        Freshable = 2976,\n        StringOrNumberLiteral = 384,\n        PossiblyFalsy = 117724,\n        StringLike = 402653316,\n        NumberLike = 296,\n        BigIntLike = 2112,\n        BooleanLike = 528,\n        EnumLike = 1056,\n        ESSymbolLike = 12288,\n        VoidLike = 49152,\n        UnionOrIntersection = 3145728,\n        StructuredType = 3670016,\n        TypeVariable = 8650752,\n        InstantiableNonPrimitive = 58982400,\n        InstantiablePrimitive = 406847488,\n        Instantiable = 465829888,\n        StructuredOrInstantiable = 469499904,\n        Narrowable = 536624127,\n    }\n    type DestructuringPattern = BindingPattern | ObjectLiteralExpression | ArrayLiteralExpression;\n    interface Type {\n        flags: TypeFlags;\n        symbol: Symbol;\n        pattern?: DestructuringPattern;\n        aliasSymbol?: Symbol;\n        aliasTypeArguments?: readonly Type[];\n    }\n    interface Type {\n        getFlags(): TypeFlags;\n        getSymbol(): Symbol | undefined;\n        getProperties(): Symbol[];\n        getProperty(propertyName: string): Symbol | undefined;\n        getApparentProperties(): Symbol[];\n        getCallSignatures(): readonly Signature[];\n        getConstructSignatures(): readonly Signature[];\n        getStringIndexType(): Type | undefined;\n        getNumberIndexType(): Type | undefined;\n        getBaseTypes(): BaseType[] | undefined;\n        getNonNullableType(): Type;\n        getConstraint(): Type | undefined;\n        getDefault(): Type | undefined;\n        isUnion(): this is UnionType;\n        isIntersection(): this is IntersectionType;\n        isUnionOrIntersection(): this is UnionOrIntersectionType;\n        isLiteral(): this is LiteralType;\n        isStringLiteral(): this is StringLiteralType;\n        isNumberLiteral(): this is NumberLiteralType;\n        isTypeParameter(): this is TypeParameter;\n        isClassOrInterface(): this is InterfaceType;\n        isClass(): this is InterfaceType;\n        isIndexType(): this is IndexType;\n    }\n    interface FreshableType extends Type {\n        freshType: FreshableType;\n        regularType: FreshableType;\n    }\n    interface LiteralType extends FreshableType {\n        value: string | number | PseudoBigInt;\n    }\n    interface UniqueESSymbolType extends Type {\n        symbol: Symbol;\n        escapedName: __String;\n    }\n    interface StringLiteralType extends LiteralType {\n        value: string;\n    }\n    interface NumberLiteralType extends LiteralType {\n        value: number;\n    }\n    interface BigIntLiteralType extends LiteralType {\n        value: PseudoBigInt;\n    }\n    interface EnumType extends FreshableType {\n    }\n    enum ObjectFlags {\n        None = 0,\n        Class = 1,\n        Interface = 2,\n        Reference = 4,\n        Tuple = 8,\n        Anonymous = 16,\n        Mapped = 32,\n        Instantiated = 64,\n        ObjectLiteral = 128,\n        EvolvingArray = 256,\n        ObjectLiteralPatternWithComputedProperties = 512,\n        ReverseMapped = 1024,\n        JsxAttributes = 2048,\n        JSLiteral = 4096,\n        FreshLiteral = 8192,\n        ArrayLiteral = 16384,\n        ClassOrInterface = 3,\n        ContainsSpread = 2097152,\n        ObjectRestType = 4194304,\n        InstantiationExpressionType = 8388608,\n        SingleSignatureType = 134217728,\n    }\n    interface ObjectType extends Type {\n        objectFlags: ObjectFlags;\n    }\n    /** Class and interface types (ObjectFlags.Class and ObjectFlags.Interface). */\n    interface InterfaceType extends ObjectType {\n        typeParameters: TypeParameter[] | undefined;\n        outerTypeParameters: TypeParameter[] | undefined;\n        localTypeParameters: TypeParameter[] | undefined;\n        thisType: TypeParameter | undefined;\n    }\n    type BaseType = ObjectType | IntersectionType | TypeVariable;\n    interface InterfaceTypeWithDeclaredMembers extends InterfaceType {\n        declaredProperties: Symbol[];\n        declaredCallSignatures: Signature[];\n        declaredConstructSignatures: Signature[];\n        declaredIndexInfos: IndexInfo[];\n    }\n    /**\n     * Type references (ObjectFlags.Reference). When a class or interface has type parameters or\n     * a "this" type, references to the class or interface are made using type references. The\n     * typeArguments property specifies the types to substitute for the type parameters of the\n     * class or interface and optionally includes an extra element that specifies the type to\n     * substitute for "this" in the resulting instantiation. When no extra argument is present,\n     * the type reference itself is substituted for "this". The typeArguments property is undefined\n     * if the class or interface has no type parameters and the reference isn\'t specifying an\n     * explicit "this" argument.\n     */\n    interface TypeReference extends ObjectType {\n        target: GenericType;\n        node?: TypeReferenceNode | ArrayTypeNode | TupleTypeNode;\n    }\n    interface TypeReference {\n        typeArguments?: readonly Type[];\n    }\n    interface DeferredTypeReference extends TypeReference {\n    }\n    interface GenericType extends InterfaceType, TypeReference {\n    }\n    enum ElementFlags {\n        Required = 1,\n        Optional = 2,\n        Rest = 4,\n        Variadic = 8,\n        Fixed = 3,\n        Variable = 12,\n        NonRequired = 14,\n        NonRest = 11,\n    }\n    interface TupleType extends GenericType {\n        elementFlags: readonly ElementFlags[];\n        /** Number of required or variadic elements */\n        minLength: number;\n        /** Number of initial required or optional elements */\n        fixedLength: number;\n        /**\n         * True if tuple has any rest or variadic elements\n         *\n         * @deprecated Use `.combinedFlags & ElementFlags.Variable` instead\n         */\n        hasRestElement: boolean;\n        combinedFlags: ElementFlags;\n        readonly: boolean;\n        labeledElementDeclarations?: readonly (NamedTupleMember | ParameterDeclaration | undefined)[];\n    }\n    interface TupleTypeReference extends TypeReference {\n        target: TupleType;\n    }\n    interface UnionOrIntersectionType extends Type {\n        types: Type[];\n    }\n    interface UnionType extends UnionOrIntersectionType {\n    }\n    interface IntersectionType extends UnionOrIntersectionType {\n    }\n    type StructuredType = ObjectType | UnionType | IntersectionType;\n    interface EvolvingArrayType extends ObjectType {\n        elementType: Type;\n        finalArrayType?: Type;\n    }\n    interface InstantiableType extends Type {\n    }\n    interface TypeParameter extends InstantiableType {\n    }\n    interface IndexedAccessType extends InstantiableType {\n        objectType: Type;\n        indexType: Type;\n        constraint?: Type;\n        simplifiedForReading?: Type;\n        simplifiedForWriting?: Type;\n    }\n    type TypeVariable = TypeParameter | IndexedAccessType;\n    interface IndexType extends InstantiableType {\n        type: InstantiableType | UnionOrIntersectionType;\n    }\n    interface ConditionalRoot {\n        node: ConditionalTypeNode;\n        checkType: Type;\n        extendsType: Type;\n        isDistributive: boolean;\n        inferTypeParameters?: TypeParameter[];\n        outerTypeParameters?: TypeParameter[];\n        instantiations?: Map<string, Type>;\n        aliasSymbol?: Symbol;\n        aliasTypeArguments?: Type[];\n    }\n    interface ConditionalType extends InstantiableType {\n        root: ConditionalRoot;\n        checkType: Type;\n        extendsType: Type;\n        resolvedTrueType?: Type;\n        resolvedFalseType?: Type;\n    }\n    interface TemplateLiteralType extends InstantiableType {\n        texts: readonly string[];\n        types: readonly Type[];\n    }\n    interface StringMappingType extends InstantiableType {\n        symbol: Symbol;\n        type: Type;\n    }\n    interface SubstitutionType extends InstantiableType {\n        objectFlags: ObjectFlags;\n        baseType: Type;\n        constraint: Type;\n    }\n    enum SignatureKind {\n        Call = 0,\n        Construct = 1,\n    }\n    interface Signature {\n        declaration?: SignatureDeclaration | JSDocSignature;\n        typeParameters?: readonly TypeParameter[];\n        parameters: readonly Symbol[];\n        thisParameter?: Symbol;\n    }\n    interface Signature {\n        getDeclaration(): SignatureDeclaration;\n        getTypeParameters(): TypeParameter[] | undefined;\n        getParameters(): Symbol[];\n        getTypeParameterAtPosition(pos: number): Type;\n        getReturnType(): Type;\n        getDocumentationComment(typeChecker: TypeChecker | undefined): SymbolDisplayPart[];\n        getJsDocTags(): JSDocTagInfo[];\n    }\n    enum IndexKind {\n        String = 0,\n        Number = 1,\n    }\n    type ElementWithComputedPropertyName = (ClassElement | ObjectLiteralElement) & {\n        name: ComputedPropertyName;\n    };\n    interface IndexInfo {\n        keyType: Type;\n        type: Type;\n        isReadonly: boolean;\n        declaration?: IndexSignatureDeclaration;\n        components?: ElementWithComputedPropertyName[];\n    }\n    enum InferencePriority {\n        None = 0,\n        NakedTypeVariable = 1,\n        SpeculativeTuple = 2,\n        SubstituteSource = 4,\n        HomomorphicMappedType = 8,\n        PartialHomomorphicMappedType = 16,\n        MappedTypeConstraint = 32,\n        ContravariantConditional = 64,\n        ReturnType = 128,\n        LiteralKeyof = 256,\n        NoConstraints = 512,\n        AlwaysStrict = 1024,\n        MaxValue = 2048,\n        PriorityImpliesCombination = 416,\n        Circularity = -1,\n    }\n    interface FileExtensionInfo {\n        extension: string;\n        isMixedContent: boolean;\n        scriptKind?: ScriptKind;\n    }\n    interface DiagnosticMessage {\n        key: string;\n        category: DiagnosticCategory;\n        code: number;\n        message: string;\n        reportsUnnecessary?: {};\n        reportsDeprecated?: {};\n    }\n    /**\n     * A linked list of formatted diagnostic messages to be used as part of a multiline message.\n     * It is built from the bottom up, leaving the head to be the "main" diagnostic.\n     * While it seems that DiagnosticMessageChain is structurally similar to DiagnosticMessage,\n     * the difference is that messages are all preformatted in DMC.\n     */\n    interface DiagnosticMessageChain {\n        messageText: string;\n        category: DiagnosticCategory;\n        code: number;\n        next?: DiagnosticMessageChain[];\n    }\n    interface Diagnostic extends DiagnosticRelatedInformation {\n        /** May store more in future. For now, this will simply be `true` to indicate when a diagnostic is an unused-identifier diagnostic. */\n        reportsUnnecessary?: {};\n        reportsDeprecated?: {};\n        source?: string;\n        relatedInformation?: DiagnosticRelatedInformation[];\n    }\n    interface DiagnosticRelatedInformation {\n        category: DiagnosticCategory;\n        code: number;\n        file: SourceFile | undefined;\n        start: number | undefined;\n        length: number | undefined;\n        messageText: string | DiagnosticMessageChain;\n    }\n    interface DiagnosticWithLocation extends Diagnostic {\n        file: SourceFile;\n        start: number;\n        length: number;\n    }\n    enum DiagnosticCategory {\n        Warning = 0,\n        Error = 1,\n        Suggestion = 2,\n        Message = 3,\n    }\n    enum ModuleResolutionKind {\n        Classic = 1,\n        /**\n         * @deprecated\n         * `NodeJs` was renamed to `Node10` to better reflect the version of Node that it targets.\n         * Use the new name or consider switching to a modern module resolution target.\n         */\n        NodeJs = 2,\n        Node10 = 2,\n        Node16 = 3,\n        NodeNext = 99,\n        Bundler = 100,\n    }\n    enum ModuleDetectionKind {\n        /**\n         * Files with imports, exports and/or import.meta are considered modules\n         */\n        Legacy = 1,\n        /**\n         * Legacy, but also files with jsx under react-jsx or react-jsxdev and esm mode files under moduleResolution: node16+\n         */\n        Auto = 2,\n        /**\n         * Consider all non-declaration files modules, regardless of present syntax\n         */\n        Force = 3,\n    }\n    interface PluginImport {\n        name: string;\n    }\n    interface ProjectReference {\n        /** A normalized path on disk */\n        path: string;\n        /** The path as the user originally wrote it */\n        originalPath?: string;\n        /** @deprecated */\n        prepend?: boolean;\n        /** True if it is intended that this reference form a circularity */\n        circular?: boolean;\n    }\n    enum WatchFileKind {\n        FixedPollingInterval = 0,\n        PriorityPollingInterval = 1,\n        DynamicPriorityPolling = 2,\n        FixedChunkSizePolling = 3,\n        UseFsEvents = 4,\n        UseFsEventsOnParentDirectory = 5,\n    }\n    enum WatchDirectoryKind {\n        UseFsEvents = 0,\n        FixedPollingInterval = 1,\n        DynamicPriorityPolling = 2,\n        FixedChunkSizePolling = 3,\n    }\n    enum PollingWatchKind {\n        FixedInterval = 0,\n        PriorityInterval = 1,\n        DynamicPriority = 2,\n        FixedChunkSize = 3,\n    }\n    type CompilerOptionsValue = string | number | boolean | (string | number)[] | string[] | MapLike<string[]> | PluginImport[] | ProjectReference[] | null | undefined;\n    interface CompilerOptions {\n        allowImportingTsExtensions?: boolean;\n        allowJs?: boolean;\n        allowArbitraryExtensions?: boolean;\n        allowSyntheticDefaultImports?: boolean;\n        allowUmdGlobalAccess?: boolean;\n        allowUnreachableCode?: boolean;\n        allowUnusedLabels?: boolean;\n        alwaysStrict?: boolean;\n        baseUrl?: string;\n        /** @deprecated */\n        charset?: string;\n        checkJs?: boolean;\n        customConditions?: string[];\n        declaration?: boolean;\n        declarationMap?: boolean;\n        emitDeclarationOnly?: boolean;\n        declarationDir?: string;\n        disableSizeLimit?: boolean;\n        disableSourceOfProjectReferenceRedirect?: boolean;\n        disableSolutionSearching?: boolean;\n        disableReferencedProjectLoad?: boolean;\n        downlevelIteration?: boolean;\n        emitBOM?: boolean;\n        emitDecoratorMetadata?: boolean;\n        exactOptionalPropertyTypes?: boolean;\n        experimentalDecorators?: boolean;\n        forceConsistentCasingInFileNames?: boolean;\n        ignoreDeprecations?: string;\n        importHelpers?: boolean;\n        /** @deprecated */\n        importsNotUsedAsValues?: ImportsNotUsedAsValues;\n        inlineSourceMap?: boolean;\n        inlineSources?: boolean;\n        isolatedModules?: boolean;\n        isolatedDeclarations?: boolean;\n        jsx?: JsxEmit;\n        /** @deprecated */\n        keyofStringsOnly?: boolean;\n        lib?: string[];\n        libReplacement?: boolean;\n        locale?: string;\n        mapRoot?: string;\n        maxNodeModuleJsDepth?: number;\n        module?: ModuleKind;\n        moduleResolution?: ModuleResolutionKind;\n        moduleSuffixes?: string[];\n        moduleDetection?: ModuleDetectionKind;\n        newLine?: NewLineKind;\n        noEmit?: boolean;\n        noCheck?: boolean;\n        noEmitHelpers?: boolean;\n        noEmitOnError?: boolean;\n        noErrorTruncation?: boolean;\n        noFallthroughCasesInSwitch?: boolean;\n        noImplicitAny?: boolean;\n        noImplicitReturns?: boolean;\n        noImplicitThis?: boolean;\n        /** @deprecated */\n        noStrictGenericChecks?: boolean;\n        noUnusedLocals?: boolean;\n        noUnusedParameters?: boolean;\n        /** @deprecated */\n        noImplicitUseStrict?: boolean;\n        noPropertyAccessFromIndexSignature?: boolean;\n        assumeChangesOnlyAffectDirectDependencies?: boolean;\n        noLib?: boolean;\n        noResolve?: boolean;\n        noUncheckedIndexedAccess?: boolean;\n        /** @deprecated */\n        out?: string;\n        outDir?: string;\n        outFile?: string;\n        paths?: MapLike<string[]>;\n        preserveConstEnums?: boolean;\n        noImplicitOverride?: boolean;\n        preserveSymlinks?: boolean;\n        /** @deprecated */\n        preserveValueImports?: boolean;\n        project?: string;\n        reactNamespace?: string;\n        jsxFactory?: string;\n        jsxFragmentFactory?: string;\n        jsxImportSource?: string;\n        composite?: boolean;\n        incremental?: boolean;\n        tsBuildInfoFile?: string;\n        removeComments?: boolean;\n        resolvePackageJsonExports?: boolean;\n        resolvePackageJsonImports?: boolean;\n        rewriteRelativeImportExtensions?: boolean;\n        rootDir?: string;\n        rootDirs?: string[];\n        skipLibCheck?: boolean;\n        skipDefaultLibCheck?: boolean;\n        sourceMap?: boolean;\n        sourceRoot?: string;\n        strict?: boolean;\n        strictFunctionTypes?: boolean;\n        strictBindCallApply?: boolean;\n        strictNullChecks?: boolean;\n        strictPropertyInitialization?: boolean;\n        strictBuiltinIteratorReturn?: boolean;\n        stripInternal?: boolean;\n        /** @deprecated */\n        suppressExcessPropertyErrors?: boolean;\n        /** @deprecated */\n        suppressImplicitAnyIndexErrors?: boolean;\n        target?: ScriptTarget;\n        traceResolution?: boolean;\n        useUnknownInCatchVariables?: boolean;\n        noUncheckedSideEffectImports?: boolean;\n        resolveJsonModule?: boolean;\n        types?: string[];\n        /** Paths used to compute primary types search locations */\n        typeRoots?: string[];\n        verbatimModuleSyntax?: boolean;\n        erasableSyntaxOnly?: boolean;\n        esModuleInterop?: boolean;\n        useDefineForClassFields?: boolean;\n        [option: string]: CompilerOptionsValue | TsConfigSourceFile | undefined;\n    }\n    interface WatchOptions {\n        watchFile?: WatchFileKind;\n        watchDirectory?: WatchDirectoryKind;\n        fallbackPolling?: PollingWatchKind;\n        synchronousWatchDirectory?: boolean;\n        excludeDirectories?: string[];\n        excludeFiles?: string[];\n        [option: string]: CompilerOptionsValue | undefined;\n    }\n    interface TypeAcquisition {\n        enable?: boolean;\n        include?: string[];\n        exclude?: string[];\n        disableFilenameBasedTypeAcquisition?: boolean;\n        [option: string]: CompilerOptionsValue | undefined;\n    }\n    enum ModuleKind {\n        None = 0,\n        CommonJS = 1,\n        AMD = 2,\n        UMD = 3,\n        System = 4,\n        ES2015 = 5,\n        ES2020 = 6,\n        ES2022 = 7,\n        ESNext = 99,\n        Node16 = 100,\n        Node18 = 101,\n        NodeNext = 199,\n        Preserve = 200,\n    }\n    enum JsxEmit {\n        None = 0,\n        Preserve = 1,\n        React = 2,\n        ReactNative = 3,\n        ReactJSX = 4,\n        ReactJSXDev = 5,\n    }\n    /** @deprecated */\n    enum ImportsNotUsedAsValues {\n        Remove = 0,\n        Preserve = 1,\n        Error = 2,\n    }\n    enum NewLineKind {\n        CarriageReturnLineFeed = 0,\n        LineFeed = 1,\n    }\n    interface LineAndCharacter {\n        /** 0-based. */\n        line: number;\n        character: number;\n    }\n    enum ScriptKind {\n        Unknown = 0,\n        JS = 1,\n        JSX = 2,\n        TS = 3,\n        TSX = 4,\n        External = 5,\n        JSON = 6,\n        /**\n         * Used on extensions that doesn\'t define the ScriptKind but the content defines it.\n         * Deferred extensions are going to be included in all project contexts.\n         */\n        Deferred = 7,\n    }\n    enum ScriptTarget {\n        /** @deprecated */\n        ES3 = 0,\n        ES5 = 1,\n        ES2015 = 2,\n        ES2016 = 3,\n        ES2017 = 4,\n        ES2018 = 5,\n        ES2019 = 6,\n        ES2020 = 7,\n        ES2021 = 8,\n        ES2022 = 9,\n        ES2023 = 10,\n        ES2024 = 11,\n        ESNext = 99,\n        JSON = 100,\n        Latest = 99,\n    }\n    enum LanguageVariant {\n        Standard = 0,\n        JSX = 1,\n    }\n    /** Either a parsed command line or a parsed tsconfig.json */\n    interface ParsedCommandLine {\n        options: CompilerOptions;\n        typeAcquisition?: TypeAcquisition;\n        fileNames: string[];\n        projectReferences?: readonly ProjectReference[];\n        watchOptions?: WatchOptions;\n        raw?: any;\n        errors: Diagnostic[];\n        wildcardDirectories?: MapLike<WatchDirectoryFlags>;\n        compileOnSave?: boolean;\n    }\n    enum WatchDirectoryFlags {\n        None = 0,\n        Recursive = 1,\n    }\n    interface CreateProgramOptions {\n        rootNames: readonly string[];\n        options: CompilerOptions;\n        projectReferences?: readonly ProjectReference[];\n        host?: CompilerHost;\n        oldProgram?: Program;\n        configFileParsingDiagnostics?: readonly Diagnostic[];\n    }\n    interface ModuleResolutionHost {\n        fileExists(fileName: string): boolean;\n        readFile(fileName: string): string | undefined;\n        trace?(s: string): void;\n        directoryExists?(directoryName: string): boolean;\n        /**\n         * Resolve a symbolic link.\n         * @see https://nodejs.org/api/fs.html#fs_fs_realpathsync_path_options\n         */\n        realpath?(path: string): string;\n        getCurrentDirectory?(): string;\n        getDirectories?(path: string): string[];\n        useCaseSensitiveFileNames?: boolean | (() => boolean) | undefined;\n    }\n    /**\n     * Used by services to specify the minimum host area required to set up source files under any compilation settings\n     */\n    interface MinimalResolutionCacheHost extends ModuleResolutionHost {\n        getCompilationSettings(): CompilerOptions;\n        getCompilerHost?(): CompilerHost | undefined;\n    }\n    /**\n     * Represents the result of module resolution.\n     * Module resolution will pick up tsx/jsx/js files even if \'--jsx\' and \'--allowJs\' are turned off.\n     * The Program will then filter results based on these flags.\n     *\n     * Prefer to return a `ResolvedModuleFull` so that the file type does not have to be inferred.\n     */\n    interface ResolvedModule {\n        /** Path of the file the module was resolved to. */\n        resolvedFileName: string;\n        /** True if `resolvedFileName` comes from `node_modules`. */\n        isExternalLibraryImport?: boolean;\n        /**\n         * True if the original module reference used a .ts extension to refer directly to a .ts file,\n         * which should produce an error during checking if emit is enabled.\n         */\n        resolvedUsingTsExtension?: boolean;\n    }\n    /**\n     * ResolvedModule with an explicitly provided `extension` property.\n     * Prefer this over `ResolvedModule`.\n     * If changing this, remember to change `moduleResolutionIsEqualTo`.\n     */\n    interface ResolvedModuleFull extends ResolvedModule {\n        /**\n         * Extension of resolvedFileName. This must match what\'s at the end of resolvedFileName.\n         * This is optional for backwards-compatibility, but will be added if not provided.\n         */\n        extension: string;\n        packageId?: PackageId;\n    }\n    /**\n     * Unique identifier with a package name and version.\n     * If changing this, remember to change `packageIdIsEqual`.\n     */\n    interface PackageId {\n        /**\n         * Name of the package.\n         * Should not include `@types`.\n         * If accessing a non-index file, this should include its name e.g. "foo/bar".\n         */\n        name: string;\n        /**\n         * Name of a submodule within this package.\n         * May be "".\n         */\n        subModuleName: string;\n        /** Version of the package, e.g. "1.2.3" */\n        version: string;\n    }\n    enum Extension {\n        Ts = ".ts",\n        Tsx = ".tsx",\n        Dts = ".d.ts",\n        Js = ".js",\n        Jsx = ".jsx",\n        Json = ".json",\n        TsBuildInfo = ".tsbuildinfo",\n        Mjs = ".mjs",\n        Mts = ".mts",\n        Dmts = ".d.mts",\n        Cjs = ".cjs",\n        Cts = ".cts",\n        Dcts = ".d.cts",\n    }\n    interface ResolvedModuleWithFailedLookupLocations {\n        readonly resolvedModule: ResolvedModuleFull | undefined;\n    }\n    interface ResolvedTypeReferenceDirective {\n        primary: boolean;\n        resolvedFileName: string | undefined;\n        packageId?: PackageId;\n        /** True if `resolvedFileName` comes from `node_modules`. */\n        isExternalLibraryImport?: boolean;\n    }\n    interface ResolvedTypeReferenceDirectiveWithFailedLookupLocations {\n        readonly resolvedTypeReferenceDirective: ResolvedTypeReferenceDirective | undefined;\n    }\n    interface CompilerHost extends ModuleResolutionHost {\n        getSourceFile(fileName: string, languageVersionOrOptions: ScriptTarget | CreateSourceFileOptions, onError?: (message: string) => void, shouldCreateNewSourceFile?: boolean): SourceFile | undefined;\n        getSourceFileByPath?(fileName: string, path: Path, languageVersionOrOptions: ScriptTarget | CreateSourceFileOptions, onError?: (message: string) => void, shouldCreateNewSourceFile?: boolean): SourceFile | undefined;\n        getCancellationToken?(): CancellationToken;\n        getDefaultLibFileName(options: CompilerOptions): string;\n        getDefaultLibLocation?(): string;\n        writeFile: WriteFileCallback;\n        getCurrentDirectory(): string;\n        getCanonicalFileName(fileName: string): string;\n        useCaseSensitiveFileNames(): boolean;\n        getNewLine(): string;\n        readDirectory?(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[], depth?: number): string[];\n        /** @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext */\n        resolveModuleNames?(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile?: SourceFile): (ResolvedModule | undefined)[];\n        /**\n         * Returns the module resolution cache used by a provided `resolveModuleNames` implementation so that any non-name module resolution operations (eg, package.json lookup) can reuse it\n         */\n        getModuleResolutionCache?(): ModuleResolutionCache | undefined;\n        /**\n         * @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext\n         *\n         * This method is a companion for \'resolveModuleNames\' and is used to resolve \'types\' references to actual type declaration files\n         */\n        resolveTypeReferenceDirectives?(typeReferenceDirectiveNames: string[] | readonly FileReference[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingFileMode?: ResolutionMode): (ResolvedTypeReferenceDirective | undefined)[];\n        resolveModuleNameLiterals?(moduleLiterals: readonly StringLiteralLike[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile, reusedNames: readonly StringLiteralLike[] | undefined): readonly ResolvedModuleWithFailedLookupLocations[];\n        resolveTypeReferenceDirectiveReferences?<T extends FileReference | string>(typeDirectiveReferences: readonly T[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile | undefined, reusedNames: readonly T[] | undefined): readonly ResolvedTypeReferenceDirectiveWithFailedLookupLocations[];\n        getEnvironmentVariable?(name: string): string | undefined;\n        /** If provided along with custom resolveModuleNames or resolveTypeReferenceDirectives, used to determine if unchanged file path needs to re-resolve modules/type reference directives */\n        hasInvalidatedResolutions?(filePath: Path): boolean;\n        createHash?(data: string): string;\n        getParsedCommandLine?(fileName: string): ParsedCommandLine | undefined;\n        jsDocParsingMode?: JSDocParsingMode;\n    }\n    interface SourceMapRange extends TextRange {\n        source?: SourceMapSource;\n    }\n    interface SourceMapSource {\n        fileName: string;\n        text: string;\n        skipTrivia?: (pos: number) => number;\n    }\n    interface SourceMapSource {\n        getLineAndCharacterOfPosition(pos: number): LineAndCharacter;\n    }\n    enum EmitFlags {\n        None = 0,\n        SingleLine = 1,\n        MultiLine = 2,\n        AdviseOnEmitNode = 4,\n        NoSubstitution = 8,\n        CapturesThis = 16,\n        NoLeadingSourceMap = 32,\n        NoTrailingSourceMap = 64,\n        NoSourceMap = 96,\n        NoNestedSourceMaps = 128,\n        NoTokenLeadingSourceMaps = 256,\n        NoTokenTrailingSourceMaps = 512,\n        NoTokenSourceMaps = 768,\n        NoLeadingComments = 1024,\n        NoTrailingComments = 2048,\n        NoComments = 3072,\n        NoNestedComments = 4096,\n        HelperName = 8192,\n        ExportName = 16384,\n        LocalName = 32768,\n        InternalName = 65536,\n        Indented = 131072,\n        NoIndentation = 262144,\n        AsyncFunctionBody = 524288,\n        ReuseTempVariableScope = 1048576,\n        CustomPrologue = 2097152,\n        NoHoisting = 4194304,\n        Iterator = 8388608,\n        NoAsciiEscaping = 16777216,\n    }\n    interface EmitHelperBase {\n        readonly name: string;\n        readonly scoped: boolean;\n        readonly text: string | ((node: EmitHelperUniqueNameCallback) => string);\n        readonly priority?: number;\n        readonly dependencies?: EmitHelper[];\n    }\n    interface ScopedEmitHelper extends EmitHelperBase {\n        readonly scoped: true;\n    }\n    interface UnscopedEmitHelper extends EmitHelperBase {\n        readonly scoped: false;\n        readonly text: string;\n    }\n    type EmitHelper = ScopedEmitHelper | UnscopedEmitHelper;\n    type EmitHelperUniqueNameCallback = (name: string) => string;\n    enum EmitHint {\n        SourceFile = 0,\n        Expression = 1,\n        IdentifierName = 2,\n        MappedTypeParameter = 3,\n        Unspecified = 4,\n        EmbeddedStatement = 5,\n        JsxAttributeValue = 6,\n        ImportTypeNodeAttributes = 7,\n    }\n    enum OuterExpressionKinds {\n        Parentheses = 1,\n        TypeAssertions = 2,\n        NonNullAssertions = 4,\n        PartiallyEmittedExpressions = 8,\n        ExpressionsWithTypeArguments = 16,\n        Satisfies = 32,\n        Assertions = 38,\n        All = 63,\n        ExcludeJSDocTypeAssertion = -2147483648,\n    }\n    type ImmediatelyInvokedFunctionExpression = CallExpression & {\n        readonly expression: FunctionExpression;\n    };\n    type ImmediatelyInvokedArrowFunction = CallExpression & {\n        readonly expression: ParenthesizedExpression & {\n            readonly expression: ArrowFunction;\n        };\n    };\n    interface NodeFactory {\n        createNodeArray<T extends Node>(elements?: readonly T[], hasTrailingComma?: boolean): NodeArray<T>;\n        createNumericLiteral(value: string | number, numericLiteralFlags?: TokenFlags): NumericLiteral;\n        createBigIntLiteral(value: string | PseudoBigInt): BigIntLiteral;\n        createStringLiteral(text: string, isSingleQuote?: boolean): StringLiteral;\n        createStringLiteralFromNode(sourceNode: PropertyNameLiteral | PrivateIdentifier, isSingleQuote?: boolean): StringLiteral;\n        createRegularExpressionLiteral(text: string): RegularExpressionLiteral;\n        createIdentifier(text: string): Identifier;\n        /**\n         * Create a unique temporary variable.\n         * @param recordTempVariable An optional callback used to record the temporary variable name. This\n         * should usually be a reference to `hoistVariableDeclaration` from a `TransformationContext`, but\n         * can be `undefined` if you plan to record the temporary variable manually.\n         * @param reservedInNestedScopes When `true`, reserves the temporary variable name in all nested scopes\n         * during emit so that the variable can be referenced in a nested function body. This is an alternative to\n         * setting `EmitFlags.ReuseTempVariableScope` on the nested function itself.\n         */\n        createTempVariable(recordTempVariable: ((node: Identifier) => void) | undefined, reservedInNestedScopes?: boolean): Identifier;\n        /**\n         * Create a unique temporary variable for use in a loop.\n         * @param reservedInNestedScopes When `true`, reserves the temporary variable name in all nested scopes\n         * during emit so that the variable can be referenced in a nested function body. This is an alternative to\n         * setting `EmitFlags.ReuseTempVariableScope` on the nested function itself.\n         */\n        createLoopVariable(reservedInNestedScopes?: boolean): Identifier;\n        /** Create a unique name based on the supplied text. */\n        createUniqueName(text: string, flags?: GeneratedIdentifierFlags): Identifier;\n        /** Create a unique name generated for a node. */\n        getGeneratedNameForNode(node: Node | undefined, flags?: GeneratedIdentifierFlags): Identifier;\n        createPrivateIdentifier(text: string): PrivateIdentifier;\n        createUniquePrivateName(text?: string): PrivateIdentifier;\n        getGeneratedPrivateNameForNode(node: Node): PrivateIdentifier;\n        createToken(token: SyntaxKind.SuperKeyword): SuperExpression;\n        createToken(token: SyntaxKind.ThisKeyword): ThisExpression;\n        createToken(token: SyntaxKind.NullKeyword): NullLiteral;\n        createToken(token: SyntaxKind.TrueKeyword): TrueLiteral;\n        createToken(token: SyntaxKind.FalseKeyword): FalseLiteral;\n        createToken(token: SyntaxKind.EndOfFileToken): EndOfFileToken;\n        createToken(token: SyntaxKind.Unknown): Token<SyntaxKind.Unknown>;\n        createToken<TKind extends PunctuationSyntaxKind>(token: TKind): PunctuationToken<TKind>;\n        createToken<TKind extends KeywordTypeSyntaxKind>(token: TKind): KeywordTypeNode<TKind>;\n        createToken<TKind extends ModifierSyntaxKind>(token: TKind): ModifierToken<TKind>;\n        createToken<TKind extends KeywordSyntaxKind>(token: TKind): KeywordToken<TKind>;\n        createSuper(): SuperExpression;\n        createThis(): ThisExpression;\n        createNull(): NullLiteral;\n        createTrue(): TrueLiteral;\n        createFalse(): FalseLiteral;\n        createModifier<T extends ModifierSyntaxKind>(kind: T): ModifierToken<T>;\n        createModifiersFromModifierFlags(flags: ModifierFlags): Modifier[] | undefined;\n        createQualifiedName(left: EntityName, right: string | Identifier): QualifiedName;\n        updateQualifiedName(node: QualifiedName, left: EntityName, right: Identifier): QualifiedName;\n        createComputedPropertyName(expression: Expression): ComputedPropertyName;\n        updateComputedPropertyName(node: ComputedPropertyName, expression: Expression): ComputedPropertyName;\n        createTypeParameterDeclaration(modifiers: readonly Modifier[] | undefined, name: string | Identifier, constraint?: TypeNode, defaultType?: TypeNode): TypeParameterDeclaration;\n        updateTypeParameterDeclaration(node: TypeParameterDeclaration, modifiers: readonly Modifier[] | undefined, name: Identifier, constraint: TypeNode | undefined, defaultType: TypeNode | undefined): TypeParameterDeclaration;\n        createParameterDeclaration(modifiers: readonly ModifierLike[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | BindingName, questionToken?: QuestionToken, type?: TypeNode, initializer?: Expression): ParameterDeclaration;\n        updateParameterDeclaration(node: ParameterDeclaration, modifiers: readonly ModifierLike[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | BindingName, questionToken: QuestionToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): ParameterDeclaration;\n        createDecorator(expression: Expression): Decorator;\n        updateDecorator(node: Decorator, expression: Expression): Decorator;\n        createPropertySignature(modifiers: readonly Modifier[] | undefined, name: PropertyName | string, questionToken: QuestionToken | undefined, type: TypeNode | undefined): PropertySignature;\n        updatePropertySignature(node: PropertySignature, modifiers: readonly Modifier[] | undefined, name: PropertyName, questionToken: QuestionToken | undefined, type: TypeNode | undefined): PropertySignature;\n        createPropertyDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | PropertyName, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): PropertyDeclaration;\n        updatePropertyDeclaration(node: PropertyDeclaration, modifiers: readonly ModifierLike[] | undefined, name: string | PropertyName, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): PropertyDeclaration;\n        createMethodSignature(modifiers: readonly Modifier[] | undefined, name: string | PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined): MethodSignature;\n        updateMethodSignature(node: MethodSignature, modifiers: readonly Modifier[] | undefined, name: PropertyName, questionToken: QuestionToken | undefined, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined): MethodSignature;\n        createMethodDeclaration(modifiers: readonly ModifierLike[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): MethodDeclaration;\n        updateMethodDeclaration(node: MethodDeclaration, modifiers: readonly ModifierLike[] | undefined, asteriskToken: AsteriskToken | undefined, name: PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): MethodDeclaration;\n        createConstructorDeclaration(modifiers: readonly ModifierLike[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined): ConstructorDeclaration;\n        updateConstructorDeclaration(node: ConstructorDeclaration, modifiers: readonly ModifierLike[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined): ConstructorDeclaration;\n        createGetAccessorDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | PropertyName, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): GetAccessorDeclaration;\n        updateGetAccessorDeclaration(node: GetAccessorDeclaration, modifiers: readonly ModifierLike[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): GetAccessorDeclaration;\n        createSetAccessorDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | PropertyName, parameters: readonly ParameterDeclaration[], body: Block | undefined): SetAccessorDeclaration;\n        updateSetAccessorDeclaration(node: SetAccessorDeclaration, modifiers: readonly ModifierLike[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], body: Block | undefined): SetAccessorDeclaration;\n        createCallSignature(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined): CallSignatureDeclaration;\n        updateCallSignature(node: CallSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined): CallSignatureDeclaration;\n        createConstructSignature(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined): ConstructSignatureDeclaration;\n        updateConstructSignature(node: ConstructSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined): ConstructSignatureDeclaration;\n        createIndexSignature(modifiers: readonly ModifierLike[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode): IndexSignatureDeclaration;\n        updateIndexSignature(node: IndexSignatureDeclaration, modifiers: readonly ModifierLike[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode): IndexSignatureDeclaration;\n        createTemplateLiteralTypeSpan(type: TypeNode, literal: TemplateMiddle | TemplateTail): TemplateLiteralTypeSpan;\n        updateTemplateLiteralTypeSpan(node: TemplateLiteralTypeSpan, type: TypeNode, literal: TemplateMiddle | TemplateTail): TemplateLiteralTypeSpan;\n        createClassStaticBlockDeclaration(body: Block): ClassStaticBlockDeclaration;\n        updateClassStaticBlockDeclaration(node: ClassStaticBlockDeclaration, body: Block): ClassStaticBlockDeclaration;\n        createKeywordTypeNode<TKind extends KeywordTypeSyntaxKind>(kind: TKind): KeywordTypeNode<TKind>;\n        createTypePredicateNode(assertsModifier: AssertsKeyword | undefined, parameterName: Identifier | ThisTypeNode | string, type: TypeNode | undefined): TypePredicateNode;\n        updateTypePredicateNode(node: TypePredicateNode, assertsModifier: AssertsKeyword | undefined, parameterName: Identifier | ThisTypeNode, type: TypeNode | undefined): TypePredicateNode;\n        createTypeReferenceNode(typeName: string | EntityName, typeArguments?: readonly TypeNode[]): TypeReferenceNode;\n        updateTypeReferenceNode(node: TypeReferenceNode, typeName: EntityName, typeArguments: NodeArray<TypeNode> | undefined): TypeReferenceNode;\n        createFunctionTypeNode(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode): FunctionTypeNode;\n        updateFunctionTypeNode(node: FunctionTypeNode, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode): FunctionTypeNode;\n        createConstructorTypeNode(modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode): ConstructorTypeNode;\n        updateConstructorTypeNode(node: ConstructorTypeNode, modifiers: readonly Modifier[] | undefined, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode): ConstructorTypeNode;\n        createTypeQueryNode(exprName: EntityName, typeArguments?: readonly TypeNode[]): TypeQueryNode;\n        updateTypeQueryNode(node: TypeQueryNode, exprName: EntityName, typeArguments?: readonly TypeNode[]): TypeQueryNode;\n        createTypeLiteralNode(members: readonly TypeElement[] | undefined): TypeLiteralNode;\n        updateTypeLiteralNode(node: TypeLiteralNode, members: NodeArray<TypeElement>): TypeLiteralNode;\n        createArrayTypeNode(elementType: TypeNode): ArrayTypeNode;\n        updateArrayTypeNode(node: ArrayTypeNode, elementType: TypeNode): ArrayTypeNode;\n        createTupleTypeNode(elements: readonly (TypeNode | NamedTupleMember)[]): TupleTypeNode;\n        updateTupleTypeNode(node: TupleTypeNode, elements: readonly (TypeNode | NamedTupleMember)[]): TupleTypeNode;\n        createNamedTupleMember(dotDotDotToken: DotDotDotToken | undefined, name: Identifier, questionToken: QuestionToken | undefined, type: TypeNode): NamedTupleMember;\n        updateNamedTupleMember(node: NamedTupleMember, dotDotDotToken: DotDotDotToken | undefined, name: Identifier, questionToken: QuestionToken | undefined, type: TypeNode): NamedTupleMember;\n        createOptionalTypeNode(type: TypeNode): OptionalTypeNode;\n        updateOptionalTypeNode(node: OptionalTypeNode, type: TypeNode): OptionalTypeNode;\n        createRestTypeNode(type: TypeNode): RestTypeNode;\n        updateRestTypeNode(node: RestTypeNode, type: TypeNode): RestTypeNode;\n        createUnionTypeNode(types: readonly TypeNode[]): UnionTypeNode;\n        updateUnionTypeNode(node: UnionTypeNode, types: NodeArray<TypeNode>): UnionTypeNode;\n        createIntersectionTypeNode(types: readonly TypeNode[]): IntersectionTypeNode;\n        updateIntersectionTypeNode(node: IntersectionTypeNode, types: NodeArray<TypeNode>): IntersectionTypeNode;\n        createConditionalTypeNode(checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode): ConditionalTypeNode;\n        updateConditionalTypeNode(node: ConditionalTypeNode, checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode): ConditionalTypeNode;\n        createInferTypeNode(typeParameter: TypeParameterDeclaration): InferTypeNode;\n        updateInferTypeNode(node: InferTypeNode, typeParameter: TypeParameterDeclaration): InferTypeNode;\n        createImportTypeNode(argument: TypeNode, attributes?: ImportAttributes, qualifier?: EntityName, typeArguments?: readonly TypeNode[], isTypeOf?: boolean): ImportTypeNode;\n        updateImportTypeNode(node: ImportTypeNode, argument: TypeNode, attributes: ImportAttributes | undefined, qualifier: EntityName | undefined, typeArguments: readonly TypeNode[] | undefined, isTypeOf?: boolean): ImportTypeNode;\n        createParenthesizedType(type: TypeNode): ParenthesizedTypeNode;\n        updateParenthesizedType(node: ParenthesizedTypeNode, type: TypeNode): ParenthesizedTypeNode;\n        createThisTypeNode(): ThisTypeNode;\n        createTypeOperatorNode(operator: SyntaxKind.KeyOfKeyword | SyntaxKind.UniqueKeyword | SyntaxKind.ReadonlyKeyword, type: TypeNode): TypeOperatorNode;\n        updateTypeOperatorNode(node: TypeOperatorNode, type: TypeNode): TypeOperatorNode;\n        createIndexedAccessTypeNode(objectType: TypeNode, indexType: TypeNode): IndexedAccessTypeNode;\n        updateIndexedAccessTypeNode(node: IndexedAccessTypeNode, objectType: TypeNode, indexType: TypeNode): IndexedAccessTypeNode;\n        createMappedTypeNode(readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined, members: NodeArray<TypeElement> | undefined): MappedTypeNode;\n        updateMappedTypeNode(node: MappedTypeNode, readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined, members: NodeArray<TypeElement> | undefined): MappedTypeNode;\n        createLiteralTypeNode(literal: LiteralTypeNode["literal"]): LiteralTypeNode;\n        updateLiteralTypeNode(node: LiteralTypeNode, literal: LiteralTypeNode["literal"]): LiteralTypeNode;\n        createTemplateLiteralType(head: TemplateHead, templateSpans: readonly TemplateLiteralTypeSpan[]): TemplateLiteralTypeNode;\n        updateTemplateLiteralType(node: TemplateLiteralTypeNode, head: TemplateHead, templateSpans: readonly TemplateLiteralTypeSpan[]): TemplateLiteralTypeNode;\n        createObjectBindingPattern(elements: readonly BindingElement[]): ObjectBindingPattern;\n        updateObjectBindingPattern(node: ObjectBindingPattern, elements: readonly BindingElement[]): ObjectBindingPattern;\n        createArrayBindingPattern(elements: readonly ArrayBindingElement[]): ArrayBindingPattern;\n        updateArrayBindingPattern(node: ArrayBindingPattern, elements: readonly ArrayBindingElement[]): ArrayBindingPattern;\n        createBindingElement(dotDotDotToken: DotDotDotToken | undefined, propertyName: string | PropertyName | undefined, name: string | BindingName, initializer?: Expression): BindingElement;\n        updateBindingElement(node: BindingElement, dotDotDotToken: DotDotDotToken | undefined, propertyName: PropertyName | undefined, name: BindingName, initializer: Expression | undefined): BindingElement;\n        createArrayLiteralExpression(elements?: readonly Expression[], multiLine?: boolean): ArrayLiteralExpression;\n        updateArrayLiteralExpression(node: ArrayLiteralExpression, elements: readonly Expression[]): ArrayLiteralExpression;\n        createObjectLiteralExpression(properties?: readonly ObjectLiteralElementLike[], multiLine?: boolean): ObjectLiteralExpression;\n        updateObjectLiteralExpression(node: ObjectLiteralExpression, properties: readonly ObjectLiteralElementLike[]): ObjectLiteralExpression;\n        createPropertyAccessExpression(expression: Expression, name: string | MemberName): PropertyAccessExpression;\n        updatePropertyAccessExpression(node: PropertyAccessExpression, expression: Expression, name: MemberName): PropertyAccessExpression;\n        createPropertyAccessChain(expression: Expression, questionDotToken: QuestionDotToken | undefined, name: string | MemberName): PropertyAccessChain;\n        updatePropertyAccessChain(node: PropertyAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, name: MemberName): PropertyAccessChain;\n        createElementAccessExpression(expression: Expression, index: number | Expression): ElementAccessExpression;\n        updateElementAccessExpression(node: ElementAccessExpression, expression: Expression, argumentExpression: Expression): ElementAccessExpression;\n        createElementAccessChain(expression: Expression, questionDotToken: QuestionDotToken | undefined, index: number | Expression): ElementAccessChain;\n        updateElementAccessChain(node: ElementAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, argumentExpression: Expression): ElementAccessChain;\n        createCallExpression(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined): CallExpression;\n        updateCallExpression(node: CallExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]): CallExpression;\n        createCallChain(expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined): CallChain;\n        updateCallChain(node: CallChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]): CallChain;\n        createNewExpression(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined): NewExpression;\n        updateNewExpression(node: NewExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined): NewExpression;\n        createTaggedTemplateExpression(tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral): TaggedTemplateExpression;\n        updateTaggedTemplateExpression(node: TaggedTemplateExpression, tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral): TaggedTemplateExpression;\n        createTypeAssertion(type: TypeNode, expression: Expression): TypeAssertion;\n        updateTypeAssertion(node: TypeAssertion, type: TypeNode, expression: Expression): TypeAssertion;\n        createParenthesizedExpression(expression: Expression): ParenthesizedExpression;\n        updateParenthesizedExpression(node: ParenthesizedExpression, expression: Expression): ParenthesizedExpression;\n        createFunctionExpression(modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[] | undefined, type: TypeNode | undefined, body: Block): FunctionExpression;\n        updateFunctionExpression(node: FunctionExpression, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block): FunctionExpression;\n        createArrowFunction(modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken | undefined, body: ConciseBody): ArrowFunction;\n        updateArrowFunction(node: ArrowFunction, modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken, body: ConciseBody): ArrowFunction;\n        createDeleteExpression(expression: Expression): DeleteExpression;\n        updateDeleteExpression(node: DeleteExpression, expression: Expression): DeleteExpression;\n        createTypeOfExpression(expression: Expression): TypeOfExpression;\n        updateTypeOfExpression(node: TypeOfExpression, expression: Expression): TypeOfExpression;\n        createVoidExpression(expression: Expression): VoidExpression;\n        updateVoidExpression(node: VoidExpression, expression: Expression): VoidExpression;\n        createAwaitExpression(expression: Expression): AwaitExpression;\n        updateAwaitExpression(node: AwaitExpression, expression: Expression): AwaitExpression;\n        createPrefixUnaryExpression(operator: PrefixUnaryOperator, operand: Expression): PrefixUnaryExpression;\n        updatePrefixUnaryExpression(node: PrefixUnaryExpression, operand: Expression): PrefixUnaryExpression;\n        createPostfixUnaryExpression(operand: Expression, operator: PostfixUnaryOperator): PostfixUnaryExpression;\n        updatePostfixUnaryExpression(node: PostfixUnaryExpression, operand: Expression): PostfixUnaryExpression;\n        createBinaryExpression(left: Expression, operator: BinaryOperator | BinaryOperatorToken, right: Expression): BinaryExpression;\n        updateBinaryExpression(node: BinaryExpression, left: Expression, operator: BinaryOperator | BinaryOperatorToken, right: Expression): BinaryExpression;\n        createConditionalExpression(condition: Expression, questionToken: QuestionToken | undefined, whenTrue: Expression, colonToken: ColonToken | undefined, whenFalse: Expression): ConditionalExpression;\n        updateConditionalExpression(node: ConditionalExpression, condition: Expression, questionToken: QuestionToken, whenTrue: Expression, colonToken: ColonToken, whenFalse: Expression): ConditionalExpression;\n        createTemplateExpression(head: TemplateHead, templateSpans: readonly TemplateSpan[]): TemplateExpression;\n        updateTemplateExpression(node: TemplateExpression, head: TemplateHead, templateSpans: readonly TemplateSpan[]): TemplateExpression;\n        createTemplateHead(text: string, rawText?: string, templateFlags?: TokenFlags): TemplateHead;\n        createTemplateHead(text: string | undefined, rawText: string, templateFlags?: TokenFlags): TemplateHead;\n        createTemplateMiddle(text: string, rawText?: string, templateFlags?: TokenFlags): TemplateMiddle;\n        createTemplateMiddle(text: string | undefined, rawText: string, templateFlags?: TokenFlags): TemplateMiddle;\n        createTemplateTail(text: string, rawText?: string, templateFlags?: TokenFlags): TemplateTail;\n        createTemplateTail(text: string | undefined, rawText: string, templateFlags?: TokenFlags): TemplateTail;\n        createNoSubstitutionTemplateLiteral(text: string, rawText?: string): NoSubstitutionTemplateLiteral;\n        createNoSubstitutionTemplateLiteral(text: string | undefined, rawText: string): NoSubstitutionTemplateLiteral;\n        createYieldExpression(asteriskToken: AsteriskToken, expression: Expression): YieldExpression;\n        createYieldExpression(asteriskToken: undefined, expression: Expression | undefined): YieldExpression;\n        updateYieldExpression(node: YieldExpression, asteriskToken: AsteriskToken | undefined, expression: Expression | undefined): YieldExpression;\n        createSpreadElement(expression: Expression): SpreadElement;\n        updateSpreadElement(node: SpreadElement, expression: Expression): SpreadElement;\n        createClassExpression(modifiers: readonly ModifierLike[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]): ClassExpression;\n        updateClassExpression(node: ClassExpression, modifiers: readonly ModifierLike[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]): ClassExpression;\n        createOmittedExpression(): OmittedExpression;\n        createExpressionWithTypeArguments(expression: Expression, typeArguments: readonly TypeNode[] | undefined): ExpressionWithTypeArguments;\n        updateExpressionWithTypeArguments(node: ExpressionWithTypeArguments, expression: Expression, typeArguments: readonly TypeNode[] | undefined): ExpressionWithTypeArguments;\n        createAsExpression(expression: Expression, type: TypeNode): AsExpression;\n        updateAsExpression(node: AsExpression, expression: Expression, type: TypeNode): AsExpression;\n        createNonNullExpression(expression: Expression): NonNullExpression;\n        updateNonNullExpression(node: NonNullExpression, expression: Expression): NonNullExpression;\n        createNonNullChain(expression: Expression): NonNullChain;\n        updateNonNullChain(node: NonNullChain, expression: Expression): NonNullChain;\n        createMetaProperty(keywordToken: MetaProperty["keywordToken"], name: Identifier): MetaProperty;\n        updateMetaProperty(node: MetaProperty, name: Identifier): MetaProperty;\n        createSatisfiesExpression(expression: Expression, type: TypeNode): SatisfiesExpression;\n        updateSatisfiesExpression(node: SatisfiesExpression, expression: Expression, type: TypeNode): SatisfiesExpression;\n        createTemplateSpan(expression: Expression, literal: TemplateMiddle | TemplateTail): TemplateSpan;\n        updateTemplateSpan(node: TemplateSpan, expression: Expression, literal: TemplateMiddle | TemplateTail): TemplateSpan;\n        createSemicolonClassElement(): SemicolonClassElement;\n        createBlock(statements: readonly Statement[], multiLine?: boolean): Block;\n        updateBlock(node: Block, statements: readonly Statement[]): Block;\n        createVariableStatement(modifiers: readonly ModifierLike[] | undefined, declarationList: VariableDeclarationList | readonly VariableDeclaration[]): VariableStatement;\n        updateVariableStatement(node: VariableStatement, modifiers: readonly ModifierLike[] | undefined, declarationList: VariableDeclarationList): VariableStatement;\n        createEmptyStatement(): EmptyStatement;\n        createExpressionStatement(expression: Expression): ExpressionStatement;\n        updateExpressionStatement(node: ExpressionStatement, expression: Expression): ExpressionStatement;\n        createIfStatement(expression: Expression, thenStatement: Statement, elseStatement?: Statement): IfStatement;\n        updateIfStatement(node: IfStatement, expression: Expression, thenStatement: Statement, elseStatement: Statement | undefined): IfStatement;\n        createDoStatement(statement: Statement, expression: Expression): DoStatement;\n        updateDoStatement(node: DoStatement, statement: Statement, expression: Expression): DoStatement;\n        createWhileStatement(expression: Expression, statement: Statement): WhileStatement;\n        updateWhileStatement(node: WhileStatement, expression: Expression, statement: Statement): WhileStatement;\n        createForStatement(initializer: ForInitializer | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement): ForStatement;\n        updateForStatement(node: ForStatement, initializer: ForInitializer | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement): ForStatement;\n        createForInStatement(initializer: ForInitializer, expression: Expression, statement: Statement): ForInStatement;\n        updateForInStatement(node: ForInStatement, initializer: ForInitializer, expression: Expression, statement: Statement): ForInStatement;\n        createForOfStatement(awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement): ForOfStatement;\n        updateForOfStatement(node: ForOfStatement, awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement): ForOfStatement;\n        createContinueStatement(label?: string | Identifier): ContinueStatement;\n        updateContinueStatement(node: ContinueStatement, label: Identifier | undefined): ContinueStatement;\n        createBreakStatement(label?: string | Identifier): BreakStatement;\n        updateBreakStatement(node: BreakStatement, label: Identifier | undefined): BreakStatement;\n        createReturnStatement(expression?: Expression): ReturnStatement;\n        updateReturnStatement(node: ReturnStatement, expression: Expression | undefined): ReturnStatement;\n        createWithStatement(expression: Expression, statement: Statement): WithStatement;\n        updateWithStatement(node: WithStatement, expression: Expression, statement: Statement): WithStatement;\n        createSwitchStatement(expression: Expression, caseBlock: CaseBlock): SwitchStatement;\n        updateSwitchStatement(node: SwitchStatement, expression: Expression, caseBlock: CaseBlock): SwitchStatement;\n        createLabeledStatement(label: string | Identifier, statement: Statement): LabeledStatement;\n        updateLabeledStatement(node: LabeledStatement, label: Identifier, statement: Statement): LabeledStatement;\n        createThrowStatement(expression: Expression): ThrowStatement;\n        updateThrowStatement(node: ThrowStatement, expression: Expression): ThrowStatement;\n        createTryStatement(tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined): TryStatement;\n        updateTryStatement(node: TryStatement, tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined): TryStatement;\n        createDebuggerStatement(): DebuggerStatement;\n        createVariableDeclaration(name: string | BindingName, exclamationToken?: ExclamationToken, type?: TypeNode, initializer?: Expression): VariableDeclaration;\n        updateVariableDeclaration(node: VariableDeclaration, name: BindingName, exclamationToken: ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): VariableDeclaration;\n        createVariableDeclarationList(declarations: readonly VariableDeclaration[], flags?: NodeFlags): VariableDeclarationList;\n        updateVariableDeclarationList(node: VariableDeclarationList, declarations: readonly VariableDeclaration[]): VariableDeclarationList;\n        createFunctionDeclaration(modifiers: readonly ModifierLike[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): FunctionDeclaration;\n        updateFunctionDeclaration(node: FunctionDeclaration, modifiers: readonly ModifierLike[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined): FunctionDeclaration;\n        createClassDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]): ClassDeclaration;\n        updateClassDeclaration(node: ClassDeclaration, modifiers: readonly ModifierLike[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]): ClassDeclaration;\n        createInterfaceDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]): InterfaceDeclaration;\n        updateInterfaceDeclaration(node: InterfaceDeclaration, modifiers: readonly ModifierLike[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]): InterfaceDeclaration;\n        createTypeAliasDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode): TypeAliasDeclaration;\n        updateTypeAliasDeclaration(node: TypeAliasDeclaration, modifiers: readonly ModifierLike[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode): TypeAliasDeclaration;\n        createEnumDeclaration(modifiers: readonly ModifierLike[] | undefined, name: string | Identifier, members: readonly EnumMember[]): EnumDeclaration;\n        updateEnumDeclaration(node: EnumDeclaration, modifiers: readonly ModifierLike[] | undefined, name: Identifier, members: readonly EnumMember[]): EnumDeclaration;\n        createModuleDeclaration(modifiers: readonly ModifierLike[] | undefined, name: ModuleName, body: ModuleBody | undefined, flags?: NodeFlags): ModuleDeclaration;\n        updateModuleDeclaration(node: ModuleDeclaration, modifiers: readonly ModifierLike[] | undefined, name: ModuleName, body: ModuleBody | undefined): ModuleDeclaration;\n        createModuleBlock(statements: readonly Statement[]): ModuleBlock;\n        updateModuleBlock(node: ModuleBlock, statements: readonly Statement[]): ModuleBlock;\n        createCaseBlock(clauses: readonly CaseOrDefaultClause[]): CaseBlock;\n        updateCaseBlock(node: CaseBlock, clauses: readonly CaseOrDefaultClause[]): CaseBlock;\n        createNamespaceExportDeclaration(name: string | Identifier): NamespaceExportDeclaration;\n        updateNamespaceExportDeclaration(node: NamespaceExportDeclaration, name: Identifier): NamespaceExportDeclaration;\n        createImportEqualsDeclaration(modifiers: readonly ModifierLike[] | undefined, isTypeOnly: boolean, name: string | Identifier, moduleReference: ModuleReference): ImportEqualsDeclaration;\n        updateImportEqualsDeclaration(node: ImportEqualsDeclaration, modifiers: readonly ModifierLike[] | undefined, isTypeOnly: boolean, name: Identifier, moduleReference: ModuleReference): ImportEqualsDeclaration;\n        createImportDeclaration(modifiers: readonly ModifierLike[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression, attributes?: ImportAttributes): ImportDeclaration;\n        updateImportDeclaration(node: ImportDeclaration, modifiers: readonly ModifierLike[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression, attributes: ImportAttributes | undefined): ImportDeclaration;\n        createImportClause(isTypeOnly: boolean, name: Identifier | undefined, namedBindings: NamedImportBindings | undefined): ImportClause;\n        updateImportClause(node: ImportClause, isTypeOnly: boolean, name: Identifier | undefined, namedBindings: NamedImportBindings | undefined): ImportClause;\n        /** @deprecated */ createAssertClause(elements: NodeArray<AssertEntry>, multiLine?: boolean): AssertClause;\n        /** @deprecated */ updateAssertClause(node: AssertClause, elements: NodeArray<AssertEntry>, multiLine?: boolean): AssertClause;\n        /** @deprecated */ createAssertEntry(name: AssertionKey, value: Expression): AssertEntry;\n        /** @deprecated */ updateAssertEntry(node: AssertEntry, name: AssertionKey, value: Expression): AssertEntry;\n        /** @deprecated */ createImportTypeAssertionContainer(clause: AssertClause, multiLine?: boolean): ImportTypeAssertionContainer;\n        /** @deprecated */ updateImportTypeAssertionContainer(node: ImportTypeAssertionContainer, clause: AssertClause, multiLine?: boolean): ImportTypeAssertionContainer;\n        createImportAttributes(elements: NodeArray<ImportAttribute>, multiLine?: boolean): ImportAttributes;\n        updateImportAttributes(node: ImportAttributes, elements: NodeArray<ImportAttribute>, multiLine?: boolean): ImportAttributes;\n        createImportAttribute(name: ImportAttributeName, value: Expression): ImportAttribute;\n        updateImportAttribute(node: ImportAttribute, name: ImportAttributeName, value: Expression): ImportAttribute;\n        createNamespaceImport(name: Identifier): NamespaceImport;\n        updateNamespaceImport(node: NamespaceImport, name: Identifier): NamespaceImport;\n        createNamespaceExport(name: ModuleExportName): NamespaceExport;\n        updateNamespaceExport(node: NamespaceExport, name: ModuleExportName): NamespaceExport;\n        createNamedImports(elements: readonly ImportSpecifier[]): NamedImports;\n        updateNamedImports(node: NamedImports, elements: readonly ImportSpecifier[]): NamedImports;\n        createImportSpecifier(isTypeOnly: boolean, propertyName: ModuleExportName | undefined, name: Identifier): ImportSpecifier;\n        updateImportSpecifier(node: ImportSpecifier, isTypeOnly: boolean, propertyName: ModuleExportName | undefined, name: Identifier): ImportSpecifier;\n        createExportAssignment(modifiers: readonly ModifierLike[] | undefined, isExportEquals: boolean | undefined, expression: Expression): ExportAssignment;\n        updateExportAssignment(node: ExportAssignment, modifiers: readonly ModifierLike[] | undefined, expression: Expression): ExportAssignment;\n        createExportDeclaration(modifiers: readonly ModifierLike[] | undefined, isTypeOnly: boolean, exportClause: NamedExportBindings | undefined, moduleSpecifier?: Expression, attributes?: ImportAttributes): ExportDeclaration;\n        updateExportDeclaration(node: ExportDeclaration, modifiers: readonly ModifierLike[] | undefined, isTypeOnly: boolean, exportClause: NamedExportBindings | undefined, moduleSpecifier: Expression | undefined, attributes: ImportAttributes | undefined): ExportDeclaration;\n        createNamedExports(elements: readonly ExportSpecifier[]): NamedExports;\n        updateNamedExports(node: NamedExports, elements: readonly ExportSpecifier[]): NamedExports;\n        createExportSpecifier(isTypeOnly: boolean, propertyName: string | ModuleExportName | undefined, name: string | ModuleExportName): ExportSpecifier;\n        updateExportSpecifier(node: ExportSpecifier, isTypeOnly: boolean, propertyName: ModuleExportName | undefined, name: ModuleExportName): ExportSpecifier;\n        createExternalModuleReference(expression: Expression): ExternalModuleReference;\n        updateExternalModuleReference(node: ExternalModuleReference, expression: Expression): ExternalModuleReference;\n        createJSDocAllType(): JSDocAllType;\n        createJSDocUnknownType(): JSDocUnknownType;\n        createJSDocNonNullableType(type: TypeNode, postfix?: boolean): JSDocNonNullableType;\n        updateJSDocNonNullableType(node: JSDocNonNullableType, type: TypeNode): JSDocNonNullableType;\n        createJSDocNullableType(type: TypeNode, postfix?: boolean): JSDocNullableType;\n        updateJSDocNullableType(node: JSDocNullableType, type: TypeNode): JSDocNullableType;\n        createJSDocOptionalType(type: TypeNode): JSDocOptionalType;\n        updateJSDocOptionalType(node: JSDocOptionalType, type: TypeNode): JSDocOptionalType;\n        createJSDocFunctionType(parameters: readonly ParameterDeclaration[], type: TypeNode | undefined): JSDocFunctionType;\n        updateJSDocFunctionType(node: JSDocFunctionType, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined): JSDocFunctionType;\n        createJSDocVariadicType(type: TypeNode): JSDocVariadicType;\n        updateJSDocVariadicType(node: JSDocVariadicType, type: TypeNode): JSDocVariadicType;\n        createJSDocNamepathType(type: TypeNode): JSDocNamepathType;\n        updateJSDocNamepathType(node: JSDocNamepathType, type: TypeNode): JSDocNamepathType;\n        createJSDocTypeExpression(type: TypeNode): JSDocTypeExpression;\n        updateJSDocTypeExpression(node: JSDocTypeExpression, type: TypeNode): JSDocTypeExpression;\n        createJSDocNameReference(name: EntityName | JSDocMemberName): JSDocNameReference;\n        updateJSDocNameReference(node: JSDocNameReference, name: EntityName | JSDocMemberName): JSDocNameReference;\n        createJSDocMemberName(left: EntityName | JSDocMemberName, right: Identifier): JSDocMemberName;\n        updateJSDocMemberName(node: JSDocMemberName, left: EntityName | JSDocMemberName, right: Identifier): JSDocMemberName;\n        createJSDocLink(name: EntityName | JSDocMemberName | undefined, text: string): JSDocLink;\n        updateJSDocLink(node: JSDocLink, name: EntityName | JSDocMemberName | undefined, text: string): JSDocLink;\n        createJSDocLinkCode(name: EntityName | JSDocMemberName | undefined, text: string): JSDocLinkCode;\n        updateJSDocLinkCode(node: JSDocLinkCode, name: EntityName | JSDocMemberName | undefined, text: string): JSDocLinkCode;\n        createJSDocLinkPlain(name: EntityName | JSDocMemberName | undefined, text: string): JSDocLinkPlain;\n        updateJSDocLinkPlain(node: JSDocLinkPlain, name: EntityName | JSDocMemberName | undefined, text: string): JSDocLinkPlain;\n        createJSDocTypeLiteral(jsDocPropertyTags?: readonly JSDocPropertyLikeTag[], isArrayType?: boolean): JSDocTypeLiteral;\n        updateJSDocTypeLiteral(node: JSDocTypeLiteral, jsDocPropertyTags: readonly JSDocPropertyLikeTag[] | undefined, isArrayType: boolean | undefined): JSDocTypeLiteral;\n        createJSDocSignature(typeParameters: readonly JSDocTemplateTag[] | undefined, parameters: readonly JSDocParameterTag[], type?: JSDocReturnTag): JSDocSignature;\n        updateJSDocSignature(node: JSDocSignature, typeParameters: readonly JSDocTemplateTag[] | undefined, parameters: readonly JSDocParameterTag[], type: JSDocReturnTag | undefined): JSDocSignature;\n        createJSDocTemplateTag(tagName: Identifier | undefined, constraint: JSDocTypeExpression | undefined, typeParameters: readonly TypeParameterDeclaration[], comment?: string | NodeArray<JSDocComment>): JSDocTemplateTag;\n        updateJSDocTemplateTag(node: JSDocTemplateTag, tagName: Identifier | undefined, constraint: JSDocTypeExpression | undefined, typeParameters: readonly TypeParameterDeclaration[], comment: string | NodeArray<JSDocComment> | undefined): JSDocTemplateTag;\n        createJSDocTypedefTag(tagName: Identifier | undefined, typeExpression?: JSDocTypeExpression | JSDocTypeLiteral, fullName?: Identifier | JSDocNamespaceDeclaration, comment?: string | NodeArray<JSDocComment>): JSDocTypedefTag;\n        updateJSDocTypedefTag(node: JSDocTypedefTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | JSDocTypeLiteral | undefined, fullName: Identifier | JSDocNamespaceDeclaration | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocTypedefTag;\n        createJSDocParameterTag(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression, isNameFirst?: boolean, comment?: string | NodeArray<JSDocComment>): JSDocParameterTag;\n        updateJSDocParameterTag(node: JSDocParameterTag, tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression: JSDocTypeExpression | undefined, isNameFirst: boolean, comment: string | NodeArray<JSDocComment> | undefined): JSDocParameterTag;\n        createJSDocPropertyTag(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression, isNameFirst?: boolean, comment?: string | NodeArray<JSDocComment>): JSDocPropertyTag;\n        updateJSDocPropertyTag(node: JSDocPropertyTag, tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression: JSDocTypeExpression | undefined, isNameFirst: boolean, comment: string | NodeArray<JSDocComment> | undefined): JSDocPropertyTag;\n        createJSDocTypeTag(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | NodeArray<JSDocComment>): JSDocTypeTag;\n        updateJSDocTypeTag(node: JSDocTypeTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment: string | NodeArray<JSDocComment> | undefined): JSDocTypeTag;\n        createJSDocSeeTag(tagName: Identifier | undefined, nameExpression: JSDocNameReference | undefined, comment?: string | NodeArray<JSDocComment>): JSDocSeeTag;\n        updateJSDocSeeTag(node: JSDocSeeTag, tagName: Identifier | undefined, nameExpression: JSDocNameReference | undefined, comment?: string | NodeArray<JSDocComment>): JSDocSeeTag;\n        createJSDocReturnTag(tagName: Identifier | undefined, typeExpression?: JSDocTypeExpression, comment?: string | NodeArray<JSDocComment>): JSDocReturnTag;\n        updateJSDocReturnTag(node: JSDocReturnTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocReturnTag;\n        createJSDocThisTag(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | NodeArray<JSDocComment>): JSDocThisTag;\n        updateJSDocThisTag(node: JSDocThisTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocThisTag;\n        createJSDocEnumTag(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | NodeArray<JSDocComment>): JSDocEnumTag;\n        updateJSDocEnumTag(node: JSDocEnumTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment: string | NodeArray<JSDocComment> | undefined): JSDocEnumTag;\n        createJSDocCallbackTag(tagName: Identifier | undefined, typeExpression: JSDocSignature, fullName?: Identifier | JSDocNamespaceDeclaration, comment?: string | NodeArray<JSDocComment>): JSDocCallbackTag;\n        updateJSDocCallbackTag(node: JSDocCallbackTag, tagName: Identifier | undefined, typeExpression: JSDocSignature, fullName: Identifier | JSDocNamespaceDeclaration | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocCallbackTag;\n        createJSDocOverloadTag(tagName: Identifier | undefined, typeExpression: JSDocSignature, comment?: string | NodeArray<JSDocComment>): JSDocOverloadTag;\n        updateJSDocOverloadTag(node: JSDocOverloadTag, tagName: Identifier | undefined, typeExpression: JSDocSignature, comment: string | NodeArray<JSDocComment> | undefined): JSDocOverloadTag;\n        createJSDocAugmentsTag(tagName: Identifier | undefined, className: JSDocAugmentsTag["class"], comment?: string | NodeArray<JSDocComment>): JSDocAugmentsTag;\n        updateJSDocAugmentsTag(node: JSDocAugmentsTag, tagName: Identifier | undefined, className: JSDocAugmentsTag["class"], comment: string | NodeArray<JSDocComment> | undefined): JSDocAugmentsTag;\n        createJSDocImplementsTag(tagName: Identifier | undefined, className: JSDocImplementsTag["class"], comment?: string | NodeArray<JSDocComment>): JSDocImplementsTag;\n        updateJSDocImplementsTag(node: JSDocImplementsTag, tagName: Identifier | undefined, className: JSDocImplementsTag["class"], comment: string | NodeArray<JSDocComment> | undefined): JSDocImplementsTag;\n        createJSDocAuthorTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocAuthorTag;\n        updateJSDocAuthorTag(node: JSDocAuthorTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocAuthorTag;\n        createJSDocClassTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocClassTag;\n        updateJSDocClassTag(node: JSDocClassTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocClassTag;\n        createJSDocPublicTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocPublicTag;\n        updateJSDocPublicTag(node: JSDocPublicTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocPublicTag;\n        createJSDocPrivateTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocPrivateTag;\n        updateJSDocPrivateTag(node: JSDocPrivateTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocPrivateTag;\n        createJSDocProtectedTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocProtectedTag;\n        updateJSDocProtectedTag(node: JSDocProtectedTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocProtectedTag;\n        createJSDocReadonlyTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocReadonlyTag;\n        updateJSDocReadonlyTag(node: JSDocReadonlyTag, tagName: Identifier | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocReadonlyTag;\n        createJSDocUnknownTag(tagName: Identifier, comment?: string | NodeArray<JSDocComment>): JSDocUnknownTag;\n        updateJSDocUnknownTag(node: JSDocUnknownTag, tagName: Identifier, comment: string | NodeArray<JSDocComment> | undefined): JSDocUnknownTag;\n        createJSDocDeprecatedTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocDeprecatedTag;\n        updateJSDocDeprecatedTag(node: JSDocDeprecatedTag, tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocDeprecatedTag;\n        createJSDocOverrideTag(tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocOverrideTag;\n        updateJSDocOverrideTag(node: JSDocOverrideTag, tagName: Identifier | undefined, comment?: string | NodeArray<JSDocComment>): JSDocOverrideTag;\n        createJSDocThrowsTag(tagName: Identifier, typeExpression: JSDocTypeExpression | undefined, comment?: string | NodeArray<JSDocComment>): JSDocThrowsTag;\n        updateJSDocThrowsTag(node: JSDocThrowsTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | undefined, comment?: string | NodeArray<JSDocComment> | undefined): JSDocThrowsTag;\n        createJSDocSatisfiesTag(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | NodeArray<JSDocComment>): JSDocSatisfiesTag;\n        updateJSDocSatisfiesTag(node: JSDocSatisfiesTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment: string | NodeArray<JSDocComment> | undefined): JSDocSatisfiesTag;\n        createJSDocImportTag(tagName: Identifier | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression, attributes?: ImportAttributes, comment?: string | NodeArray<JSDocComment>): JSDocImportTag;\n        updateJSDocImportTag(node: JSDocImportTag, tagName: Identifier | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression, attributes: ImportAttributes | undefined, comment: string | NodeArray<JSDocComment> | undefined): JSDocImportTag;\n        createJSDocText(text: string): JSDocText;\n        updateJSDocText(node: JSDocText, text: string): JSDocText;\n        createJSDocComment(comment?: string | NodeArray<JSDocComment> | undefined, tags?: readonly JSDocTag[] | undefined): JSDoc;\n        updateJSDocComment(node: JSDoc, comment: string | NodeArray<JSDocComment> | undefined, tags: readonly JSDocTag[] | undefined): JSDoc;\n        createJsxElement(openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement): JsxElement;\n        updateJsxElement(node: JsxElement, openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement): JsxElement;\n        createJsxSelfClosingElement(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes): JsxSelfClosingElement;\n        updateJsxSelfClosingElement(node: JsxSelfClosingElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes): JsxSelfClosingElement;\n        createJsxOpeningElement(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes): JsxOpeningElement;\n        updateJsxOpeningElement(node: JsxOpeningElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes): JsxOpeningElement;\n        createJsxClosingElement(tagName: JsxTagNameExpression): JsxClosingElement;\n        updateJsxClosingElement(node: JsxClosingElement, tagName: JsxTagNameExpression): JsxClosingElement;\n        createJsxFragment(openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment): JsxFragment;\n        createJsxText(text: string, containsOnlyTriviaWhiteSpaces?: boolean): JsxText;\n        updateJsxText(node: JsxText, text: string, containsOnlyTriviaWhiteSpaces?: boolean): JsxText;\n        createJsxOpeningFragment(): JsxOpeningFragment;\n        createJsxJsxClosingFragment(): JsxClosingFragment;\n        updateJsxFragment(node: JsxFragment, openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment): JsxFragment;\n        createJsxAttribute(name: JsxAttributeName, initializer: JsxAttributeValue | undefined): JsxAttribute;\n        updateJsxAttribute(node: JsxAttribute, name: JsxAttributeName, initializer: JsxAttributeValue | undefined): JsxAttribute;\n        createJsxAttributes(properties: readonly JsxAttributeLike[]): JsxAttributes;\n        updateJsxAttributes(node: JsxAttributes, properties: readonly JsxAttributeLike[]): JsxAttributes;\n        createJsxSpreadAttribute(expression: Expression): JsxSpreadAttribute;\n        updateJsxSpreadAttribute(node: JsxSpreadAttribute, expression: Expression): JsxSpreadAttribute;\n        createJsxExpression(dotDotDotToken: DotDotDotToken | undefined, expression: Expression | undefined): JsxExpression;\n        updateJsxExpression(node: JsxExpression, expression: Expression | undefined): JsxExpression;\n        createJsxNamespacedName(namespace: Identifier, name: Identifier): JsxNamespacedName;\n        updateJsxNamespacedName(node: JsxNamespacedName, namespace: Identifier, name: Identifier): JsxNamespacedName;\n        createCaseClause(expression: Expression, statements: readonly Statement[]): CaseClause;\n        updateCaseClause(node: CaseClause, expression: Expression, statements: readonly Statement[]): CaseClause;\n        createDefaultClause(statements: readonly Statement[]): DefaultClause;\n        updateDefaultClause(node: DefaultClause, statements: readonly Statement[]): DefaultClause;\n        createHeritageClause(token: HeritageClause["token"], types: readonly ExpressionWithTypeArguments[]): HeritageClause;\n        updateHeritageClause(node: HeritageClause, types: readonly ExpressionWithTypeArguments[]): HeritageClause;\n        createCatchClause(variableDeclaration: string | BindingName | VariableDeclaration | undefined, block: Block): CatchClause;\n        updateCatchClause(node: CatchClause, variableDeclaration: VariableDeclaration | undefined, block: Block): CatchClause;\n        createPropertyAssignment(name: string | PropertyName, initializer: Expression): PropertyAssignment;\n        updatePropertyAssignment(node: PropertyAssignment, name: PropertyName, initializer: Expression): PropertyAssignment;\n        createShorthandPropertyAssignment(name: string | Identifier, objectAssignmentInitializer?: Expression): ShorthandPropertyAssignment;\n        updateShorthandPropertyAssignment(node: ShorthandPropertyAssignment, name: Identifier, objectAssignmentInitializer: Expression | undefined): ShorthandPropertyAssignment;\n        createSpreadAssignment(expression: Expression): SpreadAssignment;\n        updateSpreadAssignment(node: SpreadAssignment, expression: Expression): SpreadAssignment;\n        createEnumMember(name: string | PropertyName, initializer?: Expression): EnumMember;\n        updateEnumMember(node: EnumMember, name: PropertyName, initializer: Expression | undefined): EnumMember;\n        createSourceFile(statements: readonly Statement[], endOfFileToken: EndOfFileToken, flags: NodeFlags): SourceFile;\n        updateSourceFile(node: SourceFile, statements: readonly Statement[], isDeclarationFile?: boolean, referencedFiles?: readonly FileReference[], typeReferences?: readonly FileReference[], hasNoDefaultLib?: boolean, libReferences?: readonly FileReference[]): SourceFile;\n        createNotEmittedStatement(original: Node): NotEmittedStatement;\n        createNotEmittedTypeElement(): NotEmittedTypeElement;\n        createPartiallyEmittedExpression(expression: Expression, original?: Node): PartiallyEmittedExpression;\n        updatePartiallyEmittedExpression(node: PartiallyEmittedExpression, expression: Expression): PartiallyEmittedExpression;\n        createCommaListExpression(elements: readonly Expression[]): CommaListExpression;\n        updateCommaListExpression(node: CommaListExpression, elements: readonly Expression[]): CommaListExpression;\n        createBundle(sourceFiles: readonly SourceFile[]): Bundle;\n        updateBundle(node: Bundle, sourceFiles: readonly SourceFile[]): Bundle;\n        createComma(left: Expression, right: Expression): BinaryExpression;\n        createAssignment(left: ObjectLiteralExpression | ArrayLiteralExpression, right: Expression): DestructuringAssignment;\n        createAssignment(left: Expression, right: Expression): AssignmentExpression<EqualsToken>;\n        createLogicalOr(left: Expression, right: Expression): BinaryExpression;\n        createLogicalAnd(left: Expression, right: Expression): BinaryExpression;\n        createBitwiseOr(left: Expression, right: Expression): BinaryExpression;\n        createBitwiseXor(left: Expression, right: Expression): BinaryExpression;\n        createBitwiseAnd(left: Expression, right: Expression): BinaryExpression;\n        createStrictEquality(left: Expression, right: Expression): BinaryExpression;\n        createStrictInequality(left: Expression, right: Expression): BinaryExpression;\n        createEquality(left: Expression, right: Expression): BinaryExpression;\n        createInequality(left: Expression, right: Expression): BinaryExpression;\n        createLessThan(left: Expression, right: Expression): BinaryExpression;\n        createLessThanEquals(left: Expression, right: Expression): BinaryExpression;\n        createGreaterThan(left: Expression, right: Expression): BinaryExpression;\n        createGreaterThanEquals(left: Expression, right: Expression): BinaryExpression;\n        createLeftShift(left: Expression, right: Expression): BinaryExpression;\n        createRightShift(left: Expression, right: Expression): BinaryExpression;\n        createUnsignedRightShift(left: Expression, right: Expression): BinaryExpression;\n        createAdd(left: Expression, right: Expression): BinaryExpression;\n        createSubtract(left: Expression, right: Expression): BinaryExpression;\n        createMultiply(left: Expression, right: Expression): BinaryExpression;\n        createDivide(left: Expression, right: Expression): BinaryExpression;\n        createModulo(left: Expression, right: Expression): BinaryExpression;\n        createExponent(left: Expression, right: Expression): BinaryExpression;\n        createPrefixPlus(operand: Expression): PrefixUnaryExpression;\n        createPrefixMinus(operand: Expression): PrefixUnaryExpression;\n        createPrefixIncrement(operand: Expression): PrefixUnaryExpression;\n        createPrefixDecrement(operand: Expression): PrefixUnaryExpression;\n        createBitwiseNot(operand: Expression): PrefixUnaryExpression;\n        createLogicalNot(operand: Expression): PrefixUnaryExpression;\n        createPostfixIncrement(operand: Expression): PostfixUnaryExpression;\n        createPostfixDecrement(operand: Expression): PostfixUnaryExpression;\n        createImmediatelyInvokedFunctionExpression(statements: readonly Statement[]): CallExpression;\n        createImmediatelyInvokedFunctionExpression(statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): CallExpression;\n        createImmediatelyInvokedArrowFunction(statements: readonly Statement[]): ImmediatelyInvokedArrowFunction;\n        createImmediatelyInvokedArrowFunction(statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): ImmediatelyInvokedArrowFunction;\n        createVoidZero(): VoidExpression;\n        createExportDefault(expression: Expression): ExportAssignment;\n        createExternalModuleExport(exportName: Identifier): ExportDeclaration;\n        restoreOuterExpressions(outerExpression: Expression | undefined, innerExpression: Expression, kinds?: OuterExpressionKinds): Expression;\n        /**\n         * Updates a node that may contain modifiers, replacing only the modifiers of the node.\n         */\n        replaceModifiers<T extends HasModifiers>(node: T, modifiers: readonly Modifier[] | ModifierFlags | undefined): T;\n        /**\n         * Updates a node that may contain decorators or modifiers, replacing only the decorators and modifiers of the node.\n         */\n        replaceDecoratorsAndModifiers<T extends HasModifiers & HasDecorators>(node: T, modifiers: readonly ModifierLike[] | undefined): T;\n        /**\n         * Updates a node that contains a property name, replacing only the name of the node.\n         */\n        replacePropertyName<T extends AccessorDeclaration | MethodDeclaration | MethodSignature | PropertyDeclaration | PropertySignature | PropertyAssignment>(node: T, name: T["name"]): T;\n    }\n    interface CoreTransformationContext {\n        readonly factory: NodeFactory;\n        /** Gets the compiler options supplied to the transformer. */\n        getCompilerOptions(): CompilerOptions;\n        /** Starts a new lexical environment. */\n        startLexicalEnvironment(): void;\n        /** Suspends the current lexical environment, usually after visiting a parameter list. */\n        suspendLexicalEnvironment(): void;\n        /** Resumes a suspended lexical environment, usually before visiting a function body. */\n        resumeLexicalEnvironment(): void;\n        /** Ends a lexical environment, returning any declarations. */\n        endLexicalEnvironment(): Statement[] | undefined;\n        /** Hoists a function declaration to the containing scope. */\n        hoistFunctionDeclaration(node: FunctionDeclaration): void;\n        /** Hoists a variable declaration to the containing scope. */\n        hoistVariableDeclaration(node: Identifier): void;\n    }\n    interface TransformationContext extends CoreTransformationContext {\n        /** Records a request for a non-scoped emit helper in the current context. */\n        requestEmitHelper(helper: EmitHelper): void;\n        /** Gets and resets the requested non-scoped emit helpers. */\n        readEmitHelpers(): EmitHelper[] | undefined;\n        /** Enables expression substitutions in the pretty printer for the provided SyntaxKind. */\n        enableSubstitution(kind: SyntaxKind): void;\n        /** Determines whether expression substitutions are enabled for the provided node. */\n        isSubstitutionEnabled(node: Node): boolean;\n        /**\n         * Hook used by transformers to substitute expressions just before they\n         * are emitted by the pretty printer.\n         *\n         * NOTE: Transformation hooks should only be modified during `Transformer` initialization,\n         * before returning the `NodeTransformer` callback.\n         */\n        onSubstituteNode: (hint: EmitHint, node: Node) => Node;\n        /**\n         * Enables before/after emit notifications in the pretty printer for the provided\n         * SyntaxKind.\n         */\n        enableEmitNotification(kind: SyntaxKind): void;\n        /**\n         * Determines whether before/after emit notifications should be raised in the pretty\n         * printer when it emits a node.\n         */\n        isEmitNotificationEnabled(node: Node): boolean;\n        /**\n         * Hook used to allow transformers to capture state before or after\n         * the printer emits a node.\n         *\n         * NOTE: Transformation hooks should only be modified during `Transformer` initialization,\n         * before returning the `NodeTransformer` callback.\n         */\n        onEmitNode: (hint: EmitHint, node: Node, emitCallback: (hint: EmitHint, node: Node) => void) => void;\n    }\n    interface TransformationResult<T extends Node> {\n        /** Gets the transformed source files. */\n        transformed: T[];\n        /** Gets diagnostics for the transformation. */\n        diagnostics?: DiagnosticWithLocation[];\n        /**\n         * Gets a substitute for a node, if one is available; otherwise, returns the original node.\n         *\n         * @param hint A hint as to the intended usage of the node.\n         * @param node The node to substitute.\n         */\n        substituteNode(hint: EmitHint, node: Node): Node;\n        /**\n         * Emits a node with possible notification.\n         *\n         * @param hint A hint as to the intended usage of the node.\n         * @param node The node to emit.\n         * @param emitCallback A callback used to emit the node.\n         */\n        emitNodeWithNotification(hint: EmitHint, node: Node, emitCallback: (hint: EmitHint, node: Node) => void): void;\n        /**\n         * Indicates if a given node needs an emit notification\n         *\n         * @param node The node to emit.\n         */\n        isEmitNotificationEnabled?(node: Node): boolean;\n        /**\n         * Clean up EmitNode entries on any parse-tree nodes.\n         */\n        dispose(): void;\n    }\n    /**\n     * A function that is used to initialize and return a `Transformer` callback, which in turn\n     * will be used to transform one or more nodes.\n     */\n    type TransformerFactory<T extends Node> = (context: TransformationContext) => Transformer<T>;\n    /**\n     * A function that transforms a node.\n     */\n    type Transformer<T extends Node> = (node: T) => T;\n    /**\n     * A function that accepts and possibly transforms a node.\n     */\n    type Visitor<TIn extends Node = Node, TOut extends Node | undefined = TIn | undefined> = (node: TIn) => VisitResult<TOut>;\n    /**\n     * A function that walks a node using the given visitor, lifting node arrays into single nodes,\n     * returning an node which satisfies the test.\n     *\n     * - If the input node is undefined, then the output is undefined.\n     * - If the visitor returns undefined, then the output is undefined.\n     * - If the output node is not undefined, then it will satisfy the test function.\n     * - In order to obtain a return type that is more specific than `Node`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * For the canonical implementation of this type, @see {visitNode}.\n     */\n    interface NodeVisitor {\n        <TIn extends Node | undefined, TVisited extends Node | undefined, TOut extends Node>(node: TIn, visitor: Visitor<NonNullable<TIn>, TVisited>, test: (node: Node) => node is TOut, lift?: (node: readonly Node[]) => Node): TOut | (TIn & undefined) | (TVisited & undefined);\n        <TIn extends Node | undefined, TVisited extends Node | undefined>(node: TIn, visitor: Visitor<NonNullable<TIn>, TVisited>, test?: (node: Node) => boolean, lift?: (node: readonly Node[]) => Node): Node | (TIn & undefined) | (TVisited & undefined);\n    }\n    /**\n     * A function that walks a node array using the given visitor, returning an array whose contents satisfy the test.\n     *\n     * - If the input node array is undefined, the output is undefined.\n     * - If the visitor can return undefined, the node it visits in the array will be reused.\n     * - If the output node array is not undefined, then its contents will satisfy the test.\n     * - In order to obtain a return type that is more specific than `NodeArray<Node>`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * For the canonical implementation of this type, @see {visitNodes}.\n     */\n    interface NodesVisitor {\n        <TIn extends Node, TInArray extends NodeArray<TIn> | undefined, TOut extends Node>(nodes: TInArray, visitor: Visitor<TIn, Node | undefined>, test: (node: Node) => node is TOut, start?: number, count?: number): NodeArray<TOut> | (TInArray & undefined);\n        <TIn extends Node, TInArray extends NodeArray<TIn> | undefined>(nodes: TInArray, visitor: Visitor<TIn, Node | undefined>, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<Node> | (TInArray & undefined);\n    }\n    type VisitResult<T extends Node | undefined> = T | readonly Node[];\n    interface Printer {\n        /**\n         * Print a node and its subtree as-is, without any emit transformations.\n         * @param hint A value indicating the purpose of a node. This is primarily used to\n         * distinguish between an `Identifier` used in an expression position, versus an\n         * `Identifier` used as an `IdentifierName` as part of a declaration. For most nodes you\n         * should just pass `Unspecified`.\n         * @param node The node to print. The node and its subtree are printed as-is, without any\n         * emit transformations.\n         * @param sourceFile A source file that provides context for the node. The source text of\n         * the file is used to emit the original source content for literals and identifiers, while\n         * the identifiers of the source file are used when generating unique names to avoid\n         * collisions.\n         */\n        printNode(hint: EmitHint, node: Node, sourceFile: SourceFile): string;\n        /**\n         * Prints a list of nodes using the given format flags\n         */\n        printList<T extends Node>(format: ListFormat, list: NodeArray<T>, sourceFile: SourceFile): string;\n        /**\n         * Prints a source file as-is, without any emit transformations.\n         */\n        printFile(sourceFile: SourceFile): string;\n        /**\n         * Prints a bundle of source files as-is, without any emit transformations.\n         */\n        printBundle(bundle: Bundle): string;\n    }\n    interface PrintHandlers {\n        /**\n         * A hook used by the Printer when generating unique names to avoid collisions with\n         * globally defined names that exist outside of the current source file.\n         */\n        hasGlobalName?(name: string): boolean;\n        /**\n         * A hook used by the Printer to provide notifications prior to emitting a node. A\n         * compatible implementation **must** invoke `emitCallback` with the provided `hint` and\n         * `node` values.\n         * @param hint A hint indicating the intended purpose of the node.\n         * @param node The node to emit.\n         * @param emitCallback A callback that, when invoked, will emit the node.\n         * @example\n         * ```ts\n         * var printer = createPrinter(printerOptions, {\n         *   onEmitNode(hint, node, emitCallback) {\n         *     // set up or track state prior to emitting the node...\n         *     emitCallback(hint, node);\n         *     // restore state after emitting the node...\n         *   }\n         * });\n         * ```\n         */\n        onEmitNode?(hint: EmitHint, node: Node, emitCallback: (hint: EmitHint, node: Node) => void): void;\n        /**\n         * A hook used to check if an emit notification is required for a node.\n         * @param node The node to emit.\n         */\n        isEmitNotificationEnabled?(node: Node): boolean;\n        /**\n         * A hook used by the Printer to perform just-in-time substitution of a node. This is\n         * primarily used by node transformations that need to substitute one node for another,\n         * such as replacing `myExportedVar` with `exports.myExportedVar`.\n         * @param hint A hint indicating the intended purpose of the node.\n         * @param node The node to emit.\n         * @example\n         * ```ts\n         * var printer = createPrinter(printerOptions, {\n         *   substituteNode(hint, node) {\n         *     // perform substitution if necessary...\n         *     return node;\n         *   }\n         * });\n         * ```\n         */\n        substituteNode?(hint: EmitHint, node: Node): Node;\n    }\n    interface PrinterOptions {\n        removeComments?: boolean;\n        newLine?: NewLineKind;\n        omitTrailingSemicolon?: boolean;\n        noEmitHelpers?: boolean;\n    }\n    interface GetEffectiveTypeRootsHost {\n        getCurrentDirectory?(): string;\n    }\n    interface TextSpan {\n        start: number;\n        length: number;\n    }\n    interface TextChangeRange {\n        span: TextSpan;\n        newLength: number;\n    }\n    interface SyntaxList extends Node {\n        kind: SyntaxKind.SyntaxList;\n    }\n    enum ListFormat {\n        None = 0,\n        SingleLine = 0,\n        MultiLine = 1,\n        PreserveLines = 2,\n        LinesMask = 3,\n        NotDelimited = 0,\n        BarDelimited = 4,\n        AmpersandDelimited = 8,\n        CommaDelimited = 16,\n        AsteriskDelimited = 32,\n        DelimitersMask = 60,\n        AllowTrailingComma = 64,\n        Indented = 128,\n        SpaceBetweenBraces = 256,\n        SpaceBetweenSiblings = 512,\n        Braces = 1024,\n        Parenthesis = 2048,\n        AngleBrackets = 4096,\n        SquareBrackets = 8192,\n        BracketsMask = 15360,\n        OptionalIfUndefined = 16384,\n        OptionalIfEmpty = 32768,\n        Optional = 49152,\n        PreferNewLine = 65536,\n        NoTrailingNewLine = 131072,\n        NoInterveningComments = 262144,\n        NoSpaceIfEmpty = 524288,\n        SingleElement = 1048576,\n        SpaceAfterList = 2097152,\n        Modifiers = 2359808,\n        HeritageClauses = 512,\n        SingleLineTypeLiteralMembers = 768,\n        MultiLineTypeLiteralMembers = 32897,\n        SingleLineTupleTypeElements = 528,\n        MultiLineTupleTypeElements = 657,\n        UnionTypeConstituents = 516,\n        IntersectionTypeConstituents = 520,\n        ObjectBindingPatternElements = 525136,\n        ArrayBindingPatternElements = 524880,\n        ObjectLiteralExpressionProperties = 526226,\n        ImportAttributes = 526226,\n        /** @deprecated */ ImportClauseEntries = 526226,\n        ArrayLiteralExpressionElements = 8914,\n        CommaListElements = 528,\n        CallExpressionArguments = 2576,\n        NewExpressionArguments = 18960,\n        TemplateExpressionSpans = 262144,\n        SingleLineBlockStatements = 768,\n        MultiLineBlockStatements = 129,\n        VariableDeclarationList = 528,\n        SingleLineFunctionBodyStatements = 768,\n        MultiLineFunctionBodyStatements = 1,\n        ClassHeritageClauses = 0,\n        ClassMembers = 129,\n        InterfaceMembers = 129,\n        EnumMembers = 145,\n        CaseBlockClauses = 129,\n        NamedImportsOrExportsElements = 525136,\n        JsxElementOrFragmentChildren = 262144,\n        JsxElementAttributes = 262656,\n        CaseOrDefaultClauseStatements = 163969,\n        HeritageClauseTypes = 528,\n        SourceFileStatements = 131073,\n        Decorators = 2146305,\n        TypeArguments = 53776,\n        TypeParameters = 53776,\n        Parameters = 2576,\n        IndexSignatureParameters = 8848,\n        JSDocComment = 33,\n    }\n    enum JSDocParsingMode {\n        /**\n         * Always parse JSDoc comments and include them in the AST.\n         *\n         * This is the default if no mode is provided.\n         */\n        ParseAll = 0,\n        /**\n         * Never parse JSDoc comments, mo matter the file type.\n         */\n        ParseNone = 1,\n        /**\n         * Parse only JSDoc comments which are needed to provide correct type errors.\n         *\n         * This will always parse JSDoc in non-TS files, but only parse JSDoc comments\n         * containing `@see` and `@link` in TS files.\n         */\n        ParseForTypeErrors = 2,\n        /**\n         * Parse only JSDoc comments which are needed to provide correct type info.\n         *\n         * This will always parse JSDoc in non-TS files, but never in TS files.\n         *\n         * Note: Do not use this mode if you require accurate type errors; use {@link ParseForTypeErrors} instead.\n         */\n        ParseForTypeInfo = 3,\n    }\n    interface UserPreferences {\n        readonly disableSuggestions?: boolean;\n        readonly quotePreference?: "auto" | "double" | "single";\n        /**\n         * If enabled, TypeScript will search through all external modules\' exports and add them to the completions list.\n         * This affects lone identifier completions but not completions on the right hand side of `obj.`.\n         */\n        readonly includeCompletionsForModuleExports?: boolean;\n        /**\n         * Enables auto-import-style completions on partially-typed import statements. E.g., allows\n         * `import write|` to be completed to `import { writeFile } from "fs"`.\n         */\n        readonly includeCompletionsForImportStatements?: boolean;\n        /**\n         * Allows completions to be formatted with snippet text, indicated by `CompletionItem["isSnippet"]`.\n         */\n        readonly includeCompletionsWithSnippetText?: boolean;\n        /**\n         * Unless this option is `false`, or `includeCompletionsWithInsertText` is not enabled,\n         * member completion lists triggered with `.` will include entries on potentially-null and potentially-undefined\n         * values, with insertion text to replace preceding `.` tokens with `?.`.\n         */\n        readonly includeAutomaticOptionalChainCompletions?: boolean;\n        /**\n         * If enabled, the completion list will include completions with invalid identifier names.\n         * For those entries, The `insertText` and `replacementSpan` properties will be set to change from `.x` property access to `["x"]`.\n         */\n        readonly includeCompletionsWithInsertText?: boolean;\n        /**\n         * If enabled, completions for class members (e.g. methods and properties) will include\n         * a whole declaration for the member.\n         * E.g., `class A { f| }` could be completed to `class A { foo(): number {} }`, instead of\n         * `class A { foo }`.\n         */\n        readonly includeCompletionsWithClassMemberSnippets?: boolean;\n        /**\n         * If enabled, object literal methods will have a method declaration completion entry in addition\n         * to the regular completion entry containing just the method name.\n         * E.g., `const objectLiteral: T = { f| }` could be completed to `const objectLiteral: T = { foo(): void {} }`,\n         * in addition to `const objectLiteral: T = { foo }`.\n         */\n        readonly includeCompletionsWithObjectLiteralMethodSnippets?: boolean;\n        /**\n         * Indicates whether {@link CompletionEntry.labelDetails completion entry label details} are supported.\n         * If not, contents of `labelDetails` may be included in the {@link CompletionEntry.name} property.\n         */\n        readonly useLabelDetailsInCompletionEntries?: boolean;\n        readonly allowIncompleteCompletions?: boolean;\n        readonly importModuleSpecifierPreference?: "shortest" | "project-relative" | "relative" | "non-relative";\n        /** Determines whether we import `foo/index.ts` as "foo", "foo/index", or "foo/index.js" */\n        readonly importModuleSpecifierEnding?: "auto" | "minimal" | "index" | "js";\n        readonly allowTextChangesInNewFiles?: boolean;\n        readonly providePrefixAndSuffixTextForRename?: boolean;\n        readonly includePackageJsonAutoImports?: "auto" | "on" | "off";\n        readonly provideRefactorNotApplicableReason?: boolean;\n        readonly jsxAttributeCompletionStyle?: "auto" | "braces" | "none";\n        readonly includeInlayParameterNameHints?: "none" | "literals" | "all";\n        readonly includeInlayParameterNameHintsWhenArgumentMatchesName?: boolean;\n        readonly includeInlayFunctionParameterTypeHints?: boolean;\n        readonly includeInlayVariableTypeHints?: boolean;\n        readonly includeInlayVariableTypeHintsWhenTypeMatchesName?: boolean;\n        readonly includeInlayPropertyDeclarationTypeHints?: boolean;\n        readonly includeInlayFunctionLikeReturnTypeHints?: boolean;\n        readonly includeInlayEnumMemberValueHints?: boolean;\n        readonly interactiveInlayHints?: boolean;\n        readonly allowRenameOfImportPath?: boolean;\n        readonly autoImportFileExcludePatterns?: string[];\n        readonly autoImportSpecifierExcludeRegexes?: string[];\n        readonly preferTypeOnlyAutoImports?: boolean;\n        /**\n         * Indicates whether imports should be organized in a case-insensitive manner.\n         */\n        readonly organizeImportsIgnoreCase?: "auto" | boolean;\n        /**\n         * Indicates whether imports should be organized via an "ordinal" (binary) comparison using the numeric value\n         * of their code points, or via "unicode" collation (via the\n         * [Unicode Collation Algorithm](https://unicode.org/reports/tr10/#Scope)) using rules associated with the locale\n         * specified in {@link organizeImportsCollationLocale}.\n         *\n         * Default: `"ordinal"`.\n         */\n        readonly organizeImportsCollation?: "ordinal" | "unicode";\n        /**\n         * Indicates the locale to use for "unicode" collation. If not specified, the locale `"en"` is used as an invariant\n         * for the sake of consistent sorting. Use `"auto"` to use the detected UI locale.\n         *\n         * This preference is ignored if {@link organizeImportsCollation} is not `"unicode"`.\n         *\n         * Default: `"en"`\n         */\n        readonly organizeImportsLocale?: string;\n        /**\n         * Indicates whether numeric collation should be used for digit sequences in strings. When `true`, will collate\n         * strings such that `a1z < a2z < a100z`. When `false`, will collate strings such that `a1z < a100z < a2z`.\n         *\n         * This preference is ignored if {@link organizeImportsCollation} is not `"unicode"`.\n         *\n         * Default: `false`\n         */\n        readonly organizeImportsNumericCollation?: boolean;\n        /**\n         * Indicates whether accents and other diacritic marks are considered unequal for the purpose of collation. When\n         * `true`, characters with accents and other diacritics will be collated in the order defined by the locale specified\n         * in {@link organizeImportsCollationLocale}.\n         *\n         * This preference is ignored if {@link organizeImportsCollation} is not `"unicode"`.\n         *\n         * Default: `true`\n         */\n        readonly organizeImportsAccentCollation?: boolean;\n        /**\n         * Indicates whether upper case or lower case should sort first. When `false`, the default order for the locale\n         * specified in {@link organizeImportsCollationLocale} is used.\n         *\n         * This preference is ignored if {@link organizeImportsCollation} is not `"unicode"`. This preference is also\n         * ignored if we are using case-insensitive sorting, which occurs when {@link organizeImportsIgnoreCase} is `true`,\n         * or if {@link organizeImportsIgnoreCase} is `"auto"` and the auto-detected case sensitivity is determined to be\n         * case-insensitive.\n         *\n         * Default: `false`\n         */\n        readonly organizeImportsCaseFirst?: "upper" | "lower" | false;\n        /**\n         * Indicates where named type-only imports should sort. "inline" sorts named imports without regard to if the import is\n         * type-only.\n         *\n         * Default: `last`\n         */\n        readonly organizeImportsTypeOrder?: OrganizeImportsTypeOrder;\n        /**\n         * Indicates whether to exclude standard library and node_modules file symbols from navTo results.\n         */\n        readonly excludeLibrarySymbolsInNavTo?: boolean;\n        readonly lazyConfiguredProjectsFromExternalProject?: boolean;\n        readonly displayPartsForJSDoc?: boolean;\n        readonly generateReturnInDocTemplate?: boolean;\n        readonly disableLineTextInReferences?: boolean;\n    }\n    type OrganizeImportsTypeOrder = "last" | "inline" | "first";\n    /** Represents a bigint literal value without requiring bigint support */\n    interface PseudoBigInt {\n        negative: boolean;\n        base10Value: string;\n    }\n    enum FileWatcherEventKind {\n        Created = 0,\n        Changed = 1,\n        Deleted = 2,\n    }\n    type FileWatcherCallback = (fileName: string, eventKind: FileWatcherEventKind, modifiedTime?: Date) => void;\n    type DirectoryWatcherCallback = (fileName: string) => void;\n    type BufferEncoding = "ascii" | "utf8" | "utf-8" | "utf16le" | "ucs2" | "ucs-2" | "base64" | "latin1" | "binary" | "hex";\n    interface System {\n        args: string[];\n        newLine: string;\n        useCaseSensitiveFileNames: boolean;\n        write(s: string): void;\n        writeOutputIsTTY?(): boolean;\n        getWidthOfTerminal?(): number;\n        readFile(path: string, encoding?: string): string | undefined;\n        getFileSize?(path: string): number;\n        writeFile(path: string, data: string, writeByteOrderMark?: boolean): void;\n        /**\n         * @pollingInterval - this parameter is used in polling-based watchers and ignored in watchers that\n         * use native OS file watching\n         */\n        watchFile?(path: string, callback: FileWatcherCallback, pollingInterval?: number, options?: WatchOptions): FileWatcher;\n        watchDirectory?(path: string, callback: DirectoryWatcherCallback, recursive?: boolean, options?: WatchOptions): FileWatcher;\n        resolvePath(path: string): string;\n        fileExists(path: string): boolean;\n        directoryExists(path: string): boolean;\n        createDirectory(path: string): void;\n        getExecutingFilePath(): string;\n        getCurrentDirectory(): string;\n        getDirectories(path: string): string[];\n        readDirectory(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];\n        getModifiedTime?(path: string): Date | undefined;\n        setModifiedTime?(path: string, time: Date): void;\n        deleteFile?(path: string): void;\n        /**\n         * A good implementation is node.js\' `crypto.createHash`. (https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm)\n         */\n        createHash?(data: string): string;\n        /** This must be cryptographically secure. Only implement this method using `crypto.createHash("sha256")`. */\n        createSHA256Hash?(data: string): string;\n        getMemoryUsage?(): number;\n        exit(exitCode?: number): void;\n        realpath?(path: string): string;\n        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;\n        clearTimeout?(timeoutId: any): void;\n        clearScreen?(): void;\n        base64decode?(input: string): string;\n        base64encode?(input: string): string;\n    }\n    interface FileWatcher {\n        close(): void;\n    }\n    let sys: System;\n    function tokenToString(t: SyntaxKind): string | undefined;\n    function getPositionOfLineAndCharacter(sourceFile: SourceFileLike, line: number, character: number): number;\n    function getLineAndCharacterOfPosition(sourceFile: SourceFileLike, position: number): LineAndCharacter;\n    function isWhiteSpaceLike(ch: number): boolean;\n    /** Does not include line breaks. For that, see isWhiteSpaceLike. */\n    function isWhiteSpaceSingleLine(ch: number): boolean;\n    function isLineBreak(ch: number): boolean;\n    function couldStartTrivia(text: string, pos: number): boolean;\n    function forEachLeadingCommentRange<U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean) => U): U | undefined;\n    function forEachLeadingCommentRange<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T): U | undefined;\n    function forEachTrailingCommentRange<U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean) => U): U | undefined;\n    function forEachTrailingCommentRange<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T): U | undefined;\n    function reduceEachLeadingCommentRange<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T, initial: U): U | undefined;\n    function reduceEachTrailingCommentRange<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T, initial: U): U | undefined;\n    function getLeadingCommentRanges(text: string, pos: number): CommentRange[] | undefined;\n    function getTrailingCommentRanges(text: string, pos: number): CommentRange[] | undefined;\n    /** Optionally, get the shebang */\n    function getShebang(text: string): string | undefined;\n    function isIdentifierStart(ch: number, languageVersion: ScriptTarget | undefined): boolean;\n    function isIdentifierPart(ch: number, languageVersion: ScriptTarget | undefined, identifierVariant?: LanguageVariant): boolean;\n    function createScanner(languageVersion: ScriptTarget, skipTrivia: boolean, languageVariant?: LanguageVariant, textInitial?: string, onError?: ErrorCallback, start?: number, length?: number): Scanner;\n    type ErrorCallback = (message: DiagnosticMessage, length: number, arg0?: any) => void;\n    interface Scanner {\n        /** @deprecated use {@link getTokenFullStart} */\n        getStartPos(): number;\n        getToken(): SyntaxKind;\n        getTokenFullStart(): number;\n        getTokenStart(): number;\n        getTokenEnd(): number;\n        /** @deprecated use {@link getTokenEnd} */\n        getTextPos(): number;\n        /** @deprecated use {@link getTokenStart} */\n        getTokenPos(): number;\n        getTokenText(): string;\n        getTokenValue(): string;\n        hasUnicodeEscape(): boolean;\n        hasExtendedUnicodeEscape(): boolean;\n        hasPrecedingLineBreak(): boolean;\n        isIdentifier(): boolean;\n        isReservedWord(): boolean;\n        isUnterminated(): boolean;\n        reScanGreaterToken(): SyntaxKind;\n        reScanSlashToken(): SyntaxKind;\n        reScanAsteriskEqualsToken(): SyntaxKind;\n        reScanTemplateToken(isTaggedTemplate: boolean): SyntaxKind;\n        /** @deprecated use {@link reScanTemplateToken}(false) */\n        reScanTemplateHeadOrNoSubstitutionTemplate(): SyntaxKind;\n        scanJsxIdentifier(): SyntaxKind;\n        scanJsxAttributeValue(): SyntaxKind;\n        reScanJsxAttributeValue(): SyntaxKind;\n        reScanJsxToken(allowMultilineJsxText?: boolean): JsxTokenSyntaxKind;\n        reScanLessThanToken(): SyntaxKind;\n        reScanHashToken(): SyntaxKind;\n        reScanQuestionToken(): SyntaxKind;\n        reScanInvalidIdentifier(): SyntaxKind;\n        scanJsxToken(): JsxTokenSyntaxKind;\n        scanJsDocToken(): JSDocSyntaxKind;\n        scan(): SyntaxKind;\n        getText(): string;\n        setText(text: string | undefined, start?: number, length?: number): void;\n        setOnError(onError: ErrorCallback | undefined): void;\n        setScriptTarget(scriptTarget: ScriptTarget): void;\n        setLanguageVariant(variant: LanguageVariant): void;\n        setScriptKind(scriptKind: ScriptKind): void;\n        setJSDocParsingMode(kind: JSDocParsingMode): void;\n        /** @deprecated use {@link resetTokenState} */\n        setTextPos(textPos: number): void;\n        resetTokenState(pos: number): void;\n        lookAhead<T>(callback: () => T): T;\n        scanRange<T>(start: number, length: number, callback: () => T): T;\n        tryScan<T>(callback: () => T): T;\n    }\n    function isExternalModuleNameRelative(moduleName: string): boolean;\n    function sortAndDeduplicateDiagnostics<T extends Diagnostic>(diagnostics: readonly T[]): SortedReadonlyArray<T>;\n    function getDefaultLibFileName(options: CompilerOptions): string;\n    function textSpanEnd(span: TextSpan): number;\n    function textSpanIsEmpty(span: TextSpan): boolean;\n    function textSpanContainsPosition(span: TextSpan, position: number): boolean;\n    function textSpanContainsTextSpan(span: TextSpan, other: TextSpan): boolean;\n    function textSpanOverlapsWith(span: TextSpan, other: TextSpan): boolean;\n    function textSpanOverlap(span1: TextSpan, span2: TextSpan): TextSpan | undefined;\n    function textSpanIntersectsWithTextSpan(span: TextSpan, other: TextSpan): boolean;\n    function textSpanIntersectsWith(span: TextSpan, start: number, length: number): boolean;\n    function decodedTextSpanIntersectsWith(start1: number, length1: number, start2: number, length2: number): boolean;\n    function textSpanIntersectsWithPosition(span: TextSpan, position: number): boolean;\n    function textSpanIntersection(span1: TextSpan, span2: TextSpan): TextSpan | undefined;\n    function createTextSpan(start: number, length: number): TextSpan;\n    function createTextSpanFromBounds(start: number, end: number): TextSpan;\n    function textChangeRangeNewSpan(range: TextChangeRange): TextSpan;\n    function textChangeRangeIsUnchanged(range: TextChangeRange): boolean;\n    function createTextChangeRange(span: TextSpan, newLength: number): TextChangeRange;\n    /**\n     * Called to merge all the changes that occurred across several versions of a script snapshot\n     * into a single change.  i.e. if a user keeps making successive edits to a script we will\n     * have a text change from V1 to V2, V2 to V3, ..., Vn.\n     *\n     * This function will then merge those changes into a single change range valid between V1 and\n     * Vn.\n     */\n    function collapseTextChangeRangesAcrossMultipleVersions(changes: readonly TextChangeRange[]): TextChangeRange;\n    function getTypeParameterOwner(d: Declaration): Declaration | undefined;\n    function isParameterPropertyDeclaration(node: Node, parent: Node): node is ParameterPropertyDeclaration;\n    function isEmptyBindingPattern(node: BindingName): node is BindingPattern;\n    function isEmptyBindingElement(node: BindingElement | ArrayBindingElement): boolean;\n    function walkUpBindingElementsAndPatterns(binding: BindingElement): VariableDeclaration | ParameterDeclaration;\n    function getCombinedModifierFlags(node: Declaration): ModifierFlags;\n    function getCombinedNodeFlags(node: Node): NodeFlags;\n    /**\n     * Checks to see if the locale is in the appropriate format,\n     * and if it is, attempts to set the appropriate language.\n     */\n    function validateLocaleAndSetLanguage(locale: string, sys: {\n        getExecutingFilePath(): string;\n        resolvePath(path: string): string;\n        fileExists(fileName: string): boolean;\n        readFile(fileName: string): string | undefined;\n    }, errors?: Diagnostic[]): void;\n    function getOriginalNode(node: Node): Node;\n    function getOriginalNode<T extends Node>(node: Node, nodeTest: (node: Node) => node is T): T;\n    function getOriginalNode(node: Node | undefined): Node | undefined;\n    function getOriginalNode<T extends Node>(node: Node | undefined, nodeTest: (node: Node) => node is T): T | undefined;\n    /**\n     * Iterates through the parent chain of a node and performs the callback on each parent until the callback\n     * returns a truthy value, then returns that value.\n     * If no such value is found, it applies the callback until the parent pointer is undefined or the callback returns "quit"\n     * At that point findAncestor returns undefined.\n     */\n    function findAncestor<T extends Node>(node: Node | undefined, callback: (element: Node) => element is T): T | undefined;\n    function findAncestor(node: Node | undefined, callback: (element: Node) => boolean | "quit"): Node | undefined;\n    /**\n     * Gets a value indicating whether a node originated in the parse tree.\n     *\n     * @param node The node to test.\n     */\n    function isParseTreeNode(node: Node): boolean;\n    /**\n     * Gets the original parse tree node for a node.\n     *\n     * @param node The original node.\n     * @returns The original parse tree node if found; otherwise, undefined.\n     */\n    function getParseTreeNode(node: Node | undefined): Node | undefined;\n    /**\n     * Gets the original parse tree node for a node.\n     *\n     * @param node The original node.\n     * @param nodeTest A callback used to ensure the correct type of parse tree node is returned.\n     * @returns The original parse tree node if found; otherwise, undefined.\n     */\n    function getParseTreeNode<T extends Node>(node: T | undefined, nodeTest?: (node: Node) => node is T): T | undefined;\n    /** Add an extra underscore to identifiers that start with two underscores to avoid issues with magic names like \'__proto__\' */\n    function escapeLeadingUnderscores(identifier: string): __String;\n    /**\n     * Remove extra underscore from escaped identifier text content.\n     *\n     * @param identifier The escaped identifier text.\n     * @returns The unescaped identifier text.\n     */\n    function unescapeLeadingUnderscores(identifier: __String): string;\n    function idText(identifierOrPrivateName: Identifier | PrivateIdentifier): string;\n    /**\n     * If the text of an Identifier matches a keyword (including contextual and TypeScript-specific keywords), returns the\n     * SyntaxKind for the matching keyword.\n     */\n    function identifierToKeywordKind(node: Identifier): KeywordSyntaxKind | undefined;\n    function symbolName(symbol: Symbol): string;\n    function getNameOfJSDocTypedef(declaration: JSDocTypedefTag): Identifier | PrivateIdentifier | undefined;\n    function getNameOfDeclaration(declaration: Declaration | Expression | undefined): DeclarationName | undefined;\n    function getDecorators(node: HasDecorators): readonly Decorator[] | undefined;\n    function getModifiers(node: HasModifiers): readonly Modifier[] | undefined;\n    /**\n     * Gets the JSDoc parameter tags for the node if present.\n     *\n     * @remarks Returns any JSDoc param tag whose name matches the provided\n     * parameter, whether a param tag on a containing function\n     * expression, or a param tag on a variable declaration whose\n     * initializer is the containing function. The tags closest to the\n     * node are returned first, so in the previous example, the param\n     * tag on the containing function expression would be first.\n     *\n     * For binding patterns, parameter tags are matched by position.\n     */\n    function getJSDocParameterTags(param: ParameterDeclaration): readonly JSDocParameterTag[];\n    /**\n     * Gets the JSDoc type parameter tags for the node if present.\n     *\n     * @remarks Returns any JSDoc template tag whose names match the provided\n     * parameter, whether a template tag on a containing function\n     * expression, or a template tag on a variable declaration whose\n     * initializer is the containing function. The tags closest to the\n     * node are returned first, so in the previous example, the template\n     * tag on the containing function expression would be first.\n     */\n    function getJSDocTypeParameterTags(param: TypeParameterDeclaration): readonly JSDocTemplateTag[];\n    /**\n     * Return true if the node has JSDoc parameter tags.\n     *\n     * @remarks Includes parameter tags that are not directly on the node,\n     * for example on a variable declaration whose initializer is a function expression.\n     */\n    function hasJSDocParameterTags(node: FunctionLikeDeclaration | SignatureDeclaration): boolean;\n    /** Gets the JSDoc augments tag for the node if present */\n    function getJSDocAugmentsTag(node: Node): JSDocAugmentsTag | undefined;\n    /** Gets the JSDoc implements tags for the node if present */\n    function getJSDocImplementsTags(node: Node): readonly JSDocImplementsTag[];\n    /** Gets the JSDoc class tag for the node if present */\n    function getJSDocClassTag(node: Node): JSDocClassTag | undefined;\n    /** Gets the JSDoc public tag for the node if present */\n    function getJSDocPublicTag(node: Node): JSDocPublicTag | undefined;\n    /** Gets the JSDoc private tag for the node if present */\n    function getJSDocPrivateTag(node: Node): JSDocPrivateTag | undefined;\n    /** Gets the JSDoc protected tag for the node if present */\n    function getJSDocProtectedTag(node: Node): JSDocProtectedTag | undefined;\n    /** Gets the JSDoc protected tag for the node if present */\n    function getJSDocReadonlyTag(node: Node): JSDocReadonlyTag | undefined;\n    function getJSDocOverrideTagNoCache(node: Node): JSDocOverrideTag | undefined;\n    /** Gets the JSDoc deprecated tag for the node if present */\n    function getJSDocDeprecatedTag(node: Node): JSDocDeprecatedTag | undefined;\n    /** Gets the JSDoc enum tag for the node if present */\n    function getJSDocEnumTag(node: Node): JSDocEnumTag | undefined;\n    /** Gets the JSDoc this tag for the node if present */\n    function getJSDocThisTag(node: Node): JSDocThisTag | undefined;\n    /** Gets the JSDoc return tag for the node if present */\n    function getJSDocReturnTag(node: Node): JSDocReturnTag | undefined;\n    /** Gets the JSDoc template tag for the node if present */\n    function getJSDocTemplateTag(node: Node): JSDocTemplateTag | undefined;\n    function getJSDocSatisfiesTag(node: Node): JSDocSatisfiesTag | undefined;\n    /** Gets the JSDoc type tag for the node if present and valid */\n    function getJSDocTypeTag(node: Node): JSDocTypeTag | undefined;\n    /**\n     * Gets the type node for the node if provided via JSDoc.\n     *\n     * @remarks The search includes any JSDoc param tag that relates\n     * to the provided parameter, for example a type tag on the\n     * parameter itself, or a param tag on a containing function\n     * expression, or a param tag on a variable declaration whose\n     * initializer is the containing function. The tags closest to the\n     * node are examined first, so in the previous example, the type\n     * tag directly on the node would be returned.\n     */\n    function getJSDocType(node: Node): TypeNode | undefined;\n    /**\n     * Gets the return type node for the node if provided via JSDoc return tag or type tag.\n     *\n     * @remarks `getJSDocReturnTag` just gets the whole JSDoc tag. This function\n     * gets the type from inside the braces, after the fat arrow, etc.\n     */\n    function getJSDocReturnType(node: Node): TypeNode | undefined;\n    /** Get all JSDoc tags related to a node, including those on parent nodes. */\n    function getJSDocTags(node: Node): readonly JSDocTag[];\n    /** Gets all JSDoc tags that match a specified predicate */\n    function getAllJSDocTags<T extends JSDocTag>(node: Node, predicate: (tag: JSDocTag) => tag is T): readonly T[];\n    /** Gets all JSDoc tags of a specified kind */\n    function getAllJSDocTagsOfKind(node: Node, kind: SyntaxKind): readonly JSDocTag[];\n    /** Gets the text of a jsdoc comment, flattening links to their text. */\n    function getTextOfJSDocComment(comment?: string | NodeArray<JSDocComment>): string | undefined;\n    /**\n     * Gets the effective type parameters. If the node was parsed in a\n     * JavaScript file, gets the type parameters from the `@template` tag from JSDoc.\n     *\n     * This does *not* return type parameters from a jsdoc reference to a generic type, eg\n     *\n     * type Id = <T>(x: T) => T\n     * /** @type {Id} /\n     * function id(x) { return x }\n     */\n    function getEffectiveTypeParameterDeclarations(node: DeclarationWithTypeParameters): readonly TypeParameterDeclaration[];\n    function getEffectiveConstraintOfTypeParameter(node: TypeParameterDeclaration): TypeNode | undefined;\n    function isMemberName(node: Node): node is MemberName;\n    function isPropertyAccessChain(node: Node): node is PropertyAccessChain;\n    function isElementAccessChain(node: Node): node is ElementAccessChain;\n    function isCallChain(node: Node): node is CallChain;\n    function isOptionalChain(node: Node): node is PropertyAccessChain | ElementAccessChain | CallChain | NonNullChain;\n    function isNullishCoalesce(node: Node): boolean;\n    function isConstTypeReference(node: Node): boolean;\n    function skipPartiallyEmittedExpressions(node: Expression): Expression;\n    function skipPartiallyEmittedExpressions(node: Node): Node;\n    function isNonNullChain(node: Node): node is NonNullChain;\n    function isBreakOrContinueStatement(node: Node): node is BreakOrContinueStatement;\n    function isNamedExportBindings(node: Node): node is NamedExportBindings;\n    function isJSDocPropertyLikeTag(node: Node): node is JSDocPropertyLikeTag;\n    /**\n     * True if kind is of some token syntax kind.\n     * For example, this is true for an IfKeyword but not for an IfStatement.\n     * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.\n     */\n    function isTokenKind(kind: SyntaxKind): boolean;\n    /**\n     * True if node is of some token syntax kind.\n     * For example, this is true for an IfKeyword but not for an IfStatement.\n     * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.\n     */\n    function isToken(n: Node): boolean;\n    function isLiteralExpression(node: Node): node is LiteralExpression;\n    function isTemplateLiteralToken(node: Node): node is TemplateLiteralToken;\n    function isTemplateMiddleOrTemplateTail(node: Node): node is TemplateMiddle | TemplateTail;\n    function isImportOrExportSpecifier(node: Node): node is ImportSpecifier | ExportSpecifier;\n    function isTypeOnlyImportDeclaration(node: Node): node is TypeOnlyImportDeclaration;\n    function isTypeOnlyExportDeclaration(node: Node): node is TypeOnlyExportDeclaration;\n    function isTypeOnlyImportOrExportDeclaration(node: Node): node is TypeOnlyAliasDeclaration;\n    function isPartOfTypeOnlyImportOrExportDeclaration(node: Node): boolean;\n    function isStringTextContainingNode(node: Node): node is StringLiteral | TemplateLiteralToken;\n    function isImportAttributeName(node: Node): node is ImportAttributeName;\n    function isModifier(node: Node): node is Modifier;\n    function isEntityName(node: Node): node is EntityName;\n    function isPropertyName(node: Node): node is PropertyName;\n    function isBindingName(node: Node): node is BindingName;\n    function isFunctionLike(node: Node | undefined): node is SignatureDeclaration;\n    function isClassElement(node: Node): node is ClassElement;\n    function isClassLike(node: Node): node is ClassLikeDeclaration;\n    function isAccessor(node: Node): node is AccessorDeclaration;\n    function isAutoAccessorPropertyDeclaration(node: Node): node is AutoAccessorPropertyDeclaration;\n    function isModifierLike(node: Node): node is ModifierLike;\n    function isTypeElement(node: Node): node is TypeElement;\n    function isClassOrTypeElement(node: Node): node is ClassElement | TypeElement;\n    function isObjectLiteralElementLike(node: Node): node is ObjectLiteralElementLike;\n    /**\n     * Node test that determines whether a node is a valid type node.\n     * This differs from the `isPartOfTypeNode` function which determines whether a node is *part*\n     * of a TypeNode.\n     */\n    function isTypeNode(node: Node): node is TypeNode;\n    function isFunctionOrConstructorTypeNode(node: Node): node is FunctionTypeNode | ConstructorTypeNode;\n    function isArrayBindingElement(node: Node): node is ArrayBindingElement;\n    function isPropertyAccessOrQualifiedName(node: Node): node is PropertyAccessExpression | QualifiedName;\n    function isCallLikeExpression(node: Node): node is CallLikeExpression;\n    function isCallOrNewExpression(node: Node): node is CallExpression | NewExpression;\n    function isTemplateLiteral(node: Node): node is TemplateLiteral;\n    function isLeftHandSideExpression(node: Node): node is LeftHandSideExpression;\n    function isLiteralTypeLiteral(node: Node): node is NullLiteral | BooleanLiteral | LiteralExpression | PrefixUnaryExpression;\n    /**\n     * Determines whether a node is an expression based only on its kind.\n     */\n    function isExpression(node: Node): node is Expression;\n    function isAssertionExpression(node: Node): node is AssertionExpression;\n    function isIterationStatement(node: Node, lookInLabeledStatements: false): node is IterationStatement;\n    function isIterationStatement(node: Node, lookInLabeledStatements: boolean): node is IterationStatement | LabeledStatement;\n    function isConciseBody(node: Node): node is ConciseBody;\n    function isForInitializer(node: Node): node is ForInitializer;\n    function isModuleBody(node: Node): node is ModuleBody;\n    function isNamedImportBindings(node: Node): node is NamedImportBindings;\n    function isDeclarationStatement(node: Node): node is DeclarationStatement;\n    function isStatement(node: Node): node is Statement;\n    function isModuleReference(node: Node): node is ModuleReference;\n    function isJsxTagNameExpression(node: Node): node is JsxTagNameExpression;\n    function isJsxChild(node: Node): node is JsxChild;\n    function isJsxAttributeLike(node: Node): node is JsxAttributeLike;\n    function isStringLiteralOrJsxExpression(node: Node): node is StringLiteral | JsxExpression;\n    function isJsxOpeningLikeElement(node: Node): node is JsxOpeningLikeElement;\n    function isJsxCallLike(node: Node): node is JsxCallLike;\n    function isCaseOrDefaultClause(node: Node): node is CaseOrDefaultClause;\n    /** True if node is of a kind that may contain comment text. */\n    function isJSDocCommentContainingNode(node: Node): boolean;\n    function isSetAccessor(node: Node): node is SetAccessorDeclaration;\n    function isGetAccessor(node: Node): node is GetAccessorDeclaration;\n    /** True if has initializer node attached to it. */\n    function hasOnlyExpressionInitializer(node: Node): node is HasExpressionInitializer;\n    function isObjectLiteralElement(node: Node): node is ObjectLiteralElement;\n    function isStringLiteralLike(node: Node | FileReference): node is StringLiteralLike;\n    function isJSDocLinkLike(node: Node): node is JSDocLink | JSDocLinkCode | JSDocLinkPlain;\n    function hasRestParameter(s: SignatureDeclaration | JSDocSignature): boolean;\n    function isRestParameter(node: ParameterDeclaration | JSDocParameterTag): boolean;\n    function isInternalDeclaration(node: Node, sourceFile?: SourceFile): boolean;\n    const unchangedTextChangeRange: TextChangeRange;\n    type ParameterPropertyDeclaration = ParameterDeclaration & {\n        parent: ConstructorDeclaration;\n        name: Identifier;\n    };\n    function isPartOfTypeNode(node: Node): boolean;\n    /**\n     * This function checks multiple locations for JSDoc comments that apply to a host node.\n     * At each location, the whole comment may apply to the node, or only a specific tag in\n     * the comment. In the first case, location adds the entire {@link JSDoc} object. In the\n     * second case, it adds the applicable {@link JSDocTag}.\n     *\n     * For example, a JSDoc comment before a parameter adds the entire {@link JSDoc}. But a\n     * `@param` tag on the parent function only adds the {@link JSDocTag} for the `@param`.\n     *\n     * ```ts\n     * /** JSDoc will be returned for `a` *\\/\n     * const a = 0\n     * /**\n     *  * Entire JSDoc will be returned for `b`\n     *  * @param c JSDocTag will be returned for `c`\n     *  *\\/\n     * function b(/** JSDoc will be returned for `c` *\\/ c) {}\n     * ```\n     */\n    function getJSDocCommentsAndTags(hostNode: Node): readonly (JSDoc | JSDocTag)[];\n    /**\n     * Create an external source map source file reference\n     */\n    function createSourceMapSource(fileName: string, text: string, skipTrivia?: (pos: number) => number): SourceMapSource;\n    function setOriginalNode<T extends Node>(node: T, original: Node | undefined): T;\n    const factory: NodeFactory;\n    /**\n     * Clears any `EmitNode` entries from parse-tree nodes.\n     * @param sourceFile A source file.\n     */\n    function disposeEmitNodes(sourceFile: SourceFile | undefined): void;\n    /**\n     * Sets flags that control emit behavior of a node.\n     */\n    function setEmitFlags<T extends Node>(node: T, emitFlags: EmitFlags): T;\n    /**\n     * Gets a custom text range to use when emitting source maps.\n     */\n    function getSourceMapRange(node: Node): SourceMapRange;\n    /**\n     * Sets a custom text range to use when emitting source maps.\n     */\n    function setSourceMapRange<T extends Node>(node: T, range: SourceMapRange | undefined): T;\n    /**\n     * Gets the TextRange to use for source maps for a token of a node.\n     */\n    function getTokenSourceMapRange(node: Node, token: SyntaxKind): SourceMapRange | undefined;\n    /**\n     * Sets the TextRange to use for source maps for a token of a node.\n     */\n    function setTokenSourceMapRange<T extends Node>(node: T, token: SyntaxKind, range: SourceMapRange | undefined): T;\n    /**\n     * Gets a custom text range to use when emitting comments.\n     */\n    function getCommentRange(node: Node): TextRange;\n    /**\n     * Sets a custom text range to use when emitting comments.\n     */\n    function setCommentRange<T extends Node>(node: T, range: TextRange): T;\n    function getSyntheticLeadingComments(node: Node): SynthesizedComment[] | undefined;\n    function setSyntheticLeadingComments<T extends Node>(node: T, comments: SynthesizedComment[] | undefined): T;\n    function addSyntheticLeadingComment<T extends Node>(node: T, kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia, text: string, hasTrailingNewLine?: boolean): T;\n    function getSyntheticTrailingComments(node: Node): SynthesizedComment[] | undefined;\n    function setSyntheticTrailingComments<T extends Node>(node: T, comments: SynthesizedComment[] | undefined): T;\n    function addSyntheticTrailingComment<T extends Node>(node: T, kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia, text: string, hasTrailingNewLine?: boolean): T;\n    function moveSyntheticComments<T extends Node>(node: T, original: Node): T;\n    /**\n     * Gets the constant value to emit for an expression representing an enum.\n     */\n    function getConstantValue(node: AccessExpression): string | number | undefined;\n    /**\n     * Sets the constant value to emit for an expression.\n     */\n    function setConstantValue(node: AccessExpression, value: string | number): AccessExpression;\n    /**\n     * Adds an EmitHelper to a node.\n     */\n    function addEmitHelper<T extends Node>(node: T, helper: EmitHelper): T;\n    /**\n     * Add EmitHelpers to a node.\n     */\n    function addEmitHelpers<T extends Node>(node: T, helpers: EmitHelper[] | undefined): T;\n    /**\n     * Removes an EmitHelper from a node.\n     */\n    function removeEmitHelper(node: Node, helper: EmitHelper): boolean;\n    /**\n     * Gets the EmitHelpers of a node.\n     */\n    function getEmitHelpers(node: Node): EmitHelper[] | undefined;\n    /**\n     * Moves matching emit helpers from a source node to a target node.\n     */\n    function moveEmitHelpers(source: Node, target: Node, predicate: (helper: EmitHelper) => boolean): void;\n    function isNumericLiteral(node: Node): node is NumericLiteral;\n    function isBigIntLiteral(node: Node): node is BigIntLiteral;\n    function isStringLiteral(node: Node): node is StringLiteral;\n    function isJsxText(node: Node): node is JsxText;\n    function isRegularExpressionLiteral(node: Node): node is RegularExpressionLiteral;\n    function isNoSubstitutionTemplateLiteral(node: Node): node is NoSubstitutionTemplateLiteral;\n    function isTemplateHead(node: Node): node is TemplateHead;\n    function isTemplateMiddle(node: Node): node is TemplateMiddle;\n    function isTemplateTail(node: Node): node is TemplateTail;\n    function isDotDotDotToken(node: Node): node is DotDotDotToken;\n    function isPlusToken(node: Node): node is PlusToken;\n    function isMinusToken(node: Node): node is MinusToken;\n    function isAsteriskToken(node: Node): node is AsteriskToken;\n    function isExclamationToken(node: Node): node is ExclamationToken;\n    function isQuestionToken(node: Node): node is QuestionToken;\n    function isColonToken(node: Node): node is ColonToken;\n    function isQuestionDotToken(node: Node): node is QuestionDotToken;\n    function isEqualsGreaterThanToken(node: Node): node is EqualsGreaterThanToken;\n    function isIdentifier(node: Node): node is Identifier;\n    function isPrivateIdentifier(node: Node): node is PrivateIdentifier;\n    function isAssertsKeyword(node: Node): node is AssertsKeyword;\n    function isAwaitKeyword(node: Node): node is AwaitKeyword;\n    function isQualifiedName(node: Node): node is QualifiedName;\n    function isComputedPropertyName(node: Node): node is ComputedPropertyName;\n    function isTypeParameterDeclaration(node: Node): node is TypeParameterDeclaration;\n    function isParameter(node: Node): node is ParameterDeclaration;\n    function isDecorator(node: Node): node is Decorator;\n    function isPropertySignature(node: Node): node is PropertySignature;\n    function isPropertyDeclaration(node: Node): node is PropertyDeclaration;\n    function isMethodSignature(node: Node): node is MethodSignature;\n    function isMethodDeclaration(node: Node): node is MethodDeclaration;\n    function isClassStaticBlockDeclaration(node: Node): node is ClassStaticBlockDeclaration;\n    function isConstructorDeclaration(node: Node): node is ConstructorDeclaration;\n    function isGetAccessorDeclaration(node: Node): node is GetAccessorDeclaration;\n    function isSetAccessorDeclaration(node: Node): node is SetAccessorDeclaration;\n    function isCallSignatureDeclaration(node: Node): node is CallSignatureDeclaration;\n    function isConstructSignatureDeclaration(node: Node): node is ConstructSignatureDeclaration;\n    function isIndexSignatureDeclaration(node: Node): node is IndexSignatureDeclaration;\n    function isTypePredicateNode(node: Node): node is TypePredicateNode;\n    function isTypeReferenceNode(node: Node): node is TypeReferenceNode;\n    function isFunctionTypeNode(node: Node): node is FunctionTypeNode;\n    function isConstructorTypeNode(node: Node): node is ConstructorTypeNode;\n    function isTypeQueryNode(node: Node): node is TypeQueryNode;\n    function isTypeLiteralNode(node: Node): node is TypeLiteralNode;\n    function isArrayTypeNode(node: Node): node is ArrayTypeNode;\n    function isTupleTypeNode(node: Node): node is TupleTypeNode;\n    function isNamedTupleMember(node: Node): node is NamedTupleMember;\n    function isOptionalTypeNode(node: Node): node is OptionalTypeNode;\n    function isRestTypeNode(node: Node): node is RestTypeNode;\n    function isUnionTypeNode(node: Node): node is UnionTypeNode;\n    function isIntersectionTypeNode(node: Node): node is IntersectionTypeNode;\n    function isConditionalTypeNode(node: Node): node is ConditionalTypeNode;\n    function isInferTypeNode(node: Node): node is InferTypeNode;\n    function isParenthesizedTypeNode(node: Node): node is ParenthesizedTypeNode;\n    function isThisTypeNode(node: Node): node is ThisTypeNode;\n    function isTypeOperatorNode(node: Node): node is TypeOperatorNode;\n    function isIndexedAccessTypeNode(node: Node): node is IndexedAccessTypeNode;\n    function isMappedTypeNode(node: Node): node is MappedTypeNode;\n    function isLiteralTypeNode(node: Node): node is LiteralTypeNode;\n    function isImportTypeNode(node: Node): node is ImportTypeNode;\n    function isTemplateLiteralTypeSpan(node: Node): node is TemplateLiteralTypeSpan;\n    function isTemplateLiteralTypeNode(node: Node): node is TemplateLiteralTypeNode;\n    function isObjectBindingPattern(node: Node): node is ObjectBindingPattern;\n    function isArrayBindingPattern(node: Node): node is ArrayBindingPattern;\n    function isBindingElement(node: Node): node is BindingElement;\n    function isArrayLiteralExpression(node: Node): node is ArrayLiteralExpression;\n    function isObjectLiteralExpression(node: Node): node is ObjectLiteralExpression;\n    function isPropertyAccessExpression(node: Node): node is PropertyAccessExpression;\n    function isElementAccessExpression(node: Node): node is ElementAccessExpression;\n    function isCallExpression(node: Node): node is CallExpression;\n    function isNewExpression(node: Node): node is NewExpression;\n    function isTaggedTemplateExpression(node: Node): node is TaggedTemplateExpression;\n    function isTypeAssertionExpression(node: Node): node is TypeAssertion;\n    function isParenthesizedExpression(node: Node): node is ParenthesizedExpression;\n    function isFunctionExpression(node: Node): node is FunctionExpression;\n    function isArrowFunction(node: Node): node is ArrowFunction;\n    function isDeleteExpression(node: Node): node is DeleteExpression;\n    function isTypeOfExpression(node: Node): node is TypeOfExpression;\n    function isVoidExpression(node: Node): node is VoidExpression;\n    function isAwaitExpression(node: Node): node is AwaitExpression;\n    function isPrefixUnaryExpression(node: Node): node is PrefixUnaryExpression;\n    function isPostfixUnaryExpression(node: Node): node is PostfixUnaryExpression;\n    function isBinaryExpression(node: Node): node is BinaryExpression;\n    function isConditionalExpression(node: Node): node is ConditionalExpression;\n    function isTemplateExpression(node: Node): node is TemplateExpression;\n    function isYieldExpression(node: Node): node is YieldExpression;\n    function isSpreadElement(node: Node): node is SpreadElement;\n    function isClassExpression(node: Node): node is ClassExpression;\n    function isOmittedExpression(node: Node): node is OmittedExpression;\n    function isExpressionWithTypeArguments(node: Node): node is ExpressionWithTypeArguments;\n    function isAsExpression(node: Node): node is AsExpression;\n    function isSatisfiesExpression(node: Node): node is SatisfiesExpression;\n    function isNonNullExpression(node: Node): node is NonNullExpression;\n    function isMetaProperty(node: Node): node is MetaProperty;\n    function isSyntheticExpression(node: Node): node is SyntheticExpression;\n    function isPartiallyEmittedExpression(node: Node): node is PartiallyEmittedExpression;\n    function isCommaListExpression(node: Node): node is CommaListExpression;\n    function isTemplateSpan(node: Node): node is TemplateSpan;\n    function isSemicolonClassElement(node: Node): node is SemicolonClassElement;\n    function isBlock(node: Node): node is Block;\n    function isVariableStatement(node: Node): node is VariableStatement;\n    function isEmptyStatement(node: Node): node is EmptyStatement;\n    function isExpressionStatement(node: Node): node is ExpressionStatement;\n    function isIfStatement(node: Node): node is IfStatement;\n    function isDoStatement(node: Node): node is DoStatement;\n    function isWhileStatement(node: Node): node is WhileStatement;\n    function isForStatement(node: Node): node is ForStatement;\n    function isForInStatement(node: Node): node is ForInStatement;\n    function isForOfStatement(node: Node): node is ForOfStatement;\n    function isContinueStatement(node: Node): node is ContinueStatement;\n    function isBreakStatement(node: Node): node is BreakStatement;\n    function isReturnStatement(node: Node): node is ReturnStatement;\n    function isWithStatement(node: Node): node is WithStatement;\n    function isSwitchStatement(node: Node): node is SwitchStatement;\n    function isLabeledStatement(node: Node): node is LabeledStatement;\n    function isThrowStatement(node: Node): node is ThrowStatement;\n    function isTryStatement(node: Node): node is TryStatement;\n    function isDebuggerStatement(node: Node): node is DebuggerStatement;\n    function isVariableDeclaration(node: Node): node is VariableDeclaration;\n    function isVariableDeclarationList(node: Node): node is VariableDeclarationList;\n    function isFunctionDeclaration(node: Node): node is FunctionDeclaration;\n    function isClassDeclaration(node: Node): node is ClassDeclaration;\n    function isInterfaceDeclaration(node: Node): node is InterfaceDeclaration;\n    function isTypeAliasDeclaration(node: Node): node is TypeAliasDeclaration;\n    function isEnumDeclaration(node: Node): node is EnumDeclaration;\n    function isModuleDeclaration(node: Node): node is ModuleDeclaration;\n    function isModuleBlock(node: Node): node is ModuleBlock;\n    function isCaseBlock(node: Node): node is CaseBlock;\n    function isNamespaceExportDeclaration(node: Node): node is NamespaceExportDeclaration;\n    function isImportEqualsDeclaration(node: Node): node is ImportEqualsDeclaration;\n    function isImportDeclaration(node: Node): node is ImportDeclaration;\n    function isImportClause(node: Node): node is ImportClause;\n    function isImportTypeAssertionContainer(node: Node): node is ImportTypeAssertionContainer;\n    /** @deprecated */\n    function isAssertClause(node: Node): node is AssertClause;\n    /** @deprecated */\n    function isAssertEntry(node: Node): node is AssertEntry;\n    function isImportAttributes(node: Node): node is ImportAttributes;\n    function isImportAttribute(node: Node): node is ImportAttribute;\n    function isNamespaceImport(node: Node): node is NamespaceImport;\n    function isNamespaceExport(node: Node): node is NamespaceExport;\n    function isNamedImports(node: Node): node is NamedImports;\n    function isImportSpecifier(node: Node): node is ImportSpecifier;\n    function isExportAssignment(node: Node): node is ExportAssignment;\n    function isExportDeclaration(node: Node): node is ExportDeclaration;\n    function isNamedExports(node: Node): node is NamedExports;\n    function isExportSpecifier(node: Node): node is ExportSpecifier;\n    function isModuleExportName(node: Node): node is ModuleExportName;\n    function isMissingDeclaration(node: Node): node is MissingDeclaration;\n    function isNotEmittedStatement(node: Node): node is NotEmittedStatement;\n    function isExternalModuleReference(node: Node): node is ExternalModuleReference;\n    function isJsxElement(node: Node): node is JsxElement;\n    function isJsxSelfClosingElement(node: Node): node is JsxSelfClosingElement;\n    function isJsxOpeningElement(node: Node): node is JsxOpeningElement;\n    function isJsxClosingElement(node: Node): node is JsxClosingElement;\n    function isJsxFragment(node: Node): node is JsxFragment;\n    function isJsxOpeningFragment(node: Node): node is JsxOpeningFragment;\n    function isJsxClosingFragment(node: Node): node is JsxClosingFragment;\n    function isJsxAttribute(node: Node): node is JsxAttribute;\n    function isJsxAttributes(node: Node): node is JsxAttributes;\n    function isJsxSpreadAttribute(node: Node): node is JsxSpreadAttribute;\n    function isJsxExpression(node: Node): node is JsxExpression;\n    function isJsxNamespacedName(node: Node): node is JsxNamespacedName;\n    function isCaseClause(node: Node): node is CaseClause;\n    function isDefaultClause(node: Node): node is DefaultClause;\n    function isHeritageClause(node: Node): node is HeritageClause;\n    function isCatchClause(node: Node): node is CatchClause;\n    function isPropertyAssignment(node: Node): node is PropertyAssignment;\n    function isShorthandPropertyAssignment(node: Node): node is ShorthandPropertyAssignment;\n    function isSpreadAssignment(node: Node): node is SpreadAssignment;\n    function isEnumMember(node: Node): node is EnumMember;\n    function isSourceFile(node: Node): node is SourceFile;\n    function isBundle(node: Node): node is Bundle;\n    function isJSDocTypeExpression(node: Node): node is JSDocTypeExpression;\n    function isJSDocNameReference(node: Node): node is JSDocNameReference;\n    function isJSDocMemberName(node: Node): node is JSDocMemberName;\n    function isJSDocLink(node: Node): node is JSDocLink;\n    function isJSDocLinkCode(node: Node): node is JSDocLinkCode;\n    function isJSDocLinkPlain(node: Node): node is JSDocLinkPlain;\n    function isJSDocAllType(node: Node): node is JSDocAllType;\n    function isJSDocUnknownType(node: Node): node is JSDocUnknownType;\n    function isJSDocNullableType(node: Node): node is JSDocNullableType;\n    function isJSDocNonNullableType(node: Node): node is JSDocNonNullableType;\n    function isJSDocOptionalType(node: Node): node is JSDocOptionalType;\n    function isJSDocFunctionType(node: Node): node is JSDocFunctionType;\n    function isJSDocVariadicType(node: Node): node is JSDocVariadicType;\n    function isJSDocNamepathType(node: Node): node is JSDocNamepathType;\n    function isJSDoc(node: Node): node is JSDoc;\n    function isJSDocTypeLiteral(node: Node): node is JSDocTypeLiteral;\n    function isJSDocSignature(node: Node): node is JSDocSignature;\n    function isJSDocAugmentsTag(node: Node): node is JSDocAugmentsTag;\n    function isJSDocAuthorTag(node: Node): node is JSDocAuthorTag;\n    function isJSDocClassTag(node: Node): node is JSDocClassTag;\n    function isJSDocCallbackTag(node: Node): node is JSDocCallbackTag;\n    function isJSDocPublicTag(node: Node): node is JSDocPublicTag;\n    function isJSDocPrivateTag(node: Node): node is JSDocPrivateTag;\n    function isJSDocProtectedTag(node: Node): node is JSDocProtectedTag;\n    function isJSDocReadonlyTag(node: Node): node is JSDocReadonlyTag;\n    function isJSDocOverrideTag(node: Node): node is JSDocOverrideTag;\n    function isJSDocOverloadTag(node: Node): node is JSDocOverloadTag;\n    function isJSDocDeprecatedTag(node: Node): node is JSDocDeprecatedTag;\n    function isJSDocSeeTag(node: Node): node is JSDocSeeTag;\n    function isJSDocEnumTag(node: Node): node is JSDocEnumTag;\n    function isJSDocParameterTag(node: Node): node is JSDocParameterTag;\n    function isJSDocReturnTag(node: Node): node is JSDocReturnTag;\n    function isJSDocThisTag(node: Node): node is JSDocThisTag;\n    function isJSDocTypeTag(node: Node): node is JSDocTypeTag;\n    function isJSDocTemplateTag(node: Node): node is JSDocTemplateTag;\n    function isJSDocTypedefTag(node: Node): node is JSDocTypedefTag;\n    function isJSDocUnknownTag(node: Node): node is JSDocUnknownTag;\n    function isJSDocPropertyTag(node: Node): node is JSDocPropertyTag;\n    function isJSDocImplementsTag(node: Node): node is JSDocImplementsTag;\n    function isJSDocSatisfiesTag(node: Node): node is JSDocSatisfiesTag;\n    function isJSDocThrowsTag(node: Node): node is JSDocThrowsTag;\n    function isJSDocImportTag(node: Node): node is JSDocImportTag;\n    function isQuestionOrExclamationToken(node: Node): node is QuestionToken | ExclamationToken;\n    function isIdentifierOrThisTypeNode(node: Node): node is Identifier | ThisTypeNode;\n    function isReadonlyKeywordOrPlusOrMinusToken(node: Node): node is ReadonlyKeyword | PlusToken | MinusToken;\n    function isQuestionOrPlusOrMinusToken(node: Node): node is QuestionToken | PlusToken | MinusToken;\n    function isModuleName(node: Node): node is ModuleName;\n    function isBinaryOperatorToken(node: Node): node is BinaryOperatorToken;\n    function setTextRange<T extends TextRange>(range: T, location: TextRange | undefined): T;\n    function canHaveModifiers(node: Node): node is HasModifiers;\n    function canHaveDecorators(node: Node): node is HasDecorators;\n    /**\n     * Invokes a callback for each child of the given node. The \'cbNode\' callback is invoked for all child nodes\n     * stored in properties. If a \'cbNodes\' callback is specified, it is invoked for embedded arrays; otherwise,\n     * embedded arrays are flattened and the \'cbNode\' callback is invoked for each element. If a callback returns\n     * a truthy value, iteration stops and that value is returned. Otherwise, undefined is returned.\n     *\n     * @param node a given node to visit its children\n     * @param cbNode a callback to be invoked for all child nodes\n     * @param cbNodes a callback to be invoked for embedded array\n     *\n     * @remarks `forEachChild` must visit the children of a node in the order\n     * that they appear in the source code. The language service depends on this property to locate nodes by position.\n     */\n    function forEachChild<T>(node: Node, cbNode: (node: Node) => T | undefined, cbNodes?: (nodes: NodeArray<Node>) => T | undefined): T | undefined;\n    function createSourceFile(fileName: string, sourceText: string, languageVersionOrOptions: ScriptTarget | CreateSourceFileOptions, setParentNodes?: boolean, scriptKind?: ScriptKind): SourceFile;\n    function parseIsolatedEntityName(text: string, languageVersion: ScriptTarget): EntityName | undefined;\n    /**\n     * Parse json text into SyntaxTree and return node and parse errors if any\n     * @param fileName\n     * @param sourceText\n     */\n    function parseJsonText(fileName: string, sourceText: string): JsonSourceFile;\n    function isExternalModule(file: SourceFile): boolean;\n    function updateSourceFile(sourceFile: SourceFile, newText: string, textChangeRange: TextChangeRange, aggressiveChecks?: boolean): SourceFile;\n    interface CreateSourceFileOptions {\n        languageVersion: ScriptTarget;\n        /**\n         * Controls the format the file is detected as - this can be derived from only the path\n         * and files on disk, but needs to be done with a module resolution cache in scope to be performant.\n         * This is usually `undefined` for compilations that do not have `moduleResolution` values of `node16` or `nodenext`.\n         */\n        impliedNodeFormat?: ResolutionMode;\n        /**\n         * Controls how module-y-ness is set for the given file. Usually the result of calling\n         * `getSetExternalModuleIndicator` on a valid `CompilerOptions` object. If not present, the default\n         * check specified by `isFileProbablyExternalModule` will be used to set the field.\n         */\n        setExternalModuleIndicator?: (file: SourceFile) => void;\n        jsDocParsingMode?: JSDocParsingMode;\n    }\n    function parseCommandLine(commandLine: readonly string[], readFile?: (path: string) => string | undefined): ParsedCommandLine;\n    function parseBuildCommand(commandLine: readonly string[]): ParsedBuildCommand;\n    /**\n     * Reads the config file, reports errors if any and exits if the config file cannot be found\n     */\n    function getParsedCommandLineOfConfigFile(configFileName: string, optionsToExtend: CompilerOptions | undefined, host: ParseConfigFileHost, extendedConfigCache?: Map<string, ExtendedConfigCacheEntry>, watchOptionsToExtend?: WatchOptions, extraFileExtensions?: readonly FileExtensionInfo[]): ParsedCommandLine | undefined;\n    /**\n     * Read tsconfig.json file\n     * @param fileName The path to the config file\n     */\n    function readConfigFile(fileName: string, readFile: (path: string) => string | undefined): {\n        config?: any;\n        error?: Diagnostic;\n    };\n    /**\n     * Parse the text of the tsconfig.json file\n     * @param fileName The path to the config file\n     * @param jsonText The text of the config file\n     */\n    function parseConfigFileTextToJson(fileName: string, jsonText: string): {\n        config?: any;\n        error?: Diagnostic;\n    };\n    /**\n     * Read tsconfig.json file\n     * @param fileName The path to the config file\n     */\n    function readJsonConfigFile(fileName: string, readFile: (path: string) => string | undefined): TsConfigSourceFile;\n    /**\n     * Convert the json syntax tree into the json value\n     */\n    function convertToObject(sourceFile: JsonSourceFile, errors: Diagnostic[]): any;\n    /**\n     * Parse the contents of a config file (tsconfig.json).\n     * @param json The contents of the config file to parse\n     * @param host Instance of ParseConfigHost used to enumerate files in folder.\n     * @param basePath A root directory to resolve relative path entries in the config\n     *    file to. e.g. outDir\n     */\n    function parseJsonConfigFileContent(json: any, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<string, ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions): ParsedCommandLine;\n    /**\n     * Parse the contents of a config file (tsconfig.json).\n     * @param jsonNode The contents of the config file to parse\n     * @param host Instance of ParseConfigHost used to enumerate files in folder.\n     * @param basePath A root directory to resolve relative path entries in the config\n     *    file to. e.g. outDir\n     */\n    function parseJsonSourceFileConfigFileContent(sourceFile: TsConfigSourceFile, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<string, ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions): ParsedCommandLine;\n    function convertCompilerOptionsFromJson(jsonOptions: any, basePath: string, configFileName?: string): {\n        options: CompilerOptions;\n        errors: Diagnostic[];\n    };\n    function convertTypeAcquisitionFromJson(jsonOptions: any, basePath: string, configFileName?: string): {\n        options: TypeAcquisition;\n        errors: Diagnostic[];\n    };\n    /** Parsed command line for build */\n    interface ParsedBuildCommand {\n        buildOptions: BuildOptions;\n        watchOptions: WatchOptions | undefined;\n        projects: string[];\n        errors: Diagnostic[];\n    }\n    type DiagnosticReporter = (diagnostic: Diagnostic) => void;\n    /**\n     * Reports config file diagnostics\n     */\n    interface ConfigFileDiagnosticsReporter {\n        /**\n         * Reports unrecoverable error when parsing config file\n         */\n        onUnRecoverableConfigFileDiagnostic: DiagnosticReporter;\n    }\n    /**\n     * Interface extending ParseConfigHost to support ParseConfigFile that reads config file and reports errors\n     */\n    interface ParseConfigFileHost extends ParseConfigHost, ConfigFileDiagnosticsReporter {\n        getCurrentDirectory(): string;\n    }\n    interface ParsedTsconfig {\n        raw: any;\n        options?: CompilerOptions;\n        watchOptions?: WatchOptions;\n        typeAcquisition?: TypeAcquisition;\n        /**\n         * Note that the case of the config path has not yet been normalized, as no files have been imported into the project yet\n         */\n        extendedConfigPath?: string | string[];\n    }\n    interface ExtendedConfigCacheEntry {\n        extendedResult: TsConfigSourceFile;\n        extendedConfig: ParsedTsconfig | undefined;\n    }\n    function getEffectiveTypeRoots(options: CompilerOptions, host: GetEffectiveTypeRootsHost): string[] | undefined;\n    /**\n     * @param {string | undefined} containingFile - file that contains type reference directive, can be undefined if containing file is unknown.\n     * This is possible in case if resolution is performed for directives specified via \'types\' parameter. In this case initial path for secondary lookups\n     * is assumed to be the same as root directory of the project.\n     */\n    function resolveTypeReferenceDirective(typeReferenceDirectiveName: string, containingFile: string | undefined, options: CompilerOptions, host: ModuleResolutionHost, redirectedReference?: ResolvedProjectReference, cache?: TypeReferenceDirectiveResolutionCache, resolutionMode?: ResolutionMode): ResolvedTypeReferenceDirectiveWithFailedLookupLocations;\n    /**\n     * Given a set of options, returns the set of type directive names\n     *   that should be included for this program automatically.\n     * This list could either come from the config file,\n     *   or from enumerating the types root + initial secondary types lookup location.\n     * More type directives might appear in the program later as a result of loading actual source files;\n     *   this list is only the set of defaults that are implicitly included.\n     */\n    function getAutomaticTypeDirectiveNames(options: CompilerOptions, host: ModuleResolutionHost): string[];\n    function createModuleResolutionCache(currentDirectory: string, getCanonicalFileName: (s: string) => string, options?: CompilerOptions, packageJsonInfoCache?: PackageJsonInfoCache): ModuleResolutionCache;\n    function createTypeReferenceDirectiveResolutionCache(currentDirectory: string, getCanonicalFileName: (s: string) => string, options?: CompilerOptions, packageJsonInfoCache?: PackageJsonInfoCache): TypeReferenceDirectiveResolutionCache;\n    function resolveModuleNameFromCache(moduleName: string, containingFile: string, cache: ModuleResolutionCache, mode?: ResolutionMode): ResolvedModuleWithFailedLookupLocations | undefined;\n    function resolveModuleName(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: ModuleResolutionCache, redirectedReference?: ResolvedProjectReference, resolutionMode?: ResolutionMode): ResolvedModuleWithFailedLookupLocations;\n    function bundlerModuleNameResolver(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: ModuleResolutionCache, redirectedReference?: ResolvedProjectReference): ResolvedModuleWithFailedLookupLocations;\n    function nodeModuleNameResolver(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: ModuleResolutionCache, redirectedReference?: ResolvedProjectReference): ResolvedModuleWithFailedLookupLocations;\n    function classicNameResolver(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: NonRelativeModuleNameResolutionCache, redirectedReference?: ResolvedProjectReference): ResolvedModuleWithFailedLookupLocations;\n    interface TypeReferenceDirectiveResolutionCache extends PerDirectoryResolutionCache<ResolvedTypeReferenceDirectiveWithFailedLookupLocations>, NonRelativeNameResolutionCache<ResolvedTypeReferenceDirectiveWithFailedLookupLocations>, PackageJsonInfoCache {\n    }\n    interface ModeAwareCache<T> {\n        get(key: string, mode: ResolutionMode): T | undefined;\n        set(key: string, mode: ResolutionMode, value: T): this;\n        delete(key: string, mode: ResolutionMode): this;\n        has(key: string, mode: ResolutionMode): boolean;\n        forEach(cb: (elem: T, key: string, mode: ResolutionMode) => void): void;\n        size(): number;\n    }\n    /**\n     * Cached resolutions per containing directory.\n     * This assumes that any module id will have the same resolution for sibling files located in the same folder.\n     */\n    interface PerDirectoryResolutionCache<T> {\n        getFromDirectoryCache(name: string, mode: ResolutionMode, directoryName: string, redirectedReference: ResolvedProjectReference | undefined): T | undefined;\n        getOrCreateCacheForDirectory(directoryName: string, redirectedReference?: ResolvedProjectReference): ModeAwareCache<T>;\n        clear(): void;\n        /**\n         *  Updates with the current compilerOptions the cache will operate with.\n         *  This updates the redirects map as well if needed so module resolutions are cached if they can across the projects\n         */\n        update(options: CompilerOptions): void;\n    }\n    interface NonRelativeNameResolutionCache<T> {\n        getFromNonRelativeNameCache(nonRelativeName: string, mode: ResolutionMode, directoryName: string, redirectedReference: ResolvedProjectReference | undefined): T | undefined;\n        getOrCreateCacheForNonRelativeName(nonRelativeName: string, mode: ResolutionMode, redirectedReference?: ResolvedProjectReference): PerNonRelativeNameCache<T>;\n        clear(): void;\n        /**\n         *  Updates with the current compilerOptions the cache will operate with.\n         *  This updates the redirects map as well if needed so module resolutions are cached if they can across the projects\n         */\n        update(options: CompilerOptions): void;\n    }\n    interface PerNonRelativeNameCache<T> {\n        get(directory: string): T | undefined;\n        set(directory: string, result: T): void;\n    }\n    interface ModuleResolutionCache extends PerDirectoryResolutionCache<ResolvedModuleWithFailedLookupLocations>, NonRelativeModuleNameResolutionCache, PackageJsonInfoCache {\n        getPackageJsonInfoCache(): PackageJsonInfoCache;\n    }\n    /**\n     * Stored map from non-relative module name to a table: directory -> result of module lookup in this directory\n     * We support only non-relative module names because resolution of relative module names is usually more deterministic and thus less expensive.\n     */\n    interface NonRelativeModuleNameResolutionCache extends NonRelativeNameResolutionCache<ResolvedModuleWithFailedLookupLocations>, PackageJsonInfoCache {\n        /** @deprecated Use getOrCreateCacheForNonRelativeName */\n        getOrCreateCacheForModuleName(nonRelativeModuleName: string, mode: ResolutionMode, redirectedReference?: ResolvedProjectReference): PerModuleNameCache;\n    }\n    interface PackageJsonInfoCache {\n        clear(): void;\n    }\n    type PerModuleNameCache = PerNonRelativeNameCache<ResolvedModuleWithFailedLookupLocations>;\n    /**\n     * Visits a Node using the supplied visitor, possibly returning a new Node in its place.\n     *\n     * - If the input node is undefined, then the output is undefined.\n     * - If the visitor returns undefined, then the output is undefined.\n     * - If the output node is not undefined, then it will satisfy the test function.\n     * - In order to obtain a return type that is more specific than `Node`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * @param node The Node to visit.\n     * @param visitor The callback used to visit the Node.\n     * @param test A callback to execute to verify the Node is valid.\n     * @param lift An optional callback to execute to lift a NodeArray into a valid Node.\n     */\n    function visitNode<TIn extends Node | undefined, TVisited extends Node | undefined, TOut extends Node>(node: TIn, visitor: Visitor<NonNullable<TIn>, TVisited>, test: (node: Node) => node is TOut, lift?: (node: readonly Node[]) => Node): TOut | (TIn & undefined) | (TVisited & undefined);\n    /**\n     * Visits a Node using the supplied visitor, possibly returning a new Node in its place.\n     *\n     * - If the input node is undefined, then the output is undefined.\n     * - If the visitor returns undefined, then the output is undefined.\n     * - If the output node is not undefined, then it will satisfy the test function.\n     * - In order to obtain a return type that is more specific than `Node`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * @param node The Node to visit.\n     * @param visitor The callback used to visit the Node.\n     * @param test A callback to execute to verify the Node is valid.\n     * @param lift An optional callback to execute to lift a NodeArray into a valid Node.\n     */\n    function visitNode<TIn extends Node | undefined, TVisited extends Node | undefined>(node: TIn, visitor: Visitor<NonNullable<TIn>, TVisited>, test?: (node: Node) => boolean, lift?: (node: readonly Node[]) => Node): Node | (TIn & undefined) | (TVisited & undefined);\n    /**\n     * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.\n     *\n     * - If the input node array is undefined, the output is undefined.\n     * - If the visitor can return undefined, the node it visits in the array will be reused.\n     * - If the output node array is not undefined, then its contents will satisfy the test.\n     * - In order to obtain a return type that is more specific than `NodeArray<Node>`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * @param nodes The NodeArray to visit.\n     * @param visitor The callback used to visit a Node.\n     * @param test A node test to execute for each node.\n     * @param start An optional value indicating the starting offset at which to start visiting.\n     * @param count An optional value indicating the maximum number of nodes to visit.\n     */\n    function visitNodes<TIn extends Node, TInArray extends NodeArray<TIn> | undefined, TOut extends Node>(nodes: TInArray, visitor: Visitor<TIn, Node | undefined>, test: (node: Node) => node is TOut, start?: number, count?: number): NodeArray<TOut> | (TInArray & undefined);\n    /**\n     * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.\n     *\n     * - If the input node array is undefined, the output is undefined.\n     * - If the visitor can return undefined, the node it visits in the array will be reused.\n     * - If the output node array is not undefined, then its contents will satisfy the test.\n     * - In order to obtain a return type that is more specific than `NodeArray<Node>`, a test\n     *   function _must_ be provided, and that function must be a type predicate.\n     *\n     * @param nodes The NodeArray to visit.\n     * @param visitor The callback used to visit a Node.\n     * @param test A node test to execute for each node.\n     * @param start An optional value indicating the starting offset at which to start visiting.\n     * @param count An optional value indicating the maximum number of nodes to visit.\n     */\n    function visitNodes<TIn extends Node, TInArray extends NodeArray<TIn> | undefined>(nodes: TInArray, visitor: Visitor<TIn, Node | undefined>, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<Node> | (TInArray & undefined);\n    /**\n     * Starts a new lexical environment and visits a statement list, ending the lexical environment\n     * and merging hoisted declarations upon completion.\n     */\n    function visitLexicalEnvironment(statements: NodeArray<Statement>, visitor: Visitor, context: TransformationContext, start?: number, ensureUseStrict?: boolean, nodesVisitor?: NodesVisitor): NodeArray<Statement>;\n    /**\n     * Starts a new lexical environment and visits a parameter list, suspending the lexical\n     * environment upon completion.\n     */\n    function visitParameterList(nodes: NodeArray<ParameterDeclaration>, visitor: Visitor, context: TransformationContext, nodesVisitor?: NodesVisitor): NodeArray<ParameterDeclaration>;\n    function visitParameterList(nodes: NodeArray<ParameterDeclaration> | undefined, visitor: Visitor, context: TransformationContext, nodesVisitor?: NodesVisitor): NodeArray<ParameterDeclaration> | undefined;\n    /**\n     * Resumes a suspended lexical environment and visits a function body, ending the lexical\n     * environment and merging hoisted declarations upon completion.\n     */\n    function visitFunctionBody(node: FunctionBody, visitor: Visitor, context: TransformationContext): FunctionBody;\n    /**\n     * Resumes a suspended lexical environment and visits a function body, ending the lexical\n     * environment and merging hoisted declarations upon completion.\n     */\n    function visitFunctionBody(node: FunctionBody | undefined, visitor: Visitor, context: TransformationContext): FunctionBody | undefined;\n    /**\n     * Resumes a suspended lexical environment and visits a concise body, ending the lexical\n     * environment and merging hoisted declarations upon completion.\n     */\n    function visitFunctionBody(node: ConciseBody, visitor: Visitor, context: TransformationContext): ConciseBody;\n    /**\n     * Visits an iteration body, adding any block-scoped variables required by the transformation.\n     */\n    function visitIterationBody(body: Statement, visitor: Visitor, context: TransformationContext): Statement;\n    /**\n     * Visits the elements of a {@link CommaListExpression}.\n     * @param visitor The visitor to use when visiting expressions whose result will not be discarded at runtime.\n     * @param discardVisitor The visitor to use when visiting expressions whose result will be discarded at runtime. Defaults to {@link visitor}.\n     */\n    function visitCommaListElements(elements: NodeArray<Expression>, visitor: Visitor, discardVisitor?: Visitor): NodeArray<Expression>;\n    /**\n     * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.\n     *\n     * @param node The Node whose children will be visited.\n     * @param visitor The callback used to visit each child.\n     * @param context A lexical environment context for the visitor.\n     */\n    function visitEachChild<T extends Node>(node: T, visitor: Visitor, context: TransformationContext | undefined): T;\n    /**\n     * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.\n     *\n     * @param node The Node whose children will be visited.\n     * @param visitor The callback used to visit each child.\n     * @param context A lexical environment context for the visitor.\n     */\n    function visitEachChild<T extends Node>(node: T | undefined, visitor: Visitor, context: TransformationContext | undefined, nodesVisitor?: typeof visitNodes, tokenVisitor?: Visitor): T | undefined;\n    function getTsBuildInfoEmitOutputFilePath(options: CompilerOptions): string | undefined;\n    function getOutputFileNames(commandLine: ParsedCommandLine, inputFileName: string, ignoreCase: boolean): readonly string[];\n    function createPrinter(printerOptions?: PrinterOptions, handlers?: PrintHandlers): Printer;\n    enum ProgramUpdateLevel {\n        /** Program is updated with same root file names and options */\n        Update = 0,\n        /** Loads program after updating root file names from the disk */\n        RootNamesAndUpdate = 1,\n        /**\n         * Loads program completely, including:\n         *  - re-reading contents of config file from disk\n         *  - calculating root file names for the program\n         *  - Updating the program\n         */\n        Full = 2,\n    }\n    function findConfigFile(searchPath: string, fileExists: (fileName: string) => boolean, configName?: string): string | undefined;\n    function resolveTripleslashReference(moduleName: string, containingFile: string): string;\n    function createCompilerHost(options: CompilerOptions, setParentNodes?: boolean): CompilerHost;\n    function getPreEmitDiagnostics(program: Program, sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n    function formatDiagnostics(diagnostics: readonly Diagnostic[], host: FormatDiagnosticsHost): string;\n    function formatDiagnostic(diagnostic: Diagnostic, host: FormatDiagnosticsHost): string;\n    function formatDiagnosticsWithColorAndContext(diagnostics: readonly Diagnostic[], host: FormatDiagnosticsHost): string;\n    function flattenDiagnosticMessageText(diag: string | DiagnosticMessageChain | undefined, newLine: string, indent?: number): string;\n    /**\n     * Calculates the resulting resolution mode for some reference in some file - this is generally the explicitly\n     * provided resolution mode in the reference, unless one is not present, in which case it is the mode of the containing file.\n     */\n    function getModeForFileReference(ref: FileReference | string, containingFileMode: ResolutionMode): ResolutionMode;\n    /**\n     * Use `program.getModeForResolutionAtIndex`, which retrieves the correct `compilerOptions`, instead of this function whenever possible.\n     * Calculates the final resolution mode for an import at some index within a file\'s `imports` list. This is the resolution mode\n     * explicitly provided via import attributes, if present, or the syntax the usage would have if emitted to JavaScript. In\n     * `--module node16` or `nodenext`, this may depend on the file\'s `impliedNodeFormat`. In `--module preserve`, it depends only on the\n     * input syntax of the reference. In other `module` modes, when overriding import attributes are not provided, this function returns\n     * `undefined`, as the result would have no impact on module resolution, emit, or type checking.\n     * @param file File to fetch the resolution mode within\n     * @param index Index into the file\'s complete resolution list to get the resolution of - this is a concatenation of the file\'s imports and module augmentations\n     * @param compilerOptions The compiler options for the program that owns the file. If the file belongs to a referenced project, the compiler options\n     * should be the options of the referenced project, not the referencing project.\n     */\n    function getModeForResolutionAtIndex(file: SourceFile, index: number, compilerOptions: CompilerOptions): ResolutionMode;\n    /**\n     * Use `program.getModeForUsageLocation`, which retrieves the correct `compilerOptions`, instead of this function whenever possible.\n     * Calculates the final resolution mode for a given module reference node. This function only returns a result when module resolution\n     * settings allow differing resolution between ESM imports and CJS requires, or when a mode is explicitly provided via import attributes,\n     * which cause an `import` or `require` condition to be used during resolution regardless of module resolution settings. In absence of\n     * overriding attributes, and in modes that support differing resolution, the result indicates the syntax the usage would emit to JavaScript.\n     * Some examples:\n     *\n     * ```ts\n     * // tsc foo.mts --module nodenext\n     * import {} from "mod";\n     * // Result: ESNext - the import emits as ESM due to `impliedNodeFormat` set by .mts file extension\n     *\n     * // tsc foo.cts --module nodenext\n     * import {} from "mod";\n     * // Result: CommonJS - the import emits as CJS due to `impliedNodeFormat` set by .cts file extension\n     *\n     * // tsc foo.ts --module preserve --moduleResolution bundler\n     * import {} from "mod";\n     * // Result: ESNext - the import emits as ESM due to `--module preserve` and `--moduleResolution bundler`\n     * // supports conditional imports/exports\n     *\n     * // tsc foo.ts --module preserve --moduleResolution node10\n     * import {} from "mod";\n     * // Result: undefined - the import emits as ESM due to `--module preserve`, but `--moduleResolution node10`\n     * // does not support conditional imports/exports\n     *\n     * // tsc foo.ts --module commonjs --moduleResolution node10\n     * import type {} from "mod" with { "resolution-mode": "import" };\n     * // Result: ESNext - conditional imports/exports always supported with "resolution-mode" attribute\n     * ```\n     *\n     * @param file The file the import or import-like reference is contained within\n     * @param usage The module reference string\n     * @param compilerOptions The compiler options for the program that owns the file. If the file belongs to a referenced project, the compiler options\n     * should be the options of the referenced project, not the referencing project.\n     * @returns The final resolution mode of the import\n     */\n    function getModeForUsageLocation(file: SourceFile, usage: StringLiteralLike, compilerOptions: CompilerOptions): ResolutionMode;\n    function getConfigFileParsingDiagnostics(configFileParseResult: ParsedCommandLine): readonly Diagnostic[];\n    /**\n     * A function for determining if a given file is esm or cjs format, assuming modern node module resolution rules, as configured by the\n     * `options` parameter.\n     *\n     * @param fileName The file name to check the format of (it need not exist on disk)\n     * @param [packageJsonInfoCache] A cache for package file lookups - it\'s best to have a cache when this function is called often\n     * @param host The ModuleResolutionHost which can perform the filesystem lookups for package json data\n     * @param options The compiler options to perform the analysis under - relevant options are `moduleResolution` and `traceResolution`\n     * @returns `undefined` if the path has no relevant implied format, `ModuleKind.ESNext` for esm format, and `ModuleKind.CommonJS` for cjs format\n     */\n    function getImpliedNodeFormatForFile(fileName: string, packageJsonInfoCache: PackageJsonInfoCache | undefined, host: ModuleResolutionHost, options: CompilerOptions): ResolutionMode;\n    /**\n     * Create a new \'Program\' instance. A Program is an immutable collection of \'SourceFile\'s and a \'CompilerOptions\'\n     * that represent a compilation unit.\n     *\n     * Creating a program proceeds from a set of root files, expanding the set of inputs by following imports and\n     * triple-slash-reference-path directives transitively. \'@types\' and triple-slash-reference-types are also pulled in.\n     *\n     * @param createProgramOptions - The options for creating a program.\n     * @returns A \'Program\' object.\n     */\n    function createProgram(createProgramOptions: CreateProgramOptions): Program;\n    /**\n     * Create a new \'Program\' instance. A Program is an immutable collection of \'SourceFile\'s and a \'CompilerOptions\'\n     * that represent a compilation unit.\n     *\n     * Creating a program proceeds from a set of root files, expanding the set of inputs by following imports and\n     * triple-slash-reference-path directives transitively. \'@types\' and triple-slash-reference-types are also pulled in.\n     *\n     * @param rootNames - A set of root files.\n     * @param options - The compiler options which should be used.\n     * @param host - The host interacts with the underlying file system.\n     * @param oldProgram - Reuses an old program structure.\n     * @param configFileParsingDiagnostics - error during config file parsing\n     * @returns A \'Program\' object.\n     */\n    function createProgram(rootNames: readonly string[], options: CompilerOptions, host?: CompilerHost, oldProgram?: Program, configFileParsingDiagnostics?: readonly Diagnostic[]): Program;\n    /**\n     * Returns the target config filename of a project reference.\n     * Note: The file might not exist.\n     */\n    function resolveProjectReferencePath(ref: ProjectReference): ResolvedConfigFileName;\n    interface FormatDiagnosticsHost {\n        getCurrentDirectory(): string;\n        getCanonicalFileName(fileName: string): string;\n        getNewLine(): string;\n    }\n    interface EmitOutput {\n        outputFiles: OutputFile[];\n        emitSkipped: boolean;\n        diagnostics: readonly Diagnostic[];\n    }\n    interface OutputFile {\n        name: string;\n        writeByteOrderMark: boolean;\n        text: string;\n    }\n    /**\n     * Create the builder to manage semantic diagnostics and cache them\n     */\n    function createSemanticDiagnosticsBuilderProgram(newProgram: Program, host: BuilderProgramHost, oldProgram?: SemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): SemanticDiagnosticsBuilderProgram;\n    function createSemanticDiagnosticsBuilderProgram(rootNames: readonly string[] | undefined, options: CompilerOptions | undefined, host?: CompilerHost, oldProgram?: SemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): SemanticDiagnosticsBuilderProgram;\n    /**\n     * Create the builder that can handle the changes in program and iterate through changed files\n     * to emit the those files and manage semantic diagnostics cache as well\n     */\n    function createEmitAndSemanticDiagnosticsBuilderProgram(newProgram: Program, host: BuilderProgramHost, oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): EmitAndSemanticDiagnosticsBuilderProgram;\n    function createEmitAndSemanticDiagnosticsBuilderProgram(rootNames: readonly string[] | undefined, options: CompilerOptions | undefined, host?: CompilerHost, oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): EmitAndSemanticDiagnosticsBuilderProgram;\n    /**\n     * Creates a builder thats just abstraction over program and can be used with watch\n     */\n    function createAbstractBuilder(newProgram: Program, host: BuilderProgramHost, oldProgram?: BuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): BuilderProgram;\n    function createAbstractBuilder(rootNames: readonly string[] | undefined, options: CompilerOptions | undefined, host?: CompilerHost, oldProgram?: BuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): BuilderProgram;\n    type AffectedFileResult<T> = {\n        result: T;\n        affected: SourceFile | Program;\n    } | undefined;\n    interface BuilderProgramHost {\n        /**\n         * If provided this would be used this hash instead of actual file shape text for detecting changes\n         */\n        createHash?: (data: string) => string;\n        /**\n         * When emit or emitNextAffectedFile are called without writeFile,\n         * this callback if present would be used to write files\n         */\n        writeFile?: WriteFileCallback;\n    }\n    /**\n     * Builder to manage the program state changes\n     */\n    interface BuilderProgram {\n        /**\n         * Returns current program\n         */\n        getProgram(): Program;\n        /**\n         * Get compiler options of the program\n         */\n        getCompilerOptions(): CompilerOptions;\n        /**\n         * Get the source file in the program with file name\n         */\n        getSourceFile(fileName: string): SourceFile | undefined;\n        /**\n         * Get a list of files in the program\n         */\n        getSourceFiles(): readonly SourceFile[];\n        /**\n         * Get the diagnostics for compiler options\n         */\n        getOptionsDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        /**\n         * Get the diagnostics that dont belong to any file\n         */\n        getGlobalDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        /**\n         * Get the diagnostics from config file parsing\n         */\n        getConfigFileParsingDiagnostics(): readonly Diagnostic[];\n        /**\n         * Get the syntax diagnostics, for all source files if source file is not supplied\n         */\n        getSyntacticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n        /**\n         * Get the declaration diagnostics, for all source files if source file is not supplied\n         */\n        getDeclarationDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly DiagnosticWithLocation[];\n        /**\n         * Get all the dependencies of the file\n         */\n        getAllDependencies(sourceFile: SourceFile): readonly string[];\n        /**\n         * Gets the semantic diagnostics from the program corresponding to this state of file (if provided) or whole program\n         * The semantic diagnostics are cached and managed here\n         * Note that it is assumed that when asked about semantic diagnostics through this API,\n         * the file has been taken out of affected files so it is safe to use cache or get from program and cache the diagnostics\n         * In case of SemanticDiagnosticsBuilderProgram if the source file is not provided,\n         * it will iterate through all the affected files, to ensure that cache stays valid and yet provide a way to get all semantic diagnostics\n         */\n        getSemanticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n        /**\n         * Emits the JavaScript and declaration files.\n         * When targetSource file is specified, emits the files corresponding to that source file,\n         * otherwise for the whole program.\n         * In case of EmitAndSemanticDiagnosticsBuilderProgram, when targetSourceFile is specified,\n         * it is assumed that that file is handled from affected file list. If targetSourceFile is not specified,\n         * it will only emit all the affected files instead of whole program\n         *\n         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host\n         * in that order would be used to write the files\n         */\n        emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;\n        /**\n         * Get the current directory of the program\n         */\n        getCurrentDirectory(): string;\n    }\n    /**\n     * The builder that caches the semantic diagnostics for the program and handles the changed files and affected files\n     */\n    interface SemanticDiagnosticsBuilderProgram extends BuilderProgram {\n        /**\n         * Gets the semantic diagnostics from the program for the next affected file and caches it\n         * Returns undefined if the iteration is complete\n         */\n        getSemanticDiagnosticsOfNextAffectedFile(cancellationToken?: CancellationToken, ignoreSourceFile?: (sourceFile: SourceFile) => boolean): AffectedFileResult<readonly Diagnostic[]>;\n    }\n    /**\n     * The builder that can handle the changes in program and iterate through changed file to emit the files\n     * The semantic diagnostics are cached per file and managed by clearing for the changed/affected files\n     */\n    interface EmitAndSemanticDiagnosticsBuilderProgram extends SemanticDiagnosticsBuilderProgram {\n        /**\n         * Emits the next affected file\'s emit result (EmitResult and sourceFiles emitted) or returns undefined if iteration is complete\n         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host\n         * in that order would be used to write the files\n         */\n        emitNextAffectedFile(writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): AffectedFileResult<EmitResult>;\n    }\n    function readBuilderProgram(compilerOptions: CompilerOptions, host: ReadBuildProgramHost): EmitAndSemanticDiagnosticsBuilderProgram | undefined;\n    function createIncrementalCompilerHost(options: CompilerOptions, system?: System): CompilerHost;\n    function createIncrementalProgram<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>({ rootNames, options, configFileParsingDiagnostics, projectReferences, host, createProgram }: IncrementalProgramOptions<T>): T;\n    /**\n     * Create the watch compiler host for either configFile or fileNames and its options\n     */\n    function createWatchCompilerHost<T extends BuilderProgram>(configFileName: string, optionsToExtend: CompilerOptions | undefined, system: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter, watchOptionsToExtend?: WatchOptions, extraFileExtensions?: readonly FileExtensionInfo[]): WatchCompilerHostOfConfigFile<T>;\n    function createWatchCompilerHost<T extends BuilderProgram>(rootFiles: string[], options: CompilerOptions, system: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter, projectReferences?: readonly ProjectReference[], watchOptions?: WatchOptions): WatchCompilerHostOfFilesAndCompilerOptions<T>;\n    /**\n     * Creates the watch from the host for root files and compiler options\n     */\n    function createWatchProgram<T extends BuilderProgram>(host: WatchCompilerHostOfFilesAndCompilerOptions<T>): WatchOfFilesAndCompilerOptions<T>;\n    /**\n     * Creates the watch from the host for config file\n     */\n    function createWatchProgram<T extends BuilderProgram>(host: WatchCompilerHostOfConfigFile<T>): WatchOfConfigFile<T>;\n    interface ReadBuildProgramHost {\n        useCaseSensitiveFileNames(): boolean;\n        getCurrentDirectory(): string;\n        readFile(fileName: string): string | undefined;\n    }\n    interface IncrementalProgramOptions<T extends BuilderProgram> {\n        rootNames: readonly string[];\n        options: CompilerOptions;\n        configFileParsingDiagnostics?: readonly Diagnostic[];\n        projectReferences?: readonly ProjectReference[];\n        host?: CompilerHost;\n        createProgram?: CreateProgram<T>;\n    }\n    type WatchStatusReporter = (diagnostic: Diagnostic, newLine: string, options: CompilerOptions, errorCount?: number) => void;\n    /** Create the program with rootNames and options, if they are undefined, oldProgram and new configFile diagnostics create new program */\n    type CreateProgram<T extends BuilderProgram> = (rootNames: readonly string[] | undefined, options: CompilerOptions | undefined, host?: CompilerHost, oldProgram?: T, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[] | undefined) => T;\n    /** Host that has watch functionality used in --watch mode */\n    interface WatchHost {\n        /** If provided, called with Diagnostic message that informs about change in watch status */\n        onWatchStatusChange?(diagnostic: Diagnostic, newLine: string, options: CompilerOptions, errorCount?: number): void;\n        /** Used to watch changes in source files, missing files needed to update the program or config file */\n        watchFile(path: string, callback: FileWatcherCallback, pollingInterval?: number, options?: WatchOptions): FileWatcher;\n        /** Used to watch resolved module\'s failed lookup locations, config file specs, type roots where auto type reference directives are added */\n        watchDirectory(path: string, callback: DirectoryWatcherCallback, recursive?: boolean, options?: WatchOptions): FileWatcher;\n        /** If provided, will be used to set delayed compilation, so that multiple changes in short span are compiled together */\n        setTimeout?(callback: (...args: any[]) => void, ms: number, ...args: any[]): any;\n        /** If provided, will be used to reset existing delayed compilation */\n        clearTimeout?(timeoutId: any): void;\n        preferNonRecursiveWatch?: boolean;\n    }\n    interface ProgramHost<T extends BuilderProgram> {\n        /**\n         * Used to create the program when need for program creation or recreation detected\n         */\n        createProgram: CreateProgram<T>;\n        useCaseSensitiveFileNames(): boolean;\n        getNewLine(): string;\n        getCurrentDirectory(): string;\n        getDefaultLibFileName(options: CompilerOptions): string;\n        getDefaultLibLocation?(): string;\n        createHash?(data: string): string;\n        /**\n         * Use to check file presence for source files and\n         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well\n         */\n        fileExists(path: string): boolean;\n        /**\n         * Use to read file text for source files and\n         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well\n         */\n        readFile(path: string, encoding?: string): string | undefined;\n        /** If provided, used for module resolution as well as to handle directory structure */\n        directoryExists?(path: string): boolean;\n        /** If provided, used in resolutions as well as handling directory structure */\n        getDirectories?(path: string): string[];\n        /** If provided, used to cache and handle directory structure modifications */\n        readDirectory?(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];\n        /** Symbol links resolution */\n        realpath?(path: string): string;\n        /** If provided would be used to write log about compilation */\n        trace?(s: string): void;\n        /** If provided is used to get the environment variable */\n        getEnvironmentVariable?(name: string): string | undefined;\n        /**\n         * @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext\n         *\n         * If provided, used to resolve the module names, otherwise typescript\'s default module resolution\n         */\n        resolveModuleNames?(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile?: SourceFile): (ResolvedModule | undefined)[];\n        /**\n         * @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext\n         *\n         * If provided, used to resolve type reference directives, otherwise typescript\'s default resolution\n         */\n        resolveTypeReferenceDirectives?(typeReferenceDirectiveNames: string[] | readonly FileReference[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingFileMode?: ResolutionMode): (ResolvedTypeReferenceDirective | undefined)[];\n        resolveModuleNameLiterals?(moduleLiterals: readonly StringLiteralLike[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile, reusedNames: readonly StringLiteralLike[] | undefined): readonly ResolvedModuleWithFailedLookupLocations[];\n        resolveTypeReferenceDirectiveReferences?<T extends FileReference | string>(typeDirectiveReferences: readonly T[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile | undefined, reusedNames: readonly T[] | undefined): readonly ResolvedTypeReferenceDirectiveWithFailedLookupLocations[];\n        /** If provided along with custom resolveModuleNames or resolveTypeReferenceDirectives, used to determine if unchanged file path needs to re-resolve modules/type reference directives */\n        hasInvalidatedResolutions?(filePath: Path): boolean;\n        /**\n         * Returns the module resolution cache used by a provided `resolveModuleNames` implementation so that any non-name module resolution operations (eg, package.json lookup) can reuse it\n         */\n        getModuleResolutionCache?(): ModuleResolutionCache | undefined;\n        jsDocParsingMode?: JSDocParsingMode;\n    }\n    interface WatchCompilerHost<T extends BuilderProgram> extends ProgramHost<T>, WatchHost {\n        /** Instead of using output d.ts file from project reference, use its source file */\n        useSourceOfProjectReferenceRedirect?(): boolean;\n        /** If provided, use this method to get parsed command lines for referenced projects */\n        getParsedCommandLine?(fileName: string): ParsedCommandLine | undefined;\n        /** If provided, callback to invoke after every new program creation */\n        afterProgramCreate?(program: T): void;\n    }\n    /**\n     * Host to create watch with root files and options\n     */\n    interface WatchCompilerHostOfFilesAndCompilerOptions<T extends BuilderProgram> extends WatchCompilerHost<T> {\n        /** root files to use to generate program */\n        rootFiles: string[];\n        /** Compiler options */\n        options: CompilerOptions;\n        watchOptions?: WatchOptions;\n        /** Project References */\n        projectReferences?: readonly ProjectReference[];\n    }\n    /**\n     * Host to create watch with config file\n     */\n    interface WatchCompilerHostOfConfigFile<T extends BuilderProgram> extends WatchCompilerHost<T>, ConfigFileDiagnosticsReporter {\n        /** Name of the config file to compile */\n        configFileName: string;\n        /** Options to extend */\n        optionsToExtend?: CompilerOptions;\n        watchOptionsToExtend?: WatchOptions;\n        extraFileExtensions?: readonly FileExtensionInfo[];\n        /**\n         * Used to generate source file names from the config file and its include, exclude, files rules\n         * and also to cache the directory stucture\n         */\n        readDirectory(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];\n    }\n    interface Watch<T> {\n        /** Synchronize with host and get updated program */\n        getProgram(): T;\n        /** Closes the watch */\n        close(): void;\n    }\n    /**\n     * Creates the watch what generates program using the config file\n     */\n    interface WatchOfConfigFile<T> extends Watch<T> {\n    }\n    /**\n     * Creates the watch that generates program using the root files and compiler options\n     */\n    interface WatchOfFilesAndCompilerOptions<T> extends Watch<T> {\n        /** Updates the root files in the program, only if this is not config file compilation */\n        updateRootFileNames(fileNames: string[]): void;\n    }\n    /**\n     * Create a function that reports watch status by writing to the system and handles the formating of the diagnostic\n     */\n    function createBuilderStatusReporter(system: System, pretty?: boolean): DiagnosticReporter;\n    function createSolutionBuilderHost<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>(system?: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportSolutionBuilderStatus?: DiagnosticReporter, reportErrorSummary?: ReportEmitErrorSummary): SolutionBuilderHost<T>;\n    function createSolutionBuilderWithWatchHost<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>(system?: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportSolutionBuilderStatus?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter): SolutionBuilderWithWatchHost<T>;\n    function createSolutionBuilder<T extends BuilderProgram>(host: SolutionBuilderHost<T>, rootNames: readonly string[], defaultOptions: BuildOptions): SolutionBuilder<T>;\n    function createSolutionBuilderWithWatch<T extends BuilderProgram>(host: SolutionBuilderWithWatchHost<T>, rootNames: readonly string[], defaultOptions: BuildOptions, baseWatchOptions?: WatchOptions): SolutionBuilder<T>;\n    interface BuildOptions {\n        dry?: boolean;\n        force?: boolean;\n        verbose?: boolean;\n        stopBuildOnErrors?: boolean;\n        incremental?: boolean;\n        assumeChangesOnlyAffectDirectDependencies?: boolean;\n        declaration?: boolean;\n        declarationMap?: boolean;\n        emitDeclarationOnly?: boolean;\n        sourceMap?: boolean;\n        inlineSourceMap?: boolean;\n        traceResolution?: boolean;\n        [option: string]: CompilerOptionsValue | undefined;\n    }\n    type ReportEmitErrorSummary = (errorCount: number, filesInError: (ReportFileInError | undefined)[]) => void;\n    interface ReportFileInError {\n        fileName: string;\n        line: number;\n    }\n    interface SolutionBuilderHostBase<T extends BuilderProgram> extends ProgramHost<T> {\n        createDirectory?(path: string): void;\n        /**\n         * Should provide create directory and writeFile if done of invalidatedProjects is not invoked with\n         * writeFileCallback\n         */\n        writeFile?(path: string, data: string, writeByteOrderMark?: boolean): void;\n        getCustomTransformers?: (project: string) => CustomTransformers | undefined;\n        getModifiedTime(fileName: string): Date | undefined;\n        setModifiedTime(fileName: string, date: Date): void;\n        deleteFile(fileName: string): void;\n        getParsedCommandLine?(fileName: string): ParsedCommandLine | undefined;\n        reportDiagnostic: DiagnosticReporter;\n        reportSolutionBuilderStatus: DiagnosticReporter;\n        afterProgramEmitAndDiagnostics?(program: T): void;\n    }\n    interface SolutionBuilderHost<T extends BuilderProgram> extends SolutionBuilderHostBase<T> {\n        reportErrorSummary?: ReportEmitErrorSummary;\n    }\n    interface SolutionBuilderWithWatchHost<T extends BuilderProgram> extends SolutionBuilderHostBase<T>, WatchHost {\n    }\n    interface SolutionBuilder<T extends BuilderProgram> {\n        build(project?: string, cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, getCustomTransformers?: (project: string) => CustomTransformers): ExitStatus;\n        clean(project?: string): ExitStatus;\n        buildReferences(project: string, cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, getCustomTransformers?: (project: string) => CustomTransformers): ExitStatus;\n        cleanReferences(project?: string): ExitStatus;\n        getNextInvalidatedProject(cancellationToken?: CancellationToken): InvalidatedProject<T> | undefined;\n    }\n    enum InvalidatedProjectKind {\n        Build = 0,\n        UpdateOutputFileStamps = 1,\n    }\n    interface InvalidatedProjectBase {\n        readonly kind: InvalidatedProjectKind;\n        readonly project: ResolvedConfigFileName;\n        /**\n         *  To dispose this project and ensure that all the necessary actions are taken and state is updated accordingly\n         */\n        done(cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, customTransformers?: CustomTransformers): ExitStatus;\n        getCompilerOptions(): CompilerOptions;\n        getCurrentDirectory(): string;\n    }\n    interface UpdateOutputFileStampsProject extends InvalidatedProjectBase {\n        readonly kind: InvalidatedProjectKind.UpdateOutputFileStamps;\n        updateOutputFileStatmps(): void;\n    }\n    interface BuildInvalidedProject<T extends BuilderProgram> extends InvalidatedProjectBase {\n        readonly kind: InvalidatedProjectKind.Build;\n        getBuilderProgram(): T | undefined;\n        getProgram(): Program | undefined;\n        getSourceFile(fileName: string): SourceFile | undefined;\n        getSourceFiles(): readonly SourceFile[];\n        getOptionsDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getGlobalDiagnostics(cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getConfigFileParsingDiagnostics(): readonly Diagnostic[];\n        getSyntacticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getAllDependencies(sourceFile: SourceFile): readonly string[];\n        getSemanticDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly Diagnostic[];\n        getSemanticDiagnosticsOfNextAffectedFile(cancellationToken?: CancellationToken, ignoreSourceFile?: (sourceFile: SourceFile) => boolean): AffectedFileResult<readonly Diagnostic[]>;\n        emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult | undefined;\n    }\n    type InvalidatedProject<T extends BuilderProgram> = UpdateOutputFileStampsProject | BuildInvalidedProject<T>;\n    /** Returns true if commandline is --build and needs to be parsed useing parseBuildCommand */\n    function isBuildCommand(commandLineArgs: readonly string[]): boolean;\n    function getDefaultFormatCodeSettings(newLineCharacter?: string): FormatCodeSettings;\n    /**\n     * Represents an immutable snapshot of a script at a specified time.Once acquired, the\n     * snapshot is observably immutable. i.e. the same calls with the same parameters will return\n     * the same values.\n     */\n    interface IScriptSnapshot {\n        /** Gets a portion of the script snapshot specified by [start, end). */\n        getText(start: number, end: number): string;\n        /** Gets the length of this script snapshot. */\n        getLength(): number;\n        /**\n         * Gets the TextChangeRange that describe how the text changed between this text and\n         * an older version.  This information is used by the incremental parser to determine\n         * what sections of the script need to be re-parsed.  \'undefined\' can be returned if the\n         * change range cannot be determined.  However, in that case, incremental parsing will\n         * not happen and the entire document will be re - parsed.\n         */\n        getChangeRange(oldSnapshot: IScriptSnapshot): TextChangeRange | undefined;\n        /** Releases all resources held by this script snapshot */\n        dispose?(): void;\n    }\n    namespace ScriptSnapshot {\n        function fromString(text: string): IScriptSnapshot;\n    }\n    interface PreProcessedFileInfo {\n        referencedFiles: FileReference[];\n        typeReferenceDirectives: FileReference[];\n        libReferenceDirectives: FileReference[];\n        importedFiles: FileReference[];\n        ambientExternalModules?: string[];\n        isLibFile: boolean;\n    }\n    interface HostCancellationToken {\n        isCancellationRequested(): boolean;\n    }\n    interface InstallPackageOptions {\n        fileName: Path;\n        packageName: string;\n    }\n    interface PerformanceEvent {\n        kind: "UpdateGraph" | "CreatePackageJsonAutoImportProvider";\n        durationMs: number;\n    }\n    enum LanguageServiceMode {\n        Semantic = 0,\n        PartialSemantic = 1,\n        Syntactic = 2,\n    }\n    interface IncompleteCompletionsCache {\n        get(): CompletionInfo | undefined;\n        set(response: CompletionInfo): void;\n        clear(): void;\n    }\n    interface LanguageServiceHost extends GetEffectiveTypeRootsHost, MinimalResolutionCacheHost {\n        getCompilationSettings(): CompilerOptions;\n        getNewLine?(): string;\n        getProjectVersion?(): string;\n        getScriptFileNames(): string[];\n        getScriptKind?(fileName: string): ScriptKind;\n        getScriptVersion(fileName: string): string;\n        getScriptSnapshot(fileName: string): IScriptSnapshot | undefined;\n        getProjectReferences?(): readonly ProjectReference[] | undefined;\n        getLocalizedDiagnosticMessages?(): any;\n        getCancellationToken?(): HostCancellationToken;\n        getCurrentDirectory(): string;\n        getDefaultLibFileName(options: CompilerOptions): string;\n        log?(s: string): void;\n        trace?(s: string): void;\n        error?(s: string): void;\n        useCaseSensitiveFileNames?(): boolean;\n        readDirectory?(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];\n        realpath?(path: string): string;\n        readFile(path: string, encoding?: string): string | undefined;\n        fileExists(path: string): boolean;\n        getTypeRootsVersion?(): number;\n        /** @deprecated supply resolveModuleNameLiterals instead for resolution that can handle newer resolution modes like nodenext */\n        resolveModuleNames?(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile?: SourceFile): (ResolvedModule | undefined)[];\n        getResolvedModuleWithFailedLookupLocationsFromCache?(modulename: string, containingFile: string, resolutionMode?: ResolutionMode): ResolvedModuleWithFailedLookupLocations | undefined;\n        /** @deprecated supply resolveTypeReferenceDirectiveReferences instead for resolution that can handle newer resolution modes like nodenext */\n        resolveTypeReferenceDirectives?(typeDirectiveNames: string[] | FileReference[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingFileMode?: ResolutionMode): (ResolvedTypeReferenceDirective | undefined)[];\n        resolveModuleNameLiterals?(moduleLiterals: readonly StringLiteralLike[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile, reusedNames: readonly StringLiteralLike[] | undefined): readonly ResolvedModuleWithFailedLookupLocations[];\n        resolveTypeReferenceDirectiveReferences?<T extends FileReference | string>(typeDirectiveReferences: readonly T[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions, containingSourceFile: SourceFile | undefined, reusedNames: readonly T[] | undefined): readonly ResolvedTypeReferenceDirectiveWithFailedLookupLocations[];\n        getDirectories?(directoryName: string): string[];\n        /**\n         * Gets a set of custom transformers to use during emit.\n         */\n        getCustomTransformers?(): CustomTransformers | undefined;\n        isKnownTypesPackageName?(name: string): boolean;\n        installPackage?(options: InstallPackageOptions): Promise<ApplyCodeActionCommandResult>;\n        writeFile?(fileName: string, content: string): void;\n        getParsedCommandLine?(fileName: string): ParsedCommandLine | undefined;\n        jsDocParsingMode?: JSDocParsingMode | undefined;\n    }\n    type WithMetadata<T> = T & {\n        metadata?: unknown;\n    };\n    enum SemanticClassificationFormat {\n        Original = "original",\n        TwentyTwenty = "2020",\n    }\n    interface LanguageService {\n        /** This is used as a part of restarting the language service. */\n        cleanupSemanticCache(): void;\n        /**\n         * Gets errors indicating invalid syntax in a file.\n         *\n         * In English, "this cdeo have, erorrs" is syntactically invalid because it has typos,\n         * grammatical errors, and misplaced punctuation. Likewise, examples of syntax\n         * errors in TypeScript are missing parentheses in an `if` statement, mismatched\n         * curly braces, and using a reserved keyword as a variable name.\n         *\n         * These diagnostics are inexpensive to compute and don\'t require knowledge of\n         * other files. Note that a non-empty result increases the likelihood of false positives\n         * from `getSemanticDiagnostics`.\n         *\n         * While these represent the majority of syntax-related diagnostics, there are some\n         * that require the type system, which will be present in `getSemanticDiagnostics`.\n         *\n         * @param fileName A path to the file you want syntactic diagnostics for\n         */\n        getSyntacticDiagnostics(fileName: string): DiagnosticWithLocation[];\n        /**\n         * Gets warnings or errors indicating type system issues in a given file.\n         * Requesting semantic diagnostics may start up the type system and\n         * run deferred work, so the first call may take longer than subsequent calls.\n         *\n         * Unlike the other get*Diagnostics functions, these diagnostics can potentially not\n         * include a reference to a source file. Specifically, the first time this is called,\n         * it will return global diagnostics with no associated location.\n         *\n         * To contrast the differences between semantic and syntactic diagnostics, consider the\n         * sentence: "The sun is green." is syntactically correct; those are real English words with\n         * correct sentence structure. However, it is semantically invalid, because it is not true.\n         *\n         * @param fileName A path to the file you want semantic diagnostics for\n         */\n        getSemanticDiagnostics(fileName: string): Diagnostic[];\n        /**\n         * Gets suggestion diagnostics for a specific file. These diagnostics tend to\n         * proactively suggest refactors, as opposed to diagnostics that indicate\n         * potentially incorrect runtime behavior.\n         *\n         * @param fileName A path to the file you want semantic diagnostics for\n         */\n        getSuggestionDiagnostics(fileName: string): DiagnosticWithLocation[];\n        /**\n         * Gets global diagnostics related to the program configuration and compiler options.\n         */\n        getCompilerOptionsDiagnostics(): Diagnostic[];\n        /** @deprecated Use getEncodedSyntacticClassifications instead. */\n        getSyntacticClassifications(fileName: string, span: TextSpan): ClassifiedSpan[];\n        getSyntacticClassifications(fileName: string, span: TextSpan, format: SemanticClassificationFormat): ClassifiedSpan[] | ClassifiedSpan2020[];\n        /** @deprecated Use getEncodedSemanticClassifications instead. */\n        getSemanticClassifications(fileName: string, span: TextSpan): ClassifiedSpan[];\n        getSemanticClassifications(fileName: string, span: TextSpan, format: SemanticClassificationFormat): ClassifiedSpan[] | ClassifiedSpan2020[];\n        /** Encoded as triples of [start, length, ClassificationType]. */\n        getEncodedSyntacticClassifications(fileName: string, span: TextSpan): Classifications;\n        /**\n         * Gets semantic highlights information for a particular file. Has two formats, an older\n         * version used by VS and a format used by VS Code.\n         *\n         * @param fileName The path to the file\n         * @param position A text span to return results within\n         * @param format Which format to use, defaults to "original"\n         * @returns a number array encoded as triples of [start, length, ClassificationType, ...].\n         */\n        getEncodedSemanticClassifications(fileName: string, span: TextSpan, format?: SemanticClassificationFormat): Classifications;\n        /**\n         * Gets completion entries at a particular position in a file.\n         *\n         * @param fileName The path to the file\n         * @param position A zero-based index of the character where you want the entries\n         * @param options An object describing how the request was triggered and what kinds\n         * of code actions can be returned with the completions.\n         * @param formattingSettings settings needed for calling formatting functions.\n         */\n        getCompletionsAtPosition(fileName: string, position: number, options: GetCompletionsAtPositionOptions | undefined, formattingSettings?: FormatCodeSettings): WithMetadata<CompletionInfo> | undefined;\n        /**\n         * Gets the extended details for a completion entry retrieved from `getCompletionsAtPosition`.\n         *\n         * @param fileName The path to the file\n         * @param position A zero based index of the character where you want the entries\n         * @param entryName The `name` from an existing completion which came from `getCompletionsAtPosition`\n         * @param formatOptions How should code samples in the completions be formatted, can be undefined for backwards compatibility\n         * @param source `source` property from the completion entry\n         * @param preferences User settings, can be undefined for backwards compatibility\n         * @param data `data` property from the completion entry\n         */\n        getCompletionEntryDetails(fileName: string, position: number, entryName: string, formatOptions: FormatCodeOptions | FormatCodeSettings | undefined, source: string | undefined, preferences: UserPreferences | undefined, data: CompletionEntryData | undefined): CompletionEntryDetails | undefined;\n        getCompletionEntrySymbol(fileName: string, position: number, name: string, source: string | undefined): Symbol | undefined;\n        /**\n         * Gets semantic information about the identifier at a particular position in a\n         * file. Quick info is what you typically see when you hover in an editor.\n         *\n         * @param fileName The path to the file\n         * @param position A zero-based index of the character where you want the quick info\n         */\n        getQuickInfoAtPosition(fileName: string, position: number): QuickInfo | undefined;\n        getNameOrDottedNameSpan(fileName: string, startPos: number, endPos: number): TextSpan | undefined;\n        getBreakpointStatementAtPosition(fileName: string, position: number): TextSpan | undefined;\n        getSignatureHelpItems(fileName: string, position: number, options: SignatureHelpItemsOptions | undefined): SignatureHelpItems | undefined;\n        getRenameInfo(fileName: string, position: number, preferences: UserPreferences): RenameInfo;\n        /** @deprecated Use the signature with `UserPreferences` instead. */\n        getRenameInfo(fileName: string, position: number, options?: RenameInfoOptions): RenameInfo;\n        findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences): readonly RenameLocation[] | undefined;\n        /** @deprecated Pass `providePrefixAndSuffixTextForRename` as part of a `UserPreferences` parameter. */\n        findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;\n        getSmartSelectionRange(fileName: string, position: number): SelectionRange;\n        getDefinitionAtPosition(fileName: string, position: number): readonly DefinitionInfo[] | undefined;\n        getDefinitionAndBoundSpan(fileName: string, position: number): DefinitionInfoAndBoundSpan | undefined;\n        getTypeDefinitionAtPosition(fileName: string, position: number): readonly DefinitionInfo[] | undefined;\n        getImplementationAtPosition(fileName: string, position: number): readonly ImplementationLocation[] | undefined;\n        getReferencesAtPosition(fileName: string, position: number): ReferenceEntry[] | undefined;\n        findReferences(fileName: string, position: number): ReferencedSymbol[] | undefined;\n        getDocumentHighlights(fileName: string, position: number, filesToSearch: string[]): DocumentHighlights[] | undefined;\n        getFileReferences(fileName: string): ReferenceEntry[];\n        getNavigateToItems(searchValue: string, maxResultCount?: number, fileName?: string, excludeDtsFiles?: boolean, excludeLibFiles?: boolean): NavigateToItem[];\n        getNavigationBarItems(fileName: string): NavigationBarItem[];\n        getNavigationTree(fileName: string): NavigationTree;\n        prepareCallHierarchy(fileName: string, position: number): CallHierarchyItem | CallHierarchyItem[] | undefined;\n        provideCallHierarchyIncomingCalls(fileName: string, position: number): CallHierarchyIncomingCall[];\n        provideCallHierarchyOutgoingCalls(fileName: string, position: number): CallHierarchyOutgoingCall[];\n        provideInlayHints(fileName: string, span: TextSpan, preferences: UserPreferences | undefined): InlayHint[];\n        getOutliningSpans(fileName: string): OutliningSpan[];\n        getTodoComments(fileName: string, descriptors: TodoCommentDescriptor[]): TodoComment[];\n        getBraceMatchingAtPosition(fileName: string, position: number): TextSpan[];\n        getIndentationAtPosition(fileName: string, position: number, options: EditorOptions | EditorSettings): number;\n        getFormattingEditsForRange(fileName: string, start: number, end: number, options: FormatCodeOptions | FormatCodeSettings): TextChange[];\n        getFormattingEditsForDocument(fileName: string, options: FormatCodeOptions | FormatCodeSettings): TextChange[];\n        getFormattingEditsAfterKeystroke(fileName: string, position: number, key: string, options: FormatCodeOptions | FormatCodeSettings): TextChange[];\n        getDocCommentTemplateAtPosition(fileName: string, position: number, options?: DocCommentTemplateOptions, formatOptions?: FormatCodeSettings): TextInsertion | undefined;\n        isValidBraceCompletionAtPosition(fileName: string, position: number, openingBrace: number): boolean;\n        /**\n         * This will return a defined result if the position is after the `>` of the opening tag, or somewhere in the text, of a JSXElement with no closing tag.\n         * Editors should call this after `>` is typed.\n         */\n        getJsxClosingTagAtPosition(fileName: string, position: number): JsxClosingTagInfo | undefined;\n        getLinkedEditingRangeAtPosition(fileName: string, position: number): LinkedEditingInfo | undefined;\n        getSpanOfEnclosingComment(fileName: string, position: number, onlyMultiLine: boolean): TextSpan | undefined;\n        toLineColumnOffset?(fileName: string, position: number): LineAndCharacter;\n        getCodeFixesAtPosition(fileName: string, start: number, end: number, errorCodes: readonly number[], formatOptions: FormatCodeSettings, preferences: UserPreferences): readonly CodeFixAction[];\n        getCombinedCodeFix(scope: CombinedCodeFixScope, fixId: {}, formatOptions: FormatCodeSettings, preferences: UserPreferences): CombinedCodeActions;\n        applyCodeActionCommand(action: CodeActionCommand, formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult>;\n        applyCodeActionCommand(action: CodeActionCommand[], formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult[]>;\n        applyCodeActionCommand(action: CodeActionCommand | CodeActionCommand[], formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>;\n        /** @deprecated `fileName` will be ignored */\n        applyCodeActionCommand(fileName: string, action: CodeActionCommand): Promise<ApplyCodeActionCommandResult>;\n        /** @deprecated `fileName` will be ignored */\n        applyCodeActionCommand(fileName: string, action: CodeActionCommand[]): Promise<ApplyCodeActionCommandResult[]>;\n        /** @deprecated `fileName` will be ignored */\n        applyCodeActionCommand(fileName: string, action: CodeActionCommand | CodeActionCommand[]): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>;\n        /**\n         * @param includeInteractiveActions Include refactor actions that require additional arguments to be\n         * passed when calling `getEditsForRefactor`. When true, clients should inspect the `isInteractive`\n         * property of each returned `RefactorActionInfo` and ensure they are able to collect the appropriate\n         * arguments for any interactive action before offering it.\n         */\n        getApplicableRefactors(fileName: string, positionOrRange: number | TextRange, preferences: UserPreferences | undefined, triggerReason?: RefactorTriggerReason, kind?: string, includeInteractiveActions?: boolean): ApplicableRefactorInfo[];\n        getEditsForRefactor(fileName: string, formatOptions: FormatCodeSettings, positionOrRange: number | TextRange, refactorName: string, actionName: string, preferences: UserPreferences | undefined, interactiveRefactorArguments?: InteractiveRefactorArguments): RefactorEditInfo | undefined;\n        getMoveToRefactoringFileSuggestions(fileName: string, positionOrRange: number | TextRange, preferences: UserPreferences | undefined, triggerReason?: RefactorTriggerReason, kind?: string): {\n            newFileName: string;\n            files: string[];\n        };\n        organizeImports(args: OrganizeImportsArgs, formatOptions: FormatCodeSettings, preferences: UserPreferences | undefined): readonly FileTextChanges[];\n        getEditsForFileRename(oldFilePath: string, newFilePath: string, formatOptions: FormatCodeSettings, preferences: UserPreferences | undefined): readonly FileTextChanges[];\n        getEmitOutput(fileName: string, emitOnlyDtsFiles?: boolean, forceDtsEmit?: boolean): EmitOutput;\n        getProgram(): Program | undefined;\n        toggleLineComment(fileName: string, textRange: TextRange): TextChange[];\n        toggleMultilineComment(fileName: string, textRange: TextRange): TextChange[];\n        commentSelection(fileName: string, textRange: TextRange): TextChange[];\n        uncommentSelection(fileName: string, textRange: TextRange): TextChange[];\n        getSupportedCodeFixes(fileName?: string): readonly string[];\n        dispose(): void;\n        preparePasteEditsForFile(fileName: string, copiedTextRanges: TextRange[]): boolean;\n        getPasteEdits(args: PasteEditsArgs, formatOptions: FormatCodeSettings): PasteEdits;\n    }\n    interface JsxClosingTagInfo {\n        readonly newText: string;\n    }\n    interface LinkedEditingInfo {\n        readonly ranges: TextSpan[];\n        wordPattern?: string;\n    }\n    interface CombinedCodeFixScope {\n        type: "file";\n        fileName: string;\n    }\n    enum OrganizeImportsMode {\n        All = "All",\n        SortAndCombine = "SortAndCombine",\n        RemoveUnused = "RemoveUnused",\n    }\n    interface PasteEdits {\n        edits: readonly FileTextChanges[];\n        fixId?: {};\n    }\n    interface PasteEditsArgs {\n        targetFile: string;\n        pastedText: string[];\n        pasteLocations: TextRange[];\n        copiedFrom: {\n            file: string;\n            range: TextRange[];\n        } | undefined;\n        preferences: UserPreferences;\n    }\n    interface OrganizeImportsArgs extends CombinedCodeFixScope {\n        /** @deprecated Use `mode` instead */\n        skipDestructiveCodeActions?: boolean;\n        mode?: OrganizeImportsMode;\n    }\n    type CompletionsTriggerCharacter = "." | \'"\' | "\'" | "`" | "/" | "@" | "<" | "#" | " ";\n    enum CompletionTriggerKind {\n        /** Completion was triggered by typing an identifier, manual invocation (e.g Ctrl+Space) or via API. */\n        Invoked = 1,\n        /** Completion was triggered by a trigger character. */\n        TriggerCharacter = 2,\n        /** Completion was re-triggered as the current completion list is incomplete. */\n        TriggerForIncompleteCompletions = 3,\n    }\n    interface GetCompletionsAtPositionOptions extends UserPreferences {\n        /**\n         * If the editor is asking for completions because a certain character was typed\n         * (as opposed to when the user explicitly requested them) this should be set.\n         */\n        triggerCharacter?: CompletionsTriggerCharacter;\n        triggerKind?: CompletionTriggerKind;\n        /**\n         * Include a `symbol` property on each completion entry object.\n         * Symbols reference cyclic data structures and sometimes an entire TypeChecker instance,\n         * so use caution when serializing or retaining completion entries retrieved with this option.\n         * @default false\n         */\n        includeSymbol?: boolean;\n        /** @deprecated Use includeCompletionsForModuleExports */\n        includeExternalModuleExports?: boolean;\n        /** @deprecated Use includeCompletionsWithInsertText */\n        includeInsertTextCompletions?: boolean;\n    }\n    type SignatureHelpTriggerCharacter = "," | "(" | "<";\n    type SignatureHelpRetriggerCharacter = SignatureHelpTriggerCharacter | ")";\n    interface SignatureHelpItemsOptions {\n        triggerReason?: SignatureHelpTriggerReason;\n    }\n    type SignatureHelpTriggerReason = SignatureHelpInvokedReason | SignatureHelpCharacterTypedReason | SignatureHelpRetriggeredReason;\n    /**\n     * Signals that the user manually requested signature help.\n     * The language service will unconditionally attempt to provide a result.\n     */\n    interface SignatureHelpInvokedReason {\n        kind: "invoked";\n        triggerCharacter?: undefined;\n    }\n    /**\n     * Signals that the signature help request came from a user typing a character.\n     * Depending on the character and the syntactic context, the request may or may not be served a result.\n     */\n    interface SignatureHelpCharacterTypedReason {\n        kind: "characterTyped";\n        /**\n         * Character that was responsible for triggering signature help.\n         */\n        triggerCharacter: SignatureHelpTriggerCharacter;\n    }\n    /**\n     * Signals that this signature help request came from typing a character or moving the cursor.\n     * This should only occur if a signature help session was already active and the editor needs to see if it should adjust.\n     * The language service will unconditionally attempt to provide a result.\n     * `triggerCharacter` can be `undefined` for a retrigger caused by a cursor move.\n     */\n    interface SignatureHelpRetriggeredReason {\n        kind: "retrigger";\n        /**\n         * Character that was responsible for triggering signature help.\n         */\n        triggerCharacter?: SignatureHelpRetriggerCharacter;\n    }\n    interface ApplyCodeActionCommandResult {\n        successMessage: string;\n    }\n    interface Classifications {\n        spans: number[];\n        endOfLineState: EndOfLineState;\n    }\n    interface ClassifiedSpan {\n        textSpan: TextSpan;\n        classificationType: ClassificationTypeNames;\n    }\n    interface ClassifiedSpan2020 {\n        textSpan: TextSpan;\n        classificationType: number;\n    }\n    /**\n     * Navigation bar interface designed for visual studio\'s dual-column layout.\n     * This does not form a proper tree.\n     * The navbar is returned as a list of top-level items, each of which has a list of child items.\n     * Child items always have an empty array for their `childItems`.\n     */\n    interface NavigationBarItem {\n        text: string;\n        kind: ScriptElementKind;\n        kindModifiers: string;\n        spans: TextSpan[];\n        childItems: NavigationBarItem[];\n        indent: number;\n        bolded: boolean;\n        grayed: boolean;\n    }\n    /**\n     * Node in a tree of nested declarations in a file.\n     * The top node is always a script or module node.\n     */\n    interface NavigationTree {\n        /** Name of the declaration, or a short description, e.g. "<class>". */\n        text: string;\n        kind: ScriptElementKind;\n        /** ScriptElementKindModifier separated by commas, e.g. "public,abstract" */\n        kindModifiers: string;\n        /**\n         * Spans of the nodes that generated this declaration.\n         * There will be more than one if this is the result of merging.\n         */\n        spans: TextSpan[];\n        nameSpan: TextSpan | undefined;\n        /** Present if non-empty */\n        childItems?: NavigationTree[];\n    }\n    interface CallHierarchyItem {\n        name: string;\n        kind: ScriptElementKind;\n        kindModifiers?: string;\n        file: string;\n        span: TextSpan;\n        selectionSpan: TextSpan;\n        containerName?: string;\n    }\n    interface CallHierarchyIncomingCall {\n        from: CallHierarchyItem;\n        fromSpans: TextSpan[];\n    }\n    interface CallHierarchyOutgoingCall {\n        to: CallHierarchyItem;\n        fromSpans: TextSpan[];\n    }\n    enum InlayHintKind {\n        Type = "Type",\n        Parameter = "Parameter",\n        Enum = "Enum",\n    }\n    interface InlayHint {\n        /** This property will be the empty string when displayParts is set. */\n        text: string;\n        position: number;\n        kind: InlayHintKind;\n        whitespaceBefore?: boolean;\n        whitespaceAfter?: boolean;\n        displayParts?: InlayHintDisplayPart[];\n    }\n    interface InlayHintDisplayPart {\n        text: string;\n        span?: TextSpan;\n        file?: string;\n    }\n    interface TodoCommentDescriptor {\n        text: string;\n        priority: number;\n    }\n    interface TodoComment {\n        descriptor: TodoCommentDescriptor;\n        message: string;\n        position: number;\n    }\n    interface TextChange {\n        span: TextSpan;\n        newText: string;\n    }\n    interface FileTextChanges {\n        fileName: string;\n        textChanges: readonly TextChange[];\n        isNewFile?: boolean;\n    }\n    interface CodeAction {\n        /** Description of the code action to display in the UI of the editor */\n        description: string;\n        /** Text changes to apply to each file as part of the code action */\n        changes: FileTextChanges[];\n        /**\n         * If the user accepts the code fix, the editor should send the action back in a `applyAction` request.\n         * This allows the language service to have side effects (e.g. installing dependencies) upon a code fix.\n         */\n        commands?: CodeActionCommand[];\n    }\n    interface CodeFixAction extends CodeAction {\n        /** Short name to identify the fix, for use by telemetry. */\n        fixName: string;\n        /**\n         * If present, one may call \'getCombinedCodeFix\' with this fixId.\n         * This may be omitted to indicate that the code fix can\'t be applied in a group.\n         */\n        fixId?: {};\n        fixAllDescription?: string;\n    }\n    interface CombinedCodeActions {\n        changes: readonly FileTextChanges[];\n        commands?: readonly CodeActionCommand[];\n    }\n    type CodeActionCommand = InstallPackageAction;\n    interface InstallPackageAction {\n    }\n    /**\n     * A set of one or more available refactoring actions, grouped under a parent refactoring.\n     */\n    interface ApplicableRefactorInfo {\n        /**\n         * The programmatic name of the refactoring\n         */\n        name: string;\n        /**\n         * A description of this refactoring category to show to the user.\n         * If the refactoring gets inlined (see below), this text will not be visible.\n         */\n        description: string;\n        /**\n         * Inlineable refactorings can have their actions hoisted out to the top level\n         * of a context menu. Non-inlineanable refactorings should always be shown inside\n         * their parent grouping.\n         *\n         * If not specified, this value is assumed to be \'true\'\n         */\n        inlineable?: boolean;\n        actions: RefactorActionInfo[];\n    }\n    /**\n     * Represents a single refactoring action - for example, the "Extract Method..." refactor might\n     * offer several actions, each corresponding to a surround class or closure to extract into.\n     */\n    interface RefactorActionInfo {\n        /**\n         * The programmatic name of the refactoring action\n         */\n        name: string;\n        /**\n         * A description of this refactoring action to show to the user.\n         * If the parent refactoring is inlined away, this will be the only text shown,\n         * so this description should make sense by itself if the parent is inlineable=true\n         */\n        description: string;\n        /**\n         * A message to show to the user if the refactoring cannot be applied in\n         * the current context.\n         */\n        notApplicableReason?: string;\n        /**\n         * The hierarchical dotted name of the refactor action.\n         */\n        kind?: string;\n        /**\n         * Indicates that the action requires additional arguments to be passed\n         * when calling `getEditsForRefactor`.\n         */\n        isInteractive?: boolean;\n        /**\n         * Range of code the refactoring will be applied to.\n         */\n        range?: {\n            start: {\n                line: number;\n                offset: number;\n            };\n            end: {\n                line: number;\n                offset: number;\n            };\n        };\n    }\n    /**\n     * A set of edits to make in response to a refactor action, plus an optional\n     * location where renaming should be invoked from\n     */\n    interface RefactorEditInfo {\n        edits: FileTextChanges[];\n        renameFilename?: string;\n        renameLocation?: number;\n        commands?: CodeActionCommand[];\n        notApplicableReason?: string;\n    }\n    type RefactorTriggerReason = "implicit" | "invoked";\n    interface TextInsertion {\n        newText: string;\n        /** The position in newText the caret should point to after the insertion. */\n        caretOffset: number;\n    }\n    interface DocumentSpan {\n        textSpan: TextSpan;\n        fileName: string;\n        /**\n         * If the span represents a location that was remapped (e.g. via a .d.ts.map file),\n         * then the original filename and span will be specified here\n         */\n        originalTextSpan?: TextSpan;\n        originalFileName?: string;\n        /**\n         * If DocumentSpan.textSpan is the span for name of the declaration,\n         * then this is the span for relevant declaration\n         */\n        contextSpan?: TextSpan;\n        originalContextSpan?: TextSpan;\n    }\n    interface RenameLocation extends DocumentSpan {\n        readonly prefixText?: string;\n        readonly suffixText?: string;\n    }\n    interface ReferenceEntry extends DocumentSpan {\n        isWriteAccess: boolean;\n        isInString?: true;\n    }\n    interface ImplementationLocation extends DocumentSpan {\n        kind: ScriptElementKind;\n        displayParts: SymbolDisplayPart[];\n    }\n    enum HighlightSpanKind {\n        none = "none",\n        definition = "definition",\n        reference = "reference",\n        writtenReference = "writtenReference",\n    }\n    interface HighlightSpan {\n        fileName?: string;\n        isInString?: true;\n        textSpan: TextSpan;\n        contextSpan?: TextSpan;\n        kind: HighlightSpanKind;\n    }\n    interface NavigateToItem {\n        name: string;\n        kind: ScriptElementKind;\n        kindModifiers: string;\n        matchKind: "exact" | "prefix" | "substring" | "camelCase";\n        isCaseSensitive: boolean;\n        fileName: string;\n        textSpan: TextSpan;\n        containerName: string;\n        containerKind: ScriptElementKind;\n    }\n    enum IndentStyle {\n        None = 0,\n        Block = 1,\n        Smart = 2,\n    }\n    enum SemicolonPreference {\n        Ignore = "ignore",\n        Insert = "insert",\n        Remove = "remove",\n    }\n    /** @deprecated - consider using EditorSettings instead */\n    interface EditorOptions {\n        BaseIndentSize?: number;\n        IndentSize: number;\n        TabSize: number;\n        NewLineCharacter: string;\n        ConvertTabsToSpaces: boolean;\n        IndentStyle: IndentStyle;\n    }\n    interface EditorSettings {\n        baseIndentSize?: number;\n        indentSize?: number;\n        tabSize?: number;\n        newLineCharacter?: string;\n        convertTabsToSpaces?: boolean;\n        indentStyle?: IndentStyle;\n        trimTrailingWhitespace?: boolean;\n    }\n    /** @deprecated - consider using FormatCodeSettings instead */\n    interface FormatCodeOptions extends EditorOptions {\n        InsertSpaceAfterCommaDelimiter: boolean;\n        InsertSpaceAfterSemicolonInForStatements: boolean;\n        InsertSpaceBeforeAndAfterBinaryOperators: boolean;\n        InsertSpaceAfterConstructor?: boolean;\n        InsertSpaceAfterKeywordsInControlFlowStatements: boolean;\n        InsertSpaceAfterFunctionKeywordForAnonymousFunctions: boolean;\n        InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: boolean;\n        InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: boolean;\n        InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces?: boolean;\n        InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: boolean;\n        InsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces?: boolean;\n        InsertSpaceAfterTypeAssertion?: boolean;\n        InsertSpaceBeforeFunctionParenthesis?: boolean;\n        PlaceOpenBraceOnNewLineForFunctions: boolean;\n        PlaceOpenBraceOnNewLineForControlBlocks: boolean;\n        insertSpaceBeforeTypeAnnotation?: boolean;\n    }\n    interface FormatCodeSettings extends EditorSettings {\n        readonly insertSpaceAfterCommaDelimiter?: boolean;\n        readonly insertSpaceAfterSemicolonInForStatements?: boolean;\n        readonly insertSpaceBeforeAndAfterBinaryOperators?: boolean;\n        readonly insertSpaceAfterConstructor?: boolean;\n        readonly insertSpaceAfterKeywordsInControlFlowStatements?: boolean;\n        readonly insertSpaceAfterFunctionKeywordForAnonymousFunctions?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingEmptyBraces?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces?: boolean;\n        readonly insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces?: boolean;\n        readonly insertSpaceAfterTypeAssertion?: boolean;\n        readonly insertSpaceBeforeFunctionParenthesis?: boolean;\n        readonly placeOpenBraceOnNewLineForFunctions?: boolean;\n        readonly placeOpenBraceOnNewLineForControlBlocks?: boolean;\n        readonly insertSpaceBeforeTypeAnnotation?: boolean;\n        readonly indentMultiLineObjectLiteralBeginningOnBlankLine?: boolean;\n        readonly semicolons?: SemicolonPreference;\n        readonly indentSwitchCase?: boolean;\n    }\n    interface DefinitionInfo extends DocumentSpan {\n        kind: ScriptElementKind;\n        name: string;\n        containerKind: ScriptElementKind;\n        containerName: string;\n        unverified?: boolean;\n    }\n    interface DefinitionInfoAndBoundSpan {\n        definitions?: readonly DefinitionInfo[];\n        textSpan: TextSpan;\n    }\n    interface ReferencedSymbolDefinitionInfo extends DefinitionInfo {\n        displayParts: SymbolDisplayPart[];\n    }\n    interface ReferencedSymbol {\n        definition: ReferencedSymbolDefinitionInfo;\n        references: ReferencedSymbolEntry[];\n    }\n    interface ReferencedSymbolEntry extends ReferenceEntry {\n        isDefinition?: boolean;\n    }\n    enum SymbolDisplayPartKind {\n        aliasName = 0,\n        className = 1,\n        enumName = 2,\n        fieldName = 3,\n        interfaceName = 4,\n        keyword = 5,\n        lineBreak = 6,\n        numericLiteral = 7,\n        stringLiteral = 8,\n        localName = 9,\n        methodName = 10,\n        moduleName = 11,\n        operator = 12,\n        parameterName = 13,\n        propertyName = 14,\n        punctuation = 15,\n        space = 16,\n        text = 17,\n        typeParameterName = 18,\n        enumMemberName = 19,\n        functionName = 20,\n        regularExpressionLiteral = 21,\n        link = 22,\n        linkName = 23,\n        linkText = 24,\n    }\n    interface SymbolDisplayPart {\n        /**\n         * Text of an item describing the symbol.\n         */\n        text: string;\n        /**\n         * The symbol\'s kind (such as \'className\' or \'parameterName\' or plain \'text\').\n         */\n        kind: string;\n    }\n    interface JSDocLinkDisplayPart extends SymbolDisplayPart {\n        target: DocumentSpan;\n    }\n    interface JSDocTagInfo {\n        name: string;\n        text?: SymbolDisplayPart[];\n    }\n    interface QuickInfo {\n        kind: ScriptElementKind;\n        kindModifiers: string;\n        textSpan: TextSpan;\n        displayParts?: SymbolDisplayPart[];\n        documentation?: SymbolDisplayPart[];\n        tags?: JSDocTagInfo[];\n    }\n    type RenameInfo = RenameInfoSuccess | RenameInfoFailure;\n    interface RenameInfoSuccess {\n        canRename: true;\n        /**\n         * File or directory to rename.\n         * If set, `getEditsForFileRename` should be called instead of `findRenameLocations`.\n         */\n        fileToRename?: string;\n        displayName: string;\n        /**\n         * Full display name of item to be renamed.\n         * If item to be renamed is a file, then this is the original text of the module specifer\n         */\n        fullDisplayName: string;\n        kind: ScriptElementKind;\n        kindModifiers: string;\n        triggerSpan: TextSpan;\n    }\n    interface RenameInfoFailure {\n        canRename: false;\n        localizedErrorMessage: string;\n    }\n    /**\n     * @deprecated Use `UserPreferences` instead.\n     */\n    interface RenameInfoOptions {\n        readonly allowRenameOfImportPath?: boolean;\n    }\n    interface DocCommentTemplateOptions {\n        readonly generateReturnInDocTemplate?: boolean;\n    }\n    interface InteractiveRefactorArguments {\n        targetFile: string;\n    }\n    /**\n     * Signature help information for a single parameter\n     */\n    interface SignatureHelpParameter {\n        name: string;\n        documentation: SymbolDisplayPart[];\n        displayParts: SymbolDisplayPart[];\n        isOptional: boolean;\n        isRest?: boolean;\n    }\n    interface SelectionRange {\n        textSpan: TextSpan;\n        parent?: SelectionRange;\n    }\n    /**\n     * Represents a single signature to show in signature help.\n     * The id is used for subsequent calls into the language service to ask questions about the\n     * signature help item in the context of any documents that have been updated.  i.e. after\n     * an edit has happened, while signature help is still active, the host can ask important\n     * questions like \'what parameter is the user currently contained within?\'.\n     */\n    interface SignatureHelpItem {\n        isVariadic: boolean;\n        prefixDisplayParts: SymbolDisplayPart[];\n        suffixDisplayParts: SymbolDisplayPart[];\n        separatorDisplayParts: SymbolDisplayPart[];\n        parameters: SignatureHelpParameter[];\n        documentation: SymbolDisplayPart[];\n        tags: JSDocTagInfo[];\n    }\n    /**\n     * Represents a set of signature help items, and the preferred item that should be selected.\n     */\n    interface SignatureHelpItems {\n        items: SignatureHelpItem[];\n        applicableSpan: TextSpan;\n        selectedItemIndex: number;\n        argumentIndex: number;\n        argumentCount: number;\n    }\n    enum CompletionInfoFlags {\n        None = 0,\n        MayIncludeAutoImports = 1,\n        IsImportStatementCompletion = 2,\n        IsContinuation = 4,\n        ResolvedModuleSpecifiers = 8,\n        ResolvedModuleSpecifiersBeyondLimit = 16,\n        MayIncludeMethodSnippets = 32,\n    }\n    interface CompletionInfo {\n        /** For performance telemetry. */\n        flags?: CompletionInfoFlags;\n        /** Not true for all global completions. This will be true if the enclosing scope matches a few syntax kinds. See `isSnippetScope`. */\n        isGlobalCompletion: boolean;\n        isMemberCompletion: boolean;\n        /**\n         * In the absence of `CompletionEntry["replacementSpan"]`, the editor may choose whether to use\n         * this span or its default one. If `CompletionEntry["replacementSpan"]` is defined, that span\n         * must be used to commit that completion entry.\n         */\n        optionalReplacementSpan?: TextSpan;\n        /**\n         * true when the current location also allows for a new identifier\n         */\n        isNewIdentifierLocation: boolean;\n        /**\n         * Indicates to client to continue requesting completions on subsequent keystrokes.\n         */\n        isIncomplete?: true;\n        entries: CompletionEntry[];\n        /**\n         * Default commit characters for the completion entries.\n         */\n        defaultCommitCharacters?: string[];\n    }\n    interface CompletionEntryDataAutoImport {\n        /**\n         * The name of the property or export in the module\'s symbol table. Differs from the completion name\n         * in the case of InternalSymbolName.ExportEquals and InternalSymbolName.Default.\n         */\n        exportName: string;\n        exportMapKey?: ExportMapInfoKey;\n        moduleSpecifier?: string;\n        /** The file name declaring the export\'s module symbol, if it was an external module */\n        fileName?: string;\n        /** The module name (with quotes stripped) of the export\'s module symbol, if it was an ambient module */\n        ambientModuleName?: string;\n        /** True if the export was found in the package.json AutoImportProvider */\n        isPackageJsonImport?: true;\n    }\n    interface CompletionEntryDataUnresolved extends CompletionEntryDataAutoImport {\n        exportMapKey: ExportMapInfoKey;\n    }\n    interface CompletionEntryDataResolved extends CompletionEntryDataAutoImport {\n        moduleSpecifier: string;\n    }\n    type CompletionEntryData = CompletionEntryDataUnresolved | CompletionEntryDataResolved;\n    interface CompletionEntry {\n        name: string;\n        kind: ScriptElementKind;\n        kindModifiers?: string;\n        /**\n         * A string that is used for comparing completion items so that they can be ordered. This\n         * is often the same as the name but may be different in certain circumstances.\n         */\n        sortText: string;\n        /**\n         * Text to insert instead of `name`.\n         * This is used to support bracketed completions; If `name` might be "a-b" but `insertText` would be `["a-b"]`,\n         * coupled with `replacementSpan` to replace a dotted access with a bracket access.\n         */\n        insertText?: string;\n        /**\n         * A string that should be used when filtering a set of\n         * completion items.\n         */\n        filterText?: string;\n        /**\n         * `insertText` should be interpreted as a snippet if true.\n         */\n        isSnippet?: true;\n        /**\n         * An optional span that indicates the text to be replaced by this completion item.\n         * If present, this span should be used instead of the default one.\n         * It will be set if the required span differs from the one generated by the default replacement behavior.\n         */\n        replacementSpan?: TextSpan;\n        /**\n         * Indicates whether commiting this completion entry will require additional code actions to be\n         * made to avoid errors. The CompletionEntryDetails will have these actions.\n         */\n        hasAction?: true;\n        /**\n         * Identifier (not necessarily human-readable) identifying where this completion came from.\n         */\n        source?: string;\n        /**\n         * Human-readable description of the `source`.\n         */\n        sourceDisplay?: SymbolDisplayPart[];\n        /**\n         * Additional details for the label.\n         */\n        labelDetails?: CompletionEntryLabelDetails;\n        /**\n         * If true, this completion should be highlighted as recommended. There will only be one of these.\n         * This will be set when we know the user should write an expression with a certain type and that type is an enum or constructable class.\n         * Then either that enum/class or a namespace containing it will be the recommended symbol.\n         */\n        isRecommended?: true;\n        /**\n         * If true, this completion was generated from traversing the name table of an unchecked JS file,\n         * and therefore may not be accurate.\n         */\n        isFromUncheckedFile?: true;\n        /**\n         * If true, this completion was for an auto-import of a module not yet in the program, but listed\n         * in the project package.json. Used for telemetry reporting.\n         */\n        isPackageJsonImport?: true;\n        /**\n         * If true, this completion was an auto-import-style completion of an import statement (i.e., the\n         * module specifier was inserted along with the imported identifier). Used for telemetry reporting.\n         */\n        isImportStatementCompletion?: true;\n        /**\n         * For API purposes.\n         * Included for non-string completions only when `includeSymbol: true` option is passed to `getCompletionsAtPosition`.\n         * @example Get declaration of completion: `symbol.valueDeclaration`\n         */\n        symbol?: Symbol;\n        /**\n         * A property to be sent back to TS Server in the CompletionDetailsRequest, along with `name`,\n         * that allows TS Server to look up the symbol represented by the completion item, disambiguating\n         * items with the same name. Currently only defined for auto-import completions, but the type is\n         * `unknown` in the protocol, so it can be changed as needed to support other kinds of completions.\n         * The presence of this property should generally not be used to assume that this completion entry\n         * is an auto-import.\n         */\n        data?: CompletionEntryData;\n        /**\n         * If this completion entry is selected, typing a commit character will cause the entry to be accepted.\n         */\n        commitCharacters?: string[];\n    }\n    interface CompletionEntryLabelDetails {\n        /**\n         * An optional string which is rendered less prominently directly after\n         * {@link CompletionEntry.name name}, without any spacing. Should be\n         * used for function signatures or type annotations.\n         */\n        detail?: string;\n        /**\n         * An optional string which is rendered less prominently after\n         * {@link CompletionEntryLabelDetails.detail}. Should be used for fully qualified\n         * names or file path.\n         */\n        description?: string;\n    }\n    interface CompletionEntryDetails {\n        name: string;\n        kind: ScriptElementKind;\n        kindModifiers: string;\n        displayParts: SymbolDisplayPart[];\n        documentation?: SymbolDisplayPart[];\n        tags?: JSDocTagInfo[];\n        codeActions?: CodeAction[];\n        /** @deprecated Use `sourceDisplay` instead. */\n        source?: SymbolDisplayPart[];\n        sourceDisplay?: SymbolDisplayPart[];\n    }\n    interface OutliningSpan {\n        /** The span of the document to actually collapse. */\n        textSpan: TextSpan;\n        /** The span of the document to display when the user hovers over the collapsed span. */\n        hintSpan: TextSpan;\n        /** The text to display in the editor for the collapsed region. */\n        bannerText: string;\n        /**\n         * Whether or not this region should be automatically collapsed when\n         * the \'Collapse to Definitions\' command is invoked.\n         */\n        autoCollapse: boolean;\n        /**\n         * Classification of the contents of the span\n         */\n        kind: OutliningSpanKind;\n    }\n    enum OutliningSpanKind {\n        /** Single or multi-line comments */\n        Comment = "comment",\n        /** Sections marked by \'// #region\' and \'// #endregion\' comments */\n        Region = "region",\n        /** Declarations and expressions */\n        Code = "code",\n        /** Contiguous blocks of import declarations */\n        Imports = "imports",\n    }\n    enum OutputFileType {\n        JavaScript = 0,\n        SourceMap = 1,\n        Declaration = 2,\n    }\n    enum EndOfLineState {\n        None = 0,\n        InMultiLineCommentTrivia = 1,\n        InSingleQuoteStringLiteral = 2,\n        InDoubleQuoteStringLiteral = 3,\n        InTemplateHeadOrNoSubstitutionTemplate = 4,\n        InTemplateMiddleOrTail = 5,\n        InTemplateSubstitutionPosition = 6,\n    }\n    enum TokenClass {\n        Punctuation = 0,\n        Keyword = 1,\n        Operator = 2,\n        Comment = 3,\n        Whitespace = 4,\n        Identifier = 5,\n        NumberLiteral = 6,\n        BigIntLiteral = 7,\n        StringLiteral = 8,\n        RegExpLiteral = 9,\n    }\n    interface ClassificationResult {\n        finalLexState: EndOfLineState;\n        entries: ClassificationInfo[];\n    }\n    interface ClassificationInfo {\n        length: number;\n        classification: TokenClass;\n    }\n    interface Classifier {\n        /**\n         * Gives lexical classifications of tokens on a line without any syntactic context.\n         * For instance, a token consisting of the text \'string\' can be either an identifier\n         * named \'string\' or the keyword \'string\', however, because this classifier is not aware,\n         * it relies on certain heuristics to give acceptable results. For classifications where\n         * speed trumps accuracy, this function is preferable; however, for true accuracy, the\n         * syntactic classifier is ideal. In fact, in certain editing scenarios, combining the\n         * lexical, syntactic, and semantic classifiers may issue the best user experience.\n         *\n         * @param text                      The text of a line to classify.\n         * @param lexState                  The state of the lexical classifier at the end of the previous line.\n         * @param syntacticClassifierAbsent Whether the client is *not* using a syntactic classifier.\n         *                                  If there is no syntactic classifier (syntacticClassifierAbsent=true),\n         *                                  certain heuristics may be used in its place; however, if there is a\n         *                                  syntactic classifier (syntacticClassifierAbsent=false), certain\n         *                                  classifications which may be incorrectly categorized will be given\n         *                                  back as Identifiers in order to allow the syntactic classifier to\n         *                                  subsume the classification.\n         * @deprecated Use getLexicalClassifications instead.\n         */\n        getClassificationsForLine(text: string, lexState: EndOfLineState, syntacticClassifierAbsent: boolean): ClassificationResult;\n        getEncodedLexicalClassifications(text: string, endOfLineState: EndOfLineState, syntacticClassifierAbsent: boolean): Classifications;\n    }\n    enum ScriptElementKind {\n        unknown = "",\n        warning = "warning",\n        /** predefined type (void) or keyword (class) */\n        keyword = "keyword",\n        /** top level script node */\n        scriptElement = "script",\n        /** module foo {} */\n        moduleElement = "module",\n        /** class X {} */\n        classElement = "class",\n        /** var x = class X {} */\n        localClassElement = "local class",\n        /** interface Y {} */\n        interfaceElement = "interface",\n        /** type T = ... */\n        typeElement = "type",\n        /** enum E */\n        enumElement = "enum",\n        enumMemberElement = "enum member",\n        /**\n         * Inside module and script only\n         * const v = ..\n         */\n        variableElement = "var",\n        /** Inside function */\n        localVariableElement = "local var",\n        /** using foo = ... */\n        variableUsingElement = "using",\n        /** await using foo = ... */\n        variableAwaitUsingElement = "await using",\n        /**\n         * Inside module and script only\n         * function f() { }\n         */\n        functionElement = "function",\n        /** Inside function */\n        localFunctionElement = "local function",\n        /** class X { [public|private]* foo() {} } */\n        memberFunctionElement = "method",\n        /** class X { [public|private]* [get|set] foo:number; } */\n        memberGetAccessorElement = "getter",\n        memberSetAccessorElement = "setter",\n        /**\n         * class X { [public|private]* foo:number; }\n         * interface Y { foo:number; }\n         */\n        memberVariableElement = "property",\n        /** class X { [public|private]* accessor foo: number; } */\n        memberAccessorVariableElement = "accessor",\n        /**\n         * class X { constructor() { } }\n         * class X { static { } }\n         */\n        constructorImplementationElement = "constructor",\n        /** interface Y { ():number; } */\n        callSignatureElement = "call",\n        /** interface Y { []:number; } */\n        indexSignatureElement = "index",\n        /** interface Y { new():Y; } */\n        constructSignatureElement = "construct",\n        /** function foo(*Y*: string) */\n        parameterElement = "parameter",\n        typeParameterElement = "type parameter",\n        primitiveType = "primitive type",\n        label = "label",\n        alias = "alias",\n        constElement = "const",\n        letElement = "let",\n        directory = "directory",\n        externalModuleName = "external module name",\n        /**\n         * <JsxTagName attribute1 attribute2={0} />\n         * @deprecated\n         */\n        jsxAttribute = "JSX attribute",\n        /** String literal */\n        string = "string",\n        /** Jsdoc @link: in `{@link C link text}`, the before and after text "{@link " and "}" */\n        link = "link",\n        /** Jsdoc @link: in `{@link C link text}`, the entity name "C" */\n        linkName = "link name",\n        /** Jsdoc @link: in `{@link C link text}`, the link text "link text" */\n        linkText = "link text",\n    }\n    enum ScriptElementKindModifier {\n        none = "",\n        publicMemberModifier = "public",\n        privateMemberModifier = "private",\n        protectedMemberModifier = "protected",\n        exportedModifier = "export",\n        ambientModifier = "declare",\n        staticModifier = "static",\n        abstractModifier = "abstract",\n        optionalModifier = "optional",\n        deprecatedModifier = "deprecated",\n        dtsModifier = ".d.ts",\n        tsModifier = ".ts",\n        tsxModifier = ".tsx",\n        jsModifier = ".js",\n        jsxModifier = ".jsx",\n        jsonModifier = ".json",\n        dmtsModifier = ".d.mts",\n        mtsModifier = ".mts",\n        mjsModifier = ".mjs",\n        dctsModifier = ".d.cts",\n        ctsModifier = ".cts",\n        cjsModifier = ".cjs",\n    }\n    enum ClassificationTypeNames {\n        comment = "comment",\n        identifier = "identifier",\n        keyword = "keyword",\n        numericLiteral = "number",\n        bigintLiteral = "bigint",\n        operator = "operator",\n        stringLiteral = "string",\n        whiteSpace = "whitespace",\n        text = "text",\n        punctuation = "punctuation",\n        className = "class name",\n        enumName = "enum name",\n        interfaceName = "interface name",\n        moduleName = "module name",\n        typeParameterName = "type parameter name",\n        typeAliasName = "type alias name",\n        parameterName = "parameter name",\n        docCommentTagName = "doc comment tag name",\n        jsxOpenTagName = "jsx open tag name",\n        jsxCloseTagName = "jsx close tag name",\n        jsxSelfClosingTagName = "jsx self closing tag name",\n        jsxAttribute = "jsx attribute",\n        jsxText = "jsx text",\n        jsxAttributeStringLiteralValue = "jsx attribute string literal value",\n    }\n    enum ClassificationType {\n        comment = 1,\n        identifier = 2,\n        keyword = 3,\n        numericLiteral = 4,\n        operator = 5,\n        stringLiteral = 6,\n        regularExpressionLiteral = 7,\n        whiteSpace = 8,\n        text = 9,\n        punctuation = 10,\n        className = 11,\n        enumName = 12,\n        interfaceName = 13,\n        moduleName = 14,\n        typeParameterName = 15,\n        typeAliasName = 16,\n        parameterName = 17,\n        docCommentTagName = 18,\n        jsxOpenTagName = 19,\n        jsxCloseTagName = 20,\n        jsxSelfClosingTagName = 21,\n        jsxAttribute = 22,\n        jsxText = 23,\n        jsxAttributeStringLiteralValue = 24,\n        bigintLiteral = 25,\n    }\n    interface InlayHintsContext {\n        file: SourceFile;\n        program: Program;\n        cancellationToken: CancellationToken;\n        host: LanguageServiceHost;\n        span: TextSpan;\n        preferences: UserPreferences;\n    }\n    type ExportMapInfoKey = string & {\n        __exportInfoKey: void;\n    };\n    /** The classifier is used for syntactic highlighting in editors via the TSServer */\n    function createClassifier(): Classifier;\n    interface DocumentHighlights {\n        fileName: string;\n        highlightSpans: HighlightSpan[];\n    }\n    function createDocumentRegistry(useCaseSensitiveFileNames?: boolean, currentDirectory?: string, jsDocParsingMode?: JSDocParsingMode): DocumentRegistry;\n    /**\n     * The document registry represents a store of SourceFile objects that can be shared between\n     * multiple LanguageService instances. A LanguageService instance holds on the SourceFile (AST)\n     * of files in the context.\n     * SourceFile objects account for most of the memory usage by the language service. Sharing\n     * the same DocumentRegistry instance between different instances of LanguageService allow\n     * for more efficient memory utilization since all projects will share at least the library\n     * file (lib.d.ts).\n     *\n     * A more advanced use of the document registry is to serialize sourceFile objects to disk\n     * and re-hydrate them when needed.\n     *\n     * To create a default DocumentRegistry, use createDocumentRegistry to create one, and pass it\n     * to all subsequent createLanguageService calls.\n     */\n    interface DocumentRegistry {\n        /**\n         * Request a stored SourceFile with a given fileName and compilationSettings.\n         * The first call to acquire will call createLanguageServiceSourceFile to generate\n         * the SourceFile if was not found in the registry.\n         *\n         * @param fileName The name of the file requested\n         * @param compilationSettingsOrHost Some compilation settings like target affects the\n         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store\n         * multiple copies of the same file for different compilation settings. A minimal\n         * resolution cache is needed to fully define a source file\'s shape when\n         * the compilation settings include `module: node16`+, so providing a cache host\n         * object should be preferred. A common host is a language service `ConfiguredProject`.\n         * @param scriptSnapshot Text of the file. Only used if the file was not found\n         * in the registry and a new one was created.\n         * @param version Current version of the file. Only used if the file was not found\n         * in the registry and a new one was created.\n         */\n        acquireDocument(fileName: string, compilationSettingsOrHost: CompilerOptions | MinimalResolutionCacheHost, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind, sourceFileOptions?: CreateSourceFileOptions | ScriptTarget): SourceFile;\n        acquireDocumentWithKey(fileName: string, path: Path, compilationSettingsOrHost: CompilerOptions | MinimalResolutionCacheHost, key: DocumentRegistryBucketKey, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind, sourceFileOptions?: CreateSourceFileOptions | ScriptTarget): SourceFile;\n        /**\n         * Request an updated version of an already existing SourceFile with a given fileName\n         * and compilationSettings. The update will in-turn call updateLanguageServiceSourceFile\n         * to get an updated SourceFile.\n         *\n         * @param fileName The name of the file requested\n         * @param compilationSettingsOrHost Some compilation settings like target affects the\n         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store\n         * multiple copies of the same file for different compilation settings. A minimal\n         * resolution cache is needed to fully define a source file\'s shape when\n         * the compilation settings include `module: node16`+, so providing a cache host\n         * object should be preferred. A common host is a language service `ConfiguredProject`.\n         * @param scriptSnapshot Text of the file.\n         * @param version Current version of the file.\n         */\n        updateDocument(fileName: string, compilationSettingsOrHost: CompilerOptions | MinimalResolutionCacheHost, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind, sourceFileOptions?: CreateSourceFileOptions | ScriptTarget): SourceFile;\n        updateDocumentWithKey(fileName: string, path: Path, compilationSettingsOrHost: CompilerOptions | MinimalResolutionCacheHost, key: DocumentRegistryBucketKey, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind, sourceFileOptions?: CreateSourceFileOptions | ScriptTarget): SourceFile;\n        getKeyForCompilationSettings(settings: CompilerOptions): DocumentRegistryBucketKey;\n        /**\n         * Informs the DocumentRegistry that a file is not needed any longer.\n         *\n         * Note: It is not allowed to call release on a SourceFile that was not acquired from\n         * this registry originally.\n         *\n         * @param fileName The name of the file to be released\n         * @param compilationSettings The compilation settings used to acquire the file\n         * @param scriptKind The script kind of the file to be released\n         *\n         * @deprecated pass scriptKind and impliedNodeFormat for correctness\n         */\n        releaseDocument(fileName: string, compilationSettings: CompilerOptions, scriptKind?: ScriptKind): void;\n        /**\n         * Informs the DocumentRegistry that a file is not needed any longer.\n         *\n         * Note: It is not allowed to call release on a SourceFile that was not acquired from\n         * this registry originally.\n         *\n         * @param fileName The name of the file to be released\n         * @param compilationSettings The compilation settings used to acquire the file\n         * @param scriptKind The script kind of the file to be released\n         * @param impliedNodeFormat The implied source file format of the file to be released\n         */\n        releaseDocument(fileName: string, compilationSettings: CompilerOptions, scriptKind: ScriptKind, impliedNodeFormat: ResolutionMode): void;\n        /**\n         * @deprecated pass scriptKind for and impliedNodeFormat correctness */\n        releaseDocumentWithKey(path: Path, key: DocumentRegistryBucketKey, scriptKind?: ScriptKind): void;\n        releaseDocumentWithKey(path: Path, key: DocumentRegistryBucketKey, scriptKind: ScriptKind, impliedNodeFormat: ResolutionMode): void;\n        reportStats(): string;\n    }\n    type DocumentRegistryBucketKey = string & {\n        __bucketKey: any;\n    };\n    function preProcessFile(sourceText: string, readImportFiles?: boolean, detectJavaScriptImports?: boolean): PreProcessedFileInfo;\n    function transpileModule(input: string, transpileOptions: TranspileOptions): TranspileOutput;\n    function transpileDeclaration(input: string, transpileOptions: TranspileOptions): TranspileOutput;\n    function transpile(input: string, compilerOptions?: CompilerOptions, fileName?: string, diagnostics?: Diagnostic[], moduleName?: string): string;\n    interface TranspileOptions {\n        compilerOptions?: CompilerOptions;\n        fileName?: string;\n        reportDiagnostics?: boolean;\n        moduleName?: string;\n        renamedDependencies?: MapLike<string>;\n        transformers?: CustomTransformers;\n        jsDocParsingMode?: JSDocParsingMode;\n    }\n    interface TranspileOutput {\n        outputText: string;\n        diagnostics?: Diagnostic[];\n        sourceMapText?: string;\n    }\n    function toEditorSettings(options: EditorOptions | EditorSettings): EditorSettings;\n    function displayPartsToString(displayParts: SymbolDisplayPart[] | undefined): string;\n    function getDefaultCompilerOptions(): CompilerOptions;\n    function getSupportedCodeFixes(): readonly string[];\n    function createLanguageServiceSourceFile(fileName: string, scriptSnapshot: IScriptSnapshot, scriptTargetOrOptions: ScriptTarget | CreateSourceFileOptions, version: string, setNodeParents: boolean, scriptKind?: ScriptKind): SourceFile;\n    function updateLanguageServiceSourceFile(sourceFile: SourceFile, scriptSnapshot: IScriptSnapshot, version: string, textChangeRange: TextChangeRange | undefined, aggressiveChecks?: boolean): SourceFile;\n    function createLanguageService(host: LanguageServiceHost, documentRegistry?: DocumentRegistry, syntaxOnlyOrLanguageServiceMode?: boolean | LanguageServiceMode): LanguageService;\n    /**\n     * Get the path of the default library files (lib.d.ts) as distributed with the typescript\n     * node package.\n     * The functionality is not supported if the ts module is consumed outside of a node module.\n     */\n    function getDefaultLibFilePath(options: CompilerOptions): string;\n    /** The version of the language service API */\n    const servicesVersion = "0.8";\n    /**\n     * Transform one or more nodes using the supplied transformers.\n     * @param source A single `Node` or an array of `Node` objects.\n     * @param transformers An array of `TransformerFactory` callbacks used to process the transformation.\n     * @param compilerOptions Optional compiler options.\n     */\n    function transform<T extends Node>(source: T | T[], transformers: TransformerFactory<T>[], compilerOptions?: CompilerOptions): TransformationResult<T>;\n}\nexport = ts;\n']],C=new x.KB6(async()=>{let e=new D.UG(null,null);return await e.connect("/compilers/index.js"),e.getDriver()}),O=()=>{let[e,n]=(0,p.useState)(null),[t,o]=(0,p.useState)("javascript"),[a,m]=(0,p.useState)(null),[b,T]=(0,p.useState)({messages:[]});(0,p.useEffect)(()=>{let e=Object.fromEntries(new URLSearchParams(window.location.search).entries());if(e.script){let n=(0,i.decompressFromEncodedURIComponent)(e.script);A(null!=n?n:L)}else A(L)},[]);let A=async e=>{n(null!=e?e:"");let r=await C.get(),o=await r.compile(t,null!=e?e:"");(null==e?void 0:e.length)&&o.success&&e!==L&&window.history.replaceState(null,"Typia Playground","".concat(location.origin).concat(location.pathname,"?script=").concat((0,i.compressToEncodedURIComponent)(e))),R(o)},S=async n=>{o(n);let t=await C.get();R(await t.compile(n,null!=e?e:""))},R=e=>{if(!1===e.success)return m(e);(0,c.GP)(e.content,"javascript"===e.target?{parser:"babel",plugins:[s.A,l.Ay]}:{parser:"typescript",plugins:[d.A,l.Ay]}).then(n=>{m({...e,content:n})}).catch(()=>m(e))},x=async()=>{let n=await C.get(),t=await n.bundle(null!=e?e:"");if(!1===t.success)return T({messages:[{type:"error",value:t.error}]});let r=Function("console",t.content),o=[];r({error:function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];console.error(...n),n.forEach(e=>o.push({type:"error",value:e})),T({messages:o})},info:function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];console.info(...n),n.forEach(e=>o.push({type:"info",value:e})),T({messages:o})},log:function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];console.log(...n),n.forEach(e=>o.push({type:"log",value:e})),T({messages:o})},warn:function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];console.warn(...n),n.forEach(e=>o.push({type:"warn",value:e})),T({messages:o})}})};return(0,r.jsxs)("div",{children:[(0,r.jsxs)(E,{children:[null!==e&&(0,r.jsx)(I,{options:N,imports:P,script:e,setScript:A}),(0,r.jsxs)("div",{style:{width:"100%",height:"100%",display:"flex",flexDirection:"row"},children:[(0,r.jsxs)("div",{style:{display:"flex",flexDirection:"column",backgroundColor:"#222222"},children:[(0,r.jsx)(y,{language:"javascript",title:"Transformation Mode",selected:"javascript"===t,onClick:()=>S("javascript")}),(0,r.jsx)(y,{language:"typescript",title:"Generation Mode",selected:"typescript"===t,onClick:()=>S("typescript")})]}),(0,r.jsx)("div",{style:{width:20,textOrientation:"sideways",writingMode:"vertical-rl",backgroundColor:"#222222",paddingTop:10,color:"white"},children:"javascript"===t?"Transformation Mode":"Generation Mode"}),(0,r.jsxs)("div",{style:{width:"100%",height:"100%",flexDirection:"column",overflowY:"hidden"},children:[(0,r.jsx)(v,{language:t,width:"100%",height:"60%",content:null===a?"":!0===a.success?a.diagnostics.length?a.diagnostics.map(e=>{let n=e.category===u().DiagnosticCategory.Warning?"warning":e.category===u().DiagnosticCategory.Error?"error":e.category===u().DiagnosticCategory.Suggestion?"suggestion":e.category===u().DiagnosticCategory.Message?"message":"unknown",[t,r]=e.file?(()=>{let n=e.file.text.substring(0,e.start).split("\n");return 0===n.length?[0,0]:[n.length,n.at(-1).length+1]})():[0,0];return"".concat("main.ts",":").concat(t,":").concat(r," - ").concat(n," TS").concat(e.code,": ").concat(e.messageText)}).join("\n\n"):a.content:JSON.stringify(a.error,null,2)}),(0,r.jsxs)("div",{style:{width:"100%",height:"40%",flexDirection:"row"},children:[(0,r.jsx)(f.A,{fullWidth:!0,size:"large",color:"primary",variant:"outlined",startIcon:(0,r.jsx)(h.A,{}),style:{fontWeight:"bold",textDecoration:"underline"},onClick:()=>x(),children:"Execute"}),(0,r.jsx)(M,{messages:b.messages})]})]})]})]}),(0,r.jsx)("footer",{style:{display:"flex",width:"100%",height:"35px",backgroundColor:"#222222",justifyContent:"center",alignItems:"center",borderTop:"2px solid skyblue",fontSize:"0.9em"},children:(0,r.jsxs)("p",{children:[(0,r.jsxs)("code",{className:"nx-border-black nx-border-opacity-[0.04] nx-bg-opacity-[0.03] nx-bg-black nx-break-words nx-rounded-md nx-border nx-py-0.5 nx-px-[.25em] nx-text-[.9em] dark:nx-border-white/10 dark:nx-bg-white/10",children:["typia@",g.rE]})," ","- Made with ❤️ by"," ",(0,r.jsx)("a",{href:"https://github.com/samchon",target:"_blank",className:"nx-text-primary-600 nx-underline nx-decoration-from-font [text-underline-position:from-font]",children:"Samchon"})]})})]})};function w(e){return[]}let W=(0,o.e)(function(e){return(0,r.jsx)(O,{})},"/playground",{filePath:"pages/playground/index.mdx",timestamp:1750601728e3,pageMap:a.O,frontMatter:{title:"Playground"},title:"Playground"},"undefined"==typeof RemoteContent?w:RemoteContent.useTOC)},14567:e=>{function n(e){var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=()=>[],n.resolve=n,n.id=14567,e.exports=n},18641:()=>{},19407:(e,n,t)=>{"use strict";t.d(n,{O:()=>r});let r=[{data:{index:{title:"Introduction",type:"page",hidden:!0,display:"hidden"},docs:{title:"\uD83D\uDCD6 Guide Documents",type:"page"},playground:{title:"\uD83D\uDCBB Playground",type:"page"}}},{name:"docs",route:"/docs",children:[{data:{index:"\uD83D\uDE4B\uD83C\uDFFB‍♂️ Introduction",setup:"\uD83D\uDCE6 Setup",pure:"⛲ Pure TypeScript","-- features":{type:"separator",title:"\uD83D\uDCD6 Features"},validators:"Runtime Validators",json:"Enhanced JSON",llm:"LLM Function Calling",protobuf:"Protocol Buffer",random:"Random Generator",misc:"Miscellaneous","-- appendix":{type:"separator",title:"\uD83D\uDD17 Appendix"},utilization:"Utilization Cases",api:{title:"⇲ API Documents",href:"/api",newWindow:!0},benchmark:{title:"⇲ Benchmark Result",href:"https://github.com/samchon/typia/tree/master/benchmark/results/AMD%20Ryzen%209%207940HS%20w%20Radeon%20780M%20Graphics",newWindow:!0},articles:{title:"⇲ dev.to Articles",href:"https://dev.to/samchon/series/22474",newWindow:!0}}},{name:"index",route:"/docs",frontMatter:{title:"Guide Documents > Introduction"}},{name:"json",route:"/docs/json",children:[{data:{schema:"JSON Schema",stringify:"stringify() functions",parse:"parse() functions"}},{name:"parse",route:"/docs/json/parse",frontMatter:{title:"Guide Documents > JSON < parse() functions"}},{name:"schema",route:"/docs/json/schema",frontMatter:{title:"Guide Documents > JSON > Schema"}},{name:"stringify",route:"/docs/json/stringify",frontMatter:{title:"Guide Documents > JSON > stringify() function"}}]},{name:"llm",route:"/docs/llm",children:[{data:{application:"application() functions",parameters:"parameters() function",schema:"schema() function",chat:"AI Chatbot Development",strategy:"Documentation Strategy"}},{name:"application",route:"/docs/llm/application",frontMatter:{title:"Guide Documents > Large Language Model > application() function"}},{name:"chat",route:"/docs/llm/chat",frontMatter:{title:"Guide Documents > Large Language Model > AI Chatbot Development"}},{name:"parameters",route:"/docs/llm/parameters",frontMatter:{title:"Guide Documents > Large Language Model > parameters() function"}},{name:"schema",route:"/docs/llm/schema",frontMatter:{title:"Guide Documents > Large Language Model > schema() function"}},{name:"strategy",route:"/docs/llm/strategy",frontMatter:{title:"Guide Documents > Large Language Model > Documentation Strategy"}}]},{name:"misc",route:"/docs/misc",frontMatter:{title:"Guide Documents > Miscellaneous"}},{name:"protobuf",route:"/docs/protobuf",children:[{data:{message:"Message Schema",encode:"encode() functions",decode:"decode() functions"}},{name:"decode",route:"/docs/protobuf/decode",frontMatter:{title:"Guide Documents > Protobuf > decode() functions"}},{name:"encode",route:"/docs/protobuf/encode",frontMatter:{title:"Guide Documents > Protobuf > encode() functions"}},{name:"message",route:"/docs/protobuf/message",frontMatter:{title:"Guide Documents > Protobuf > Schema"}}]},{name:"pure",route:"/docs/pure",frontMatter:{title:"Guide Documents > Pure TypeScript Type"}},{name:"random",route:"/docs/random",frontMatter:{title:"Guide Documents > random() function"}},{name:"setup",route:"/docs/setup",frontMatter:{title:"Guide Documents > Setup"}},{name:"utilization",route:"/docs/utilization",children:[{data:{nestjs:"NestJS",trpc:"tRPC",hono:"Hono"}},{name:"hono",route:"/docs/utilization/hono",frontMatter:{title:"Guide Documents > Utilization Cases > Hono"}},{name:"nestjs",route:"/docs/utilization/nestjs",frontMatter:{title:"Guide Documents > Utilization Cases > NestJS"}},{name:"trpc",route:"/docs/utilization/trpc",frontMatter:{title:"Guide Documents > Utilization Cases > tRPC"}}]},{name:"validators",route:"/docs/validators",children:[{data:{assert:"assert() function",is:"is() function",validate:"validate() function",functional:"Functional Module",tags:"Special Tags"}},{name:"assert",route:"/docs/validators/assert",frontMatter:{title:"Guide Documents > Runtime Validators > assert() functions"}},{name:"functional",route:"/docs/validators/functional",frontMatter:{title:"Guide Documents > Runtime Validators > Functional Module"}},{name:"is",route:"/docs/validators/is",frontMatter:{title:"Guide Documents > Runtime Validators > is() functions"}},{name:"tags",route:"/docs/validators/tags",frontMatter:{title:"Guide Documents > Runtime Validators > Special Tags"}},{name:"validate",route:"/docs/validators/validate",frontMatter:{title:"Guide Documents > Runtime Validators > validate() functions"}}]}]},{name:"index",route:"/",frontMatter:{title:"Home"}},{name:"playground",route:"/playground",children:[{data:{index:{title:"Typia Playground",theme:{layout:"raw",footer:!1}}}},{name:"index",route:"/playground",frontMatter:{title:"Playground"}}]}]},63137:(e,n,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/playground",function(){return t(9129)}])},66247:()=>{},67336:e=>{e.exports={code:"playground_code__pe8Dw",number:"playground_number__vEynn",string:"playground_string__GHrFP",keyword:"playground_keyword__CZ_8a",comma:"playground_comma__gIJ_O",classNameIdent:"playground_classNameIdent__HRrp5",logSeparator:"playground_logSeparator__jxC42"}},72615:()=>{},82202:()=>{},84021:()=>{},94711:e=>{function n(e){return Promise.resolve().then(()=>{var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n})}n.keys=()=>[],n.resolve=n,n.id=94711,e.exports=n},97664:()=>{}},e=>{var n=n=>e(e.s=n);e.O(0,[4635,2917,1128,1291,736,1807,2909,7393,5769,636,6593,8792],()=>n(63137)),_N_E=e.O()}]);